$wnd.web3d.runAsyncCallback5("function Rfl(){}\nfunction c0j(a,b){a.i=b}\nfunction f0j(a,b){q0j(a.A,b)}\nfunction Z_j(a,b){p0j(a.A,b)}\nfunction q0j(a,b){Ih(a.a,b+'%')}\nfunction h0j(a){this.a=a}\nfunction i0j(a){this.a=a}\nfunction j0j(a){this.a=a}\nfunction k0j(a){this.a=a}\nfunction l0j(a){this.a=a}\nfunction m0j(a){this.a=a}\nfunction n0j(a){this.a=a}\nfunction Kvl(a,b){this.a=b;Hvl(this,a)}\nfunction Fvl(a){a.c<a.b&&Jvl(a,a.c+1)}\nfunction Gvl(a){a.c>1&&Jvl(a,a.c-1)}\nfunction Sfl(){Sfl=NAc;Qfl=new Rfl}\nfunction __j(a,b){U_j(a);a.q=new Kvl(b,a)}\nfunction b0j(a,b){Uo(qh(a.v),RHl,b);a.w=b}\nfunction p0j(a,b){if(b){a0j(a.b)}else{a.b.q=null;$Lc(a.b.g,false);T_j(a.b)}}\nfunction e0j(a,b){Eh(a.e,'AutoCompleteTextFieldW curPageField');nh(a.e,b)}\nfunction Jvl(a,b){if(b>0&&b<=a.b){a.c=b;Ivl(a);return true}return false}\nfunction S_j(a){var b;b=new Xll((Jyj(),Vsj),96);Mh((gIc(),b.sb),'folderImg',true);tPc(a.s,b)}\nfunction Y_j(a,b,c,d){var e;e=new Bml('',a.a);Mh((gIc(),e.sb),c,true);$Lc(e,d);EKc(b,e,b.sb);return e}\nfunction X_j(a,b,c,d){var e;e=new zml(c,24,24,a.a);Mh((gIc(),e.sb),d,true);nRd(e.i,a);EKc(b,e,b.sb);return e}\nfunction r0j(a){this.b=a;OMc.call(this);Mh((gIc(),this.sb),'progressBar',true);this.a=new OMc;LMc(this,this.a);Ih(this.a,'0%')}\nfunction o0j(a){bi();this.a=a;BOc.call(this);Rh(this,this,(zx(),zx(),yx));(gIc(),this.sb).setAttribute(vom,'.pdf')}\nfunction a0j(a){Jvl(a.q,1);V_j(a);if(a.q.b==1){nh(a.j,fDl);nh(a.B,fDl);nh(a.t,fDl)}else{xMk(a.e,''+a.q.c)}d0j(a);$Lc(a.g,true)}\nfunction T_j(a){uPc(a.s);xh(a.s,ezm);S_j(a);if(!a.f){a.f=new yNc;nh(a.f,fzm);nh(a.f,'errorText');xNc(a.f,Bql(a.a.Y,gzm))}tPc(a.s,a.f)}\nfunction U_j(a){uPc(a.s);xh(a.s,ezm);a.A=new r0j(a);tPc(a.s,a.A);if(!a.k){a.k=new yNc;nh(a.k,fzm);nh(a.k,'loadText');xNc(a.k,Bql(a.a.Y,hzm))}tPc(a.s,a.k)}\nfunction R_j(e,c){var d=e;c.addEventListener(BDl,function(a){var b=a.dataTransfer.files;d.jcb(b[0]);a.stopPropagation();a.preventDefault()})}\nfunction W_j(b,c){var d,e;try{e=qKd(SLk(b.e),10);Jvl(b.q,e)||c||xMk(b.e,''+b.q.c)}catch(a){a=dAc(a);if(jD(a,211)){d=a;K8i('bad number: '+d.g)}else throw eAc(a)}}\nfunction Hvl(f,c){var d=new FileReader;var e=f;d.onprogress=function(a){if(a.lengthComputable){var b=a.loaded/a.total*100;e.Rjb(b)}};d.addEventListener(ACl,function(){var a=d.result;e.Njb(a)},false);c&&d.readAsDataURL(c)}\nfunction d0j(a){xNc(a.d,Bql(a.a.Y,'pdfClickOrDrag'));wml(a.g,Bql(a.a.Y,C7l));wml(a.c,Bql(a.a.Y,Blm));xNc(a.p,Bql(a.a.Y,prm));!!a.q&&xNc(a.o,Bql(a.a.Y,'of')+' '+a.q.b);!!a.k&&xNc(a.k,Bql(a.a.Y,hzm));!!a.f&&xNc(a.f,Bql(a.a.Y,gzm))}\nfunction g0j(a){NJj();DKj.call(this,a.n,a);this.r=new o0j(this);this.i=false;this.a=a;$_j(this);xNc(this.H,Bql(this.a.Y,'pdfDialogTitle'));dil(this.g,this);dil(this.c,this);_h(this.s,1);Sh(this.s,new n0j(this),(Gx(),Gx(),Fx));Mxl((Sfl(),Qfl))}\nfunction $_j(a){a.n=new wPc;a.s=new wPc;Eh(a.s,'pdfContainer');S_j(a);R_j(a,qh(a.s));a.d=new yNc;nh(a.d,fzm);nh(a.d,'clickOrDragText');tPc(a.s,a.d);a.p=new yNc;a.o=new yNc;a.b=new wPc;Eh(a.b,Elm);a.c=Y_j(a,a.b,Clm,true);a.g=Y_j(a,a.b,'insertBtn',false);LMc(a,a.n);tPc(a.n,a.s);tPc(a.n,a.b);tPc(a.n,a.r);nh(a.r,fDl);Mh(MJj.Hj(mIc((gIc(),a.sb))),Ckm,true);Mh(MJj.Hj(mIc(a.sb)),'pdfDialog',true);$Jj(a,true);d0j(a)}\nfunction Ivl(j){var f=j;var g=j.d;var h=j.c;var i=function(c){svgs=(new XMLSerializer).serializeToString(c);var d=function(a){var b=L$l+btoa(unescape(encodeURIComponent(a)));f.Ojb(b)};svgs=f.Ljb(svgs,d)};g.getPage(h).then(function(c){J8i('Page loaded');var d=1;var e=c.getViewport(d);return c.getOperatorList().then(function(a){var b=new $wnd.PDFJS.SVGGraphics(c.commonObjs,c.objs);return b.getSVG(a,e).then(i)})})}\nfunction V_j(a){uPc(a.s);nh(a.s,ezm);a.u=new wPc;nh(a.u,'pdfPreview');a.v=new Zll('');nh(a.v,'previewImage');a.j=X_j(a,a.u,(bkj(),ejj),'leftBtn');tPc(a.u,a.v);a.B=X_j(a,a.u,(ckj(),fjj),'rightBtn');a.t=new wPc;nh(a.t,'pdfPageText');a.e=new IMk(3,a.a);xMk(a.e,'1');nh(a.e,'curPageField');tPc(a.t,a.p);tPc(a.t,a.e);tPc(a.t,a.o);tPc(a.s,a.u);tPc(a.s,a.t);DLk(a.e,new h0j(a));ELk(a.e,new i0j(a));Rh(a.e.M.c,new j0j(a),(ny(),ny(),my));Rh(a.e.M.c,new k0j(a),(wx(),wx(),vx));Rh(a.e.M.c,new l0j(a),(Wy(),Wy(),Vy));Rh(a.e.M.c,new m0j(a),(Ty(),Ty(),Sy))}\nvar ezm='withPdf',fzm='pdfDialogText',gzm='PdfErrorText',hzm='PdfLoadText',izm='xlink:href=\"blob:';MAc(3391,1,bkm);_.wf=function(){this.a.g=new g0j(this.a.k);PJj(this.a.g,0);CKj(this.a.g)};MAc(4941,232,Fnm,g0j);_.ibb=function(){B2f(this.a.o,0,1);sKj(this,false)};_.jcb=function(a){__j(this,a)};_.gbb=function(a){var b;if(a==this.c){B2f(this.a.o,0,1);sKj(this,false)}else if(a==this.g){b=this.w;I2k(this.R,'pdf.svg',b);B2f(this.a.o,0,1);sKj(this,false)}else if(a==this.j){Gvl(this.q);xMk(this.e,''+this.q.c)}else if(a==this.B){Fvl(this.q);xMk(this.e,''+this.q.c)}};_.i=false;var o9b=ZKd(4941);MAc(4944,1,bMl,h0j);_.Eg=function(a){Or(a.a)==13&&W_j(this.a,false)};var f9b=ZKd(4944);MAc(4945,1,cMl,i0j);_.Fg=function(a){W_j(this.a,true)};var g9b=ZKd(4945);MAc(4946,1,eMl,j0j);_.zg=function(a){e0j(this.a,ABl);c0j(this.a,true)};var h9b=ZKd(4946);MAc(4947,1,fMl,k0j);_.rg=function(a){e0j(this.a,eNl);c0j(this.a,false)};var i9b=ZKd(4947);MAc(4948,1,Vkm,l0j);_.Kg=function(a){e0j(this.a,'hover')};var j9b=ZKd(4948);MAc(4949,1,Wkm,m0j);_.Jg=function(a){this.a.i||e0j(this.a,eNl)};var k9b=ZKd(4949);MAc(4950,1,fGl,n0j);_.tg=function(a){!!this.a.q||zOc(this.a.r)};var l9b=ZKd(4950);MAc(4942,1165,Mqm,o0j);_.sg=function(a){__j(this.a,$doc.querySelector(Nqm).files[0])};var m9b=ZKd(4942);MAc(4943,89,rGl,r0j);var n9b=ZKd(4943);var Qfl;MAc(5327,1,GSl,Rfl);_.nh=function(){return 'pdfCombinedJs'};_.oh=function(){var a;a=new xNd;a.a+=\" // https://npmcdn.com/pdfjs-dist@1.10.100/build/pdf.combined.js\\r\\n /* Copyright 2017 Mozilla Foundation\\r\\n *\\r\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\r\\n * you may not use this file except in compliance with the License.\\r\\n * You may obtain a copy of the License at\\r\\n *\\r\\n *     http://www.apache.org/licenses/LICENSE-2.0\\r\\n *\\r\\n * Unless required by applicable law or agreed to in writing, software\\r\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\r\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n * See the License for the specific language governing permissions and\\r\\n * limitations under the License.\\r\\n */\\r\\n\\r\\n(function webpackUniversalModuleDefinition(root, factory) {\\r\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\r\\n\\t\\tmodule.exports = factory();\\r\\n\\telse if(typeof define === 'function' && define.amd)\\r\\n\\t\\tdefine(\\\"pdfjs-dist/build/pdf.combined\\\", [], factory);\\r\\n\\telse if(typeof exports === 'object')\\r\\n\\t\\texports[\\\"pdfjs-dist/build/pdf.combined\\\"] = factory();\\r\\n\\telse\\r\\n\\t\\troot[\\\"pdfjs-dist/build/pdf.combined\\\"] = root.pdfjsDistBuildPdfCombined = factory();\\r\\n})(typeof self !== 'undefined' ? self : this, function() {\\r\\nreturn /******/ (function(modules) { // webpackBootstrap\\r\\n/******/ \\t// The module cache\\r\\n/******/ \\tvar installedModules = {};\\r\\n/******/\\r\\n/******/ \\t// The require function\\r\\n/******/ \\tfunction __w_pdfjs_require__(moduleId) {\\r\\n/******/\\r\\n/******/ \\t\\t// Check if module is in cache\\r\\n/******/ \\t\\tif(installedModules[moduleId]) {\\r\\n/******/ \\t\\t\\treturn installedModules[moduleId].exports;\\r\\n/******/ \\t\\t}\\r\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\r\\n/******/ \\t\\tvar module = installedModules[moduleId] = {\\r\\n/******/ \\t\\t\\ti: moduleId,\\r\\n/******/ \\t\\t\\tl: false,\\r\\n/******/ \\t\\t\\texports: {}\\r\\n/******/ \\t\\t};\\r\\n/******/\\r\\n/******/ \\t\\t// Execute the module function\\r\\n/******/ \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\\r\\n/******/\\r\\n/******/ \\t\\t// Flag the module as loaded\\r\\n/******/ \\t\\tmodule.l = true;\\r\\n/******/\\r\\n/******/ \\t\\t// Return the exports of the module\\r\\n/******/ \\t\\treturn module.exports;\\r\\n/******/ \\t}\\r\\n/******/\\r\\n/******/\\r\\n/******/ \\t// expose the modules object (__webpack_modules__)\\r\\n/******/ \\t__w_pdfjs_require__.m = modules;\\r\\n/******/\\r\\n/******/ \\t// expose the module cache\\r\\n/******/ \\t__w_pdfjs_require__.c = installedModules;\\r\\n/******/\\r\\n/******/ \\t// define getter function for harmony exports\\r\\n/******/ \\t__w_pdfjs_require__.d = function(exports, name, getter) {\\r\\n/******/ \\t\\tif(!__w_pdfjs_require__.o(exports, name)) {\\r\\n/******/ \\t\\t\\tObject.defineProperty(exports, name, {\\r\\n/******/ \\t\\t\\t\\tconfigurable: false,\\r\\n/******/ \\t\\t\\t\\tenumerable: true,\\r\\n/******/ \\t\\t\\t\\tget: getter\\r\\n/******/ \\t\\t\\t});\\r\\n/******/ \\t\\t}\\r\\n/******/ \\t};\\r\\n/******/\\r\\n/******/ \\t// getDefaultExport function for compatibility with non-harmony modules\\r\\n/******/ \\t__w_pdfjs_require__.n = function(module) {\\r\\n/******/ \\t\\tvar getter = module && module.__esModule ?\\r\\n/******/ \\t\\t\\tfunction getDefault() { return module['default']; } :\\r\\n/******/ \\t\\t\\tfunction getModuleExports() { return module; };\\r\\n/******/ \\t\\t__w_pdfjs_require__.d(getter, 'a', getter);\\r\\n/******/ \\t\\treturn getter;\\r\\n/******/ \\t};\\r\\n/******/\\r\\n/******/ \\t// Object.prototype.hasOwnProperty.call\\r\\n/******/ \\t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\r\\n/******/\\r\\n/******/ \\t// __webpack_public_path__\\r\\n/******/ \\t__w_pdfjs_require__.p = \\\"\\\";\\r\\n/******/\\r\\n/******/ \\t// Load entry module and return exports\\r\\n/******/ \\treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 91);\\r\\n/******/ })\\r\\n/************************************************************************/\\r\\n/******/ ([\\r\\n/* 0 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\n__w_pdfjs_require__(92);\\r\\n\\r\\nvar _streams_polyfill = __w_pdfjs_require__(132);\\r\\n\\r\\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\\r\\nvar NativeImageDecoding = {\\r\\n  NONE: 'none',\\r\\n  DECODE: 'decode',\\r\\n  DISPLAY: 'display'\\r\\n};\\r\\nvar TextRenderingMode = {\\r\\n  FILL: 0,\\r\\n  STROKE: 1,\\r\\n  FILL_STROKE: 2,\\r\\n  INVISIBLE: 3,\\r\\n  FILL_ADD_TO_PATH: 4,\\r\\n  STROKE_ADD_TO_PATH: 5,\\r\\n  FILL_STROKE_ADD_TO_PATH: 6,\\r\\n  ADD_TO_PATH: 7,\\r\\n  FILL_STROKE_MASK: 3,\\r\\n  ADD_TO_PATH_FLAG: 4\\r\\n};\\r\\nvar ImageKind = {\\r\\n  GRAYSCALE_1BPP: 1,\\r\\n  RGB_24BPP: 2,\\r\\n  RGBA_32BPP: 3\\r\\n};\\r\\nvar AnnotationType = {\\r\\n  TEXT: 1,\\r\\n  LINK: 2,\\r\\n  FREETEXT: 3,\\r\\n  LINE: 4,\\r\\n  SQUARE: 5,\\r\\n  CIRCLE: 6,\\r\\n  POLYGON: 7,\\r\\n  POLYLINE: 8,\\r\\n  HIGHLIGHT: 9,\\r\\n  UNDERLINE: 10,\\r\\n  SQUIGGLY: 11,\\r\\n  STRIKEOUT: 12,\\r\\n  STAMP: 13,\\r\\n  CARET: 14,\\r\\n  INK: 15,\\r\\n  POPUP: 16,\\r\\n  FILEATTACHMENT: 17,\\r\\n  SOUND: 18,\\r\\n  MOVIE: 19,\\r\\n  WIDGET: 20,\\r\\n  SCREEN: 21,\\r\\n  PRINTERMARK: 22,\\r\\n  TRAPNET: 23,\\r\\n  WATERMARK: 24,\\r\\n  THREED: 25,\\r\\n  REDACT: 26\\r\\n};\\r\\nvar AnnotationFlag = {\\r\\n  INVISIBLE: 0x01,\\r\\n  HIDDEN: 0x02,\\r\\n  PRINT: 0x04,\\r\\n  NOZOOM: 0x08,\\r\\n  NOROTATE: 0x10,\\r\\n  NOVIEW: 0x20,\\r\\n  READONLY: 0x40,\\r\\n  LOCKED: 0x80,\\r\\n  TOGGLENOVIEW: 0x100,\\r\\n  LOCKEDCONTENTS: 0x200\\r\\n};\\r\\nvar AnnotationFieldFlag = {\\r\\n  READONLY: 0x0000001,\\r\\n  REQUIRED: 0x0000002,\\r\\n  NOEXPORT: 0x0000004,\\r\\n  MULTILINE: 0x0001000,\\r\\n  PASSWORD: 0x0002000,\\r\\n  NOTOGGLETOOFF: 0x0004000,\\r\\n  RADIO: 0x0008000,\\r\\n  PUSHBUTTON: 0x0010000,\\r\\n  COMBO: 0x0020000,\\r\\n  EDIT: 0x0040000,\\r\\n  SORT: 0x0080000,\\r\\n  FILESELECT: 0x0100000,\\r\\n  MULTISELECT: 0x0200000,\\r\\n  DONOTSPELLCHECK: 0x0400000,\\r\\n  DONOTSCROLL: 0x0800000,\\r\\n  COMB: 0x1000000,\\r\\n  RICHTEXT: 0x2000000,\\r\\n  RADIOSINUNISON: 0x2000000,\\r\\n  COMMITONSELCHANGE: 0x4000000\\r\\n};\\r\\nvar AnnotationBorderStyleType = {\\r\\n  SOLID: 1,\\r\\n  DASHED: 2,\\r\\n  BEVELED: 3,\\r\\n  INSET: 4,\\r\\n  UNDERLINE: 5\\r\\n};\\r\\nvar StreamType = {\\r\\n  UNKNOWN: 0,\\r\\n  FLATE: 1,\\r\\n  LZW: 2,\\r\\n  DCT: 3,\\r\\n  JPX: 4,\\r\\n  JBIG: 5,\\r\\n  A85: 6,\\r\\n  AHX: 7,\\r\\n  CCF: 8,\\r\\n  RL: 9\\r\\n};\\r\\nvar FontType = {\\r\\n  UNKNOWN: 0,\\r\\n  TYPE1: 1,\\r\\n  TYPE1C: 2,\\r\\n  CIDFONTTYPE0: 3,\\r\\n  CIDFONTTYPE0C: 4,\\r\\n  TRUETYPE: 5,\\r\\n  CIDFONTTYPE2: 6,\\r\\n  TYPE3: 7,\\r\\n  OPENTYPE: 8,\\r\\n  TYPE0: 9,\\r\\n  MMTYPE1: 10\\r\\n};\\r\\nvar VERBOSITY_LEVELS = {\\r\\n  errors: 0,\\r\\n  warnings: 1,\\r\\n  infos: 5\\r\\n};\\r\\nvar CMapCompressionType = {\\r\\n  NONE: 0,\\r\\n  BINARY: 1,\\r\\n  STREAM: 2\\r\\n};\\r\\nvar OPS = {\\r\\n  dependency: 1,\\r\\n  setLineWidth: 2,\\r\\n  setLineCap: 3,\\r\\n  setLineJoin: 4,\\r\\n  setMiterLimit: 5,\\r\\n  setDash: 6,\\r\\n  setRenderingIntent: 7,\\r\\n  setFlatness: 8,\\r\\n  setGState: 9,\\r\\n  save: 10,\\r\\n  restore: 11,\\r\\n  transform: 12,\\r\\n  moveTo: 13,\\r\\n  lineTo: 14,\\r\\n  curveTo: 15,\\r\\n  curveTo2: 16,\\r\\n  curveTo3: 17,\\r\\n  closePath: 18,\\r\\n  rectangle: 19,\\r\\n  stroke: 20,\\r\\n  closeStroke: 21,\\r\\n  fill: 22,\\r\\n  eoFill: 23,\\r\\n  fillStroke: 24,\\r\\n  eoFillStroke: 25,\\r\\n  closeFillStroke: 26,\\r\\n  closeEOFillStroke: 27,\\r\\n  endPath: 28,\\r\\n  clip: 29,\\r\\n  eoClip: 30,\\r\\n  beginText: 31,\\r\\n  endText: 32,\\r\\n  setCharSpacing: 33,\\r\\n  setWordSpacing: 34,\\r\\n  setHScale: 35,\\r\\n  setLeading: 36,\\r\\n  setFont: 37,\\r\\n  setTextRenderingMode: 38,\\r\\n  setTextRise: 39,\\r\\n  moveText: 40,\\r\\n  setLeadingMoveText: 41,\\r\\n  setTextMatrix: 42,\\r\\n  nextLine: 43,\\r\\n  showText: 44,\\r\\n  showSpacedText: 45,\\r\\n  nextLineShowText: 46,\\r\\n  nextLineSetSpacingShowText: 47,\\r\\n  setCharWidth: 48,\\r\\n  setCharWidthAndBounds: 49,\\r\\n  setStrokeColorSpace: 50,\\r\\n  setFillColorSpace: 51,\\r\\n  setStrokeColor: 52,\\r\\n  setStrokeColorN: 53,\\r\\n  setFillColor: 54,\\r\\n  setFillColorN: 55,\\r\\n  setStrokeGray: 56,\\r\\n  setFillGray: 57,\\r\\n  setStrokeRGBColor: 58,\\r\\n  setFillRGBColor: 59,\\r\\n  setStrokeCMYKColor: 60,\\r\\n  setFillCMYKColor: 61,\\r\\n  shadingFill: 62,\\r\\n  beginInlineImage: 63,\\r\\n  beginImageData: 64,\\r\\n  endInlineImage: 65,\\r\\n  paintXObject: 66,\\r\\n  markPoint: 67,\\r\\n  markPointProps: 68,\\r\\n  beginMarkedContent: 69,\\r\\n  beginMarkedContentProps: 70,\\r\\n  endMarkedContent: 71,\\r\\n  beginCompat: 72,\\r\\n  endCompat: 73,\\r\\n  paintFormXObjectBegin: 74,\\r\\n  paintFormXObjectEnd: 75,\\r\\n  beginGroup: 76,\\r\\n  endGroup: 77,\\r\\n  beginAnnotations: 78,\\r\\n  endAnnotations: 79,\\r\\n  beginAnnotation: 80,\\r\\n  endAnnotation: 81,\\r\\n  paintJpegXObject: 82,\\r\\n  paintImageMaskXObject: 83,\\r\\n  paintImageMaskXObjectGroup: 84,\\r\\n  paintImageXObject: 85,\\r\\n  paintInlineImageXObject: 86,\\r\\n  paintInlineImageXObjectGroup: 87,\\r\\n  paintImageXObjectRepeat: 88,\\r\\n  paintImageMaskXObjectRepeat: 89,\\r\\n  paintSolidColorImageMask: 90,\\r\\n  constructPath: 91\\r\\n};\\r\\nvar verbosity = VERBOSITY_LEVELS.warnings;\\r\\nfunction setVerbosityLevel(level) {\\r\\n  verbosity = level;\\r\\n}\\r\\nfunction getVerbosityLevel() {\\r\\n  return verbosity;\\r\\n}\\r\\nfunction info(msg) {\\r\\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\\r\\n    console.log('Info: ' + msg);\\r\\n  }\\r\\n}\\r\\nfunction warn(msg) {\\r\\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\\r\\n    console.log('Warning: ' + msg);\\r\\n  }\\r\\n}\\r\\nfunction deprecated(details) {\\r\\n  console.log('Deprecated API usage: ' + details);\\r\\n}\\r\\nfunction unreachable(msg) {\\r\\n  throw new Error(msg);\\r\\n}\\r\\nfunction assert(cond, msg) {\\r\\n  if (!cond) {\\r\\n    unreachable(msg);\\r\\n  }\\r\\n}\\r\\nvar UNSUPPORTED_FEATURES = {\\r\\n  unknown: 'unknown',\\r\\n  forms: 'forms',\\r\\n  javaScript: 'javaScript',\\r\\n  smask: 'smask',\\r\\n  shadingPattern: 'shadingPattern',\\r\\n  font: 'font'\\r\\n};\\r\\nfunction isSameOrigin(baseUrl, otherUrl) {\\r\\n  try {\\r\\n    var base = new URL(baseUrl);\\r\\n    if (!base.origin || base.origin === 'null') {\\r\\n      return false;\\r\\n    }\\r\\n  } catch (e) {\\r\\n    return false;\\r\\n  }\\r\\n  var other = new URL(otherUrl, base);\\r\\n  return base.origin === other.origin;\\r\\n}\\r\\nfunction isValidProtocol(url) {\\r\\n  if (!url) {\\r\\n    return false;\\r\\n  }\\r\\n  switch (url.protocol) {\\r\\n    case 'http:':\\r\\n    case 'https:':\\r\\n    case 'ftp:':\\r\\n    case 'mailto:':\\r\\n    case 'tel:':\\r\\n      return true;\\r\\n    default:\\r\\n      return false;\\r\\n  }\\r\\n}\\r\\nfunction createValidAbsoluteUrl(url, baseUrl) {\\r\\n  if (!url) {\\r\\n    return null;\\r\\n  }\\r\\n  try {\\r\\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\\r\\n    if (isValidProtocol(absoluteUrl)) {\\r\\n      return absoluteUrl;\\r\\n    }\\r\\n  } catch (ex) {}\\r\\n  return null;\\r\\n}\\r\\nfunction shadow(obj, prop, value) {\\r\\n  Object.defineProperty(obj, prop, {\\r\\n    value: value,\\r\\n    enumerable: true,\\r\\n    configurable: true,\\r\\n    writable: false\\r\\n  });\\r\\n  return value;\\r\\n}\\r\\nfunction getLookupTableFactory(initializer) {\\r\\n  var lookup;\\r\\n  return function () {\\r\\n    if (initializer) {\\r\\n      lookup = Object.create(null);\\r\\n      initializer(lookup);\\r\\n      initializer = null;\\r\\n    }\\r\\n    return lookup;\\r\\n  };\\r\\n}\\r\\nvar PasswordResponses = {\\r\\n  NEED_PASSWORD: 1,\\r\\n  INCORRECT_PASSWORD: 2\\r\\n};\\r\\nvar PasswordException = function PasswordExceptionClosure() {\\r\\n  function PasswordException(msg, code) {\\r\\n    this.name = 'PasswordException';\\r\\n    this.message = msg;\\r\\n    this.code = code;\\r\\n  }\\r\\n  PasswordException.prototype = new Error();\\r\\n  PasswordException.constructor = PasswordException;\\r\\n  return PasswordException;\\r\\n}();\\r\\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\\r\\n  function UnknownErrorException(msg, details) {\\r\\n    this.name = 'UnknownErrorException';\\r\\n    this.message = msg;\\r\\n    this.details = details;\\r\\n  }\\r\\n  UnknownErrorException.prototype = new Error();\\r\\n  UnknownErrorException.constructor = UnknownErrorException;\\r\\n  return UnknownErrorException;\\r\\n}();\\r\\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\\r\\n  function InvalidPDFException(msg) {\\r\\n    this.name = 'InvalidPDFException';\\r\\n    this.message = msg;\\r\\n  }\\r\\n  InvalidPDFException.prototype = new Error();\\r\\n  InvalidPDFException.constructor = InvalidPDFException;\\r\\n  return InvalidPDFException;\\r\\n}();\\r\\nvar MissingPDFException = function MissingPDFExceptionClosure() {\\r\\n  function MissingPDFException(msg) {\\r\\n    this.name = 'MissingPDFException';\\r\\n    this.message = msg;\\r\\n  }\\r\\n  MissingPDFException.prototype = new Error();\\r\\n  MissingPDFException.constructor = MissingPDFException;\\r\\n  return MissingPDFException;\\r\\n}();\\r\\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\\r\\n  function UnexpectedResponseException(msg, status) {\\r\\n    this.name = 'UnexpectedResponseException';\\r\\n    this.message = msg;\\r\\n    this.status = status;\\r\\n  }\\r\\n  UnexpectedResponseException.prototype = new Error();\\r\\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\\r\\n  return UnexpectedResponseException;\\r\\n}();\\r\\nvar NotImplementedException = function NotImplementedExceptionClosure() {\\r\\n  function NotImplementedException(msg) {\\r\\n    this.message = msg;\\r\\n  }\\r\\n  NotImplementedException.prototype = new Error();\\r\\n  NotImplementedException.prototype.name = 'NotImplementedException';\\r\\n  NotImplementedException.constructor = NotImplementedException;\\r\\n  return NotImplementedException;\\r\\n}();\\r\\nvar MissingDataException = function MissingDataExceptionClosure() {\\r\\n  function MissingDataException(begin, end) {\\r\\n    this.begin = begin;\\r\\n    this.end = end;\\r\\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\\r\\n  }\\r\\n  MissingDataException.prototype = new Error();\\r\\n  MissingDataException.prototype.name = 'MissingDataException';\\r\\n  MissingDataException.constructor = MissingDataException;\\r\\n  return MissingDataException;\\r\\n}();\\r\\nvar XRefParseException = function XRefParseExceptionClosure() {\\r\\n  function XRefParseException(msg) {\\r\\n    this.message = msg;\\r\\n  }\\r\\n  XRefParseException.prototype = new Error();\\r\\n  XRefParseException.prototype.name = 'XRefParseException';\\r\\n  XRefParseException.constructor = XRefParseException;\\r\\n  return XRefParseException;\\r\\n}();\\r\\nvar FormatError = function FormatErrorClosure() {\\r\\n  function FormatError(msg) {\\r\\n    this.message = msg;\\r\\n  }\\r\\n  FormatError.prototype = new Error();\\r\\n  FormatError.prototype.name = 'FormatError';\\r\\n  FormatError.constructor = FormatError;\\r\\n  return FormatError;\\r\\n}();\\r\\nvar AbortException = function AbortExceptionClosure() {\\r\\n  function AbortException(msg) {\\r\\n    this.name = 'AbortException';\\r\\n    this.message = msg;\\r\\n  }\\r\\n  AbortException.prototype = new Error();\\r\\n  AbortException.constructor = AbortException;\\r\\n  return AbortException;\\r\\n}();\\r\\nvar NullCharactersRegExp = /\\\\x00/g;\\r\\nfunction removeNullCharacters(str) {\\r\\n  if (typeof str !== 'string') {\\r\\n    warn('The argument for removeNullCharacters must be a string.');\\r\\n    return str;\\r\\n  }\\r\\n  return str.replace(NullCharactersRegExp, '');\\r\\n}\\r\\nfunction bytesToString(bytes) {\\r\\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\\r\\n  var length = bytes.length;\\r\\n  var MAX_ARGUMENT_COUNT = 8192;\\r\\n  if (length < MAX_ARGUMENT_COUNT) {\\r\\n    return String.fromCharCode.apply(null, bytes);\\r\\n  }\\r\\n  var strBuf = [];\\r\\n  for (var i = 0; i < length; i += MAX_ARG\";a.a+=\"UMENT_COUNT) {\\r\\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\\r\\n    var chunk = bytes.subarray(i, chunkEnd);\\r\\n    strBuf.push(String.fromCharCode.apply(null, chunk));\\r\\n  }\\r\\n  return strBuf.join('');\\r\\n}\\r\\nfunction stringToBytes(str) {\\r\\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\\r\\n  var length = str.length;\\r\\n  var bytes = new Uint8Array(length);\\r\\n  for (var i = 0; i < length; ++i) {\\r\\n    bytes[i] = str.charCodeAt(i) & 0xFF;\\r\\n  }\\r\\n  return bytes;\\r\\n}\\r\\nfunction arrayByteLength(arr) {\\r\\n  if (arr.length !== undefined) {\\r\\n    return arr.length;\\r\\n  }\\r\\n  assert(arr.byteLength !== undefined);\\r\\n  return arr.byteLength;\\r\\n}\\r\\nfunction arraysToBytes(arr) {\\r\\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\\r\\n    return arr[0];\\r\\n  }\\r\\n  var resultLength = 0;\\r\\n  var i,\\r\\n      ii = arr.length;\\r\\n  var item, itemLength;\\r\\n  for (i = 0; i < ii; i++) {\\r\\n    item = arr[i];\\r\\n    itemLength = arrayByteLength(item);\\r\\n    resultLength += itemLength;\\r\\n  }\\r\\n  var pos = 0;\\r\\n  var data = new Uint8Array(resultLength);\\r\\n  for (i = 0; i < ii; i++) {\\r\\n    item = arr[i];\\r\\n    if (!(item instanceof Uint8Array)) {\\r\\n      if (typeof item === 'string') {\\r\\n        item = stringToBytes(item);\\r\\n      } else {\\r\\n        item = new Uint8Array(item);\\r\\n      }\\r\\n    }\\r\\n    itemLength = item.byteLength;\\r\\n    data.set(item, pos);\\r\\n    pos += itemLength;\\r\\n  }\\r\\n  return data;\\r\\n}\\r\\nfunction string32(value) {\\r\\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\\r\\n}\\r\\nfunction log2(x) {\\r\\n  var n = 1,\\r\\n      i = 0;\\r\\n  while (x > n) {\\r\\n    n <<= 1;\\r\\n    i++;\\r\\n  }\\r\\n  return i;\\r\\n}\\r\\nfunction readInt8(data, start) {\\r\\n  return data[start] << 24 >> 24;\\r\\n}\\r\\nfunction readUint16(data, offset) {\\r\\n  return data[offset] << 8 | data[offset + 1];\\r\\n}\\r\\nfunction readUint32(data, offset) {\\r\\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\\r\\n}\\r\\nfunction isLittleEndian() {\\r\\n  var buffer8 = new Uint8Array(4);\\r\\n  buffer8[0] = 1;\\r\\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\\r\\n  return view32[0] === 1;\\r\\n}\\r\\nfunction isEvalSupported() {\\r\\n  try {\\r\\n    new Function('');\\r\\n    return true;\\r\\n  } catch (e) {\\r\\n    return false;\\r\\n  }\\r\\n}\\r\\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\\r\\nvar Util = function UtilClosure() {\\r\\n  function Util() {}\\r\\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\\r\\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\\r\\n    rgbBuf[1] = r;\\r\\n    rgbBuf[3] = g;\\r\\n    rgbBuf[5] = b;\\r\\n    return rgbBuf.join('');\\r\\n  };\\r\\n  Util.transform = function Util_transform(m1, m2) {\\r\\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\\r\\n  };\\r\\n  Util.applyTransform = function Util_applyTransform(p, m) {\\r\\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\\r\\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\\r\\n    return [xt, yt];\\r\\n  };\\r\\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\\r\\n    var d = m[0] * m[3] - m[1] * m[2];\\r\\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\\r\\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\\r\\n    return [xt, yt];\\r\\n  };\\r\\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\\r\\n    var p1 = Util.applyTransform(r, m);\\r\\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\\r\\n    var p3 = Util.applyTransform([r[0], r[3]], m);\\r\\n    var p4 = Util.applyTransform([r[2], r[1]], m);\\r\\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\\r\\n  };\\r\\n  Util.inverseTransform = function Util_inverseTransform(m) {\\r\\n    var d = m[0] * m[3] - m[1] * m[2];\\r\\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\\r\\n  };\\r\\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\\r\\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\\r\\n  };\\r\\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\\r\\n    var transpose = [m[0], m[2], m[1], m[3]];\\r\\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\\r\\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\\r\\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\\r\\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\\r\\n    var first = (a + d) / 2;\\r\\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\\r\\n    var sx = first + second || 1;\\r\\n    var sy = first - second || 1;\\r\\n    return [Math.sqrt(sx), Math.sqrt(sy)];\\r\\n  };\\r\\n  Util.normalizeRect = function Util_normalizeRect(rect) {\\r\\n    var r = rect.slice(0);\\r\\n    if (rect[0] > rect[2]) {\\r\\n      r[0] = rect[2];\\r\\n      r[2] = rect[0];\\r\\n    }\\r\\n    if (rect[1] > rect[3]) {\\r\\n      r[1] = rect[3];\\r\\n      r[3] = rect[1];\\r\\n    }\\r\\n    return r;\\r\\n  };\\r\\n  Util.intersect = function Util_intersect(rect1, rect2) {\\r\\n    function compare(a, b) {\\r\\n      return a - b;\\r\\n    }\\r\\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\\r\\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\\r\\n        result = [];\\r\\n    rect1 = Util.normalizeRect(rect1);\\r\\n    rect2 = Util.normalizeRect(rect2);\\r\\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\\r\\n      result[0] = orderedX[1];\\r\\n      result[2] = orderedX[2];\\r\\n    } else {\\r\\n      return false;\\r\\n    }\\r\\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\\r\\n      result[1] = orderedY[1];\\r\\n      result[3] = orderedY[2];\\r\\n    } else {\\r\\n      return false;\\r\\n    }\\r\\n    return result;\\r\\n  };\\r\\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\\r\\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\\r\\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\\r\\n    var pos,\\r\\n        romanBuf = [];\\r\\n    while (number >= 1000) {\\r\\n      number -= 1000;\\r\\n      romanBuf.push('M');\\r\\n    }\\r\\n    pos = number / 100 | 0;\\r\\n    number %= 100;\\r\\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\\r\\n    pos = number / 10 | 0;\\r\\n    number %= 10;\\r\\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\\r\\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\\r\\n    var romanStr = romanBuf.join('');\\r\\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\\r\\n  };\\r\\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\\r\\n    Array.prototype.push.apply(arr1, arr2);\\r\\n  };\\r\\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\\r\\n    Array.prototype.unshift.apply(arr1, arr2);\\r\\n  };\\r\\n  Util.extendObj = function extendObj(obj1, obj2) {\\r\\n    for (var key in obj2) {\\r\\n      obj1[key] = obj2[key];\\r\\n    }\\r\\n  };\\r\\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\\r\\n    while (dict && !dict.has(name)) {\\r\\n      dict = dict.get('Parent');\\r\\n    }\\r\\n    if (!dict) {\\r\\n      return null;\\r\\n    }\\r\\n    return getArray ? dict.getArray(name) : dict.get(name);\\r\\n  };\\r\\n  Util.inherit = function Util_inherit(sub, base, prototype) {\\r\\n    sub.prototype = Object.create(base.prototype);\\r\\n    sub.prototype.constructor = sub;\\r\\n    for (var prop in prototype) {\\r\\n      sub.prototype[prop] = prototype[prop];\\r\\n    }\\r\\n  };\\r\\n  Util.loadScript = function Util_loadScript(src, callback) {\\r\\n    var script = document.createElement('script');\\r\\n    var loaded = false;\\r\\n    script.setAttribute('src', src);\\r\\n    if (callback) {\\r\\n      script.onload = function () {\\r\\n        if (!loaded) {\\r\\n          callback();\\r\\n        }\\r\\n        loaded = true;\\r\\n      };\\r\\n    }\\r\\n    document.getElementsByTagName('head')[0].appendChild(script);\\r\\n  };\\r\\n  return Util;\\r\\n}();\\r\\nvar PageViewport = function PageViewportClosure() {\\r\\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\\r\\n    this.viewBox = viewBox;\\r\\n    this.scale = scale;\\r\\n    this.rotation = rotation;\\r\\n    this.offsetX = offsetX;\\r\\n    this.offsetY = offsetY;\\r\\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\\r\\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\\r\\n    var rotateA, rotateB, rotateC, rotateD;\\r\\n    rotation = rotation % 360;\\r\\n    rotation = rotation < 0 ? rotation + 360 : rotation;\\r\\n    switch (rotation) {\\r\\n      case 180:\\r\\n        rotateA = -1;\\r\\n        rotateB = 0;\\r\\n        rotateC = 0;\\r\\n        rotateD = 1;\\r\\n        break;\\r\\n      case 90:\\r\\n        rotateA = 0;\\r\\n        rotateB = 1;\\r\\n        rotateC = 1;\\r\\n        rotateD = 0;\\r\\n        break;\\r\\n      case 270:\\r\\n        rotateA = 0;\\r\\n        rotateB = -1;\\r\\n        rotateC = -1;\\r\\n        rotateD = 0;\\r\\n        break;\\r\\n      default:\\r\\n        rotateA = 1;\\r\\n        rotateB = 0;\\r\\n        rotateC = 0;\\r\\n        rotateD = -1;\\r\\n        break;\\r\\n    }\\r\\n    if (dontFlip) {\\r\\n      rotateC = -rotateC;\\r\\n      rotateD = -rotateD;\\r\\n    }\\r\\n    var offsetCanvasX, offsetCanvasY;\\r\\n    var width, height;\\r\\n    if (rotateA === 0) {\\r\\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\\r\\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\\r\\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\\r\\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\\r\\n    } else {\\r\\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\\r\\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\\r\\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\\r\\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\\r\\n    }\\r\\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\\r\\n    this.width = width;\\r\\n    this.height = height;\\r\\n    this.fontScale = scale;\\r\\n  }\\r\\n  PageViewport.prototype = {\\r\\n    clone: function PageViewPort_clone(args) {\\r\\n      args = args || {};\\r\\n      var scale = 'scale' in args ? args.scale : this.scale;\\r\\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\\r\\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\\r\\n    },\\r\\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\\r\\n      return Util.applyTransform([x, y], this.transform);\\r\\n    },\\r\\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\\r\\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\\r\\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\\r\\n      return [tl[0], tl[1], br[0], br[1]];\\r\\n    },\\r\\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\\r\\n      return Util.applyInverseTransform([x, y], this.transform);\\r\\n    }\\r\\n  };\\r\\n  return PageViewport;\\r\\n}();\\r\\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\\r\\nfunction stringToPDFString(str) {\\r\\n  var i,\\r\\n      n = str.length,\\r\\n      strBuf = [];\\r\\n  if (str[0] === '\\\\xFE' && str[1] === '\\\\xFF') {\\r\\n    for (i = 2; i < n; i += 2) {\\r\\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\\r\\n    }\\r\\n  } else {\\r\\n    for (i = 0; i < n; ++i) {\\r\\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\\r\\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\\r\\n    }\\r\\n  }\\r\\n  return strBuf.join('');\\r\\n}\\r\\nfunction stringToUTF8String(str) {\\r\\n  return decodeURIComponent(escape(str));\\r\\n}\\r\\nfunction utf8StringToString(str) {\\r\\n  return unescape(encodeURIComponent(str));\\r\\n}\\r\\nfunction isEmptyObj(obj) {\\r\\n  for (var key in obj) {\\r\\n    return false;\\r\\n  }\\r\\n  return true;\\r\\n}\\r\\nfunction isBool(v) {\\r\\n  return typeof v === 'boolean';\\r\\n}\\r\\nfunction isNum(v) {\\r\\n  return typeof v === 'number';\\r\\n}\\r\\nfunction isString(v) {\\r\\n  return typeof v === 'string';\\r\\n}\\r\\nfunction isArrayBuffer(v) {\\r\\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\\r\\n}\\r\\nfunction isSpace(ch) {\\r\\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\\r\\n}\\r\\nfunction isNodeJS() {\\r\\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\\r\\n}\\r\\nfunction createPromiseCapability() {\\r\\n  var capability = {};\\r\\n  capability.promise = new Promise(function (resolve, reject) {\\r\\n    capability.resolve = resolve;\\r\\n    capability.reject = reject;\\r\\n  });\\r\\n  return capability;\\r\\n}\\r\\nvar StatTimer = function StatTimerClosure() {\\r\\n  function rpad(str, pad, length) {\\r\\n    while (str.length < length) {\\r\\n      str += pad;\\r\\n    }\\r\\n    return str;\\r\\n  }\\r\\n  function StatTimer() {\\r\\n    this.started = Object.create(null);\\r\\n    this.times = [];\\r\\n    this.enabled = true;\\r\\n  }\\r\\n  StatTimer.prototype = {\\r\\n    time: function StatTimer_time(name) {\\r\\n      if (!this.enabled) {\\r\\n        return;\\r\\n      }\\r\\n      if (name in this.started) {\\r\\n        warn('Timer is already running for ' + name);\\r\\n      }\\r\\n      this.started[name] = Date.now();\\r\\n    },\\r\\n    timeEnd: function StatTimer_timeEnd(name) {\\r\\n      if (!this.enabled) {\\r\\n        return;\\r\\n      }\\r\\n      if (!(name in this.started)) {\\r\\n        warn('Timer has not been started for ' + name);\\r\\n      }\\r\\n      this.times.push({\\r\\n        'name': name,\\r\\n        'start': this.started[name],\\r\\n        'end': Date.now()\\r\\n      });\\r\\n      delete this.started[name];\\r\\n    },\\r\\n    toString: function StatTimer_toString() {\\r\\n      var i, ii;\\r\\n      var times = this.times;\\r\\n      var out = '';\\r\\n      var longest = 0;\\r\\n      for (i = 0, ii = times.length; i < ii; ++i) {\\r\\n        var name = times[i]['name'];\\r\\n        if (name.length > longest) {\\r\\n          longest = name.length;\\r\\n        }\\r\\n      }\\r\\n      for (i = 0, ii = times.length; i < ii; ++i) {\\r\\n        var span = times[i];\\r\\n        var duration = span.end - span.start;\\r\\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\\\n';\\r\\n      }\\r\\n      return out;\\r\\n    }\\r\\n  };\\r\\n  return StatTimer;\\r\\n}();\\r\\nvar createBlob = function createBlob(data, contentType) {\\r\\n  if (typeof Blob !== 'undefined') {\\r\\n    return new Blob([data], { type: contentType });\\r\\n  }\\r\\n  throw new Error('The \\\"Blob\\\" constructor is not supported.');\\r\\n};\\r\\nvar createObjectURL = function createObjectURLClosure() {\\r\\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\\r\\n  return function createObjectURL(data, contentType) {\\r\\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\r\\n\\r\\n    if (!forceDataSchema && URL.createObjectURL) {\\r\\n      var blob = createBlob(data, contentType);\\r\\n      return URL.createObjectURL(blob);\\r\\n    }\\r\\n    var buffer = 'data:' + contentType + ';base64,';\\r\\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\\r\\n      var b1 = data[i] & 0xFF;\\r\\n      var b2 = data[i + 1] & 0xFF;\\r\\n      var b3 = data[i + 2] & 0xFF;\\r\\n      var d1 = b1 >> 2,\\r\\n          d2 = (b1 & 3) << 4 | b2 >> 4;\\r\\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\\r\\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\\r\\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\\r\\n    }\\r\\n    return buffer;\\r\\n  };\\r\\n}();\\r\\nfunction resolveCall(fn, args) {\\r\\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\\r\\n\\r\\n  if (!fn) {\\r\\n    return Promise.resolve(undefined);\\r\\n  }\\r\\n  return new Promise(function (resolve, reject) {\\r\\n    resolve(fn.apply(thisArg, args));\\r\\n  });\\r\\n}\\r\\nfunction wrapReason(reason) \";a.a+=\"{\\r\\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\\r\\n    return reason;\\r\\n  }\\r\\n  switch (reason.name) {\\r\\n    case 'AbortException':\\r\\n      return new AbortException(reason.message);\\r\\n    case 'MissingPDFException':\\r\\n      return new MissingPDFException(reason.message);\\r\\n    case 'UnexpectedResponseException':\\r\\n      return new UnexpectedResponseException(reason.message, reason.status);\\r\\n    default:\\r\\n      return new UnknownErrorException(reason.message, reason.details);\\r\\n  }\\r\\n}\\r\\nfunction makeReasonSerializable(reason) {\\r\\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\\r\\n    return reason;\\r\\n  }\\r\\n  return new UnknownErrorException(reason.message, reason.toString());\\r\\n}\\r\\nfunction resolveOrReject(capability, success, reason) {\\r\\n  if (success) {\\r\\n    capability.resolve();\\r\\n  } else {\\r\\n    capability.reject(reason);\\r\\n  }\\r\\n}\\r\\nfunction finalize(promise) {\\r\\n  return Promise.resolve(promise).catch(function () {});\\r\\n}\\r\\nfunction MessageHandler(sourceName, targetName, comObj) {\\r\\n  var _this = this;\\r\\n\\r\\n  this.sourceName = sourceName;\\r\\n  this.targetName = targetName;\\r\\n  this.comObj = comObj;\\r\\n  this.callbackId = 1;\\r\\n  this.streamId = 1;\\r\\n  this.postMessageTransfers = true;\\r\\n  this.streamSinks = Object.create(null);\\r\\n  this.streamControllers = Object.create(null);\\r\\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\\r\\n  var ah = this.actionHandler = Object.create(null);\\r\\n  this._onComObjOnMessage = function (event) {\\r\\n    var data = event.data;\\r\\n    if (data.targetName !== _this.sourceName) {\\r\\n      return;\\r\\n    }\\r\\n    if (data.stream) {\\r\\n      _this._processStreamMessage(data);\\r\\n    } else if (data.isReply) {\\r\\n      var callbackId = data.callbackId;\\r\\n      if (data.callbackId in callbacksCapabilities) {\\r\\n        var callback = callbacksCapabilities[callbackId];\\r\\n        delete callbacksCapabilities[callbackId];\\r\\n        if ('error' in data) {\\r\\n          callback.reject(wrapReason(data.error));\\r\\n        } else {\\r\\n          callback.resolve(data.data);\\r\\n        }\\r\\n      } else {\\r\\n        throw new Error('Cannot resolve callback ' + callbackId);\\r\\n      }\\r\\n    } else if (data.action in ah) {\\r\\n      var action = ah[data.action];\\r\\n      if (data.callbackId) {\\r\\n        var _sourceName = _this.sourceName;\\r\\n        var _targetName = data.sourceName;\\r\\n        Promise.resolve().then(function () {\\r\\n          return action[0].call(action[1], data.data);\\r\\n        }).then(function (result) {\\r\\n          comObj.postMessage({\\r\\n            sourceName: _sourceName,\\r\\n            targetName: _targetName,\\r\\n            isReply: true,\\r\\n            callbackId: data.callbackId,\\r\\n            data: result\\r\\n          });\\r\\n        }, function (reason) {\\r\\n          comObj.postMessage({\\r\\n            sourceName: _sourceName,\\r\\n            targetName: _targetName,\\r\\n            isReply: true,\\r\\n            callbackId: data.callbackId,\\r\\n            error: makeReasonSerializable(reason)\\r\\n          });\\r\\n        });\\r\\n      } else if (data.streamId) {\\r\\n        _this._createStreamSink(data);\\r\\n      } else {\\r\\n        action[0].call(action[1], data.data);\\r\\n      }\\r\\n    } else {\\r\\n      throw new Error('Unknown action from worker: ' + data.action);\\r\\n    }\\r\\n  };\\r\\n  comObj.addEventListener('message', this._onComObjOnMessage);\\r\\n}\\r\\nMessageHandler.prototype = {\\r\\n  on: function on(actionName, handler, scope) {\\r\\n    var ah = this.actionHandler;\\r\\n    if (ah[actionName]) {\\r\\n      throw new Error('There is already an actionName called \\\"' + actionName + '\\\"');\\r\\n    }\\r\\n    ah[actionName] = [handler, scope];\\r\\n  },\\r\\n  send: function send(actionName, data, transfers) {\\r\\n    var message = {\\r\\n      sourceName: this.sourceName,\\r\\n      targetName: this.targetName,\\r\\n      action: actionName,\\r\\n      data: data\\r\\n    };\\r\\n    this.postMessage(message, transfers);\\r\\n  },\\r\\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\\r\\n    var callbackId = this.callbackId++;\\r\\n    var message = {\\r\\n      sourceName: this.sourceName,\\r\\n      targetName: this.targetName,\\r\\n      action: actionName,\\r\\n      data: data,\\r\\n      callbackId: callbackId\\r\\n    };\\r\\n    var capability = createPromiseCapability();\\r\\n    this.callbacksCapabilities[callbackId] = capability;\\r\\n    try {\\r\\n      this.postMessage(message, transfers);\\r\\n    } catch (e) {\\r\\n      capability.reject(e);\\r\\n    }\\r\\n    return capability.promise;\\r\\n  },\\r\\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\\r\\n    var _this2 = this;\\r\\n\\r\\n    var streamId = this.streamId++;\\r\\n    var sourceName = this.sourceName;\\r\\n    var targetName = this.targetName;\\r\\n    return new _streams_polyfill.ReadableStream({\\r\\n      start: function start(controller) {\\r\\n        var startCapability = createPromiseCapability();\\r\\n        _this2.streamControllers[streamId] = {\\r\\n          controller: controller,\\r\\n          startCall: startCapability,\\r\\n          isClosed: false\\r\\n        };\\r\\n        _this2.postMessage({\\r\\n          sourceName: sourceName,\\r\\n          targetName: targetName,\\r\\n          action: actionName,\\r\\n          streamId: streamId,\\r\\n          data: data,\\r\\n          desiredSize: controller.desiredSize\\r\\n        });\\r\\n        return startCapability.promise;\\r\\n      },\\r\\n      pull: function pull(controller) {\\r\\n        var pullCapability = createPromiseCapability();\\r\\n        _this2.streamControllers[streamId].pullCall = pullCapability;\\r\\n        _this2.postMessage({\\r\\n          sourceName: sourceName,\\r\\n          targetName: targetName,\\r\\n          stream: 'pull',\\r\\n          streamId: streamId,\\r\\n          desiredSize: controller.desiredSize\\r\\n        });\\r\\n        return pullCapability.promise;\\r\\n      },\\r\\n      cancel: function cancel(reason) {\\r\\n        var cancelCapability = createPromiseCapability();\\r\\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\\r\\n        _this2.streamControllers[streamId].isClosed = true;\\r\\n        _this2.postMessage({\\r\\n          sourceName: sourceName,\\r\\n          targetName: targetName,\\r\\n          stream: 'cancel',\\r\\n          reason: reason,\\r\\n          streamId: streamId\\r\\n        });\\r\\n        return cancelCapability.promise;\\r\\n      }\\r\\n    }, queueingStrategy);\\r\\n  },\\r\\n  _createStreamSink: function _createStreamSink(data) {\\r\\n    var _this3 = this;\\r\\n\\r\\n    var self = this;\\r\\n    var action = this.actionHandler[data.action];\\r\\n    var streamId = data.streamId;\\r\\n    var desiredSize = data.desiredSize;\\r\\n    var sourceName = this.sourceName;\\r\\n    var targetName = data.sourceName;\\r\\n    var capability = createPromiseCapability();\\r\\n    var sendStreamRequest = function sendStreamRequest(_ref) {\\r\\n      var stream = _ref.stream,\\r\\n          chunk = _ref.chunk,\\r\\n          transfers = _ref.transfers,\\r\\n          success = _ref.success,\\r\\n          reason = _ref.reason;\\r\\n\\r\\n      _this3.postMessage({\\r\\n        sourceName: sourceName,\\r\\n        targetName: targetName,\\r\\n        stream: stream,\\r\\n        streamId: streamId,\\r\\n        chunk: chunk,\\r\\n        success: success,\\r\\n        reason: reason\\r\\n      }, transfers);\\r\\n    };\\r\\n    var streamSink = {\\r\\n      enqueue: function enqueue(chunk) {\\r\\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\\r\\n        var transfers = arguments[2];\\r\\n\\r\\n        if (this.isCancelled) {\\r\\n          return;\\r\\n        }\\r\\n        var lastDesiredSize = this.desiredSize;\\r\\n        this.desiredSize -= size;\\r\\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\\r\\n          this.sinkCapability = createPromiseCapability();\\r\\n          this.ready = this.sinkCapability.promise;\\r\\n        }\\r\\n        sendStreamRequest({\\r\\n          stream: 'enqueue',\\r\\n          chunk: chunk,\\r\\n          transfers: transfers\\r\\n        });\\r\\n      },\\r\\n      close: function close() {\\r\\n        if (this.isCancelled) {\\r\\n          return;\\r\\n        }\\r\\n        this.isCancelled = true;\\r\\n        sendStreamRequest({ stream: 'close' });\\r\\n        delete self.streamSinks[streamId];\\r\\n      },\\r\\n      error: function error(reason) {\\r\\n        if (this.isCancelled) {\\r\\n          return;\\r\\n        }\\r\\n        this.isCancelled = true;\\r\\n        sendStreamRequest({\\r\\n          stream: 'error',\\r\\n          reason: reason\\r\\n        });\\r\\n      },\\r\\n\\r\\n      sinkCapability: capability,\\r\\n      onPull: null,\\r\\n      onCancel: null,\\r\\n      isCancelled: false,\\r\\n      desiredSize: desiredSize,\\r\\n      ready: null\\r\\n    };\\r\\n    streamSink.sinkCapability.resolve();\\r\\n    streamSink.ready = streamSink.sinkCapability.promise;\\r\\n    this.streamSinks[streamId] = streamSink;\\r\\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\\r\\n      sendStreamRequest({\\r\\n        stream: 'start_complete',\\r\\n        success: true\\r\\n      });\\r\\n    }, function (reason) {\\r\\n      sendStreamRequest({\\r\\n        stream: 'start_complete',\\r\\n        success: false,\\r\\n        reason: reason\\r\\n      });\\r\\n    });\\r\\n  },\\r\\n  _processStreamMessage: function _processStreamMessage(data) {\\r\\n    var _this4 = this;\\r\\n\\r\\n    var sourceName = this.sourceName;\\r\\n    var targetName = data.sourceName;\\r\\n    var streamId = data.streamId;\\r\\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\\r\\n      var stream = _ref2.stream,\\r\\n          success = _ref2.success,\\r\\n          reason = _ref2.reason;\\r\\n\\r\\n      _this4.comObj.postMessage({\\r\\n        sourceName: sourceName,\\r\\n        targetName: targetName,\\r\\n        stream: stream,\\r\\n        success: success,\\r\\n        streamId: streamId,\\r\\n        reason: reason\\r\\n      });\\r\\n    };\\r\\n    var deleteStreamController = function deleteStreamController() {\\r\\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\\r\\n        return capability && finalize(capability.promise);\\r\\n      })).then(function () {\\r\\n        delete _this4.streamControllers[data.streamId];\\r\\n      });\\r\\n    };\\r\\n    switch (data.stream) {\\r\\n      case 'start_complete':\\r\\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\\r\\n        break;\\r\\n      case 'pull_complete':\\r\\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\\r\\n        break;\\r\\n      case 'pull':\\r\\n        if (!this.streamSinks[data.streamId]) {\\r\\n          sendStreamResponse({\\r\\n            stream: 'pull_complete',\\r\\n            success: true\\r\\n          });\\r\\n          break;\\r\\n        }\\r\\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\\r\\n          this.streamSinks[data.streamId].sinkCapability.resolve();\\r\\n        }\\r\\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\\r\\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\\r\\n          sendStreamResponse({\\r\\n            stream: 'pull_complete',\\r\\n            success: true\\r\\n          });\\r\\n        }, function (reason) {\\r\\n          sendStreamResponse({\\r\\n            stream: 'pull_complete',\\r\\n            success: false,\\r\\n            reason: reason\\r\\n          });\\r\\n        });\\r\\n        break;\\r\\n      case 'enqueue':\\r\\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\\r\\n        if (!this.streamControllers[data.streamId].isClosed) {\\r\\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\\r\\n        }\\r\\n        break;\\r\\n      case 'close':\\r\\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\\r\\n        if (this.streamControllers[data.streamId].isClosed) {\\r\\n          break;\\r\\n        }\\r\\n        this.streamControllers[data.streamId].isClosed = true;\\r\\n        this.streamControllers[data.streamId].controller.close();\\r\\n        deleteStreamController();\\r\\n        break;\\r\\n      case 'error':\\r\\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\\r\\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\\r\\n        deleteStreamController();\\r\\n        break;\\r\\n      case 'cancel_complete':\\r\\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\\r\\n        deleteStreamController();\\r\\n        break;\\r\\n      case 'cancel':\\r\\n        if (!this.streamSinks[data.streamId]) {\\r\\n          break;\\r\\n        }\\r\\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\\r\\n          sendStreamResponse({\\r\\n            stream: 'cancel_complete',\\r\\n            success: true\\r\\n          });\\r\\n        }, function (reason) {\\r\\n          sendStreamResponse({\\r\\n            stream: 'cancel_complete',\\r\\n            success: false,\\r\\n            reason: reason\\r\\n          });\\r\\n        });\\r\\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\\r\\n        this.streamSinks[data.streamId].isCancelled = true;\\r\\n        delete this.streamSinks[data.streamId];\\r\\n        break;\\r\\n      default:\\r\\n        throw new Error('Unexpected stream case');\\r\\n    }\\r\\n  },\\r\\n  postMessage: function postMessage(message, transfers) {\\r\\n    if (transfers && this.postMessageTransfers) {\\r\\n      this.comObj.postMessage(message, transfers);\\r\\n    } else {\\r\\n      this.comObj.postMessage(message);\\r\\n    }\\r\\n  },\\r\\n  destroy: function destroy() {\\r\\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\\r\\n  }\\r\\n};\\r\\nfunction loadJpegStream(id, imageUrl, objs) {\\r\\n  var img = new Image();\\r\\n  img.onload = function loadJpegStream_onloadClosure() {\\r\\n    objs.resolve(id, img);\\r\\n  };\\r\\n  img.onerror = function loadJpegStream_onerrorClosure() {\\r\\n    objs.resolve(id, null);\\r\\n    warn('Error during JPEG image loading');\\r\\n  };\\r\\n  img.src = imageUrl;\\r\\n}\\r\\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\\r\\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\\r\\nexports.OPS = OPS;\\r\\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\\r\\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\\r\\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\\r\\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\\r\\nexports.AnnotationFlag = AnnotationFlag;\\r\\nexports.AnnotationType = AnnotationType;\\r\\nexports.FontType = FontType;\\r\\nexports.ImageKind = ImageKind;\\r\\nexports.CMapCompressionType = CMapCompressionType;\\r\\nexports.AbortException = AbortException;\\r\\nexports.InvalidPDFException = InvalidPDFException;\\r\\nexports.MessageHandler = MessageHandler;\\r\\nexports.MissingDataException = MissingDataException;\\r\\nexports.MissingPDFException = MissingPDFException;\\r\\nexports.NativeImageDecoding = NativeImageDecoding;\\r\\nexports.NotImplementedException = NotImplementedException;\\r\\nexports.PageViewport = PageViewport;\\r\\nexports.PasswordException = PasswordException;\\r\\nexports.PasswordResponses = PasswordResponses;\\r\\nexports.StatTimer = StatTimer;\\r\\nexports.StreamType = StreamType;\\r\\nexports.TextRenderingMode = TextRenderingMode;\\r\\nexports.UnexpectedResponseException = UnexpectedResponseException;\\r\\nexports.UnknownErrorException = UnknownErrorException;\\r\\nexports.Util = Util;\\r\\nexports.XRefParseException = XRefParseException;\\r\\nexports.FormatError = FormatError;\\r\\nexports.arrayByteLength = arrayByteLength;\\r\\nexports.arraysToBytes = arraysToBytes;\\r\\nexports.assert = assert;\\r\\nexports.bytesToString = bytesToString;\\r\\nexports.createBlob = createBlob;\\r\\nexports.createPromiseCapability = createPromiseCapability;\\r\\nexports.createObjectURL = createObjectURL;\\r\\nexports.deprecated = deprecated;\\r\\nexports.getLookupTableFactory = getLookupTableFactory;\\r\\nexports.getVerbosityLevel = getVerbosityLevel;\\r\\nexports.info = info;\\r\\nexports.isArrayBuffer = isArrayBuffer;\\r\\nexports.isBool = isBool;\\r\\nexports.isEmptyObj = isEmptyObj;\\r\\nexports.isNum = isNum;\\r\\nexports.isString = isString;\\r\\nexports.isSpace = isSpace;\\r\\nexports.isNodeJS = isNodeJS;\\r\\nexports.isSameOrigin = isSameOrigin;\\r\\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\\r\\nexports.isLittleEndian = isLittleEndian;\\r\\nexports.isEvalSupported = isEvalSupported;\\r\\nexports.loadJpegStream = loadJpegStream;\\r\\nexports.log2 = log2;\\r\\nexports.readInt8 = readInt8;\\r\\nexports.readUint16 = readUint16;\\r\\nexports.readUint32 = readUint32;\\r\\nexports.removeNullCharacters = removeNullCharacters;\\r\\nexports.ReadableStream = _streams_polyfill.ReadableStream;\\r\\nexports.setVerbosityLevel = setVerbosityLevel;\\r\\nexports.shadow = shadow;\\r\";a.a+=\"\\nexports.string32 = string32;\\r\\nexports.stringToBytes = stringToBytes;\\r\\nexports.stringToPDFString = stringToPDFString;\\r\\nexports.stringToUTF8String = stringToUTF8String;\\r\\nexports.utf8StringToString = utf8StringToString;\\r\\nexports.warn = warn;\\r\\nexports.unreachable = unreachable;\\r\\n\\r\\n/***/ }),\\r\\n/* 1 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\\r\\nif (typeof __g == 'number') __g = global;\\r\\n\\r\\n/***/ }),\\r\\n/* 2 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar EOF = {};\\r\\nvar Name = function NameClosure() {\\r\\n  function Name(name) {\\r\\n    this.name = name;\\r\\n  }\\r\\n  Name.prototype = {};\\r\\n  var nameCache = Object.create(null);\\r\\n  Name.get = function Name_get(name) {\\r\\n    var nameValue = nameCache[name];\\r\\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\\r\\n  };\\r\\n  return Name;\\r\\n}();\\r\\nvar Cmd = function CmdClosure() {\\r\\n  function Cmd(cmd) {\\r\\n    this.cmd = cmd;\\r\\n  }\\r\\n  Cmd.prototype = {};\\r\\n  var cmdCache = Object.create(null);\\r\\n  Cmd.get = function Cmd_get(cmd) {\\r\\n    var cmdValue = cmdCache[cmd];\\r\\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\\r\\n  };\\r\\n  return Cmd;\\r\\n}();\\r\\nvar Dict = function DictClosure() {\\r\\n  var nonSerializable = function nonSerializableClosure() {\\r\\n    return nonSerializable;\\r\\n  };\\r\\n  function Dict(xref) {\\r\\n    this._map = Object.create(null);\\r\\n    this.xref = xref;\\r\\n    this.objId = null;\\r\\n    this.suppressEncryption = false;\\r\\n    this.__nonSerializable__ = nonSerializable;\\r\\n  }\\r\\n  Dict.prototype = {\\r\\n    assignXref: function Dict_assignXref(newXref) {\\r\\n      this.xref = newXref;\\r\\n    },\\r\\n    get: function Dict_get(key1, key2, key3) {\\r\\n      var value;\\r\\n      var xref = this.xref,\\r\\n          suppressEncryption = this.suppressEncryption;\\r\\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\r\\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\r\\n      }\\r\\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\r\\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\r\\n      }\\r\\n      value = this._map[key3] || null;\\r\\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\\r\\n    },\\r\\n    getAsync: function Dict_getAsync(key1, key2, key3) {\\r\\n      var value;\\r\\n      var xref = this.xref,\\r\\n          suppressEncryption = this.suppressEncryption;\\r\\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\\r\\n        if (xref) {\\r\\n          return xref.fetchIfRefAsync(value, suppressEncryption);\\r\\n        }\\r\\n        return Promise.resolve(value);\\r\\n      }\\r\\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\\r\\n        if (xref) {\\r\\n          return xref.fetchIfRefAsync(value, suppressEncryption);\\r\\n        }\\r\\n        return Promise.resolve(value);\\r\\n      }\\r\\n      value = this._map[key3] || null;\\r\\n      if (xref) {\\r\\n        return xref.fetchIfRefAsync(value, suppressEncryption);\\r\\n      }\\r\\n      return Promise.resolve(value);\\r\\n    },\\r\\n    getArray: function Dict_getArray(key1, key2, key3) {\\r\\n      var value = this.get(key1, key2, key3);\\r\\n      var xref = this.xref,\\r\\n          suppressEncryption = this.suppressEncryption;\\r\\n      if (!Array.isArray(value) || !xref) {\\r\\n        return value;\\r\\n      }\\r\\n      value = value.slice();\\r\\n      for (var i = 0, ii = value.length; i < ii; i++) {\\r\\n        if (!isRef(value[i])) {\\r\\n          continue;\\r\\n        }\\r\\n        value[i] = xref.fetch(value[i], suppressEncryption);\\r\\n      }\\r\\n      return value;\\r\\n    },\\r\\n    getRaw: function Dict_getRaw(key) {\\r\\n      return this._map[key];\\r\\n    },\\r\\n    getKeys: function Dict_getKeys() {\\r\\n      return Object.keys(this._map);\\r\\n    },\\r\\n    set: function Dict_set(key, value) {\\r\\n      this._map[key] = value;\\r\\n    },\\r\\n    has: function Dict_has(key) {\\r\\n      return key in this._map;\\r\\n    },\\r\\n    forEach: function Dict_forEach(callback) {\\r\\n      for (var key in this._map) {\\r\\n        callback(key, this.get(key));\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  Dict.empty = new Dict(null);\\r\\n  Dict.merge = function (xref, dictArray) {\\r\\n    var mergedDict = new Dict(xref);\\r\\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\\r\\n      var dict = dictArray[i];\\r\\n      if (!isDict(dict)) {\\r\\n        continue;\\r\\n      }\\r\\n      for (var keyName in dict._map) {\\r\\n        if (mergedDict._map[keyName] !== undefined) {\\r\\n          continue;\\r\\n        }\\r\\n        mergedDict._map[keyName] = dict._map[keyName];\\r\\n      }\\r\\n    }\\r\\n    return mergedDict;\\r\\n  };\\r\\n  return Dict;\\r\\n}();\\r\\nvar Ref = function RefClosure() {\\r\\n  function Ref(num, gen) {\\r\\n    this.num = num;\\r\\n    this.gen = gen;\\r\\n  }\\r\\n  Ref.prototype = {\\r\\n    toString: function Ref_toString() {\\r\\n      var str = this.num + 'R';\\r\\n      if (this.gen !== 0) {\\r\\n        str += this.gen;\\r\\n      }\\r\\n      return str;\\r\\n    }\\r\\n  };\\r\\n  return Ref;\\r\\n}();\\r\\nvar RefSet = function RefSetClosure() {\\r\\n  function RefSet() {\\r\\n    this.dict = Object.create(null);\\r\\n  }\\r\\n  RefSet.prototype = {\\r\\n    has: function RefSet_has(ref) {\\r\\n      return ref.toString() in this.dict;\\r\\n    },\\r\\n    put: function RefSet_put(ref) {\\r\\n      this.dict[ref.toString()] = true;\\r\\n    },\\r\\n    remove: function RefSet_remove(ref) {\\r\\n      delete this.dict[ref.toString()];\\r\\n    }\\r\\n  };\\r\\n  return RefSet;\\r\\n}();\\r\\nvar RefSetCache = function RefSetCacheClosure() {\\r\\n  function RefSetCache() {\\r\\n    this.dict = Object.create(null);\\r\\n  }\\r\\n  RefSetCache.prototype = {\\r\\n    get: function RefSetCache_get(ref) {\\r\\n      return this.dict[ref.toString()];\\r\\n    },\\r\\n    has: function RefSetCache_has(ref) {\\r\\n      return ref.toString() in this.dict;\\r\\n    },\\r\\n    put: function RefSetCache_put(ref, obj) {\\r\\n      this.dict[ref.toString()] = obj;\\r\\n    },\\r\\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\\r\\n      this.dict[ref.toString()] = this.get(aliasRef);\\r\\n    },\\r\\n    forEach: function RefSetCache_forEach(fn, thisArg) {\\r\\n      for (var i in this.dict) {\\r\\n        fn.call(thisArg, this.dict[i]);\\r\\n      }\\r\\n    },\\r\\n    clear: function RefSetCache_clear() {\\r\\n      this.dict = Object.create(null);\\r\\n    }\\r\\n  };\\r\\n  return RefSetCache;\\r\\n}();\\r\\nfunction isEOF(v) {\\r\\n  return v === EOF;\\r\\n}\\r\\nfunction isName(v, name) {\\r\\n  return v instanceof Name && (name === undefined || v.name === name);\\r\\n}\\r\\nfunction isCmd(v, cmd) {\\r\\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\\r\\n}\\r\\nfunction isDict(v, type) {\\r\\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\\r\\n}\\r\\nfunction isRef(v) {\\r\\n  return v instanceof Ref;\\r\\n}\\r\\nfunction isRefsEqual(v1, v2) {\\r\\n  return v1.num === v2.num && v1.gen === v2.gen;\\r\\n}\\r\\nfunction isStream(v) {\\r\\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\\r\\n}\\r\\nexports.EOF = EOF;\\r\\nexports.Cmd = Cmd;\\r\\nexports.Dict = Dict;\\r\\nexports.Name = Name;\\r\\nexports.Ref = Ref;\\r\\nexports.RefSet = RefSet;\\r\\nexports.RefSetCache = RefSetCache;\\r\\nexports.isEOF = isEOF;\\r\\nexports.isCmd = isCmd;\\r\\nexports.isDict = isDict;\\r\\nexports.isName = isName;\\r\\nexports.isRef = isRef;\\r\\nexports.isRefsEqual = isRefsEqual;\\r\\nexports.isStream = isStream;\\r\\n\\r\\n/***/ }),\\r\\n/* 3 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nmodule.exports = function (it) {\\r\\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 4 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar store = __w_pdfjs_require__(57)('wks');\\r\\nvar uid = __w_pdfjs_require__(18);\\r\\nvar _Symbol = __w_pdfjs_require__(1).Symbol;\\r\\nvar USE_SYMBOL = typeof _Symbol == 'function';\\r\\nvar $exports = module.exports = function (name) {\\r\\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\\r\\n};\\r\\n$exports.store = store;\\r\\n\\r\\n/***/ }),\\r\\n/* 5 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.JpxStream = exports.JpegStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _jpg = __w_pdfjs_require__(143);\\r\\n\\r\\nvar _jpx = __w_pdfjs_require__(80);\\r\\n\\r\\nvar Stream = function StreamClosure() {\\r\\n  function Stream(arrayBuffer, start, length, dict) {\\r\\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\\r\\n    this.start = start || 0;\\r\\n    this.pos = this.start;\\r\\n    this.end = start + length || this.bytes.length;\\r\\n    this.dict = dict;\\r\\n  }\\r\\n  Stream.prototype = {\\r\\n    get length() {\\r\\n      return this.end - this.start;\\r\\n    },\\r\\n    get isEmpty() {\\r\\n      return this.length === 0;\\r\\n    },\\r\\n    getByte: function Stream_getByte() {\\r\\n      if (this.pos >= this.end) {\\r\\n        return -1;\\r\\n      }\\r\\n      return this.bytes[this.pos++];\\r\\n    },\\r\\n    getUint16: function Stream_getUint16() {\\r\\n      var b0 = this.getByte();\\r\\n      var b1 = this.getByte();\\r\\n      if (b0 === -1 || b1 === -1) {\\r\\n        return -1;\\r\\n      }\\r\\n      return (b0 << 8) + b1;\\r\\n    },\\r\\n    getInt32: function Stream_getInt32() {\\r\\n      var b0 = this.getByte();\\r\\n      var b1 = this.getByte();\\r\\n      var b2 = this.getByte();\\r\\n      var b3 = this.getByte();\\r\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\r\\n    },\\r\\n    getBytes: function Stream_getBytes(length) {\\r\\n      var bytes = this.bytes;\\r\\n      var pos = this.pos;\\r\\n      var strEnd = this.end;\\r\\n      if (!length) {\\r\\n        return bytes.subarray(pos, strEnd);\\r\\n      }\\r\\n      var end = pos + length;\\r\\n      if (end > strEnd) {\\r\\n        end = strEnd;\\r\\n      }\\r\\n      this.pos = end;\\r\\n      return bytes.subarray(pos, end);\\r\\n    },\\r\\n    peekByte: function Stream_peekByte() {\\r\\n      var peekedByte = this.getByte();\\r\\n      this.pos--;\\r\\n      return peekedByte;\\r\\n    },\\r\\n    peekBytes: function Stream_peekBytes(length) {\\r\\n      var bytes = this.getBytes(length);\\r\\n      this.pos -= bytes.length;\\r\\n      return bytes;\\r\\n    },\\r\\n    skip: function Stream_skip(n) {\\r\\n      if (!n) {\\r\\n        n = 1;\\r\\n      }\\r\\n      this.pos += n;\\r\\n    },\\r\\n    reset: function Stream_reset() {\\r\\n      this.pos = this.start;\\r\\n    },\\r\\n    moveStart: function Stream_moveStart() {\\r\\n      this.start = this.pos;\\r\\n    },\\r\\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\\r\\n      return new Stream(this.bytes.buffer, start, length, dict);\\r\\n    }\\r\\n  };\\r\\n  return Stream;\\r\\n}();\\r\\nvar StringStream = function StringStreamClosure() {\\r\\n  function StringStream(str) {\\r\\n    var bytes = (0, _util.stringToBytes)(str);\\r\\n    Stream.call(this, bytes);\\r\\n  }\\r\\n  StringStream.prototype = Stream.prototype;\\r\\n  return StringStream;\\r\\n}();\\r\\nvar DecodeStream = function DecodeStreamClosure() {\\r\\n  var emptyBuffer = new Uint8Array(0);\\r\\n  function DecodeStream(maybeMinBufferLength) {\\r\\n    this.pos = 0;\\r\\n    this.bufferLength = 0;\\r\\n    this.eof = false;\\r\\n    this.buffer = emptyBuffer;\\r\\n    this.minBufferLength = 512;\\r\\n    if (maybeMinBufferLength) {\\r\\n      while (this.minBufferLength < maybeMinBufferLength) {\\r\\n        this.minBufferLength *= 2;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  DecodeStream.prototype = {\\r\\n    get isEmpty() {\\r\\n      while (!this.eof && this.bufferLength === 0) {\\r\\n        this.readBlock();\\r\\n      }\\r\\n      return this.bufferLength === 0;\\r\\n    },\\r\\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\\r\\n      var buffer = this.buffer;\\r\\n      if (requested <= buffer.byteLength) {\\r\\n        return buffer;\\r\\n      }\\r\\n      var size = this.minBufferLength;\\r\\n      while (size < requested) {\\r\\n        size *= 2;\\r\\n      }\\r\\n      var buffer2 = new Uint8Array(size);\\r\\n      buffer2.set(buffer);\\r\\n      return this.buffer = buffer2;\\r\\n    },\\r\\n    getByte: function DecodeStream_getByte() {\\r\\n      var pos = this.pos;\\r\\n      while (this.bufferLength <= pos) {\\r\\n        if (this.eof) {\\r\\n          return -1;\\r\\n        }\\r\\n        this.readBlock();\\r\\n      }\\r\\n      return this.buffer[this.pos++];\\r\\n    },\\r\\n    getUint16: function DecodeStream_getUint16() {\\r\\n      var b0 = this.getByte();\\r\\n      var b1 = this.getByte();\\r\\n      if (b0 === -1 || b1 === -1) {\\r\\n        return -1;\\r\\n      }\\r\\n      return (b0 << 8) + b1;\\r\\n    },\\r\\n    getInt32: function DecodeStream_getInt32() {\\r\\n      var b0 = this.getByte();\\r\\n      var b1 = this.getByte();\\r\\n      var b2 = this.getByte();\\r\\n      var b3 = this.getByte();\\r\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\r\\n    },\\r\\n    getBytes: function DecodeStream_getBytes(length) {\\r\\n      var end,\\r\\n          pos = this.pos;\\r\\n      if (length) {\\r\\n        this.ensureBuffer(pos + length);\\r\\n        end = pos + length;\\r\\n        while (!this.eof && this.bufferLength < end) {\\r\\n          this.readBlock();\\r\\n        }\\r\\n        var bufEnd = this.bufferLength;\\r\\n        if (end > bufEnd) {\\r\\n          end = bufEnd;\\r\\n        }\\r\\n      } else {\\r\\n        while (!this.eof) {\\r\\n          this.readBlock();\\r\\n        }\\r\\n        end = this.bufferLength;\\r\\n      }\\r\\n      this.pos = end;\\r\\n      return this.buffer.subarray(pos, end);\\r\\n    },\\r\\n    peekByte: function DecodeStream_peekByte() {\\r\\n      var peekedByte = this.getByte();\\r\\n      this.pos--;\\r\\n      return peekedByte;\\r\\n    },\\r\\n    peekBytes: function DecodeStream_peekBytes(length) {\\r\\n      var bytes = this.getBytes(length);\\r\\n      this.pos -= bytes.length;\\r\\n      return bytes;\\r\\n    },\\r\\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\\r\\n      var end = start + length;\\r\\n      while (this.bufferLength <= end && !this.eof) {\\r\\n        this.readBlock();\\r\\n      }\\r\\n      return new Stream(this.buffer, start, length, dict);\\r\\n    },\\r\\n    skip: function DecodeStream_skip(n) {\\r\\n      if (!n) {\\r\\n        n = 1;\\r\\n      }\\r\\n      this.pos += n;\\r\\n    },\\r\\n    reset: function DecodeStream_reset() {\\r\\n      this.pos = 0;\\r\\n    },\\r\\n    getBaseStreams: function DecodeStream_getBaseStreams() {\\r\\n      if (this.str && this.str.getBaseStreams) {\\r\\n        return this.str.getBaseStreams();\\r\\n      }\\r\\n      return [];\\r\\n    }\\r\\n  };\\r\\n  return DecodeStream;\\r\\n}();\\r\\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\\r\\n  function StreamsSequenceStream(streams) {\\r\\n    this.streams = streams;\\r\\n    DecodeStream.call(this, null);\\r\\n  }\\r\\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\\r\\n    var streams = this.streams;\\r\\n    if (streams.length === 0) {\\r\\n      this.eof = true;\\r\\n      return;\\r\\n    }\\r\\n    var stream = streams.shift();\\r\\n    var chunk = stream.getBytes();\\r\\n    var bufferLength = this.bufferLength;\\r\\n    var newLength = bufferLength + chunk.length;\\r\\n    var buffer = this.ensureBuffer(newLength);\\r\\n    buffer.set(chunk, bufferLength);\\r\\n    this.bufferLength = newLength;\\r\\n  };\\r\\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\\r\\n    var baseStreams = [];\\r\\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\\r\\n      var stream = this.streams[i];\\r\\n      if (stream.getBaseStreams) {\\r\\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\\r\\n      }\\r\\n    }\\r\\n    return baseStreams;\\r\\n  };\\r\\n  return StreamsSequenceStream;\\r\\n}();\\r\\nvar Flate\";a.a+=\"Stream = function FlateStreamClosure() {\\r\\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\\r\\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\\r\\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\\r\\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\\r\\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\\r\\n  function FlateStream(str, maybeLength) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    var cmf = str.getByte();\\r\\n    var flg = str.getByte();\\r\\n    if (cmf === -1 || flg === -1) {\\r\\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\\r\\n    }\\r\\n    if ((cmf & 0x0f) !== 0x08) {\\r\\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\\r\\n    }\\r\\n    if (((cmf << 8) + flg) % 31 !== 0) {\\r\\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\\r\\n    }\\r\\n    if (flg & 0x20) {\\r\\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\\r\\n    }\\r\\n    this.codeSize = 0;\\r\\n    this.codeBuf = 0;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\\r\\n    var str = this.str;\\r\\n    var codeSize = this.codeSize;\\r\\n    var codeBuf = this.codeBuf;\\r\\n    var b;\\r\\n    while (codeSize < bits) {\\r\\n      if ((b = str.getByte()) === -1) {\\r\\n        throw new _util.FormatError('Bad encoding in flate stream');\\r\\n      }\\r\\n      codeBuf |= b << codeSize;\\r\\n      codeSize += 8;\\r\\n    }\\r\\n    b = codeBuf & (1 << bits) - 1;\\r\\n    this.codeBuf = codeBuf >> bits;\\r\\n    this.codeSize = codeSize -= bits;\\r\\n    return b;\\r\\n  };\\r\\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\\r\\n    var str = this.str;\\r\\n    var codes = table[0];\\r\\n    var maxLen = table[1];\\r\\n    var codeSize = this.codeSize;\\r\\n    var codeBuf = this.codeBuf;\\r\\n    var b;\\r\\n    while (codeSize < maxLen) {\\r\\n      if ((b = str.getByte()) === -1) {\\r\\n        break;\\r\\n      }\\r\\n      codeBuf |= b << codeSize;\\r\\n      codeSize += 8;\\r\\n    }\\r\\n    var code = codes[codeBuf & (1 << maxLen) - 1];\\r\\n    var codeLen = code >> 16;\\r\\n    var codeVal = code & 0xffff;\\r\\n    if (codeLen < 1 || codeSize < codeLen) {\\r\\n      throw new _util.FormatError('Bad encoding in flate stream');\\r\\n    }\\r\\n    this.codeBuf = codeBuf >> codeLen;\\r\\n    this.codeSize = codeSize - codeLen;\\r\\n    return codeVal;\\r\\n  };\\r\\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\\r\\n    var n = lengths.length;\\r\\n    var maxLen = 0;\\r\\n    var i;\\r\\n    for (i = 0; i < n; ++i) {\\r\\n      if (lengths[i] > maxLen) {\\r\\n        maxLen = lengths[i];\\r\\n      }\\r\\n    }\\r\\n    var size = 1 << maxLen;\\r\\n    var codes = new Int32Array(size);\\r\\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\\r\\n      for (var val = 0; val < n; ++val) {\\r\\n        if (lengths[val] === len) {\\r\\n          var code2 = 0;\\r\\n          var t = code;\\r\\n          for (i = 0; i < len; ++i) {\\r\\n            code2 = code2 << 1 | t & 1;\\r\\n            t >>= 1;\\r\\n          }\\r\\n          for (i = code2; i < size; i += skip) {\\r\\n            codes[i] = len << 16 | val;\\r\\n          }\\r\\n          ++code;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    return [codes, maxLen];\\r\\n  };\\r\\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\\r\\n    var buffer, len;\\r\\n    var str = this.str;\\r\\n    var hdr = this.getBits(3);\\r\\n    if (hdr & 1) {\\r\\n      this.eof = true;\\r\\n    }\\r\\n    hdr >>= 1;\\r\\n    if (hdr === 0) {\\r\\n      var b;\\r\\n      if ((b = str.getByte()) === -1) {\\r\\n        throw new _util.FormatError('Bad block header in flate stream');\\r\\n      }\\r\\n      var blockLen = b;\\r\\n      if ((b = str.getByte()) === -1) {\\r\\n        throw new _util.FormatError('Bad block header in flate stream');\\r\\n      }\\r\\n      blockLen |= b << 8;\\r\\n      if ((b = str.getByte()) === -1) {\\r\\n        throw new _util.FormatError('Bad block header in flate stream');\\r\\n      }\\r\\n      var check = b;\\r\\n      if ((b = str.getByte()) === -1) {\\r\\n        throw new _util.FormatError('Bad block header in flate stream');\\r\\n      }\\r\\n      check |= b << 8;\\r\\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\\r\\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\\r\\n      }\\r\\n      this.codeBuf = 0;\\r\\n      this.codeSize = 0;\\r\\n      var bufferLength = this.bufferLength;\\r\\n      buffer = this.ensureBuffer(bufferLength + blockLen);\\r\\n      var end = bufferLength + blockLen;\\r\\n      this.bufferLength = end;\\r\\n      if (blockLen === 0) {\\r\\n        if (str.peekByte() === -1) {\\r\\n          this.eof = true;\\r\\n        }\\r\\n      } else {\\r\\n        for (var n = bufferLength; n < end; ++n) {\\r\\n          if ((b = str.getByte()) === -1) {\\r\\n            this.eof = true;\\r\\n            break;\\r\\n          }\\r\\n          buffer[n] = b;\\r\\n        }\\r\\n      }\\r\\n      return;\\r\\n    }\\r\\n    var litCodeTable;\\r\\n    var distCodeTable;\\r\\n    if (hdr === 1) {\\r\\n      litCodeTable = fixedLitCodeTab;\\r\\n      distCodeTable = fixedDistCodeTab;\\r\\n    } else if (hdr === 2) {\\r\\n      var numLitCodes = this.getBits(5) + 257;\\r\\n      var numDistCodes = this.getBits(5) + 1;\\r\\n      var numCodeLenCodes = this.getBits(4) + 4;\\r\\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\\r\\n      var i;\\r\\n      for (i = 0; i < numCodeLenCodes; ++i) {\\r\\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\\r\\n      }\\r\\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\\r\\n      len = 0;\\r\\n      i = 0;\\r\\n      var codes = numLitCodes + numDistCodes;\\r\\n      var codeLengths = new Uint8Array(codes);\\r\\n      var bitsLength, bitsOffset, what;\\r\\n      while (i < codes) {\\r\\n        var code = this.getCode(codeLenCodeTab);\\r\\n        if (code === 16) {\\r\\n          bitsLength = 2;\\r\\n          bitsOffset = 3;\\r\\n          what = len;\\r\\n        } else if (code === 17) {\\r\\n          bitsLength = 3;\\r\\n          bitsOffset = 3;\\r\\n          what = len = 0;\\r\\n        } else if (code === 18) {\\r\\n          bitsLength = 7;\\r\\n          bitsOffset = 11;\\r\\n          what = len = 0;\\r\\n        } else {\\r\\n          codeLengths[i++] = len = code;\\r\\n          continue;\\r\\n        }\\r\\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\\r\\n        while (repeatLength-- > 0) {\\r\\n          codeLengths[i++] = what;\\r\\n        }\\r\\n      }\\r\\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\\r\\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\\r\\n    } else {\\r\\n      throw new _util.FormatError('Unknown block type in flate stream');\\r\\n    }\\r\\n    buffer = this.buffer;\\r\\n    var limit = buffer ? buffer.length : 0;\\r\\n    var pos = this.bufferLength;\\r\\n    while (true) {\\r\\n      var code1 = this.getCode(litCodeTable);\\r\\n      if (code1 < 256) {\\r\\n        if (pos + 1 >= limit) {\\r\\n          buffer = this.ensureBuffer(pos + 1);\\r\\n          limit = buffer.length;\\r\\n        }\\r\\n        buffer[pos++] = code1;\\r\\n        continue;\\r\\n      }\\r\\n      if (code1 === 256) {\\r\\n        this.bufferLength = pos;\\r\\n        return;\\r\\n      }\\r\\n      code1 -= 257;\\r\\n      code1 = lengthDecode[code1];\\r\\n      var code2 = code1 >> 16;\\r\\n      if (code2 > 0) {\\r\\n        code2 = this.getBits(code2);\\r\\n      }\\r\\n      len = (code1 & 0xffff) + code2;\\r\\n      code1 = this.getCode(distCodeTable);\\r\\n      code1 = distDecode[code1];\\r\\n      code2 = code1 >> 16;\\r\\n      if (code2 > 0) {\\r\\n        code2 = this.getBits(code2);\\r\\n      }\\r\\n      var dist = (code1 & 0xffff) + code2;\\r\\n      if (pos + len >= limit) {\\r\\n        buffer = this.ensureBuffer(pos + len);\\r\\n        limit = buffer.length;\\r\\n      }\\r\\n      for (var k = 0; k < len; ++k, ++pos) {\\r\\n        buffer[pos] = buffer[pos - dist];\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return FlateStream;\\r\\n}();\\r\\nvar PredictorStream = function PredictorStreamClosure() {\\r\\n  function PredictorStream(str, maybeLength, params) {\\r\\n    if (!(0, _primitives.isDict)(params)) {\\r\\n      return str;\\r\\n    }\\r\\n    var predictor = this.predictor = params.get('Predictor') || 1;\\r\\n    if (predictor <= 1) {\\r\\n      return str;\\r\\n    }\\r\\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\\r\\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\\r\\n    }\\r\\n    if (predictor === 2) {\\r\\n      this.readBlock = this.readBlockTiff;\\r\\n    } else {\\r\\n      this.readBlock = this.readBlockPng;\\r\\n    }\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    var colors = this.colors = params.get('Colors') || 1;\\r\\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\\r\\n    var columns = this.columns = params.get('Columns') || 1;\\r\\n    this.pixBytes = colors * bits + 7 >> 3;\\r\\n    this.rowBytes = columns * colors * bits + 7 >> 3;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n    return this;\\r\\n  }\\r\\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\\r\\n    var rowBytes = this.rowBytes;\\r\\n    var bufferLength = this.bufferLength;\\r\\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\\r\\n    var bits = this.bits;\\r\\n    var colors = this.colors;\\r\\n    var rawBytes = this.str.getBytes(rowBytes);\\r\\n    this.eof = !rawBytes.length;\\r\\n    if (this.eof) {\\r\\n      return;\\r\\n    }\\r\\n    var inbuf = 0,\\r\\n        outbuf = 0;\\r\\n    var inbits = 0,\\r\\n        outbits = 0;\\r\\n    var pos = bufferLength;\\r\\n    var i;\\r\\n    if (bits === 1 && colors === 1) {\\r\\n      for (i = 0; i < rowBytes; ++i) {\\r\\n        var c = rawBytes[i] ^ inbuf;\\r\\n        c ^= c >> 1;\\r\\n        c ^= c >> 2;\\r\\n        c ^= c >> 4;\\r\\n        inbuf = (c & 1) << 7;\\r\\n        buffer[pos++] = c;\\r\\n      }\\r\\n    } else if (bits === 8) {\\r\\n      for (i = 0; i < colors; ++i) {\\r\\n        buffer[pos++] = rawBytes[i];\\r\\n      }\\r\\n      for (; i < rowBytes; ++i) {\\r\\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\\r\\n        pos++;\\r\\n      }\\r\\n    } else if (bits === 16) {\\r\\n      var bytesPerPixel = colors * 2;\\r\\n      for (i = 0; i < bytesPerPixel; ++i) {\\r\\n        buffer[pos++] = rawBytes[i];\\r\\n      }\\r\\n      for (; i < rowBytes; i += 2) {\\r\\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\\r\\n        buffer[pos++] = sum >> 8 & 0xFF;\\r\\n        buffer[pos++] = sum & 0xFF;\\r\\n      }\\r\\n    } else {\\r\\n      var compArray = new Uint8Array(colors + 1);\\r\\n      var bitMask = (1 << bits) - 1;\\r\\n      var j = 0,\\r\\n          k = bufferLength;\\r\\n      var columns = this.columns;\\r\\n      for (i = 0; i < columns; ++i) {\\r\\n        for (var kk = 0; kk < colors; ++kk) {\\r\\n          if (inbits < bits) {\\r\\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\\r\\n            inbits += 8;\\r\\n          }\\r\\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\\r\\n          inbits -= bits;\\r\\n          outbuf = outbuf << bits | compArray[kk];\\r\\n          outbits += bits;\\r\\n          if (outbits >= 8) {\\r\\n            buffer\";a.a+=\"[k++] = outbuf >> outbits - 8 & 0xFF;\\r\\n            outbits -= 8;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      if (outbits > 0) {\\r\\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\\r\\n      }\\r\\n    }\\r\\n    this.bufferLength += rowBytes;\\r\\n  };\\r\\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\\r\\n    var rowBytes = this.rowBytes;\\r\\n    var pixBytes = this.pixBytes;\\r\\n    var predictor = this.str.getByte();\\r\\n    var rawBytes = this.str.getBytes(rowBytes);\\r\\n    this.eof = !rawBytes.length;\\r\\n    if (this.eof) {\\r\\n      return;\\r\\n    }\\r\\n    var bufferLength = this.bufferLength;\\r\\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\\r\\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\\r\\n    if (prevRow.length === 0) {\\r\\n      prevRow = new Uint8Array(rowBytes);\\r\\n    }\\r\\n    var i,\\r\\n        j = bufferLength,\\r\\n        up,\\r\\n        c;\\r\\n    switch (predictor) {\\r\\n      case 0:\\r\\n        for (i = 0; i < rowBytes; ++i) {\\r\\n          buffer[j++] = rawBytes[i];\\r\\n        }\\r\\n        break;\\r\\n      case 1:\\r\\n        for (i = 0; i < pixBytes; ++i) {\\r\\n          buffer[j++] = rawBytes[i];\\r\\n        }\\r\\n        for (; i < rowBytes; ++i) {\\r\\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\\r\\n          j++;\\r\\n        }\\r\\n        break;\\r\\n      case 2:\\r\\n        for (i = 0; i < rowBytes; ++i) {\\r\\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\\r\\n        }\\r\\n        break;\\r\\n      case 3:\\r\\n        for (i = 0; i < pixBytes; ++i) {\\r\\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\\r\\n        }\\r\\n        for (; i < rowBytes; ++i) {\\r\\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\\r\\n          j++;\\r\\n        }\\r\\n        break;\\r\\n      case 4:\\r\\n        for (i = 0; i < pixBytes; ++i) {\\r\\n          up = prevRow[i];\\r\\n          c = rawBytes[i];\\r\\n          buffer[j++] = up + c;\\r\\n        }\\r\\n        for (; i < rowBytes; ++i) {\\r\\n          up = prevRow[i];\\r\\n          var upLeft = prevRow[i - pixBytes];\\r\\n          var left = buffer[j - pixBytes];\\r\\n          var p = left + up - upLeft;\\r\\n          var pa = p - left;\\r\\n          if (pa < 0) {\\r\\n            pa = -pa;\\r\\n          }\\r\\n          var pb = p - up;\\r\\n          if (pb < 0) {\\r\\n            pb = -pb;\\r\\n          }\\r\\n          var pc = p - upLeft;\\r\\n          if (pc < 0) {\\r\\n            pc = -pc;\\r\\n          }\\r\\n          c = rawBytes[i];\\r\\n          if (pa <= pb && pa <= pc) {\\r\\n            buffer[j++] = left + c;\\r\\n          } else if (pb <= pc) {\\r\\n            buffer[j++] = up + c;\\r\\n          } else {\\r\\n            buffer[j++] = upLeft + c;\\r\\n          }\\r\\n        }\\r\\n        break;\\r\\n      default:\\r\\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\\r\\n    }\\r\\n    this.bufferLength += rowBytes;\\r\\n  };\\r\\n  return PredictorStream;\\r\\n}();\\r\\nvar JpegStream = function JpegStreamClosure() {\\r\\n  function JpegStream(stream, maybeLength, dict, params) {\\r\\n    var ch;\\r\\n    while ((ch = stream.getByte()) !== -1) {\\r\\n      if (ch === 0xFF) {\\r\\n        stream.skip(-1);\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    this.stream = stream;\\r\\n    this.maybeLength = maybeLength;\\r\\n    this.dict = dict;\\r\\n    this.params = params;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  JpegStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\\r\\n    get: function JpegStream_bytes() {\\r\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\r\\n    },\\r\\n    configurable: true\\r\\n  });\\r\\n  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\\r\\n    if (this.bufferLength) {\\r\\n      return;\\r\\n    }\\r\\n    var jpegImage = new _jpg.JpegImage();\\r\\n    var decodeArr = this.dict.getArray('Decode', 'D');\\r\\n    if (this.forceRGB && Array.isArray(decodeArr)) {\\r\\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\\r\\n      var decodeArrLength = decodeArr.length;\\r\\n      var transform = new Int32Array(decodeArrLength);\\r\\n      var transformNeeded = false;\\r\\n      var maxValue = (1 << bitsPerComponent) - 1;\\r\\n      for (var i = 0; i < decodeArrLength; i += 2) {\\r\\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\\r\\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\\r\\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\\r\\n          transformNeeded = true;\\r\\n        }\\r\\n      }\\r\\n      if (transformNeeded) {\\r\\n        jpegImage.decodeTransform = transform;\\r\\n      }\\r\\n    }\\r\\n    if ((0, _primitives.isDict)(this.params)) {\\r\\n      var colorTransform = this.params.get('ColorTransform');\\r\\n      if (Number.isInteger(colorTransform)) {\\r\\n        jpegImage.colorTransform = colorTransform;\\r\\n      }\\r\\n    }\\r\\n    jpegImage.parse(this.bytes);\\r\\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\\r\\n    this.buffer = data;\\r\\n    this.bufferLength = data.length;\\r\\n    this.eof = true;\\r\\n  };\\r\\n  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\\r\\n    this.ensureBuffer();\\r\\n    return this.buffer;\\r\\n  };\\r\\n  JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\\r\\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\\r\\n  };\\r\\n  return JpegStream;\\r\\n}();\\r\\nvar JpxStream = function JpxStreamClosure() {\\r\\n  function JpxStream(stream, maybeLength, dict, params) {\\r\\n    this.stream = stream;\\r\\n    this.maybeLength = maybeLength;\\r\\n    this.dict = dict;\\r\\n    this.params = params;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  JpxStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\\r\\n    get: function JpxStream_bytes() {\\r\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\r\\n    },\\r\\n    configurable: true\\r\\n  });\\r\\n  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\\r\\n    if (this.bufferLength) {\\r\\n      return;\\r\\n    }\\r\\n    var jpxImage = new _jpx.JpxImage();\\r\\n    jpxImage.parse(this.bytes);\\r\\n    var width = jpxImage.width;\\r\\n    var height = jpxImage.height;\\r\\n    var componentsCount = jpxImage.componentsCount;\\r\\n    var tileCount = jpxImage.tiles.length;\\r\\n    if (tileCount === 1) {\\r\\n      this.buffer = jpxImage.tiles[0].items;\\r\\n    } else {\\r\\n      var data = new Uint8ClampedArray(width * height * componentsCount);\\r\\n      for (var k = 0; k < tileCount; k++) {\\r\\n        var tileComponents = jpxImage.tiles[k];\\r\\n        var tileWidth = tileComponents.width;\\r\\n        var tileHeight = tileComponents.height;\\r\\n        var tileLeft = tileComponents.left;\\r\\n        var tileTop = tileComponents.top;\\r\\n        var src = tileComponents.items;\\r\\n        var srcPosition = 0;\\r\\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\\r\\n        var imgRowSize = width * componentsCount;\\r\\n        var tileRowSize = tileWidth * componentsCount;\\r\\n        for (var j = 0; j < tileHeight; j++) {\\r\\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\\r\\n          data.set(rowBytes, dataPosition);\\r\\n          srcPosition += tileRowSize;\\r\\n          dataPosition += imgRowSize;\\r\\n        }\\r\\n      }\\r\\n      this.buffer = data;\\r\\n    }\\r\\n    this.bufferLength = this.buffer.length;\\r\\n    this.eof = true;\\r\\n  };\\r\\n  return JpxStream;\\r\\n}();\\r\\nvar DecryptStream = function DecryptStreamClosure() {\\r\\n  function DecryptStream(str, maybeLength, decrypt) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    this.decrypt = decrypt;\\r\\n    this.nextChunk = null;\\r\\n    this.initialized = false;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  var chunkSize = 512;\\r\\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\\r\\n    var chunk;\\r\\n    if (this.initialized) {\\r\\n      chunk = this.nextChunk;\\r\\n    } else {\\r\\n      chunk = this.str.getBytes(chunkSize);\\r\\n      this.initialized = true;\\r\\n    }\\r\\n    if (!chunk || chunk.length === 0) {\\r\\n      this.eof = true;\\r\\n      return;\\r\\n    }\\r\\n    this.nextChunk = this.str.getBytes(chunkSize);\\r\\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\\r\\n    var decrypt = this.decrypt;\\r\\n    chunk = decrypt(chunk, !hasMoreData);\\r\\n    var bufferLength = this.bufferLength;\\r\\n    var i,\\r\\n        n = chunk.length;\\r\\n    var buffer = this.ensureBuffer(bufferLength + n);\\r\\n    for (i = 0; i < n; i++) {\\r\\n      buffer[bufferLength++] = chunk[i];\\r\\n    }\\r\\n    this.bufferLength = bufferLength;\\r\\n  };\\r\\n  return DecryptStream;\\r\\n}();\\r\\nvar Ascii85Stream = function Ascii85StreamClosure() {\\r\\n  function Ascii85Stream(str, maybeLength) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    this.input = new Uint8Array(5);\\r\\n    if (maybeLength) {\\r\\n      maybeLength = 0.8 * maybeLength;\\r\\n    }\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\\r\\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\\r\\n    var TILDA_CHAR = 0x7E;\\r\\n    var Z_LOWER_CHAR = 0x7A;\\r\\n    var EOF = -1;\\r\\n    var str = this.str;\\r\\n    var c = str.getByte();\\r\\n    while ((0, _util.isSpace)(c)) {\\r\\n      c = str.getByte();\\r\\n    }\\r\\n    if (c === EOF || c === TILDA_CHAR) {\\r\\n      this.eof = true;\\r\\n      return;\\r\\n    }\\r\\n    var bufferLength = this.bufferLength,\\r\\n        buffer;\\r\\n    var i;\\r\\n    if (c === Z_LOWER_CHAR) {\\r\\n      buffer = this.ensureBuffer(bufferLength + 4);\\r\\n      for (i = 0; i < 4; ++i) {\\r\\n        buffer[bufferLength + i] = 0;\\r\\n      }\\r\\n      this.bufferLength += 4;\\r\\n    } else {\\r\\n      var input = this.input;\\r\\n      input[0] = c;\\r\\n      for (i = 1; i < 5; ++i) {\\r\\n        c = str.getByte();\\r\\n        while ((0, _util.isSpace)(c)) {\\r\\n          c = str.getByte();\\r\\n        }\\r\\n        input[i] = c;\\r\\n        if (c === EOF || c === TILDA_CHAR) {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      buffer = this.ensureBuffer(bufferLength + i - 1);\\r\\n      this.bufferLength += i - 1;\\r\\n      if (i < 5) {\\r\\n        for (; i < 5; ++i) {\\r\\n          input[i] = 0x21 + 84;\\r\\n        }\\r\\n        this.eof = true;\\r\\n      }\\r\\n      var t = 0;\\r\\n      for (i = 0; i < 5; ++i) {\\r\\n        t = t * 85 + (input[i] - 0x21);\\r\\n      }\\r\\n      for (i = 3; i >= 0; --i) {\\r\\n        buffer[bufferLength + i] = t & 0xFF;\\r\\n        t >>= 8;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return Ascii85Stream;\\r\\n}();\\r\\nvar AsciiHexStream = function AsciiHexStreamClosure() {\\r\\n  function AsciiHexStream(str, maybeLength) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    this.firstDigit = -1;\\r\\n    if (maybeLength) {\\r\\n      maybeLength = 0.5 * maybeLength;\\r\\n    }\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\\r\\n    var UPSTREAM_BLOCK_SIZE = 8000;\\r\\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\\r\\n    if (!bytes.length) {\\r\\n      this.eof = true;\\r\\n      return;\\r\\n    }\\r\\n    var maxDecodeLength = bytes.length + 1 >> 1;\\r\\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\\r\\n    var bufferLength = this.bufferLength;\\r\\n    var firstDigit = this.firstDigit;\\r\\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\\r\\n      var ch = bytes[i],\\r\\n          digit;\\r\\n      if (ch >= 0x30 && ch <= 0x39) {\\r\\n        digit = ch & 0x0F;\\r\\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\r\\n        digit = (ch & 0x0F) + 9;\\r\\n      } else if (ch === 0x3E) {\\r\\n        this.eof = true;\\r\\n        break;\\r\\n      } else {\\r\\n        continue;\\r\\n      }\\r\\n      if (firstDigit < 0) {\\r\\n        firstDigit = digit;\\r\\n      } else {\\r\\n        buffer[bufferLength++] = firstDigit << 4 | digit;\\r\\n        firstDigit = -1;\\r\\n      }\\r\\n    }\\r\\n    if (firstDigit >= 0 && this.eof) {\\r\\n      buffer[bufferLength++] = firstDigit << 4;\\r\\n      firstDigit = -1;\\r\\n    }\\r\\n    this.firstDigit = firstDigit;\\r\\n    this.bufferLength = bufferLength;\\r\\n  };\\r\\n  return AsciiHexStream;\\r\\n}();\\r\\nvar RunLengthStream = function RunLengthStreamClosure() {\\r\\n  function RunLengthStream(str, maybeLength) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\\r\\n    var repeatHeader = this.str.getBytes(2);\\r\\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\\r\\n      this.eof = true;\\r\\n      return;\\r\\n    }\\r\\n    var buffer;\\r\\n    var bufferLength = this.bufferLength;\\r\\n    var n = repeatHeader[0];\\r\\n    if (n < 128) {\\r\\n      buffer = this.ensureBuffer(bufferLength + n + 1);\\r\\n      buffer[bufferLength++] = repeatHeader[1];\\r\\n      if (n > 0) {\\r\\n        var source = this.str.getBytes(n);\\r\\n        buffer.set(source, bufferLength);\\r\\n        bufferLength += n;\\r\\n      }\\r\\n    } else {\\r\\n      n = 257 - n;\\r\\n      var b = repeatHeader[1];\\r\\n      buffer = this.ensureBuffer(bufferLength + n + 1);\\r\\n      for (var i = 0; i < n; i++) {\\r\\n        buffer[bufferLength++] = b;\\r\\n      }\\r\\n    }\\r\\n    this.bufferLength = bufferLength;\\r\\n  };\\r\\n  return RunLengthStream;\\r\\n}();\\r\\nvar LZWStream = function LZWStreamClosure() {\\r\\n  function LZWStream(str, maybeLength, earlyChange) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    this.cachedData = 0;\\r\\n    this.bitsCached = 0;\\r\\n    var maxLzwDictionarySize = 4096;\\r\\n    var lzwState = {\\r\\n      earlyChange: earlyChange,\\r\\n      codeLength: 9,\\r\\n      nextCode: 258,\\r\\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\\r\\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\\r\\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\\r\\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\\r\\n      currentSequenceLength: 0\\r\\n    };\\r\\n    for (var i = 0; i < 256; ++i) {\\r\\n      lzwState.dictionaryValues[i] = i;\\r\\n      lzwState.dictionaryLengths[i] = 1;\\r\\n    }\\r\\n    this.lzwState = lzwState;\\r\\n    DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\\r\\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\\r\\n    var bitsCached = this.bitsCached;\\r\\n    var cachedData = this.cachedData;\\r\\n    while (bitsCached < n) {\\r\\n      var c = this.str.getByte();\\r\\n      if (c === -1) {\\r\\n        this.eof = true;\\r\\n        return null;\\r\\n      }\\r\\n      cachedData = cachedData << 8 | c;\\r\\n      bitsCached += 8;\\r\\n    }\\r\\n    this.bitsCached = bitsCached -= n;\\r\\n    this.cachedData = cachedData;\\r\\n    this.lastCode = null;\\r\\n    return cachedData >>> bitsCached & (1 << n) - 1;\\r\\n  };\\r\\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\\r\\n    var blockSize = 512;\\r\\n    var estimatedDecodedSize = blockSize * 2,\\r\\n        decodedSizeDelta = blockSize;\\r\\n    var i, j, q;\\r\\n    var lzwState = this.lzwState;\\r\\n    if (!lzwState) {\\r\\n      return;\\r\\n    }\\r\\n    var earlyChange = lzwState.earlyChange;\\r\\n    var nextCode = lzwState.nextCode;\\r\\n    var dictionaryValues = lzwState.dictionaryValues;\\r\\n    var dictionaryLengths = lzwState.dictionaryLengths;\\r\\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\\r\\n    var codeLength = lzwState.codeLength;\\r\\n    var prevCode = lzwState.prevCode;\\r\\n    var currentSequence = lzwState.currentSequence;\\r\\n    var currentSequenceLength = lzwState.currentSequenceLength;\\r\\n    var decodedLength = 0;\\r\\n    var currentBufferLength = this.bufferLength;\\r\\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\r\\n    for (i = 0; i < blockSize; i++) {\\r\\n      var code = this.readBits(codeLength);\\r\\n      var hasPrev = currentSequenceLength > 0;\\r\\n      if (code < 256) {\\r\\n        currentSequence[0] = code;\\r\\n        currentSequenceLength = 1;\\r\\n      } else if (code >= 258) {\\r\\n        if (code < nextCode) {\\r\\n          currentSequenceLength = dictionaryLengths[code];\\r\\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\\r\\n            currentSequence[j] = dictionaryValues[q];\\r\\n            q = dictionaryPrevCodes[q];\\r\\n          }\\r\\n        } else {\\r\\n          currentSequence[currentSequenceLength++] = currentSequence[0];\\r\\n        }\\r\\n      } else if (code === 256) {\\r\\n        codeLength = 9;\\r\\n        nextCode = 258;\\r\\n        currentSequenceLength = 0;\\r\\n        continue;\\r\\n      } else {\\r\\n        this.eof = true;\\r\\n        delete this.lzwState;\\r\\n        break;\\r\\n      }\\r\\n      if (hasPrev) {\\r\\n        dictionaryPrevCodes[nextCode] = prevCode;\\r\\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\\r\";a.a+=\"\\n        dictionaryValues[nextCode] = currentSequence[0];\\r\\n        nextCode++;\\r\\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\\r\\n      }\\r\\n      prevCode = code;\\r\\n      decodedLength += currentSequenceLength;\\r\\n      if (estimatedDecodedSize < decodedLength) {\\r\\n        do {\\r\\n          estimatedDecodedSize += decodedSizeDelta;\\r\\n        } while (estimatedDecodedSize < decodedLength);\\r\\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\\r\\n      }\\r\\n      for (j = 0; j < currentSequenceLength; j++) {\\r\\n        buffer[currentBufferLength++] = currentSequence[j];\\r\\n      }\\r\\n    }\\r\\n    lzwState.nextCode = nextCode;\\r\\n    lzwState.codeLength = codeLength;\\r\\n    lzwState.prevCode = prevCode;\\r\\n    lzwState.currentSequenceLength = currentSequenceLength;\\r\\n    this.bufferLength = currentBufferLength;\\r\\n  };\\r\\n  return LZWStream;\\r\\n}();\\r\\nvar NullStream = function NullStreamClosure() {\\r\\n  function NullStream() {\\r\\n    Stream.call(this, new Uint8Array(0));\\r\\n  }\\r\\n  NullStream.prototype = Stream.prototype;\\r\\n  return NullStream;\\r\\n}();\\r\\nexports.Ascii85Stream = Ascii85Stream;\\r\\nexports.AsciiHexStream = AsciiHexStream;\\r\\nexports.DecryptStream = DecryptStream;\\r\\nexports.DecodeStream = DecodeStream;\\r\\nexports.FlateStream = FlateStream;\\r\\nexports.JpegStream = JpegStream;\\r\\nexports.JpxStream = JpxStream;\\r\\nexports.NullStream = NullStream;\\r\\nexports.PredictorStream = PredictorStream;\\r\\nexports.RunLengthStream = RunLengthStream;\\r\\nexports.Stream = Stream;\\r\\nexports.StreamsSequenceStream = StreamsSequenceStream;\\r\\nexports.StringStream = StringStream;\\r\\nexports.LZWStream = LZWStream;\\r\\n\\r\\n/***/ }),\\r\\n/* 6 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar core = module.exports = { version: '2.5.7' };\\r\\nif (typeof __e == 'number') __e = core;\\r\\n\\r\\n/***/ }),\\r\\n/* 7 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar core = __w_pdfjs_require__(6);\\r\\nvar hide = __w_pdfjs_require__(8);\\r\\nvar redefine = __w_pdfjs_require__(16);\\r\\nvar ctx = __w_pdfjs_require__(13);\\r\\nvar PROTOTYPE = 'prototype';\\r\\nvar $export = function $export(type, name, source) {\\r\\n  var IS_FORCED = type & $export.F;\\r\\n  var IS_GLOBAL = type & $export.G;\\r\\n  var IS_STATIC = type & $export.S;\\r\\n  var IS_PROTO = type & $export.P;\\r\\n  var IS_BIND = type & $export.B;\\r\\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\\r\\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\\r\\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\\r\\n  var key, own, out, exp;\\r\\n  if (IS_GLOBAL) source = name;\\r\\n  for (key in source) {\\r\\n    own = !IS_FORCED && target && target[key] !== undefined;\\r\\n    out = (own ? target : source)[key];\\r\\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\\r\\n    if (target) redefine(target, key, out, type & $export.U);\\r\\n    if (exports[key] != out) hide(exports, key, exp);\\r\\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\\r\\n  }\\r\\n};\\r\\nglobal.core = core;\\r\\n$export.F = 1;\\r\\n$export.G = 2;\\r\\n$export.S = 4;\\r\\n$export.P = 8;\\r\\n$export.B = 16;\\r\\n$export.W = 32;\\r\\n$export.U = 64;\\r\\n$export.R = 128;\\r\\nmodule.exports = $export;\\r\\n\\r\\n/***/ }),\\r\\n/* 8 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar dP = __w_pdfjs_require__(15);\\r\\nvar createDesc = __w_pdfjs_require__(31);\\r\\nmodule.exports = __w_pdfjs_require__(10) ? function (object, key, value) {\\r\\n  return dP.f(object, key, createDesc(1, value));\\r\\n} : function (object, key, value) {\\r\\n  object[key] = value;\\r\\n  return object;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 9 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nmodule.exports = function (it) {\\r\\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\\r\\n  return it;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 10 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = !__w_pdfjs_require__(11)(function () {\\r\\n  return Object.defineProperty({}, 'a', {\\r\\n    get: function get() {\\r\\n      return 7;\\r\\n    }\\r\\n  }).a != 7;\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 11 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (exec) {\\r\\n  try {\\r\\n    return !!exec();\\r\\n  } catch (e) {\\r\\n    return true;\\r\\n  }\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 12 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar hasOwnProperty = {}.hasOwnProperty;\\r\\nmodule.exports = function (it, key) {\\r\\n  return hasOwnProperty.call(it, key);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 13 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar aFunction = __w_pdfjs_require__(24);\\r\\nmodule.exports = function (fn, that, length) {\\r\\n  aFunction(fn);\\r\\n  if (that === undefined) return fn;\\r\\n  switch (length) {\\r\\n    case 1:\\r\\n      return function (a) {\\r\\n        return fn.call(that, a);\\r\\n      };\\r\\n    case 2:\\r\\n      return function (a, b) {\\r\\n        return fn.call(that, a, b);\\r\\n      };\\r\\n    case 3:\\r\\n      return function (a, b, c) {\\r\\n        return fn.call(that, a, b, c);\\r\\n      };\\r\\n  }\\r\\n  return function () {\\r\\n    return fn.apply(that, arguments);\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 14 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toInteger = __w_pdfjs_require__(19);\\r\\nvar min = Math.min;\\r\\nmodule.exports = function (it) {\\r\\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 15 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(51);\\r\\nvar toPrimitive = __w_pdfjs_require__(38);\\r\\nvar dP = Object.defineProperty;\\r\\nexports.f = __w_pdfjs_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\\r\\n  anObject(O);\\r\\n  P = toPrimitive(P, true);\\r\\n  anObject(Attributes);\\r\\n  if (IE8_DOM_DEFINE) try {\\r\\n    return dP(O, P, Attributes);\\r\\n  } catch (e) {}\\r\\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\\r\\n  if ('value' in Attributes) O[P] = Attributes.value;\\r\\n  return O;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 16 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar hide = __w_pdfjs_require__(8);\\r\\nvar has = __w_pdfjs_require__(12);\\r\\nvar SRC = __w_pdfjs_require__(18)('src');\\r\\nvar TO_STRING = 'toString';\\r\\nvar $toString = Function[TO_STRING];\\r\\nvar TPL = ('' + $toString).split(TO_STRING);\\r\\n__w_pdfjs_require__(6).inspectSource = function (it) {\\r\\n  return $toString.call(it);\\r\\n};\\r\\n(module.exports = function (O, key, val, safe) {\\r\\n  var isFunction = typeof val == 'function';\\r\\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\\r\\n  if (O[key] === val) return;\\r\\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\\r\\n  if (O === global) {\\r\\n    O[key] = val;\\r\\n  } else if (!safe) {\\r\\n    delete O[key];\\r\\n    hide(O, key, val);\\r\\n  } else if (O[key]) {\\r\\n    O[key] = val;\\r\\n  } else {\\r\\n    hide(O, key, val);\\r\\n  }\\r\\n})(Function.prototype, TO_STRING, function toString() {\\r\\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 17 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.DOMCanvasFactory = exports.DEFAULT_LINK_REL = exports.getDefaultSetting = exports.LinkTarget = exports.getFilenameFromUrl = exports.isValidUrl = exports.isExternalLinkTargetSet = exports.addLinkAttributes = exports.RenderingCancelledException = exports.CustomStyle = undefined;\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _global_scope = __w_pdfjs_require__(22);\\r\\n\\r\\nvar _global_scope2 = _interopRequireDefault(_global_scope);\\r\\n\\r\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar DEFAULT_LINK_REL = 'noopener noreferrer nofollow';\\r\\nvar SVG_NS = 'http://www.w3.org/2000/svg';\\r\\n\\r\\nvar DOMCanvasFactory = function () {\\r\\n  function DOMCanvasFactory() {\\r\\n    _classCallCheck(this, DOMCanvasFactory);\\r\\n  }\\r\\n\\r\\n  _createClass(DOMCanvasFactory, [{\\r\\n    key: 'create',\\r\\n    value: function create(width, height) {\\r\\n      if (width <= 0 || height <= 0) {\\r\\n        throw new Error('invalid canvas size');\\r\\n      }\\r\\n      var canvas = document.createElement('canvas');\\r\\n      var context = canvas.getContext('2d');\\r\\n      canvas.width = width;\\r\\n      canvas.height = height;\\r\\n      return {\\r\\n        canvas: canvas,\\r\\n        context: context\\r\\n      };\\r\\n    }\\r\\n  }, {\\r\\n    key: 'reset',\\r\\n    value: function reset(canvasAndContext, width, height) {\\r\\n      if (!canvasAndContext.canvas) {\\r\\n        throw new Error('canvas is not specified');\\r\\n      }\\r\\n      if (width <= 0 || height <= 0) {\\r\\n        throw new Error('invalid canvas size');\\r\\n      }\\r\\n      canvasAndContext.canvas.width = width;\\r\\n      canvasAndContext.canvas.height = height;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'destroy',\\r\\n    value: function destroy(canvasAndContext) {\\r\\n      if (!canvasAndContext.canvas) {\\r\\n        throw new Error('canvas is not specified');\\r\\n      }\\r\\n      canvasAndContext.canvas.width = 0;\\r\\n      canvasAndContext.canvas.height = 0;\\r\\n      canvasAndContext.canvas = null;\\r\\n      canvasAndContext.context = null;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return DOMCanvasFactory;\\r\\n}();\\r\\n\\r\\nvar DOMCMapReaderFactory = function () {\\r\\n  function DOMCMapReaderFactory(_ref) {\\r\\n    var _ref$baseUrl = _ref.baseUrl,\\r\\n        baseUrl = _ref$baseUrl === undefined ? null : _ref$baseUrl,\\r\\n        _ref$isCompressed = _ref.isCompressed,\\r\\n        isCompressed = _ref$isCompressed === undefined ? false : _ref$isCompressed;\\r\\n\\r\\n    _classCallCheck(this, DOMCMapReaderFactory);\\r\\n\\r\\n    this.baseUrl = baseUrl;\\r\\n    this.isCompressed = isCompressed;\\r\\n  }\\r\\n\\r\\n  _createClass(DOMCMapReaderFactory, [{\\r\\n    key: 'fetch',\\r\\n    value: function fetch(_ref2) {\\r\\n      var _this = this;\\r\\n\\r\\n      var name = _ref2.name;\\r\\n\\r\\n      if (!this.baseUrl) {\\r\\n        return Promise.reject(new Error('CMap baseUrl must be specified, ' + 'see \\\"PDFJS.cMapUrl\\\" (and also \\\"PDFJS.cMapPacked\\\").'));\\r\\n      }\\r\\n      if (!name) {\\r\\n        return Promise.reject(new Error('CMap name must be specified.'));\\r\\n      }\\r\\n      return new Promise(function (resolve, reject) {\\r\\n        var url = _this.baseUrl + name + (_this.isCompressed ? '.bcmap' : '');\\r\\n        var request = new XMLHttpRequest();\\r\\n        request.open('GET', url, true);\\r\\n        if (_this.isCompressed) {\\r\\n          request.responseType = 'arraybuffer';\\r\\n        }\\r\\n        request.onreadystatechange = function () {\\r\\n          if (request.readyState !== XMLHttpRequest.DONE) {\\r\\n            return;\\r\\n          }\\r\\n          if (request.status === 200 || request.status === 0) {\\r\\n            var data = void 0;\\r\\n            if (_this.isCompressed && request.response) {\\r\\n              data = new Uint8Array(request.response);\\r\\n            } else if (!_this.isCompressed && request.responseText) {\\r\\n              data = (0, _util.stringToBytes)(request.responseText);\\r\\n            }\\r\\n            if (data) {\\r\\n              resolve({\\r\\n                cMapData: data,\\r\\n                compressionType: _this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE\\r\\n              });\\r\\n              return;\\r\\n            }\\r\\n          }\\r\\n          reject(new Error('Unable to load ' + (_this.isCompressed ? 'binary ' : '') + 'CMap at: ' + url));\\r\\n        };\\r\\n        request.send(null);\\r\\n      });\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return DOMCMapReaderFactory;\\r\\n}();\\r\\n\\r\\nvar DOMSVGFactory = function () {\\r\\n  function DOMSVGFactory() {\\r\\n    _classCallCheck(this, DOMSVGFactory);\\r\\n  }\\r\\n\\r\\n  _createClass(DOMSVGFactory, [{\\r\\n    key: 'create',\\r\\n    value: function create(width, height) {\\r\\n      (0, _util.assert)(width > 0 && height > 0, 'Invalid SVG dimensions');\\r\\n      var svg = document.createElementNS(SVG_NS, 'svg:svg');\\r\\n      svg.setAttribute('version', '1.1');\\r\\n      svg.setAttribute('width', width + 'px');\\r\\n      svg.setAttribute('height', height + 'px');\\r\\n      svg.setAttribute('preserveAspectRatio', 'none');\\r\\n      svg.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\\r\\n      return svg;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'createElement',\\r\\n    value: function createElement(type) {\\r\\n      (0, _util.assert)(typeof type === 'string', 'Invalid SVG element type');\\r\\n      return document.createElementNS(SVG_NS, type);\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return DOMSVGFactory;\\r\\n}();\\r\\n\\r\\nvar CustomStyle = function CustomStyleClosure() {\\r\\n  var prefixes = ['ms', 'Moz', 'Webkit', 'O'];\\r\\n  var _cache = Object.create(null);\\r\\n  function CustomStyle() {}\\r\\n  CustomStyle.getProp = function get(propName, element) {\\r\\n    if (arguments.length === 1 && typeof _cache[propName] === 'string') {\\r\\n      return _cache[propName];\\r\\n    }\\r\\n    element = element || document.documentElement;\\r\\n    var style = element.style,\\r\\n        prefixed,\\r\\n        uPropName;\\r\\n    if (typeof style[propName] === 'string') {\\r\\n      return _cache[propName] = propName;\\r\\n    }\\r\\n    uPropName = propName.charAt(0).toUpperCase() + propName.slice(1);\\r\\n    for (var i = 0, l = prefixes.length; i < l; i++) {\\r\\n      prefixed = prefixes[i] + uPropName;\\r\\n      if (typeof style[prefixed] === 'string') {\\r\\n        return _cache[propName] = prefixed;\\r\\n      }\\r\\n    }\\r\\n    return _cache[propName] = 'undefined';\\r\\n  };\\r\\n  CustomStyle.setProp = function set(propName, element, str) {\\r\\n    var prop = this.getProp(propName);\\r\\n    if (prop !== 'undefined') {\\r\\n      element.style[prop] = str;\\r\\n    }\\r\\n  };\\r\\n  return CustomStyle;\\r\\n}();\\r\\nvar RenderingCancelledException = function RenderingCancelledException() {\\r\\n  function RenderingCancelledException(msg, type) {\\r\\n    this.message = msg;\\r\\n    this.type = type;\\r\\n  }\\r\\n  RenderingCancelledException.prototype = new Error();\\r\\n  RenderingCancelledException.prototype.name = 'RenderingCancelledException';\\r\\n  RenderingCancelledException.constructor = RenderingCancelledException;\\r\\n  return RenderingCancelledException;\\r\\n}();\\r\\nvar LinkTarget = {\\r\\n  NONE: 0,\\r\\n  SELF: 1,\\r\\n  BLANK: 2,\\r\\n  PARENT: 3,\\r\\n  TOP: 4\\r\\n};\\r\\nvar LinkTargetStringMap = ['', '_self', '_blank', '_parent', '_top'];\\r\\nfunction addLinkAttributes(link, params) {\\r\\n  var url = params && params.url;\\r\\n  link.href = link.title = url ? (0, _util.removeNullCharacters)(url) : '';\\r\\n  if (url) {\\r\\n    var target = params.target;\\r\\n    if (typeof target === 'undefined') {\\r\\n      target = getDefaultSetting('externalLinkTarget');\\r\\n    }\\r\\n    link.target = LinkTargetStringMap[target];\\r\\n    var rel = params.rel;\\r\\n    if (typeof rel === 'undefined') {\\r\\n      rel = getDefaultSetting('externalLinkRel');\\r\\n    }\\r\\n    link.rel = rel;\\r\\n  }\\r\\n}\\r\\nfunction getFilenameFromUrl(url) {\\r\\n  var anchor = url.indexOf('#');\\r\\n  var query = url.indexOf('?');\\r\\n  var end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\\r\\n  return url.substring(url.lastIndexOf('/', end) + 1, end);\\r\\n}\\r\\nfunction getDefaultSetting(id) {\\r\\n  var globalSettings = _global_scope2.default.PDFJS;\\r\\n  switch (id) {\\r\\n    case 'pdfBug':\\r\\n      return globalSettings ? globalSettings.pdfBug : false;\\r\\n    case 'disableAutoFetch':\\r\\n      return globalSettings ? globalSettings.disableAutoFetch : false;\\r\\n    case 'disableStream':\\r\\n      return globalSettings ? globalSettings.disableStream : false;\\r\\n    case 'disableRange':\\r\\n      return globalSettings ? globalSettings.disableRange : false;\\r\\n    case \";a.a+=\"'disableFontFace':\\r\\n      return globalSettings ? globalSettings.disableFontFace : false;\\r\\n    case 'disableCreateObjectURL':\\r\\n      return globalSettings ? globalSettings.disableCreateObjectURL : false;\\r\\n    case 'disableWebGL':\\r\\n      return globalSettings ? globalSettings.disableWebGL : true;\\r\\n    case 'cMapUrl':\\r\\n      return globalSettings ? globalSettings.cMapUrl : null;\\r\\n    case 'cMapPacked':\\r\\n      return globalSettings ? globalSettings.cMapPacked : false;\\r\\n    case 'postMessageTransfers':\\r\\n      return globalSettings ? globalSettings.postMessageTransfers : true;\\r\\n    case 'workerPort':\\r\\n      return globalSettings ? globalSettings.workerPort : null;\\r\\n    case 'workerSrc':\\r\\n      return globalSettings ? globalSettings.workerSrc : null;\\r\\n    case 'disableWorker':\\r\\n      return globalSettings ? globalSettings.disableWorker : false;\\r\\n    case 'maxImageSize':\\r\\n      return globalSettings ? globalSettings.maxImageSize : -1;\\r\\n    case 'imageResourcesPath':\\r\\n      return globalSettings ? globalSettings.imageResourcesPath : '';\\r\\n    case 'isEvalSupported':\\r\\n      return globalSettings ? globalSettings.isEvalSupported : true;\\r\\n    case 'externalLinkTarget':\\r\\n      if (!globalSettings) {\\r\\n        return LinkTarget.NONE;\\r\\n      }\\r\\n      switch (globalSettings.externalLinkTarget) {\\r\\n        case LinkTarget.NONE:\\r\\n        case LinkTarget.SELF:\\r\\n        case LinkTarget.BLANK:\\r\\n        case LinkTarget.PARENT:\\r\\n        case LinkTarget.TOP:\\r\\n          return globalSettings.externalLinkTarget;\\r\\n      }\\r\\n      (0, _util.warn)('PDFJS.externalLinkTarget is invalid: ' + globalSettings.externalLinkTarget);\\r\\n      globalSettings.externalLinkTarget = LinkTarget.NONE;\\r\\n      return LinkTarget.NONE;\\r\\n    case 'externalLinkRel':\\r\\n      return globalSettings ? globalSettings.externalLinkRel : DEFAULT_LINK_REL;\\r\\n    case 'enableStats':\\r\\n      return !!(globalSettings && globalSettings.enableStats);\\r\\n    case 'pdfjsNext':\\r\\n      return !!(globalSettings && globalSettings.pdfjsNext);\\r\\n    default:\\r\\n      throw new Error('Unknown default setting: ' + id);\\r\\n  }\\r\\n}\\r\\nfunction isExternalLinkTargetSet() {\\r\\n  var externalLinkTarget = getDefaultSetting('externalLinkTarget');\\r\\n  switch (externalLinkTarget) {\\r\\n    case LinkTarget.NONE:\\r\\n      return false;\\r\\n    case LinkTarget.SELF:\\r\\n    case LinkTarget.BLANK:\\r\\n    case LinkTarget.PARENT:\\r\\n    case LinkTarget.TOP:\\r\\n      return true;\\r\\n  }\\r\\n}\\r\\nfunction isValidUrl(url, allowRelative) {\\r\\n  (0, _util.deprecated)('isValidUrl(), please use createValidAbsoluteUrl() instead.');\\r\\n  var baseUrl = allowRelative ? 'http://example.com' : null;\\r\\n  return (0, _util.createValidAbsoluteUrl)(url, baseUrl) !== null;\\r\\n}\\r\\nexports.CustomStyle = CustomStyle;\\r\\nexports.RenderingCancelledException = RenderingCancelledException;\\r\\nexports.addLinkAttributes = addLinkAttributes;\\r\\nexports.isExternalLinkTargetSet = isExternalLinkTargetSet;\\r\\nexports.isValidUrl = isValidUrl;\\r\\nexports.getFilenameFromUrl = getFilenameFromUrl;\\r\\nexports.LinkTarget = LinkTarget;\\r\\nexports.getDefaultSetting = getDefaultSetting;\\r\\nexports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\\r\\nexports.DOMCanvasFactory = DOMCanvasFactory;\\r\\nexports.DOMCMapReaderFactory = DOMCMapReaderFactory;\\r\\nexports.DOMSVGFactory = DOMSVGFactory;\\r\\n\\r\\n/***/ }),\\r\\n/* 18 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar id = 0;\\r\\nvar px = Math.random();\\r\\nmodule.exports = function (key) {\\r\\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 19 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar ceil = Math.ceil;\\r\\nvar floor = Math.floor;\\r\\nmodule.exports = function (it) {\\r\\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 20 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar defined = __w_pdfjs_require__(40);\\r\\nmodule.exports = function (it) {\\r\\n  return Object(defined(it));\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 21 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = {};\\r\\n\\r\\n/***/ }),\\r\\n/* 22 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\\r\\n\\r\\n/***/ }),\\r\\n/* 23 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = false;\\r\\n\\r\\n/***/ }),\\r\\n/* 24 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (it) {\\r\\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\\r\\n  return it;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 25 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar redefine = __w_pdfjs_require__(16);\\r\\nmodule.exports = function (target, src, safe) {\\r\\n  for (var key in src) {\\r\\n    redefine(target, key, src[key], safe);\\r\\n  }return target;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 26 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (it, Constructor, name, forbiddenField) {\\r\\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\\r\\n    throw TypeError(name + ': incorrect invocation!');\\r\\n  }\\r\\n  return it;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 27 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toString = {}.toString;\\r\\nmodule.exports = function (it) {\\r\\n  return toString.call(it).slice(8, -1);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 28 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar def = __w_pdfjs_require__(15).f;\\r\\nvar has = __w_pdfjs_require__(12);\\r\\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\\r\\nmodule.exports = function (it, tag, stat) {\\r\\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\\r\\n    configurable: true,\\r\\n    value: tag\\r\\n  });\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 29 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.ColorSpace = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar ColorSpace = function ColorSpaceClosure() {\\r\\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\\r\\n    var COMPONENTS = 3;\\r\\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\\r\\n    var xRatio = w1 / w2;\\r\\n    var yRatio = h1 / h2;\\r\\n    var i,\\r\\n        j,\\r\\n        py,\\r\\n        newIndex = 0,\\r\\n        oldIndex;\\r\\n    var xScaled = new Uint16Array(w2);\\r\\n    var w1Scanline = w1 * COMPONENTS;\\r\\n    for (i = 0; i < w2; i++) {\\r\\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\\r\\n    }\\r\\n    for (i = 0; i < h2; i++) {\\r\\n      py = Math.floor(i * yRatio) * w1Scanline;\\r\\n      for (j = 0; j < w2; j++) {\\r\\n        oldIndex = py + xScaled[j];\\r\\n        dest[newIndex++] = src[oldIndex++];\\r\\n        dest[newIndex++] = src[oldIndex++];\\r\\n        dest[newIndex++] = src[oldIndex++];\\r\\n        newIndex += alpha01;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function ColorSpace() {\\r\\n    throw new Error('should not call ColorSpace constructor');\\r\\n  }\\r\\n  ColorSpace.prototype = {\\r\\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\\r\\n      var rgb = new Uint8Array(3);\\r\\n      this.getRgbItem(src, srcOffset, rgb, 0);\\r\\n      return rgb;\\r\\n    },\\r\\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      throw new Error('Should not call ColorSpace.getRgbItem');\\r\\n    },\\r\\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      throw new Error('Should not call ColorSpace.getRgbBuffer');\\r\\n    },\\r\\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\\r\\n      throw new Error('Should not call ColorSpace.getOutputLength');\\r\\n    },\\r\\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\\r\\n      return false;\\r\\n    },\\r\\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\\r\\n      var count = originalWidth * originalHeight;\\r\\n      var rgbBuf = null;\\r\\n      var numComponentColors = 1 << bpc;\\r\\n      var needsResizing = originalHeight !== height || originalWidth !== width;\\r\\n      var i, ii;\\r\\n      if (this.isPassthrough(bpc)) {\\r\\n        rgbBuf = comps;\\r\\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\\r\\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\\r\\n        var key;\\r\\n        for (i = 0; i < numComponentColors; i++) {\\r\\n          allColors[i] = i;\\r\\n        }\\r\\n        var colorMap = new Uint8Array(numComponentColors * 3);\\r\\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\\r\\n        var destPos, rgbPos;\\r\\n        if (!needsResizing) {\\r\\n          destPos = 0;\\r\\n          for (i = 0; i < count; ++i) {\\r\\n            key = comps[i] * 3;\\r\\n            dest[destPos++] = colorMap[key];\\r\\n            dest[destPos++] = colorMap[key + 1];\\r\\n            dest[destPos++] = colorMap[key + 2];\\r\\n            destPos += alpha01;\\r\\n          }\\r\\n        } else {\\r\\n          rgbBuf = new Uint8Array(count * 3);\\r\\n          rgbPos = 0;\\r\\n          for (i = 0; i < count; ++i) {\\r\\n            key = comps[i] * 3;\\r\\n            rgbBuf[rgbPos++] = colorMap[key];\\r\\n            rgbBuf[rgbPos++] = colorMap[key + 1];\\r\\n            rgbBuf[rgbPos++] = colorMap[key + 2];\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        if (!needsResizing) {\\r\\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\\r\\n        } else {\\r\\n          rgbBuf = new Uint8Array(count * 3);\\r\\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\\r\\n        }\\r\\n      }\\r\\n      if (rgbBuf) {\\r\\n        if (needsResizing) {\\r\\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\\r\\n        } else {\\r\\n          rgbPos = 0;\\r\\n          destPos = 0;\\r\\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\\r\\n            dest[destPos++] = rgbBuf[rgbPos++];\\r\\n            dest[destPos++] = rgbBuf[rgbPos++];\\r\\n            dest[destPos++] = rgbBuf[rgbPos++];\\r\\n            destPos += alpha01;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\\r\\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\\r\\n    return ColorSpace.fromIR(IR);\\r\\n  };\\r\\n  ColorSpace.fromIR = function (IR) {\\r\\n    var name = Array.isArray(IR) ? IR[0] : IR;\\r\\n    var whitePoint, blackPoint, gamma;\\r\\n    switch (name) {\\r\\n      case 'DeviceGrayCS':\\r\\n        return this.singletons.gray;\\r\\n      case 'DeviceRgbCS':\\r\\n        return this.singletons.rgb;\\r\\n      case 'DeviceCmykCS':\\r\\n        return this.singletons.cmyk;\\r\\n      case 'CalGrayCS':\\r\\n        whitePoint = IR[1];\\r\\n        blackPoint = IR[2];\\r\\n        gamma = IR[3];\\r\\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\\r\\n      case 'CalRGBCS':\\r\\n        whitePoint = IR[1];\\r\\n        blackPoint = IR[2];\\r\\n        gamma = IR[3];\\r\\n        var matrix = IR[4];\\r\\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\\r\\n      case 'PatternCS':\\r\\n        var basePatternCS = IR[1];\\r\\n        if (basePatternCS) {\\r\\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\\r\\n        }\\r\\n        return new PatternCS(basePatternCS);\\r\\n      case 'IndexedCS':\\r\\n        var baseIndexedCS = IR[1];\\r\\n        var hiVal = IR[2];\\r\\n        var lookup = IR[3];\\r\\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\\r\\n      case 'AlternateCS':\\r\\n        var numComps = IR[1];\\r\\n        var alt = IR[2];\\r\\n        var tintFn = IR[3];\\r\\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\\r\\n      case 'LabCS':\\r\\n        whitePoint = IR[1];\\r\\n        blackPoint = IR[2];\\r\\n        var range = IR[3];\\r\\n        return new LabCS(whitePoint, blackPoint, range);\\r\\n      default:\\r\\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\\r\\n    }\\r\\n  };\\r\\n  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\\r\\n    if ((0, _primitives.isName)(cs)) {\\r\\n      var colorSpaces = res.get('ColorSpace');\\r\\n      if ((0, _primitives.isDict)(colorSpaces)) {\\r\\n        var refcs = colorSpaces.get(cs.name);\\r\\n        if (refcs) {\\r\\n          cs = refcs;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    cs = xref.fetchIfRef(cs);\\r\\n    if ((0, _primitives.isName)(cs)) {\\r\\n      switch (cs.name) {\\r\\n        case 'DeviceGray':\\r\\n        case 'G':\\r\\n          return 'DeviceGrayCS';\\r\\n        case 'DeviceRGB':\\r\\n        case 'RGB':\\r\\n          return 'DeviceRgbCS';\\r\\n        case 'DeviceCMYK':\\r\\n        case 'CMYK':\\r\\n          return 'DeviceCmykCS';\\r\\n        case 'Pattern':\\r\\n          return ['PatternCS', null];\\r\\n        default:\\r\\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\\r\\n      }\\r\\n    }\\r\\n    if (Array.isArray(cs)) {\\r\\n      var mode = xref.fetchIfRef(cs[0]).name;\\r\\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\\r\\n      switch (mode) {\\r\\n        case 'DeviceGray':\\r\\n        case 'G':\\r\\n          return 'DeviceGrayCS';\\r\\n        case 'DeviceRGB':\\r\\n        case 'RGB':\\r\\n          return 'DeviceRgbCS';\\r\\n        case 'DeviceCMYK':\\r\\n        case 'CMYK':\\r\\n          return 'DeviceCmykCS';\\r\\n        case 'CalGray':\\r\\n          params = xref.fetchIfRef(cs[1]);\\r\\n          whitePoint = params.getArray('WhitePoint');\\r\\n          blackPoint = params.getArray('BlackPoint');\\r\\n          gamma = params.get('Gamma');\\r\\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\\r\\n        case 'CalRGB':\\r\\n          params = xref.fetchIfRef(cs[1]);\\r\\n          whitePoint = params.getArray('WhitePoint');\\r\\n          blackPoint = params.getArray('BlackPoint');\\r\\n          gamma = params.getArray('Gamma');\\r\\n          var matrix = params.getArray('Matrix');\\r\\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\\r\\n        case 'ICCBased':\\r\\n          var stream = xref.fetchIfRef(cs[1]);\\r\\n          var dict = stream.dict;\\r\\n          numComps = dict.get('N');\\r\\n          alt = dict.get('Alternate');\\r\\n          if (alt) {\\r\\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\\r\\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\\r\\n            if (altCS.numComps === numComps) {\\r\\n              return altIR;\\r\\n            }\\r\\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\\r\\n          }\\r\\n          if (numComps === 1) {\\r\\n            return 'DeviceGrayCS';\\r\\n          } else if (numComps === 3) {\\r\\n            return 'DeviceRgbCS';\\r\\n          } else if (numComps === 4) {\\r\\n            return 'DeviceCmykCS';\\r\\n          }\\r\\n          break;\\r\\n        case 'Pattern':\\r\\n          var basePatternCS = cs[1] || null;\\r\\n          if (basePatternCS) {\\r\\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\\r\\n          }\\r\\n          return ['PatternCS', basePatternCS];\\r\\n        case 'Indexed':\\r\\n        case 'I':\\r\\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\\r\\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\\r\\n          var lookup = xref.fetchIfRef(cs[3]);\\r\\n          if ((0, _primitives.isStream)(lookup)) {\\r\\n            lookup = lookup.getBytes();\\r\\n          }\\r\\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\\r\\n        case 'Separation':\\r\\n        case 'DeviceN':\\r\\n          var name = xref.fetchIfRef(cs[1]);\\r\\n          numComps = Array.isArray(name) ? name.length : 1;\\r\\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\\r\\n          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\\r\\n          return ['AlternateCS', numComps, alt, tintFn];\\r\\n        case 'Lab':\\r\\n          params = xref.fetchIfRef(cs[1]);\\r\\n          whitePoint = params.getArray('WhitePoint');\\r\\n          blackPoint = params.getArray('BlackPoint');\\r\\n          var range = params.getArray('Range');\\r\\n          return ['LabCS', whitePoint, blackPoint, range];\\r\\n        default:\\r\\n          throw new _util.FormatError('unimplemented color space object \\\"' + mode + '\\\"');\\r\\n      }\\r\\n    }\\r\\n    throw new _util.FormatError('unrecognized color space object: \\\"' + cs + '\";a.a+=\"\\\"');\\r\\n  };\\r\\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\\r\\n    if (!Array.isArray(decode)) {\\r\\n      return true;\\r\\n    }\\r\\n    if (n * 2 !== decode.length) {\\r\\n      (0, _util.warn)('The decode map is not the correct length');\\r\\n      return true;\\r\\n    }\\r\\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\\r\\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\\r\\n        return false;\\r\\n      }\\r\\n    }\\r\\n    return true;\\r\\n  };\\r\\n  ColorSpace.singletons = {\\r\\n    get gray() {\\r\\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\\r\\n    },\\r\\n    get rgb() {\\r\\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\\r\\n    },\\r\\n    get cmyk() {\\r\\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\\r\\n    }\\r\\n  };\\r\\n  return ColorSpace;\\r\\n}();\\r\\nvar AlternateCS = function AlternateCSClosure() {\\r\\n  function AlternateCS(numComps, base, tintFn) {\\r\\n    this.name = 'Alternate';\\r\\n    this.numComps = numComps;\\r\\n    this.defaultColor = new Float32Array(numComps);\\r\\n    for (var i = 0; i < numComps; ++i) {\\r\\n      this.defaultColor[i] = 1;\\r\\n    }\\r\\n    this.base = base;\\r\\n    this.tintFn = tintFn;\\r\\n    this.tmpBuf = new Float32Array(base.numComps);\\r\\n  }\\r\\n  AlternateCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      var tmpBuf = this.tmpBuf;\\r\\n      this.tintFn(src, srcOffset, tmpBuf, 0);\\r\\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\\r\\n    },\\r\\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var tintFn = this.tintFn;\\r\\n      var base = this.base;\\r\\n      var scale = 1 / ((1 << bits) - 1);\\r\\n      var baseNumComps = base.numComps;\\r\\n      var usesZeroToOneRange = base.usesZeroToOneRange;\\r\\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\\r\\n      var pos = isPassthrough ? destOffset : 0;\\r\\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\\r\\n      var numComps = this.numComps;\\r\\n      var scaled = new Float32Array(numComps);\\r\\n      var tinted = new Float32Array(baseNumComps);\\r\\n      var i, j;\\r\\n      for (i = 0; i < count; i++) {\\r\\n        for (j = 0; j < numComps; j++) {\\r\\n          scaled[j] = src[srcOffset++] * scale;\\r\\n        }\\r\\n        tintFn(scaled, 0, tinted, 0);\\r\\n        if (usesZeroToOneRange) {\\r\\n          for (j = 0; j < baseNumComps; j++) {\\r\\n            baseBuf[pos++] = tinted[j] * 255;\\r\\n          }\\r\\n        } else {\\r\\n          base.getRgbItem(tinted, 0, baseBuf, pos);\\r\\n          pos += baseNumComps;\\r\\n        }\\r\\n      }\\r\\n      if (!isPassthrough) {\\r\\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\\r\\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\\r\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return AlternateCS;\\r\\n}();\\r\\nvar PatternCS = function PatternCSClosure() {\\r\\n  function PatternCS(baseCS) {\\r\\n    this.name = 'Pattern';\\r\\n    this.base = baseCS;\\r\\n  }\\r\\n  PatternCS.prototype = {};\\r\\n  return PatternCS;\\r\\n}();\\r\\nvar IndexedCS = function IndexedCSClosure() {\\r\\n  function IndexedCS(base, highVal, lookup) {\\r\\n    this.name = 'Indexed';\\r\\n    this.numComps = 1;\\r\\n    this.defaultColor = new Uint8Array(this.numComps);\\r\\n    this.base = base;\\r\\n    this.highVal = highVal;\\r\\n    var baseNumComps = base.numComps;\\r\\n    var length = baseNumComps * highVal;\\r\\n    if ((0, _primitives.isStream)(lookup)) {\\r\\n      this.lookup = new Uint8Array(length);\\r\\n      var bytes = lookup.getBytes(length);\\r\\n      this.lookup.set(bytes);\\r\\n    } else if ((0, _util.isString)(lookup)) {\\r\\n      this.lookup = new Uint8Array(length);\\r\\n      for (var i = 0; i < length; ++i) {\\r\\n        this.lookup[i] = lookup.charCodeAt(i);\\r\\n      }\\r\\n    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\\r\\n      this.lookup = lookup;\\r\\n    } else {\\r\\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\\r\\n    }\\r\\n  }\\r\\n  IndexedCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      var numComps = this.base.numComps;\\r\\n      var start = src[srcOffset] * numComps;\\r\\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\\r\\n    },\\r\\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var base = this.base;\\r\\n      var numComps = base.numComps;\\r\\n      var outputDelta = base.getOutputLength(numComps, alpha01);\\r\\n      var lookup = this.lookup;\\r\\n      for (var i = 0; i < count; ++i) {\\r\\n        var lookupPos = src[srcOffset++] * numComps;\\r\\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\\r\\n        destOffset += outputDelta;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\\r\\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\\r\\n      return true;\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return IndexedCS;\\r\\n}();\\r\\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\\r\\n  function DeviceGrayCS() {\\r\\n    this.name = 'DeviceGray';\\r\\n    this.numComps = 1;\\r\\n    this.defaultColor = new Float32Array(this.numComps);\\r\\n  }\\r\\n  DeviceGrayCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      var c = src[srcOffset] * 255 | 0;\\r\\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\\r\\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\\r\\n    },\\r\\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var scale = 255 / ((1 << bits) - 1);\\r\\n      var j = srcOffset,\\r\\n          q = destOffset;\\r\\n      for (var i = 0; i < count; ++i) {\\r\\n        var c = scale * src[j++] | 0;\\r\\n        dest[q++] = c;\\r\\n        dest[q++] = c;\\r\\n        dest[q++] = c;\\r\\n        q += alpha01;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\\r\\n      return inputLength * (3 + alpha01);\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\\r\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return DeviceGrayCS;\\r\\n}();\\r\\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\\r\\n  function DeviceRgbCS() {\\r\\n    this.name = 'DeviceRGB';\\r\\n    this.numComps = 3;\\r\\n    this.defaultColor = new Float32Array(this.numComps);\\r\\n  }\\r\\n  DeviceRgbCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      var r = src[srcOffset] * 255 | 0;\\r\\n      var g = src[srcOffset + 1] * 255 | 0;\\r\\n      var b = src[srcOffset + 2] * 255 | 0;\\r\\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\\r\\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\\r\\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\\r\\n    },\\r\\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      if (bits === 8 && alpha01 === 0) {\\r\\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\\r\\n        return;\\r\\n      }\\r\\n      var scale = 255 / ((1 << bits) - 1);\\r\\n      var j = srcOffset,\\r\\n          q = destOffset;\\r\\n      for (var i = 0; i < count; ++i) {\\r\\n        dest[q++] = scale * src[j++] | 0;\\r\\n        dest[q++] = scale * src[j++] | 0;\\r\\n        dest[q++] = scale * src[j++] | 0;\\r\\n        q += alpha01;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\\r\\n      return inputLength * (3 + alpha01) / 3 | 0;\\r\\n    },\\r\\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\\r\\n      return bits === 8;\\r\\n    },\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\\r\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return DeviceRgbCS;\\r\\n}();\\r\\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\\r\\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\\r\\n    var c = src[srcOffset + 0] * srcScale;\\r\\n    var m = src[srcOffset + 1] * srcScale;\\r\\n    var y = src[srcOffset + 2] * srcScale;\\r\\n    var k = src[srcOffset + 3] * srcScale;\\r\\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\\r\\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\\r\\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\\r\\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\\r\\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\\r\\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\\r\\n  }\\r\\n  function DeviceCmykCS() {\\r\\n    this.name = 'DeviceCMYK';\\r\\n    this.numComps = 4;\\r\\n    this.defaultColor = new Float32Array(this.numComps);\\r\\n    this.defaultColor[3] = 1;\\r\\n  }\\r\\n  DeviceCmykCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\\r\\n    },\\r\\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var scale = 1 / ((1 << bits) - 1);\\r\\n      for (var i = 0; i < count; i++) {\\r\\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\\r\\n        srcOffset += 4;\\r\\n        destOffset += 3 + alpha01;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\\r\\n      return inputLength / 4 * (3 + alpha01) | 0;\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\\r\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return DeviceCmykCS;\\r\\n}();\\r\\nvar CalGrayCS = function CalGrayCSClosure() {\\r\\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\\r\\n    this.name = 'CalGray';\\r\\n    this.numComps = 1;\\r\\n    this.defaultColor = new Float32Array(this.numComps);\\r\\n    if (!whitePoint) {\\r\\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\\r\\n    }\\r\\n    blackPoint = blackPoint || [0, 0, 0];\\r\\n    gamma = gamma || 1;\\r\\n    this.XW = whitePoint[0];\\r\\n    this.YW = whitePoint[1];\\r\\n    this.ZW = whitePoint[2];\\r\\n    this.XB = blackPoint[0];\\r\\n    this.YB = blackPoint[1];\\r\\n    this.ZB = blackPoint[2];\\r\\n    this.G = gamma;\\r\\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\\r\\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\\r\\n    }\\r\\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\\r\\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\\r\\n      this.XB = this.YB = this.ZB = 0;\\r\\n    }\\r\\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\\r\\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\\r\\n    }\\r\\n    if (this.G < 1) {\\r\\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\\r\\n      this.G = 1;\\r\\n    }\\r\\n  }\\r\\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\r\\n    var A = src[srcOffset] * scale;\\r\\n    var AG = Math.pow(A, cs.G);\\r\\n    var L = cs.YW * AG;\\r\\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\\r\\n    dest[destOffset] = val;\\r\\n    dest[destOffset + 1] = val;\\r\\n    dest[destOffset + 2] = val;\\r\\n  }\\r\\n  CalGrayCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\r\\n    },\\r\\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var scale = 1 / ((1 << bits) - 1);\\r\\n      for (var i = 0; i < count; ++i) {\\r\\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\r\\n        srcOffset += 1;\\r\\n        destOffset += 3 + alpha01;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\\r\\n      return inputLength * (3 + alpha01);\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\\r\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return CalGrayCS;\\r\\n}();\\r\\nvar CalRGBCS = function CalRGBCSClosure() {\\r\\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\\r\\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\\r\\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\\r\\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\\r\\n  var tempNormalizeMatrix = new Float32Array(3);\\r\\n  var tempConvertMatrix1 = new Float32Array(3);\\r\\n  var tempConvertMatrix2 = new Float32Array(3);\\r\\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\\r\\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\\r\\n    this.name = 'CalRGB';\\r\\n    this.numComps = 3;\\r\\n    this.defaultColor = new Float32Array(this.numComps);\\r\\n    if (!whitePoint) {\\r\\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\\r\\n    }\\r\\n    blackPoint = blackPoint || new Float32Array(3);\\r\\n    gamma = gamma || new Float32Array([1, 1, 1]);\\r\\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\\r\\n    var XW = whitePoint[0];\\r\\n    var YW = whitePoint[1];\\r\\n    var ZW = whitePoint[2];\\r\\n    this.whitePoint = whitePoint;\\r\\n    var XB = blackPoint[0];\\r\\n    var YB = blackPoint[1];\\r\\n    var ZB = blackPoint[2];\\r\\n    this.blackPoint = blackPoint;\\r\\n    this.GR = gamma[0];\\r\\n    this.GG = gamma[1];\\r\\n    this.GB = gamma[2];\\r\\n    this.MXA = matrix[0];\\r\\n    this.MYA = matrix[1];\\r\\n    this.MZA = matrix[2];\\r\\n    this.MXB = matrix[3];\\r\\n    this.MYB = matrix[4];\\r\\n    this.MZB = matrix[5];\\r\\n    this.MXC = matrix[6];\\r\\n    this.MYC = matrix[7];\\r\\n    this.MZC = matrix[8];\\r\\n    if (XW < 0 || ZW < 0 || YW !== 1) {\\r\\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\\r\\n    }\\r\\n    if (XB < 0 || YB < 0 || ZB < 0) {\\r\\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\\r\\n      this.blackPoint = \";a.a+=\"new Float32Array(3);\\r\\n    }\\r\\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\\r\\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\\r\\n      this.GR = this.GG = this.GB = 1;\\r\\n    }\\r\\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\\r\\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\\r\\n      this.MXA = this.MYB = this.MZC = 1;\\r\\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\\r\\n    }\\r\\n  }\\r\\n  function matrixProduct(a, b, result) {\\r\\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\\r\\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\\r\\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\\r\\n  }\\r\\n  function convertToFlat(sourceWhitePoint, LMS, result) {\\r\\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\\r\\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\\r\\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\\r\\n  }\\r\\n  function convertToD65(sourceWhitePoint, LMS, result) {\\r\\n    var D65X = 0.95047;\\r\\n    var D65Y = 1;\\r\\n    var D65Z = 1.08883;\\r\\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\\r\\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\\r\\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\\r\\n  }\\r\\n  function sRGBTransferFunction(color) {\\r\\n    if (color <= 0.0031308) {\\r\\n      return adjustToRange(0, 1, 12.92 * color);\\r\\n    }\\r\\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\\r\\n  }\\r\\n  function adjustToRange(min, max, value) {\\r\\n    return Math.max(min, Math.min(max, value));\\r\\n  }\\r\\n  function decodeL(L) {\\r\\n    if (L < 0) {\\r\\n      return -decodeL(-L);\\r\\n    }\\r\\n    if (L > 8.0) {\\r\\n      return Math.pow((L + 16) / 116, 3);\\r\\n    }\\r\\n    return L * DECODE_L_CONSTANT;\\r\\n  }\\r\\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\\r\\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\\r\\n      result[0] = XYZ_Flat[0];\\r\\n      result[1] = XYZ_Flat[1];\\r\\n      result[2] = XYZ_Flat[2];\\r\\n      return;\\r\\n    }\\r\\n    var zeroDecodeL = decodeL(0);\\r\\n    var X_DST = zeroDecodeL;\\r\\n    var X_SRC = decodeL(sourceBlackPoint[0]);\\r\\n    var Y_DST = zeroDecodeL;\\r\\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\\r\\n    var Z_DST = zeroDecodeL;\\r\\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\\r\\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\\r\\n    var X_Offset = 1 - X_Scale;\\r\\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\\r\\n    var Y_Offset = 1 - Y_Scale;\\r\\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\\r\\n    var Z_Offset = 1 - Z_Scale;\\r\\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\\r\\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\\r\\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\\r\\n  }\\r\\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\\r\\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\\r\\n      result[0] = XYZ_In[0];\\r\\n      result[1] = XYZ_In[1];\\r\\n      result[2] = XYZ_In[2];\\r\\n      return;\\r\\n    }\\r\\n    var LMS = result;\\r\\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\r\\n    var LMS_Flat = tempNormalizeMatrix;\\r\\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\\r\\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\\r\\n  }\\r\\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\\r\\n    var LMS = result;\\r\\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\\r\\n    var LMS_D65 = tempNormalizeMatrix;\\r\\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\\r\\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\\r\\n  }\\r\\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\\r\\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\\r\\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\\r\\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\\r\\n    var AGR = Math.pow(A, cs.GR);\\r\\n    var BGG = Math.pow(B, cs.GG);\\r\\n    var CGB = Math.pow(C, cs.GB);\\r\\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\\r\\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\\r\\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\\r\\n    var XYZ = tempConvertMatrix1;\\r\\n    XYZ[0] = X;\\r\\n    XYZ[1] = Y;\\r\\n    XYZ[2] = Z;\\r\\n    var XYZ_Flat = tempConvertMatrix2;\\r\\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\\r\\n    var XYZ_Black = tempConvertMatrix1;\\r\\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\\r\\n    var XYZ_D65 = tempConvertMatrix2;\\r\\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\\r\\n    var SRGB = tempConvertMatrix1;\\r\\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\\r\\n    var sR = sRGBTransferFunction(SRGB[0]);\\r\\n    var sG = sRGBTransferFunction(SRGB[1]);\\r\\n    var sB = sRGBTransferFunction(SRGB[2]);\\r\\n    dest[destOffset] = Math.round(sR * 255);\\r\\n    dest[destOffset + 1] = Math.round(sG * 255);\\r\\n    dest[destOffset + 2] = Math.round(sB * 255);\\r\\n  }\\r\\n  CalRGBCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\\r\\n    },\\r\\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var scale = 1 / ((1 << bits) - 1);\\r\\n      for (var i = 0; i < count; ++i) {\\r\\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\\r\\n        srcOffset += 3;\\r\\n        destOffset += 3 + alpha01;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\\r\\n      return inputLength * (3 + alpha01) / 3 | 0;\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\\r\\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\\r\\n    },\\r\\n    usesZeroToOneRange: true\\r\\n  };\\r\\n  return CalRGBCS;\\r\\n}();\\r\\nvar LabCS = function LabCSClosure() {\\r\\n  function LabCS(whitePoint, blackPoint, range) {\\r\\n    this.name = 'Lab';\\r\\n    this.numComps = 3;\\r\\n    this.defaultColor = new Float32Array(this.numComps);\\r\\n    if (!whitePoint) {\\r\\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\\r\\n    }\\r\\n    blackPoint = blackPoint || [0, 0, 0];\\r\\n    range = range || [-100, 100, -100, 100];\\r\\n    this.XW = whitePoint[0];\\r\\n    this.YW = whitePoint[1];\\r\\n    this.ZW = whitePoint[2];\\r\\n    this.amin = range[0];\\r\\n    this.amax = range[1];\\r\\n    this.bmin = range[2];\\r\\n    this.bmax = range[3];\\r\\n    this.XB = blackPoint[0];\\r\\n    this.YB = blackPoint[1];\\r\\n    this.ZB = blackPoint[2];\\r\\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\\r\\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\\r\\n    }\\r\\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\\r\\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\\r\\n      this.XB = this.YB = this.ZB = 0;\\r\\n    }\\r\\n    if (this.amin > this.amax || this.bmin > this.bmax) {\\r\\n      (0, _util.info)('Invalid Range, falling back to defaults');\\r\\n      this.amin = -100;\\r\\n      this.amax = 100;\\r\\n      this.bmin = -100;\\r\\n      this.bmax = 100;\\r\\n    }\\r\\n  }\\r\\n  function fn_g(x) {\\r\\n    var result;\\r\\n    if (x >= 6 / 29) {\\r\\n      result = x * x * x;\\r\\n    } else {\\r\\n      result = 108 / 841 * (x - 4 / 29);\\r\\n    }\\r\\n    return result;\\r\\n  }\\r\\n  function decode(value, high1, low2, high2) {\\r\\n    return low2 + value * (high2 - low2) / high1;\\r\\n  }\\r\\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\\r\\n    var Ls = src[srcOffset];\\r\\n    var as = src[srcOffset + 1];\\r\\n    var bs = src[srcOffset + 2];\\r\\n    if (maxVal !== false) {\\r\\n      Ls = decode(Ls, maxVal, 0, 100);\\r\\n      as = decode(as, maxVal, cs.amin, cs.amax);\\r\\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\\r\\n    }\\r\\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\\r\\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\\r\\n    var M = (Ls + 16) / 116;\\r\\n    var L = M + as / 500;\\r\\n    var N = M - bs / 200;\\r\\n    var X = cs.XW * fn_g(L);\\r\\n    var Y = cs.YW * fn_g(M);\\r\\n    var Z = cs.ZW * fn_g(N);\\r\\n    var r, g, b;\\r\\n    if (cs.ZW < 1) {\\r\\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\\r\\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\\r\\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\\r\\n    } else {\\r\\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\\r\\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\\r\\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\\r\\n    }\\r\\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\\r\\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\\r\\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\\r\\n  }\\r\\n  LabCS.prototype = {\\r\\n    getRgb: ColorSpace.prototype.getRgb,\\r\\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\\r\\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\\r\\n    },\\r\\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\\r\\n      var maxVal = (1 << bits) - 1;\\r\\n      for (var i = 0; i < count; i++) {\\r\\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\\r\\n        srcOffset += 3;\\r\\n        destOffset += 3 + alpha01;\\r\\n      }\\r\\n    },\\r\\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\\r\\n      return inputLength * (3 + alpha01) / 3 | 0;\\r\\n    },\\r\\n    isPassthrough: ColorSpace.prototype.isPassthrough,\\r\\n    fillRgb: ColorSpace.prototype.fillRgb,\\r\\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\\r\\n      return true;\\r\\n    },\\r\\n    usesZeroToOneRange: false\\r\\n  };\\r\\n  return LabCS;\\r\\n}();\\r\\nexports.ColorSpace = ColorSpace;\\r\\n\\r\\n/***/ }),\\r\\n/* 30 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\r\\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\\r\\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', \";a.a+=\"'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\\r\\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\\r\\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\\r\\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\\r\\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\\r\\nfunction getEncoding(encodingName) {\\r\\n  switch (encodingName) {\\r\\n    case 'WinAnsiEncoding':\\r\\n      return WinAnsiEncoding;\\r\\n    case 'StandardEncoding':\\r\\n      return StandardEncoding;\\r\\n    case 'MacRomanEncoding':\\r\\n      return MacRomanEncoding;\\r\\n    case 'SymbolSetEncoding':\\r\\n      return SymbolSetEncoding;\\r\\n    case 'ZapfDingbatsEncoding':\\r\\n      return ZapfDingbatsEncoding;\\r\\n    case 'ExpertEncoding':\\r\\n      return ExpertEncoding;\\r\\n    case 'MacExpertEncoding':\\r\\n      return MacExpertEncoding;\\r\\n    default:\\r\\n      return null;\\r\\n  }\\r\\n}\\r\\nexports.WinAnsiEncoding = WinAnsiEncoding;\\r\\nexports.StandardEncoding = StandardEncoding;\\r\\nexports.MacRomanEncoding = MacRomanEncoding;\\r\\nexports.SymbolSetEncoding = SymbolSetEncoding;\\r\\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\\r\\nexports.ExpertEncoding = ExpertEncoding;\\r\\nexports.getEncoding = getEncoding;\\r\\n\\r\\n/***/ }),\\r\\n/* 31 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (bitmap, value) {\\r\\n  return {\\r\\n    enumerable: !(bitmap & 1),\\r\\n    configurable: !(bitmap & 2),\\r\\n    writable: !(bitmap & 4),\\r\\n    value: value\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 32 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar IObject = __w_pdfjs_require__(39);\\r\\nvar defined = __w_pdfjs_require__(40);\\r\\nmodule.exports = function (it) {\\r\\n  return IObject(defined(it));\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 33 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toInteger = __w_pdfjs_require__(19);\\r\\nvar max = Math.max;\\r\\nvar min = Math.min;\\r\\nmodule.exports = function (index, length) {\\r\\n  index = toInteger(index);\\r\\n  return index < 0 ? max(index + length, 0) : min(index, length);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 34 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar cof = __w_pdfjs_require__(27);\\r\\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\\r\\nvar ARG = cof(function () {\\r\\n  return arguments;\\r\\n}()) == 'Arguments';\\r\\nvar tryGet = function tryGet(it, key) {\\r\\n  try {\\r\\n    return it[key];\\r\\n  } catch (e) {}\\r\\n};\\r\\nmodule.exports = function (it) {\\r\\n  var O, T, B;\\r\\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 35 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar ctx = __w_pdfjs_require__(13);\\r\\nvar call = __w_pdfjs_require__(114);\\r\\nvar isArrayIter = __w_pdfjs_require__(59);\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nvar getIterFn = __w_pdfjs_require__(63);\\r\\nvar BREAK = {};\\r\\nvar RETURN = {};\\r\\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\\r\\n  var iterFn = ITERATOR ? function () {\\r\\n    return iterable;\\r\\n  } : getIterFn(iterable);\\r\\n  var f = ctx(fn, that, entries ? 2 : 1);\\r\\n  var index = 0;\\r\\n  var length, step, iterator, result;\\r\\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\\r\\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\\r\\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\\r\\n    if (result === BREAK || result === RETURN) return result;\\r\\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\\r\\n    result = call(iterator, f, step.value, entries);\\r\\n    if (result === BREAK || result === RETURN) return result;\\r\\n  }\\r\\n};\\r\\n_exports.BREAK = BREAK;\\r\\n_exports.RETURN = RETURN;\\r\\n\\r\\n/***/ }),\\r\\n/* 36 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _ccitt_stream = __w_pdfjs_require__(144);\\r\\n\\r\\nvar _jbig2_stream = __w_pdfjs_require__(146);\\r\\n\\r\\nvar MAX_LENGTH_TO_CACHE = 1000;\\r\\nvar Parser = function ParserClosure() {\\r\\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\\r\\n    this.lexer = lexer;\\r\\n    this.allowStreams = allowStreams;\\r\\n    this.xref = xref;\\r\\n    this.recoveryMode = recoveryMode || false;\\r\\n    this.imageCache = Object.create(null);\\r\\n    this.refill();\\r\\n  }\\r\\n  Parser.prototype = {\\r\\n    refill: function Parser_refill() {\\r\\n      this.buf1 = this.lexer.getObj();\\r\\n      this.buf2 = this.lexer.getObj();\\r\\n    },\\r\\n    shift: function Parser_shift() {\\r\\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\\r\\n        this.buf1 = this.buf2;\\r\\n        this.buf2 = null;\\r\\n      } else {\\r\\n        this.buf1 = this.buf2;\\r\\n        this.buf2 = this.lexer.getObj();\\r\\n      }\\r\\n    },\\r\\n    tryShift: function Parser_tryShift() {\\r\\n      try {\\r\\n        this.shift();\\r\\n        return true;\\r\\n      } catch (e) {\\r\\n        if (e instanceof _util.MissingDataException) {\\r\\n          throw e;\\r\\n        }\\r\\n        return false;\\r\\n      }\\r\\n    },\\r\\n    getObj: function Parser_getObj(cipherTransform) {\\r\\n      var buf1 = this.buf1;\\r\\n      this.shift();\\r\\n      if (buf1 instanceof _primitives.Cmd) {\\r\\n        switch (buf1.cmd) {\\r\\n          case 'BI':\\r\\n            return this.makeInlineImage(cipherTransform);\\r\\n          case '[':\\r\\n            var array = [];\\r\\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\\r\\n              array.push(this.getObj(cipherTransform));\\r\\n            }\\r\\n            if ((0, _primitives.isEOF)(this.buf1)) {\\r\\n              if (!this.recoveryMode) {\\r\\n                throw new _util.FormatError('End of file inside array');\\r\\n              }\\r\\n              return array;\\r\\n            }\\r\\n            this.shift();\\r\\n            return array;\\r\\n          case '<<':\\r\\n            var dict = new _primitives.Dict(this.xref);\\r\\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\\r\\n              if (!(0, _primitives.isName)(this.buf1)) {\\r\\n                (0, _util.info)('Malformed dictionary: key must be a name object');\\r\\n                this.shift();\\r\\n                continue;\\r\\n              }\\r\\n              var key = this.buf1.name;\\r\\n              this.shift();\\r\\n              if ((0, _primitives.isEOF)(this.buf1)) {\\r\\n                break;\";a.a+=\"\\r\\n              }\\r\\n              dict.set(key, this.getObj(cipherTransform));\\r\\n            }\\r\\n            if ((0, _primitives.isEOF)(this.buf1)) {\\r\\n              if (!this.recoveryMode) {\\r\\n                throw new _util.FormatError('End of file inside dictionary');\\r\\n              }\\r\\n              return dict;\\r\\n            }\\r\\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\\r\\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\\r\\n            }\\r\\n            this.shift();\\r\\n            return dict;\\r\\n          default:\\r\\n            return buf1;\\r\\n        }\\r\\n      }\\r\\n      if (Number.isInteger(buf1)) {\\r\\n        var num = buf1;\\r\\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\\r\\n          var ref = new _primitives.Ref(num, this.buf1);\\r\\n          this.shift();\\r\\n          this.shift();\\r\\n          return ref;\\r\\n        }\\r\\n        return num;\\r\\n      }\\r\\n      if ((0, _util.isString)(buf1)) {\\r\\n        var str = buf1;\\r\\n        if (cipherTransform) {\\r\\n          str = cipherTransform.decryptString(str);\\r\\n        }\\r\\n        return str;\\r\\n      }\\r\\n      return buf1;\\r\\n    },\\r\\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\\r\\n      var E = 0x45,\\r\\n          I = 0x49,\\r\\n          SPACE = 0x20,\\r\\n          LF = 0xA,\\r\\n          CR = 0xD;\\r\\n      var n = 10,\\r\\n          NUL = 0x0;\\r\\n      var startPos = stream.pos,\\r\\n          state = 0,\\r\\n          ch = void 0,\\r\\n          maybeEIPos = void 0;\\r\\n      while ((ch = stream.getByte()) !== -1) {\\r\\n        if (state === 0) {\\r\\n          state = ch === E ? 1 : 0;\\r\\n        } else if (state === 1) {\\r\\n          state = ch === I ? 2 : 0;\\r\\n        } else {\\r\\n          (0, _util.assert)(state === 2);\\r\\n          if (ch === SPACE || ch === LF || ch === CR) {\\r\\n            maybeEIPos = stream.pos;\\r\\n            var followingBytes = stream.peekBytes(n);\\r\\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\\r\\n              ch = followingBytes[i];\\r\\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\\r\\n                continue;\\r\\n              }\\r\\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\\r\\n                state = 0;\\r\\n                break;\\r\\n              }\\r\\n            }\\r\\n            if (state === 2) {\\r\\n              break;\\r\\n            }\\r\\n          } else {\\r\\n            state = 0;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      if (ch === -1) {\\r\\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\\r\\n        if (maybeEIPos) {\\r\\n          (0, _util.warn)('... trying to recover by using the last \\\"EI\\\" occurrence.');\\r\\n          stream.skip(-(stream.pos - maybeEIPos));\\r\\n        }\\r\\n      }\\r\\n      return stream.pos - 4 - startPos;\\r\\n    },\\r\\n\\r\\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\\r\\n      var startPos = stream.pos,\\r\\n          foundEOI = false,\\r\\n          b,\\r\\n          markerLength,\\r\\n          length;\\r\\n      while ((b = stream.getByte()) !== -1) {\\r\\n        if (b !== 0xFF) {\\r\\n          continue;\\r\\n        }\\r\\n        switch (stream.getByte()) {\\r\\n          case 0x00:\\r\\n            break;\\r\\n          case 0xFF:\\r\\n            stream.skip(-1);\\r\\n            break;\\r\\n          case 0xD9:\\r\\n            foundEOI = true;\\r\\n            break;\\r\\n          case 0xC0:\\r\\n          case 0xC1:\\r\\n          case 0xC2:\\r\\n          case 0xC3:\\r\\n          case 0xC5:\\r\\n          case 0xC6:\\r\\n          case 0xC7:\\r\\n          case 0xC9:\\r\\n          case 0xCA:\\r\\n          case 0xCB:\\r\\n          case 0xCD:\\r\\n          case 0xCE:\\r\\n          case 0xCF:\\r\\n          case 0xC4:\\r\\n          case 0xCC:\\r\\n          case 0xDA:\\r\\n          case 0xDB:\\r\\n          case 0xDC:\\r\\n          case 0xDD:\\r\\n          case 0xDE:\\r\\n          case 0xDF:\\r\\n          case 0xE0:\\r\\n          case 0xE1:\\r\\n          case 0xE2:\\r\\n          case 0xE3:\\r\\n          case 0xE4:\\r\\n          case 0xE5:\\r\\n          case 0xE6:\\r\\n          case 0xE7:\\r\\n          case 0xE8:\\r\\n          case 0xE9:\\r\\n          case 0xEA:\\r\\n          case 0xEB:\\r\\n          case 0xEC:\\r\\n          case 0xED:\\r\\n          case 0xEE:\\r\\n          case 0xEF:\\r\\n          case 0xFE:\\r\\n            markerLength = stream.getUint16();\\r\\n            if (markerLength > 2) {\\r\\n              stream.skip(markerLength - 2);\\r\\n            } else {\\r\\n              stream.skip(-2);\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        if (foundEOI) {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      length = stream.pos - startPos;\\r\\n      if (b === -1) {\\r\\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\\r\\n        stream.skip(-length);\\r\\n        return this.findDefaultInlineStreamEnd(stream);\\r\\n      }\\r\\n      this.inlineStreamSkipEI(stream);\\r\\n      return length;\\r\\n    },\\r\\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\\r\\n      var TILDE = 0x7E,\\r\\n          GT = 0x3E;\\r\\n      var startPos = stream.pos,\\r\\n          ch,\\r\\n          length;\\r\\n      while ((ch = stream.getByte()) !== -1) {\\r\\n        if (ch === TILDE && stream.peekByte() === GT) {\\r\\n          stream.skip();\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      length = stream.pos - startPos;\\r\\n      if (ch === -1) {\\r\\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\r\\n        stream.skip(-length);\\r\\n        return this.findDefaultInlineStreamEnd(stream);\\r\\n      }\\r\\n      this.inlineStreamSkipEI(stream);\\r\\n      return length;\\r\\n    },\\r\\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\\r\\n      var GT = 0x3E;\\r\\n      var startPos = stream.pos,\\r\\n          ch,\\r\\n          length;\\r\\n      while ((ch = stream.getByte()) !== -1) {\\r\\n        if (ch === GT) {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      length = stream.pos - startPos;\\r\\n      if (ch === -1) {\\r\\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\\r\\n        stream.skip(-length);\\r\\n        return this.findDefaultInlineStreamEnd(stream);\\r\\n      }\\r\\n      this.inlineStreamSkipEI(stream);\\r\\n      return length;\\r\\n    },\\r\\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\\r\\n      var E = 0x45,\\r\\n          I = 0x49;\\r\\n      var state = 0,\\r\\n          ch;\\r\\n      while ((ch = stream.getByte()) !== -1) {\\r\\n        if (state === 0) {\\r\\n          state = ch === E ? 1 : 0;\\r\\n        } else if (state === 1) {\\r\\n          state = ch === I ? 2 : 0;\\r\\n        } else if (state === 2) {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\\r\\n      var lexer = this.lexer;\\r\\n      var stream = lexer.stream;\\r\\n      var dict = new _primitives.Dict(this.xref);\\r\\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\\r\\n        if (!(0, _primitives.isName)(this.buf1)) {\\r\\n          throw new _util.FormatError('Dictionary key must be a name object');\\r\\n        }\\r\\n        var key = this.buf1.name;\\r\\n        this.shift();\\r\\n        if ((0, _primitives.isEOF)(this.buf1)) {\\r\\n          break;\\r\\n        }\\r\\n        dict.set(key, this.getObj(cipherTransform));\\r\\n      }\\r\\n      var filter = dict.get('Filter', 'F'),\\r\\n          filterName;\\r\\n      if ((0, _primitives.isName)(filter)) {\\r\\n        filterName = filter.name;\\r\\n      } else if (Array.isArray(filter)) {\\r\\n        var filterZero = this.xref.fetchIfRef(filter[0]);\\r\\n        if ((0, _primitives.isName)(filterZero)) {\\r\\n          filterName = filterZero.name;\\r\\n        }\\r\\n      }\\r\\n      var startPos = stream.pos,\\r\\n          length,\\r\\n          i,\\r\\n          ii;\\r\\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\\r\\n        length = this.findDCTDecodeInlineStreamEnd(stream);\\r\\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\\r\\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\\r\\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\\r\\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\\r\\n      } else {\\r\\n        length = this.findDefaultInlineStreamEnd(stream);\\r\\n      }\\r\\n      var imageStream = stream.makeSubStream(startPos, length, dict);\\r\\n      var adler32;\\r\\n      if (length < MAX_LENGTH_TO_CACHE) {\\r\\n        var imageBytes = imageStream.getBytes();\\r\\n        imageStream.reset();\\r\\n        var a = 1;\\r\\n        var b = 0;\\r\\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\\r\\n          a += imageBytes[i] & 0xff;\\r\\n          b += a;\\r\\n        }\\r\\n        adler32 = b % 65521 << 16 | a % 65521;\\r\\n        var cacheEntry = this.imageCache[adler32];\\r\\n        if (cacheEntry !== undefined) {\\r\\n          this.buf2 = _primitives.Cmd.get('EI');\\r\\n          this.shift();\\r\\n          cacheEntry.reset();\\r\\n          return cacheEntry;\\r\\n        }\\r\\n      }\\r\\n      if (cipherTransform) {\\r\\n        imageStream = cipherTransform.createStream(imageStream, length);\\r\\n      }\\r\\n      imageStream = this.filter(imageStream, dict, length);\\r\\n      imageStream.dict = dict;\\r\\n      if (adler32 !== undefined) {\\r\\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\\r\\n        this.imageCache[adler32] = imageStream;\\r\\n      }\\r\\n      this.buf2 = _primitives.Cmd.get('EI');\\r\\n      this.shift();\\r\\n      return imageStream;\\r\\n    },\\r\\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\\r\\n      var lexer = this.lexer;\\r\\n      var stream = lexer.stream;\\r\\n      lexer.skipToNextLine();\\r\\n      var pos = stream.pos - 1;\\r\\n      var length = dict.get('Length');\\r\\n      if (!Number.isInteger(length)) {\\r\\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\\r\\n        length = 0;\\r\\n      }\\r\\n      stream.pos = pos + length;\\r\\n      lexer.nextChar();\\r\\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\\r\\n        this.shift();\\r\\n      } else {\\r\\n        stream.pos = pos;\\r\\n        var SCAN_BLOCK_SIZE = 2048;\\r\\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\\r\\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\\r\\n        var skipped = 0,\\r\\n            found = false,\\r\\n            i,\\r\\n            j;\\r\\n        while (stream.pos < stream.end) {\\r\\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\\r\\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\\r\\n          if (scanLength <= 0) {\\r\\n            break;\\r\\n          }\\r\\n          found = false;\\r\\n          i = 0;\\r\\n          while (i < scanLength) {\\r\\n            j = 0;\\r\\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\\r\\n              j++;\\r\\n            }\\r\\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\\r\\n              found = true;\\r\\n              break;\\r\\n            }\\r\\n            i++;\\r\\n          }\\r\\n          if (found) {\\r\\n            skipped += i;\\r\\n            stream.pos += i;\\r\\n            break;\\r\\n          }\\r\\n          skipped += scanLength;\\r\\n          stream.pos += scanLength;\\r\\n        }\\r\\n        if (!found) {\\r\\n          throw new _util.FormatError('Missing endstream');\\r\\n        }\\r\\n        length = skipped;\\r\\n        lexer.nextChar();\\r\\n        this.shift();\\r\\n        this.shift();\\r\\n      }\\r\\n      this.shift();\\r\\n      stream = stream.makeSubStream(pos, length, dict);\\r\\n      if (cipherTransform) {\\r\\n        stream = cipherTransform.createStream(stream, length);\\r\\n      }\\r\\n      stream = this.filter(stream, dict, length);\\r\\n      stream.dict = dict;\\r\\n      return stream;\\r\\n    },\\r\\n    filter: function Parser_filter(stream, dict, length) {\\r\\n      var filter = dict.get('Filter', 'F');\\r\\n      var params = dict.get('DecodeParms', 'DP');\\r\\n      if ((0, _primitives.isName)(filter)) {\\r\\n        if (Array.isArray(params)) {\\r\\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\\r\\n        }\\r\\n        return this.makeFilter(stream, filter.name, length, params);\\r\\n      }\\r\\n      var maybeLength = length;\\r\\n      if (Array.isArray(filter)) {\\r\\n        var filterArray = filter;\\r\\n        var paramsArray = params;\\r\\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\\r\\n          filter = this.xref.fetchIfRef(filterArray[i]);\\r\\n          if (!(0, _primitives.isName)(filter)) {\\r\\n            throw new _util.FormatError('Bad filter name: ' + filter);\\r\\n          }\\r\\n          params = null;\\r\\n          if (Array.isArray(paramsArray) && i in paramsArray) {\\r\\n            params = this.xref.fetchIfRef(paramsArray[i]);\\r\\n          }\\r\\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\\r\\n          maybeLength = null;\\r\\n        }\\r\\n      }\\r\\n      return stream;\\r\\n    },\\r\\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\\r\\n      if (maybeLength === 0) {\\r\\n        (0, _util.warn)('Empty \\\"' + name + '\\\" stream.');\\r\\n        return new _stream.NullStream(stream);\\r\\n      }\\r\\n      try {\\r\\n        var xrefStreamStats = this.xref.stats.streamTypes;\\r\\n        if (name === 'FlateDecode' || name === 'Fl') {\\r\\n          xrefStreamStats[_util.StreamType.FLATE] = true;\\r\\n          if (params) {\\r\\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\\r\\n          }\\r\\n          return new _stream.FlateStream(stream, maybeLength);\\r\\n        }\\r\\n        if (name === 'LZWDecode' || name === 'LZW') {\\r\\n          xrefStreamStats[_util.StreamType.LZW] = true;\\r\\n          var earlyChange = 1;\\r\\n          if (params) {\\r\\n            if (params.has('EarlyChange')) {\\r\\n              earlyChange = params.get('EarlyChange');\\r\\n            }\\r\\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\\r\\n          }\\r\\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\\r\\n        }\\r\\n        if (name === 'DCTDecode' || name === 'DCT') {\\r\\n          xrefStreamStats[_util.StreamType.DCT] = true;\\r\\n          return new _stream.JpegStream(stream, maybeLength, stream.dict, params);\\r\\n        }\\r\\n        if (name === 'JPXDecode' || name === 'JPX') {\\r\\n          xrefStreamStats[_util.StreamType.JPX] = true;\\r\\n          return new _stream.JpxStream(stream, maybeLength, stream.dict, params);\\r\\n        }\\r\\n        if (name === 'ASCII85Decode' || name === 'A85') {\\r\\n          xrefStreamStats[_util.StreamType.A85] = true;\\r\\n          return new _stream.Ascii85Stream(stream, maybeLength);\\r\\n        }\\r\\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\\r\\n          xrefStreamStats[_util.StreamType.AHX] = true;\\r\\n          return new _stream.AsciiHexStream(stream, maybeLength);\\r\\n        }\\r\\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\\r\\n          xrefStreamStats[_util.StreamType.CCF] = true;\\r\\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\\r\\n        }\\r\\n        if (name === 'RunLengthDecode' || name === 'RL') {\\r\\n          xrefStreamStats[_util.StreamType.RL] = true;\\r\\n          return new _stream.RunLengthStream(stream, maybeLength);\\r\\n        }\\r\\n        if (name === 'JBIG2Decode') {\\r\\n          xrefStreamStats[_util.StreamType.JBIG] = true;\\r\\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\\r\\n        }\\r\\n        (0, _util.warn)('filter \\\"' + name + '\\\" not supported yet');\\r\\n        return stream;\\r\\n      } catch (ex) {\\r\\n        if (ex instanceof _util.MissingDataException) {\\r\\n          throw ex;\\r\\n        }\\r\\n        (0, _util.warn)('Invalid stream: \\\\\\\"' + ex + '\\\\\\\"');\\r\\n        return new _stream.NullStream(stream);\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return Parser;\\r\\n}();\\r\\nvar Lexer = function LexerClosure() {\\r\\n  function Lexer(stream, knownCommands) {\\r\\n    this.stream = stream;\\r\\n    this.nextChar();\\r\\n    this.strBuf = [];\\r\\n    this.knownCommands = knownCommands;\\r\\n  }\\r\\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \";a.a+=\"0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\r\\n  function toHexDigit(ch) {\\r\\n    if (ch >= 0x30 && ch <= 0x39) {\\r\\n      return ch & 0x0F;\\r\\n    }\\r\\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\\r\\n      return (ch & 0x0F) + 9;\\r\\n    }\\r\\n    return -1;\\r\\n  }\\r\\n  Lexer.prototype = {\\r\\n    nextChar: function Lexer_nextChar() {\\r\\n      return this.currentChar = this.stream.getByte();\\r\\n    },\\r\\n    peekChar: function Lexer_peekChar() {\\r\\n      return this.stream.peekByte();\\r\\n    },\\r\\n    getNumber: function Lexer_getNumber() {\\r\\n      var ch = this.currentChar;\\r\\n      var eNotation = false;\\r\\n      var divideBy = 0;\\r\\n      var sign = 1;\\r\\n      if (ch === 0x2D) {\\r\\n        sign = -1;\\r\\n        ch = this.nextChar();\\r\\n        if (ch === 0x2D) {\\r\\n          ch = this.nextChar();\\r\\n        }\\r\\n      } else if (ch === 0x2B) {\\r\\n        ch = this.nextChar();\\r\\n      }\\r\\n      if (ch === 0x2E) {\\r\\n        divideBy = 10;\\r\\n        ch = this.nextChar();\\r\\n      }\\r\\n      if (ch === 0x0A || ch === 0x0D) {\\r\\n        do {\\r\\n          ch = this.nextChar();\\r\\n        } while (ch === 0x0A || ch === 0x0D);\\r\\n      }\\r\\n      if (ch < 0x30 || ch > 0x39) {\\r\\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\\r\\n      }\\r\\n      var baseValue = ch - 0x30;\\r\\n      var powerValue = 0;\\r\\n      var powerValueSign = 1;\\r\\n      while ((ch = this.nextChar()) >= 0) {\\r\\n        if (0x30 <= ch && ch <= 0x39) {\\r\\n          var currentDigit = ch - 0x30;\\r\\n          if (eNotation) {\\r\\n            powerValue = powerValue * 10 + currentDigit;\\r\\n          } else {\\r\\n            if (divideBy !== 0) {\\r\\n              divideBy *= 10;\\r\\n            }\\r\\n            baseValue = baseValue * 10 + currentDigit;\\r\\n          }\\r\\n        } else if (ch === 0x2E) {\\r\\n          if (divideBy === 0) {\\r\\n            divideBy = 1;\\r\\n          } else {\\r\\n            break;\\r\\n          }\\r\\n        } else if (ch === 0x2D) {\\r\\n          (0, _util.warn)('Badly formatted number');\\r\\n        } else if (ch === 0x45 || ch === 0x65) {\\r\\n          ch = this.peekChar();\\r\\n          if (ch === 0x2B || ch === 0x2D) {\\r\\n            powerValueSign = ch === 0x2D ? -1 : 1;\\r\\n            this.nextChar();\\r\\n          } else if (ch < 0x30 || ch > 0x39) {\\r\\n            break;\\r\\n          }\\r\\n          eNotation = true;\\r\\n        } else {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      if (divideBy !== 0) {\\r\\n        baseValue /= divideBy;\\r\\n      }\\r\\n      if (eNotation) {\\r\\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\\r\\n      }\\r\\n      return sign * baseValue;\\r\\n    },\\r\\n    getString: function Lexer_getString() {\\r\\n      var numParen = 1;\\r\\n      var done = false;\\r\\n      var strBuf = this.strBuf;\\r\\n      strBuf.length = 0;\\r\\n      var ch = this.nextChar();\\r\\n      while (true) {\\r\\n        var charBuffered = false;\\r\\n        switch (ch | 0) {\\r\\n          case -1:\\r\\n            (0, _util.warn)('Unterminated string');\\r\\n            done = true;\\r\\n            break;\\r\\n          case 0x28:\\r\\n            ++numParen;\\r\\n            strBuf.push('(');\\r\\n            break;\\r\\n          case 0x29:\\r\\n            if (--numParen === 0) {\\r\\n              this.nextChar();\\r\\n              done = true;\\r\\n            } else {\\r\\n              strBuf.push(')');\\r\\n            }\\r\\n            break;\\r\\n          case 0x5C:\\r\\n            ch = this.nextChar();\\r\\n            switch (ch) {\\r\\n              case -1:\\r\\n                (0, _util.warn)('Unterminated string');\\r\\n                done = true;\\r\\n                break;\\r\\n              case 0x6E:\\r\\n                strBuf.push('\\\\n');\\r\\n                break;\\r\\n              case 0x72:\\r\\n                strBuf.push('\\\\r');\\r\\n                break;\\r\\n              case 0x74:\\r\\n                strBuf.push('\\\\t');\\r\\n                break;\\r\\n              case 0x62:\\r\\n                strBuf.push('\\\\b');\\r\\n                break;\\r\\n              case 0x66:\\r\\n                strBuf.push('\\\\f');\\r\\n                break;\\r\\n              case 0x5C:\\r\\n              case 0x28:\\r\\n              case 0x29:\\r\\n                strBuf.push(String.fromCharCode(ch));\\r\\n                break;\\r\\n              case 0x30:\\r\\n              case 0x31:\\r\\n              case 0x32:\\r\\n              case 0x33:\\r\\n              case 0x34:\\r\\n              case 0x35:\\r\\n              case 0x36:\\r\\n              case 0x37:\\r\\n                var x = ch & 0x0F;\\r\\n                ch = this.nextChar();\\r\\n                charBuffered = true;\\r\\n                if (ch >= 0x30 && ch <= 0x37) {\\r\\n                  x = (x << 3) + (ch & 0x0F);\\r\\n                  ch = this.nextChar();\\r\\n                  if (ch >= 0x30 && ch <= 0x37) {\\r\\n                    charBuffered = false;\\r\\n                    x = (x << 3) + (ch & 0x0F);\\r\\n                  }\\r\\n                }\\r\\n                strBuf.push(String.fromCharCode(x));\\r\\n                break;\\r\\n              case 0x0D:\\r\\n                if (this.peekChar() === 0x0A) {\\r\\n                  this.nextChar();\\r\\n                }\\r\\n                break;\\r\\n              case 0x0A:\\r\\n                break;\\r\\n              default:\\r\\n                strBuf.push(String.fromCharCode(ch));\\r\\n                break;\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            strBuf.push(String.fromCharCode(ch));\\r\\n            break;\\r\\n        }\\r\\n        if (done) {\\r\\n          break;\\r\\n        }\\r\\n        if (!charBuffered) {\\r\\n          ch = this.nextChar();\\r\\n        }\\r\\n      }\\r\\n      return strBuf.join('');\\r\\n    },\\r\\n    getName: function Lexer_getName() {\\r\\n      var ch, previousCh;\\r\\n      var strBuf = this.strBuf;\\r\\n      strBuf.length = 0;\\r\\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\r\\n        if (ch === 0x23) {\\r\\n          ch = this.nextChar();\\r\\n          if (specialChars[ch]) {\\r\\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\\r\\n            strBuf.push('#');\\r\\n            break;\\r\\n          }\\r\\n          var x = toHexDigit(ch);\\r\\n          if (x !== -1) {\\r\\n            previousCh = ch;\\r\\n            ch = this.nextChar();\\r\\n            var x2 = toHexDigit(ch);\\r\\n            if (x2 === -1) {\\r\\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\\r\\n              strBuf.push('#', String.fromCharCode(previousCh));\\r\\n              if (specialChars[ch]) {\\r\\n                break;\\r\\n              }\\r\\n              strBuf.push(String.fromCharCode(ch));\\r\\n              continue;\\r\\n            }\\r\\n            strBuf.push(String.fromCharCode(x << 4 | x2));\\r\\n          } else {\\r\\n            strBuf.push('#', String.fromCharCode(ch));\\r\\n          }\\r\\n        } else {\\r\\n          strBuf.push(String.fromCharCode(ch));\\r\\n        }\\r\\n      }\\r\\n      if (strBuf.length > 127) {\\r\\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\\r\\n      }\\r\\n      return _primitives.Name.get(strBuf.join(''));\\r\\n    },\\r\\n    getHexString: function Lexer_getHexString() {\\r\\n      var strBuf = this.strBuf;\\r\\n      strBuf.length = 0;\\r\\n      var ch = this.currentChar;\\r\\n      var isFirstHex = true;\\r\\n      var firstDigit;\\r\\n      var secondDigit;\\r\\n      while (true) {\\r\\n        if (ch < 0) {\\r\\n          (0, _util.warn)('Unterminated hex string');\\r\\n          break;\\r\\n        } else if (ch === 0x3E) {\\r\\n          this.nextChar();\\r\\n          break;\\r\\n        } else if (specialChars[ch] === 1) {\\r\\n          ch = this.nextChar();\\r\\n          continue;\\r\\n        } else {\\r\\n          if (isFirstHex) {\\r\\n            firstDigit = toHexDigit(ch);\\r\\n            if (firstDigit === -1) {\\r\\n              (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\r\\n              ch = this.nextChar();\\r\\n              continue;\\r\\n            }\\r\\n          } else {\\r\\n            secondDigit = toHexDigit(ch);\\r\\n            if (secondDigit === -1) {\\r\\n              (0, _util.warn)('Ignoring invalid character \\\"' + ch + '\\\" in hex string');\\r\\n              ch = this.nextChar();\\r\\n              continue;\\r\\n            }\\r\\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\\r\\n          }\\r\\n          isFirstHex = !isFirstHex;\\r\\n          ch = this.nextChar();\\r\\n        }\\r\\n      }\\r\\n      return strBuf.join('');\\r\\n    },\\r\\n    getObj: function Lexer_getObj() {\\r\\n      var comment = false;\\r\\n      var ch = this.currentChar;\\r\\n      while (true) {\\r\\n        if (ch < 0) {\\r\\n          return _primitives.EOF;\\r\\n        }\\r\\n        if (comment) {\\r\\n          if (ch === 0x0A || ch === 0x0D) {\\r\\n            comment = false;\\r\\n          }\\r\\n        } else if (ch === 0x25) {\\r\\n          comment = true;\\r\\n        } else if (specialChars[ch] !== 1) {\\r\\n          break;\\r\\n        }\\r\\n        ch = this.nextChar();\\r\\n      }\\r\\n      switch (ch | 0) {\\r\\n        case 0x30:\\r\\n        case 0x31:\\r\\n        case 0x32:\\r\\n        case 0x33:\\r\\n        case 0x34:\\r\\n        case 0x35:\\r\\n        case 0x36:\\r\\n        case 0x37:\\r\\n        case 0x38:\\r\\n        case 0x39:\\r\\n        case 0x2B:\\r\\n        case 0x2D:\\r\\n        case 0x2E:\\r\\n          return this.getNumber();\\r\\n        case 0x28:\\r\\n          return this.getString();\\r\\n        case 0x2F:\\r\\n          return this.getName();\\r\\n        case 0x5B:\\r\\n          this.nextChar();\\r\\n          return _primitives.Cmd.get('[');\\r\\n        case 0x5D:\\r\\n          this.nextChar();\\r\\n          return _primitives.Cmd.get(']');\\r\\n        case 0x3C:\\r\\n          ch = this.nextChar();\\r\\n          if (ch === 0x3C) {\\r\\n            this.nextChar();\\r\\n            return _primitives.Cmd.get('<<');\\r\\n          }\\r\\n          return this.getHexString();\\r\\n        case 0x3E:\\r\\n          ch = this.nextChar();\\r\\n          if (ch === 0x3E) {\\r\\n            this.nextChar();\\r\\n            return _primitives.Cmd.get('>>');\\r\\n          }\\r\\n          return _primitives.Cmd.get('>');\\r\\n        case 0x7B:\\r\\n          this.nextChar();\\r\\n          return _primitives.Cmd.get('{');\\r\\n        case 0x7D:\\r\\n          this.nextChar();\\r\\n          return _primitives.Cmd.get('}');\\r\\n        case 0x29:\\r\\n          this.nextChar();\\r\\n          throw new _util.FormatError('Illegal character: ' + ch);\\r\\n      }\\r\\n      var str = String.fromCharCode(ch);\\r\\n      var knownCommands = this.knownCommands;\\r\\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\r\\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\\r\\n        var possibleCommand = str + String.fromCharCode(ch);\\r\\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\\r\\n          break;\\r\\n        }\\r\\n        if (str.length === 128) {\\r\\n          throw new _util.FormatError('Command token too long: ' + str.length);\\r\\n        }\\r\\n        str = possibleCommand;\\r\\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\\r\\n      }\\r\\n      if (str === 'true') {\\r\\n        return true;\\r\\n      }\\r\\n      if (str === 'false') {\\r\\n        return false;\\r\\n      }\\r\\n      if (str === 'null') {\\r\\n        return null;\\r\\n      }\\r\\n      return _primitives.Cmd.get(str);\\r\\n    },\\r\\n    skipToNextLine: function Lexer_skipToNextLine() {\\r\\n      var ch = this.currentChar;\\r\\n      while (ch >= 0) {\\r\\n        if (ch === 0x0D) {\\r\\n          ch = this.nextChar();\\r\\n          if (ch === 0x0A) {\\r\\n            this.nextChar();\\r\\n          }\\r\\n          break;\\r\\n        } else if (ch === 0x0A) {\\r\\n          this.nextChar();\\r\\n          break;\\r\\n        }\\r\\n        ch = this.nextChar();\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return Lexer;\\r\\n}();\\r\\nvar Linearization = {\\r\\n  create: function LinearizationCreate(stream) {\\r\\n    function getInt(name, allowZeroValue) {\\r\\n      var obj = linDict.get(name);\\r\\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\\r\\n        return obj;\\r\\n      }\\r\\n      throw new Error('The \\\"' + name + '\\\" parameter in the linearization ' + 'dictionary is invalid.');\\r\\n    }\\r\\n    function getHints() {\\r\\n      var hints = linDict.get('H'),\\r\\n          hintsLength,\\r\\n          item;\\r\\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\\r\\n        for (var index = 0; index < hintsLength; index++) {\\r\\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\\r\\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\\r\\n          }\\r\\n        }\\r\\n        return hints;\\r\\n      }\\r\\n      throw new Error('Hint array in the linearization dictionary is invalid.');\\r\\n    }\\r\\n    var parser = new Parser(new Lexer(stream), false, null);\\r\\n    var obj1 = parser.getObj();\\r\\n    var obj2 = parser.getObj();\\r\\n    var obj3 = parser.getObj();\\r\\n    var linDict = parser.getObj();\\r\\n    var obj, length;\\r\\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\\r\\n      return null;\\r\\n    } else if ((length = getInt('L')) !== stream.length) {\\r\\n      throw new Error('The \\\"L\\\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\\r\\n    }\\r\\n    return {\\r\\n      length: length,\\r\\n      hints: getHints(),\\r\\n      objectNumberFirst: getInt('O'),\\r\\n      endFirst: getInt('E'),\\r\\n      numPages: getInt('N'),\\r\\n      mainXRefEntriesOffset: getInt('T'),\\r\\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\\r\\n    };\\r\\n  }\\r\\n};\\r\\nexports.Lexer = Lexer;\\r\\nexports.Linearization = Linearization;\\r\\nexports.Parser = Parser;\\r\\n\\r\\n/***/ }),\\r\\n/* 37 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar document = __w_pdfjs_require__(1).document;\\r\\nvar is = isObject(document) && isObject(document.createElement);\\r\\nmodule.exports = function (it) {\\r\\n  return is ? document.createElement(it) : {};\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 38 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nmodule.exports = function (it, S) {\\r\\n  if (!isObject(it)) return it;\\r\\n  var fn, val;\\r\\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\r\\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\\r\\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\\r\\n  throw TypeError(\\\"Can't convert object to primitive value\\\");\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 39 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar cof = __w_pdfjs_require__(27);\\r\\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\\r\\n  return cof(it) == 'String' ? it.split('') : Object(it);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 40 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (it) {\\r\\n  if (it == undefined) throw TypeError(\\\"Can't call method on  \\\" + it);\\r\\n  return it;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 41 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar shared = __w_pdfjs_require__(57)('keys');\\r\\nvar uid = __w_pdfjs_require__(18);\\r\\nmodule.exports = function (key) {\\r\\n  return shared[key] || (shared[key] = uid(key));\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 42 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\\r\\n\\r\\n/***/ }),\\r\\n/* 43 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $keys = __w_pdfjs_require__(55);\\r\\nvar enumBugKeys = __w_pdfjs_require__(42);\\r\\nmodule.exports = Object.keys || function keys(O) {\\r\\n  return $keys(O, enumBugKeys);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 44 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar ctx = __w_pdfjs_require__(13);\\r\\nvar IObject = __w_pdfjs_require__(39);\\r\\nvar toObject = __w_pdfjs_require__(20);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nvar asc = __w_pdfjs_require__(98);\\r\\nmodule.exports = function (TYPE, $create) {\\r\\n  var IS_MAP = TYPE == 1;\\r\\n  var IS_FILTER = TYPE == 2;\\r\\n  var IS_SOME = TYPE == 3;\\r\\n  var IS_EVERY = TYPE == 4;\\r\\n  var IS_FIND_INDEX = TYPE == 6;\\r\\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\\r\\n  var create = $create || asc;\\r\\n  return function ($this, callbackfn, that) {\\r\\n    var O = toObject($this);\\r\\n    var self = IObject(O);\\r\\n    var f = ctx(callbackfn, that, 3);\\r\\n    var length = toLength(self.length);\\r\\n    var index = 0;\\r\\n    var result = IS_MAP ? crea\";a.a+=\"te($this, length) : IS_FILTER ? create($this, 0) : undefined;\\r\\n    var val, res;\\r\\n    for (; length > index; index++) {\\r\\n      if (NO_HOLES || index in self) {\\r\\n        val = self[index];\\r\\n        res = f(val, index, O);\\r\\n        if (TYPE) {\\r\\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\\r\\n            case 3:\\r\\n              return true;\\r\\n            case 5:\\r\\n              return val;\\r\\n            case 6:\\r\\n              return index;\\r\\n            case 2:\\r\\n              result.push(val);\\r\\n          } else if (IS_EVERY) return false;\\r\\n        }\\r\\n      }\\r\\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 45 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar aFunction = __w_pdfjs_require__(24);\\r\\nvar SPECIES = __w_pdfjs_require__(4)('species');\\r\\nmodule.exports = function (O, D) {\\r\\n  var C = anObject(O).constructor;\\r\\n  var S;\\r\\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 46 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\r\\nvar SAFE_CLOSING = false;\\r\\ntry {\\r\\n  var riter = [7][ITERATOR]();\\r\\n  riter['return'] = function () {\\r\\n    SAFE_CLOSING = true;\\r\\n  };\\r\\n  Array.from(riter, function () {\\r\\n    throw 2;\\r\\n  });\\r\\n} catch (e) {}\\r\\nmodule.exports = function (exec, skipClosing) {\\r\\n  if (!skipClosing && !SAFE_CLOSING) return false;\\r\\n  var safe = false;\\r\\n  try {\\r\\n    var arr = [7];\\r\\n    var iter = arr[ITERATOR]();\\r\\n    iter.next = function () {\\r\\n      return { done: safe = true };\\r\\n    };\\r\\n    arr[ITERATOR] = function () {\\r\\n      return iter;\\r\\n    };\\r\\n    exec(arr);\\r\\n  } catch (e) {}\\r\\n  return safe;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 47 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar aFunction = __w_pdfjs_require__(24);\\r\\nfunction PromiseCapability(C) {\\r\\n  var resolve, reject;\\r\\n  this.promise = new C(function ($$resolve, $$reject) {\\r\\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\\r\\n    resolve = $$resolve;\\r\\n    reject = $$reject;\\r\\n  });\\r\\n  this.resolve = aFunction(resolve);\\r\\n  this.reject = aFunction(reject);\\r\\n}\\r\\nmodule.exports.f = function (C) {\\r\\n  return new PromiseCapability(C);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 48 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar META = __w_pdfjs_require__(18)('meta');\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar has = __w_pdfjs_require__(12);\\r\\nvar setDesc = __w_pdfjs_require__(15).f;\\r\\nvar id = 0;\\r\\nvar isExtensible = Object.isExtensible || function () {\\r\\n  return true;\\r\\n};\\r\\nvar FREEZE = !__w_pdfjs_require__(11)(function () {\\r\\n  return isExtensible(Object.preventExtensions({}));\\r\\n});\\r\\nvar setMeta = function setMeta(it) {\\r\\n  setDesc(it, META, {\\r\\n    value: {\\r\\n      i: 'O' + ++id,\\r\\n      w: {}\\r\\n    }\\r\\n  });\\r\\n};\\r\\nvar fastKey = function fastKey(it, create) {\\r\\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\\r\\n  if (!has(it, META)) {\\r\\n    if (!isExtensible(it)) return 'F';\\r\\n    if (!create) return 'E';\\r\\n    setMeta(it);\\r\\n  }\\r\\n  return it[META].i;\\r\\n};\\r\\nvar getWeak = function getWeak(it, create) {\\r\\n  if (!has(it, META)) {\\r\\n    if (!isExtensible(it)) return true;\\r\\n    if (!create) return false;\\r\\n    setMeta(it);\\r\\n  }\\r\\n  return it[META].w;\\r\\n};\\r\\nvar onFreeze = function onFreeze(it) {\\r\\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\\r\\n  return it;\\r\\n};\\r\\nvar meta = module.exports = {\\r\\n  KEY: META,\\r\\n  NEED: false,\\r\\n  fastKey: fastKey,\\r\\n  getWeak: getWeak,\\r\\n  onFreeze: onFreeze\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 49 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\\r\\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\\r\\n t['A'] = 0x0041;\\r\\n t['AE'] = 0x00C6;\\r\\n t['AEacute'] = 0x01FC;\\r\\n t['AEmacron'] = 0x01E2;\\r\\n t['AEsmall'] = 0xF7E6;\\r\\n t['Aacute'] = 0x00C1;\\r\\n t['Aacutesmall'] = 0xF7E1;\\r\\n t['Abreve'] = 0x0102;\\r\\n t['Abreveacute'] = 0x1EAE;\\r\\n t['Abrevecyrillic'] = 0x04D0;\\r\\n t['Abrevedotbelow'] = 0x1EB6;\\r\\n t['Abrevegrave'] = 0x1EB0;\\r\\n t['Abrevehookabove'] = 0x1EB2;\\r\\n t['Abrevetilde'] = 0x1EB4;\\r\\n t['Acaron'] = 0x01CD;\\r\\n t['Acircle'] = 0x24B6;\\r\\n t['Acircumflex'] = 0x00C2;\\r\\n t['Acircumflexacute'] = 0x1EA4;\\r\\n t['Acircumflexdotbelow'] = 0x1EAC;\\r\\n t['Acircumflexgrave'] = 0x1EA6;\\r\\n t['Acircumflexhookabove'] = 0x1EA8;\\r\\n t['Acircumflexsmall'] = 0xF7E2;\\r\\n t['Acircumflextilde'] = 0x1EAA;\\r\\n t['Acute'] = 0xF6C9;\\r\\n t['Acutesmall'] = 0xF7B4;\\r\\n t['Acyrillic'] = 0x0410;\\r\\n t['Adblgrave'] = 0x0200;\\r\\n t['Adieresis'] = 0x00C4;\\r\\n t['Adieresiscyrillic'] = 0x04D2;\\r\\n t['Adieresismacron'] = 0x01DE;\\r\\n t['Adieresissmall'] = 0xF7E4;\\r\\n t['Adotbelow'] = 0x1EA0;\\r\\n t['Adotmacron'] = 0x01E0;\\r\\n t['Agrave'] = 0x00C0;\\r\\n t['Agravesmall'] = 0xF7E0;\\r\\n t['Ahookabove'] = 0x1EA2;\\r\\n t['Aiecyrillic'] = 0x04D4;\\r\\n t['Ainvertedbreve'] = 0x0202;\\r\\n t['Alpha'] = 0x0391;\\r\\n t['Alphatonos'] = 0x0386;\\r\\n t['Amacron'] = 0x0100;\\r\\n t['Amonospace'] = 0xFF21;\\r\\n t['Aogonek'] = 0x0104;\\r\\n t['Aring'] = 0x00C5;\\r\\n t['Aringacute'] = 0x01FA;\\r\\n t['Aringbelow'] = 0x1E00;\\r\\n t['Aringsmall'] = 0xF7E5;\\r\\n t['Asmall'] = 0xF761;\\r\\n t['Atilde'] = 0x00C3;\\r\\n t['Atildesmall'] = 0xF7E3;\\r\\n t['Aybarmenian'] = 0x0531;\\r\\n t['B'] = 0x0042;\\r\\n t['Bcircle'] = 0x24B7;\\r\\n t['Bdotaccent'] = 0x1E02;\\r\\n t['Bdotbelow'] = 0x1E04;\\r\\n t['Becyrillic'] = 0x0411;\\r\\n t['Benarmenian'] = 0x0532;\\r\\n t['Beta'] = 0x0392;\\r\\n t['Bhook'] = 0x0181;\\r\\n t['Blinebelow'] = 0x1E06;\\r\\n t['Bmonospace'] = 0xFF22;\\r\\n t['Brevesmall'] = 0xF6F4;\\r\\n t['Bsmall'] = 0xF762;\\r\\n t['Btopbar'] = 0x0182;\\r\\n t['C'] = 0x0043;\\r\\n t['Caarmenian'] = 0x053E;\\r\\n t['Cacute'] = 0x0106;\\r\\n t['Caron'] = 0xF6CA;\\r\\n t['Caronsmall'] = 0xF6F5;\\r\\n t['Ccaron'] = 0x010C;\\r\\n t['Ccedilla'] = 0x00C7;\\r\\n t['Ccedillaacute'] = 0x1E08;\\r\\n t['Ccedillasmall'] = 0xF7E7;\\r\\n t['Ccircle'] = 0x24B8;\\r\\n t['Ccircumflex'] = 0x0108;\\r\\n t['Cdot'] = 0x010A;\\r\\n t['Cdotaccent'] = 0x010A;\\r\\n t['Cedillasmall'] = 0xF7B8;\\r\\n t['Chaarmenian'] = 0x0549;\\r\\n t['Cheabkhasiancyrillic'] = 0x04BC;\\r\\n t['Checyrillic'] = 0x0427;\\r\\n t['Chedescenderabkhasiancyrillic'] = 0x04BE;\\r\\n t['Chedescendercyrillic'] = 0x04B6;\\r\\n t['Chedieresiscyrillic'] = 0x04F4;\\r\\n t['Cheharmenian'] = 0x0543;\\r\\n t['Chekhakassiancyrillic'] = 0x04CB;\\r\\n t['Cheverticalstrokecyrillic'] = 0x04B8;\\r\\n t['Chi'] = 0x03A7;\\r\\n t['Chook'] = 0x0187;\\r\\n t['Circumflexsmall'] = 0xF6F6;\\r\\n t['Cmonospace'] = 0xFF23;\\r\\n t['Coarmenian'] = 0x0551;\\r\\n t['Csmall'] = 0xF763;\\r\\n t['D'] = 0x0044;\\r\\n t['DZ'] = 0x01F1;\\r\\n t['DZcaron'] = 0x01C4;\\r\\n t['Daarmenian'] = 0x0534;\\r\\n t['Dafrican'] = 0x0189;\\r\\n t['Dcaron'] = 0x010E;\\r\\n t['Dcedilla'] = 0x1E10;\\r\\n t['Dcircle'] = 0x24B9;\\r\\n t['Dcircumflexbelow'] = 0x1E12;\\r\\n t['Dcroat'] = 0x0110;\\r\\n t['Ddotaccent'] = 0x1E0A;\\r\\n t['Ddotbelow'] = 0x1E0C;\\r\\n t['Decyrillic'] = 0x0414;\\r\\n t['Deicoptic'] = 0x03EE;\\r\\n t['Delta'] = 0x2206;\\r\\n t['Deltagreek'] = 0x0394;\\r\\n t['Dhook'] = 0x018A;\\r\\n t['Dieresis'] = 0xF6CB;\\r\\n t['DieresisAcute'] = 0xF6CC;\\r\\n t['DieresisGrave'] = 0xF6CD;\\r\\n t['Dieresissmall'] = 0xF7A8;\\r\\n t['Digammagreek'] = 0x03DC;\\r\\n t['Djecyrillic'] = 0x0402;\\r\\n t['Dlinebelow'] = 0x1E0E;\\r\\n t['Dmonospace'] = 0xFF24;\\r\\n t['Dotaccentsmall'] = 0xF6F7;\\r\\n t['Dslash'] = 0x0110;\\r\\n t['Dsmall'] = 0xF764;\\r\\n t['Dtopbar'] = 0x018B;\\r\\n t['Dz'] = 0x01F2;\\r\\n t['Dzcaron'] = 0x01C5;\\r\\n t['Dzeabkhasiancyrillic'] = 0x04E0;\\r\\n t['Dzecyrillic'] = 0x0405;\\r\\n t['Dzhecyrillic'] = 0x040F;\\r\\n t['E'] = 0x0045;\\r\\n t['Eacute'] = 0x00C9;\\r\\n t['Eacutesmall'] = 0xF7E9;\\r\\n t['Ebreve'] = 0x0114;\\r\\n t['Ecaron'] = 0x011A;\\r\\n t['Ecedillabreve'] = 0x1E1C;\\r\\n t['Echarmenian'] = 0x0535;\\r\\n t['Ecircle'] = 0x24BA;\\r\\n t['Ecircumflex'] = 0x00CA;\\r\\n t['Ecircumflexacute'] = 0x1EBE;\\r\\n t['Ecircumflexbelow'] = 0x1E18;\\r\\n t['Ecircumflexdotbelow'] = 0x1EC6;\\r\\n t['Ecircumflexgrave'] = 0x1EC0;\\r\\n t['Ecircumflexhookabove'] = 0x1EC2;\\r\\n t['Ecircumflexsmall'] = 0xF7EA;\\r\\n t['Ecircumflextilde'] = 0x1EC4;\\r\\n t['Ecyrillic'] = 0x0404;\\r\\n t['Edblgrave'] = 0x0204;\\r\\n t['Edieresis'] = 0x00CB;\\r\\n t['Edieresissmall'] = 0xF7EB;\\r\\n t['Edot'] = 0x0116;\\r\\n t['Edotaccent'] = 0x0116;\\r\\n t['Edotbelow'] = 0x1EB8;\\r\\n t['Efcyrillic'] = 0x0424;\\r\\n t['Egrave'] = 0x00C8;\\r\\n t['Egravesmall'] = 0xF7E8;\\r\\n t['Eharmenian'] = 0x0537;\\r\\n t['Ehookabove'] = 0x1EBA;\\r\\n t['Eightroman'] = 0x2167;\\r\\n t['Einvertedbreve'] = 0x0206;\\r\\n t['Eiotifiedcyrillic'] = 0x0464;\\r\\n t['Elcyrillic'] = 0x041B;\\r\\n t['Elevenroman'] = 0x216A;\\r\\n t['Emacron'] = 0x0112;\\r\\n t['Emacronacute'] = 0x1E16;\\r\\n t['Emacrongrave'] = 0x1E14;\\r\\n t['Emcyrillic'] = 0x041C;\\r\\n t['Emonospace'] = 0xFF25;\\r\\n t['Encyrillic'] = 0x041D;\\r\\n t['Endescendercyrillic'] = 0x04A2;\\r\\n t['Eng'] = 0x014A;\\r\\n t['Enghecyrillic'] = 0x04A4;\\r\\n t['Enhookcyrillic'] = 0x04C7;\\r\\n t['Eogonek'] = 0x0118;\\r\\n t['Eopen'] = 0x0190;\\r\\n t['Epsilon'] = 0x0395;\\r\\n t['Epsilontonos'] = 0x0388;\\r\\n t['Ercyrillic'] = 0x0420;\\r\\n t['Ereversed'] = 0x018E;\\r\\n t['Ereversedcyrillic'] = 0x042D;\\r\\n t['Escyrillic'] = 0x0421;\\r\\n t['Esdescendercyrillic'] = 0x04AA;\\r\\n t['Esh'] = 0x01A9;\\r\\n t['Esmall'] = 0xF765;\\r\\n t['Eta'] = 0x0397;\\r\\n t['Etarmenian'] = 0x0538;\\r\\n t['Etatonos'] = 0x0389;\\r\\n t['Eth'] = 0x00D0;\\r\\n t['Ethsmall'] = 0xF7F0;\\r\\n t['Etilde'] = 0x1EBC;\\r\\n t['Etildebelow'] = 0x1E1A;\\r\\n t['Euro'] = 0x20AC;\\r\\n t['Ezh'] = 0x01B7;\\r\\n t['Ezhcaron'] = 0x01EE;\\r\\n t['Ezhreversed'] = 0x01B8;\\r\\n t['F'] = 0x0046;\\r\\n t['Fcircle'] = 0x24BB;\\r\\n t['Fdotaccent'] = 0x1E1E;\\r\\n t['Feharmenian'] = 0x0556;\\r\\n t['Feicoptic'] = 0x03E4;\\r\\n t['Fhook'] = 0x0191;\\r\\n t['Fitacyrillic'] = 0x0472;\\r\\n t['Fiveroman'] = 0x2164;\\r\\n t['Fmonospace'] = 0xFF26;\\r\\n t['Fourroman'] = 0x2163;\\r\\n t['Fsmall'] = 0xF766;\\r\\n t['G'] = 0x0047;\\r\\n t['GBsquare'] = 0x3387;\\r\\n t['Gacute'] = 0x01F4;\\r\\n t['Gamma'] = 0x0393;\\r\\n t['Gammaafrican'] = 0x0194;\\r\\n t['Gangiacoptic'] = 0x03EA;\\r\\n t['Gbreve'] = 0x011E;\\r\\n t['Gcaron'] = 0x01E6;\\r\\n t['Gcedilla'] = 0x0122;\\r\\n t['Gcircle'] = 0x24BC;\\r\\n t['Gcircumflex'] = 0x011C;\\r\\n t['Gcommaaccent'] = 0x0122;\\r\\n t['Gdot'] = 0x0120;\\r\\n t['Gdotaccent'] = 0x0120;\\r\\n t['Gecyrillic'] = 0x0413;\\r\\n t['Ghadarmenian'] = 0x0542;\\r\\n t['Ghemiddlehookcyrillic'] = 0x0494;\\r\\n t['Ghestrokecyrillic'] = 0x0492;\\r\\n t['Gheupturncyrillic'] = 0x0490;\\r\\n t['Ghook'] = 0x0193;\\r\\n t['Gimarmenian'] = 0x0533;\\r\\n t['Gjecyrillic'] = 0x0403;\\r\\n t['Gmacron'] = 0x1E20;\\r\\n t['Gmonospace'] = 0xFF27;\\r\\n t['Grave'] = 0xF6CE;\\r\\n t['Gravesmall'] = 0xF760;\\r\\n t['Gsmall'] = 0xF767;\\r\\n t['Gsmallhook'] = 0x029B;\\r\\n t['Gstroke'] = 0x01E4;\\r\\n t['H'] = 0x0048;\\r\\n t['H18533'] = 0x25CF;\\r\\n t['H18543'] = 0x25AA;\\r\\n t['H18551'] = 0x25AB;\\r\\n t['H22073'] = 0x25A1;\\r\\n t['HPsquare'] = 0x33CB;\\r\\n t['Haabkhasiancyrillic'] = 0x04A8;\\r\\n t['Hadescendercyrillic'] = 0x04B2;\\r\\n t['Hardsigncyrillic'] = 0x042A;\\r\\n t['Hbar'] = 0x0126;\\r\\n t['Hbrevebelow'] = 0x1E2A;\\r\\n t['Hcedilla'] = 0x1E28;\\r\\n t['Hcircle'] = 0x24BD;\\r\\n t['Hcircumflex'] = 0x0124;\\r\\n t['Hdieresis'] = 0x1E26;\\r\\n t['Hdotaccent'] = 0x1E22;\\r\\n t['Hdotbelow'] = 0x1E24;\\r\\n t['Hmonospace'] = 0xFF28;\\r\\n t['Hoarmenian'] = 0x0540;\\r\\n t['Horicoptic'] = 0x03E8;\\r\\n t['Hsmall'] = 0xF768;\\r\\n t['Hungarumlaut'] = 0xF6CF;\\r\\n t['Hungarumlautsmall'] = 0xF6F8;\\r\\n t['Hzsquare'] = 0x3390;\\r\\n t['I'] = 0x0049;\\r\\n t['IAcyrillic'] = 0x042F;\\r\\n t['IJ'] = 0x0132;\\r\\n t['IUcyrillic'] = 0x042E;\\r\\n t['Iacute'] = 0x00CD;\\r\\n t['Iacutesmall'] = 0xF7ED;\\r\\n t['Ibreve'] = 0x012C;\\r\\n t['Icaron'] = 0x01CF;\\r\\n t['Icircle'] = 0x24BE;\\r\\n t['Icircumflex'] = 0x00CE;\\r\\n t['Icircumflexsmall'] = 0xF7EE;\\r\\n t['Icyrillic'] = 0x0406;\\r\\n t['Idblgrave'] = 0x0208;\\r\\n t['Idieresis'] = 0x00CF;\\r\\n t['Idieresisacute'] = 0x1E2E;\\r\\n t['Idieresiscyrillic'] = 0x04E4;\\r\\n t['Idieresissmall'] = 0xF7EF;\\r\\n t['Idot'] = 0x0130;\\r\\n t['Idotaccent'] = 0x0130;\\r\\n t['Idotbelow'] = 0x1ECA;\\r\\n t['Iebrevecyrillic'] = 0x04D6;\\r\\n t['Iecyrillic'] = 0x0415;\\r\\n t['Ifraktur'] = 0x2111;\\r\\n t['Igrave'] = 0x00CC;\\r\\n t['Igravesmall'] = 0xF7EC;\\r\\n t['Ihookabove'] = 0x1EC8;\\r\\n t['Iicyrillic'] = 0x0418;\\r\\n t['Iinvertedbreve'] = 0x020A;\\r\\n t['Iishortcyrillic'] = 0x0419;\\r\\n t['Imacron'] = 0x012A;\\r\\n t['Imacroncyrillic'] = 0x04E2;\\r\\n t['Imonospace'] = 0xFF29;\\r\\n t['Iniarmenian'] = 0x053B;\\r\\n t['Iocyrillic'] = 0x0401;\\r\\n t['Iogonek'] = 0x012E;\\r\\n t['Iota'] = 0x0399;\\r\\n t['Iotaafrican'] = 0x0196;\\r\\n t['Iotadieresis'] = 0x03AA;\\r\\n t['Iotatonos'] = 0x038A;\\r\\n t['Ismall'] = 0xF769;\\r\\n t['Istroke'] = 0x0197;\\r\\n t['Itilde'] = 0x0128;\\r\\n t['Itildebelow'] = 0x1E2C;\\r\\n t['Izhitsacyrillic'] = 0x0474;\\r\\n t['Izhitsadblgravecyrillic'] = 0x0476;\\r\\n t['J'] = 0x004A;\\r\\n t['Jaarmenian'] = 0x0541;\\r\\n t['Jcircle'] = 0x24BF;\\r\\n t['Jcircumflex'] = 0x0134;\\r\\n t['Jecyrillic'] = 0x0408;\\r\\n t['Jheharmenian'] = 0x054B;\\r\\n t['Jmonospace'] = 0xFF2A;\\r\\n t['Jsmall'] = 0xF76A;\\r\\n t['K'] = 0x004B;\\r\\n t['KBsquare'] = 0x3385;\\r\\n t['KKsquare'] = 0x33CD;\\r\\n t['Kabashkircyrillic'] = 0x04A0;\\r\\n t['Kacute'] = 0x1E30;\\r\\n t['Kacyrillic'] = 0x041A;\\r\\n t['Kadescendercyrillic'] = 0x049A;\\r\\n t['Kahookcyrillic'] = 0x04C3;\\r\\n t['Kappa'] = 0x039A;\\r\\n t['Kastrokecyrillic'] = 0x049E;\\r\\n t['Kaverticalstrokecyrillic'] = 0x049C;\\r\\n t['Kcaron'] = 0x01E8;\\r\\n t['Kcedilla'] = 0x0136;\\r\\n t['Kcircle'] = 0x24C0;\\r\\n t['Kcommaaccent'] = 0x0136;\\r\\n t['Kdotbelow'] = 0x1E32;\\r\\n t['Keharmenian'] = 0x0554;\\r\\n t['Kenarmenian'] = 0x053F;\\r\\n t['Khacyrillic'] = 0x0425;\\r\\n t['Kheicoptic'] = 0x03E6;\\r\\n t['Khook'] = 0x0198;\\r\\n t['Kjecyrillic'] = 0x040C;\\r\\n t['Klinebelow'] = 0x1E34;\\r\\n t['Kmonospace'] = 0xFF2B;\\r\\n t['Koppacyrillic'] = 0x0480;\\r\\n t['Koppagreek'] = 0x03DE;\\r\\n t['Ksicyrillic'] = 0x046E;\\r\\n t['Ksmall'] = 0xF76B;\\r\\n t['L'] = 0x004C;\\r\\n t['LJ'] = 0x01C7;\\r\\n t['LL'] = 0xF6BF;\\r\\n t['Lacute'] = 0x0139;\\r\\n t['Lambda'] = 0x039B;\\r\\n t['Lcaron'] = 0x013D;\\r\\n t['Lcedilla'] = 0x013B;\\r\\n t['Lcircle'] = 0x24C1;\\r\\n t['Lcircumflexbelow'] = 0x1E3C;\\r\\n t['Lcommaaccent'] = 0x013B;\\r\\n t['Ldot'] = 0x013F;\\r\\n t['Ldotaccent'] = 0x013F;\\r\\n t['Ldotbelow'] = 0x1E36;\\r\\n t['Ldotbelowmacron'] = 0x1E38;\\r\\n t['Liwnarmenian'] = 0x053C;\\r\\n t['Lj'] = 0x01C8;\\r\\n t['Ljecyrillic'] = 0x0409;\\r\\n t['Llinebelow'] = 0x1E3A;\\r\\n t['Lmonospace'] = 0xFF2C;\\r\\n t['Lslash'] = 0x0141;\\r\\n t['Lslashsmall'] = 0xF6F9;\\r\\n t['Lsmall'] = 0xF76C;\\r\\n t['M'] = 0x004D;\\r\\n t['MBsquare'] = 0x3386;\\r\\n t['Macron'] = 0xF6D0;\\r\\n t['Macronsmall'] = 0xF7AF;\\r\\n t['Macute'] = 0x1E3E;\\r\\n t['Mcircle'] = 0x24C2;\\r\\n t['Mdotaccent'] = 0x1E40;\\r\\n t['Mdotbelow'] = 0x1E42;\\r\\n t['Menarmenian'] = 0x0544;\\r\\n t['Mmonospace'] = 0xFF2D;\\r\\n t['Msmall'] = 0xF76D;\\r\\n t['Mturned'] = 0x019C;\\r\\n t['Mu'] = 0x039C;\\r\\n t['N'] = 0x004E;\\r\\n t['NJ'] = 0x01CA;\\r\\n t['Nacute'] = 0x0143;\\r\\n t['Ncaron'] = 0x0147;\\r\\n t['Ncedilla'] = 0x0145;\\r\\n t['Ncircle'] = 0x24C3;\\r\\n t['Ncircumflexbelow'] = 0x1E4A;\\r\\n t['Ncommaaccent'] = 0x0145;\\r\\n t['Ndotaccent'] = 0x1E44;\\r\\n t['Ndotbelow'] = 0x1E46;\\r\\n t['Nhookleft'] = 0x019D;\\r\\n t['Nineroman'] = 0x2168;\\r\\n t['Nj'] = 0x01CB;\\r\\n t['Njecyrillic'] = 0x040A;\\r\\n t['Nlinebelow'] = 0x1E48;\\r\\n t['Nmonospace'] = 0xFF2E;\\r\\n t['Nowarmenian'] = 0x0546;\\r\\n t['Nsmall'] = 0xF76E;\\r\\n t['Ntilde'] = 0x00D1;\\r\\n t['Ntildesmall'] = 0xF7F1;\\r\\n t['Nu'] = 0x039D;\\r\\n t['O'] = 0x004F;\\r\\n t['OE'] = 0x0152;\\r\\n t['OEsmall'] = 0xF6FA;\\r\\n t['Oacute'] = 0x00D3;\\r\\n t['Oacutesmall'] = 0xF7F3;\\r\\n t['Obarredcyrillic'] = 0x04E8;\\r\\n t['Obarreddieresiscyrillic'] = 0x04EA;\\r\\n t['Obreve'] = 0x014E;\\r\\n t['Ocaron'] = 0x01D1;\\r\\n t['Ocenteredtilde'] = 0x019F;\\r\\n t['Ocircle'] = 0x24C4;\\r\\n t['Ocircumflex'] = 0x00D4;\\r\\n t['Ocircumflexacute'] = 0x1ED0;\\r\\n t['Ocircumflexdotbelow'] = 0x1ED8;\\r\\n t['Ocircumflexgrave'] = 0x1ED2;\\r\\n t['Ocircumflexhookabove'] = 0x1ED4;\\r\\n t['Ocircumflexsmall'] = 0xF7F4;\\r\\n t['Ocircumflextilde'] = 0x1ED6;\\r\\n t['Ocyrillic'] = 0x041E;\\r\\n t['Odblacute'] = 0x0150;\\r\\n t['Odblgrave'] = 0x020C;\\r\\n t['Odieresis'] = 0x00D6;\\r\\n t['Odieresiscyrillic'] = 0x04E6;\\r\\n t['Odieresissmall'] = 0xF7F6;\\r\\n t['Odotbelow'] = 0x1ECC;\\r\\n t['Ogoneksmall'] = 0xF6FB;\\r\\n t['Ograve'] = 0x00D2;\\r\\n t['Ogravesmall'] = 0xF7F2;\\r\\n t['Oharmenian'] = 0x0555;\\r\\n t['Ohm'] = 0x2126;\\r\\n t['Ohookabove'] = 0x1ECE;\\r\\n t['Ohorn'] = 0x01A0;\\r\\n t['Ohornacute'] = 0x1EDA;\\r\\n t['Ohorndotbelow'] = 0x1EE2;\\r\\n t['Ohorngrave'] = 0x1EDC;\\r\\n t['Ohornhookabove'] = 0x1EDE;\\r\\n t['Ohorntilde'] = 0x1EE0;\\r\\n t['Ohungarumlaut'] = 0x0150;\\r\\n t['Oi'] = 0x01A2;\\r\\n t['Oinvertedbreve'] = 0x020E;\\r\\n t['Omacron'] = 0x014C;\\r\\n t['Omacronacute'] = 0x1E52;\\r\\n t['Omacrongrave'] = 0x1E50;\\r\\n t['Omega'] = 0x2126;\\r\\n t['Omegacyrillic'] = 0x0460;\\r\\n t['Omegagreek'] = 0x03A9;\\r\\n t['Omegaro\";a.a+=\"undcyrillic'] = 0x047A;\\r\\n t['Omegatitlocyrillic'] = 0x047C;\\r\\n t['Omegatonos'] = 0x038F;\\r\\n t['Omicron'] = 0x039F;\\r\\n t['Omicrontonos'] = 0x038C;\\r\\n t['Omonospace'] = 0xFF2F;\\r\\n t['Oneroman'] = 0x2160;\\r\\n t['Oogonek'] = 0x01EA;\\r\\n t['Oogonekmacron'] = 0x01EC;\\r\\n t['Oopen'] = 0x0186;\\r\\n t['Oslash'] = 0x00D8;\\r\\n t['Oslashacute'] = 0x01FE;\\r\\n t['Oslashsmall'] = 0xF7F8;\\r\\n t['Osmall'] = 0xF76F;\\r\\n t['Ostrokeacute'] = 0x01FE;\\r\\n t['Otcyrillic'] = 0x047E;\\r\\n t['Otilde'] = 0x00D5;\\r\\n t['Otildeacute'] = 0x1E4C;\\r\\n t['Otildedieresis'] = 0x1E4E;\\r\\n t['Otildesmall'] = 0xF7F5;\\r\\n t['P'] = 0x0050;\\r\\n t['Pacute'] = 0x1E54;\\r\\n t['Pcircle'] = 0x24C5;\\r\\n t['Pdotaccent'] = 0x1E56;\\r\\n t['Pecyrillic'] = 0x041F;\\r\\n t['Peharmenian'] = 0x054A;\\r\\n t['Pemiddlehookcyrillic'] = 0x04A6;\\r\\n t['Phi'] = 0x03A6;\\r\\n t['Phook'] = 0x01A4;\\r\\n t['Pi'] = 0x03A0;\\r\\n t['Piwrarmenian'] = 0x0553;\\r\\n t['Pmonospace'] = 0xFF30;\\r\\n t['Psi'] = 0x03A8;\\r\\n t['Psicyrillic'] = 0x0470;\\r\\n t['Psmall'] = 0xF770;\\r\\n t['Q'] = 0x0051;\\r\\n t['Qcircle'] = 0x24C6;\\r\\n t['Qmonospace'] = 0xFF31;\\r\\n t['Qsmall'] = 0xF771;\\r\\n t['R'] = 0x0052;\\r\\n t['Raarmenian'] = 0x054C;\\r\\n t['Racute'] = 0x0154;\\r\\n t['Rcaron'] = 0x0158;\\r\\n t['Rcedilla'] = 0x0156;\\r\\n t['Rcircle'] = 0x24C7;\\r\\n t['Rcommaaccent'] = 0x0156;\\r\\n t['Rdblgrave'] = 0x0210;\\r\\n t['Rdotaccent'] = 0x1E58;\\r\\n t['Rdotbelow'] = 0x1E5A;\\r\\n t['Rdotbelowmacron'] = 0x1E5C;\\r\\n t['Reharmenian'] = 0x0550;\\r\\n t['Rfraktur'] = 0x211C;\\r\\n t['Rho'] = 0x03A1;\\r\\n t['Ringsmall'] = 0xF6FC;\\r\\n t['Rinvertedbreve'] = 0x0212;\\r\\n t['Rlinebelow'] = 0x1E5E;\\r\\n t['Rmonospace'] = 0xFF32;\\r\\n t['Rsmall'] = 0xF772;\\r\\n t['Rsmallinverted'] = 0x0281;\\r\\n t['Rsmallinvertedsuperior'] = 0x02B6;\\r\\n t['S'] = 0x0053;\\r\\n t['SF010000'] = 0x250C;\\r\\n t['SF020000'] = 0x2514;\\r\\n t['SF030000'] = 0x2510;\\r\\n t['SF040000'] = 0x2518;\\r\\n t['SF050000'] = 0x253C;\\r\\n t['SF060000'] = 0x252C;\\r\\n t['SF070000'] = 0x2534;\\r\\n t['SF080000'] = 0x251C;\\r\\n t['SF090000'] = 0x2524;\\r\\n t['SF100000'] = 0x2500;\\r\\n t['SF110000'] = 0x2502;\\r\\n t['SF190000'] = 0x2561;\\r\\n t['SF200000'] = 0x2562;\\r\\n t['SF210000'] = 0x2556;\\r\\n t['SF220000'] = 0x2555;\\r\\n t['SF230000'] = 0x2563;\\r\\n t['SF240000'] = 0x2551;\\r\\n t['SF250000'] = 0x2557;\\r\\n t['SF260000'] = 0x255D;\\r\\n t['SF270000'] = 0x255C;\\r\\n t['SF280000'] = 0x255B;\\r\\n t['SF360000'] = 0x255E;\\r\\n t['SF370000'] = 0x255F;\\r\\n t['SF380000'] = 0x255A;\\r\\n t['SF390000'] = 0x2554;\\r\\n t['SF400000'] = 0x2569;\\r\\n t['SF410000'] = 0x2566;\\r\\n t['SF420000'] = 0x2560;\\r\\n t['SF430000'] = 0x2550;\\r\\n t['SF440000'] = 0x256C;\\r\\n t['SF450000'] = 0x2567;\\r\\n t['SF460000'] = 0x2568;\\r\\n t['SF470000'] = 0x2564;\\r\\n t['SF480000'] = 0x2565;\\r\\n t['SF490000'] = 0x2559;\\r\\n t['SF500000'] = 0x2558;\\r\\n t['SF510000'] = 0x2552;\\r\\n t['SF520000'] = 0x2553;\\r\\n t['SF530000'] = 0x256B;\\r\\n t['SF540000'] = 0x256A;\\r\\n t['Sacute'] = 0x015A;\\r\\n t['Sacutedotaccent'] = 0x1E64;\\r\\n t['Sampigreek'] = 0x03E0;\\r\\n t['Scaron'] = 0x0160;\\r\\n t['Scarondotaccent'] = 0x1E66;\\r\\n t['Scaronsmall'] = 0xF6FD;\\r\\n t['Scedilla'] = 0x015E;\\r\\n t['Schwa'] = 0x018F;\\r\\n t['Schwacyrillic'] = 0x04D8;\\r\\n t['Schwadieresiscyrillic'] = 0x04DA;\\r\\n t['Scircle'] = 0x24C8;\\r\\n t['Scircumflex'] = 0x015C;\\r\\n t['Scommaaccent'] = 0x0218;\\r\\n t['Sdotaccent'] = 0x1E60;\\r\\n t['Sdotbelow'] = 0x1E62;\\r\\n t['Sdotbelowdotaccent'] = 0x1E68;\\r\\n t['Seharmenian'] = 0x054D;\\r\\n t['Sevenroman'] = 0x2166;\\r\\n t['Shaarmenian'] = 0x0547;\\r\\n t['Shacyrillic'] = 0x0428;\\r\\n t['Shchacyrillic'] = 0x0429;\\r\\n t['Sheicoptic'] = 0x03E2;\\r\\n t['Shhacyrillic'] = 0x04BA;\\r\\n t['Shimacoptic'] = 0x03EC;\\r\\n t['Sigma'] = 0x03A3;\\r\\n t['Sixroman'] = 0x2165;\\r\\n t['Smonospace'] = 0xFF33;\\r\\n t['Softsigncyrillic'] = 0x042C;\\r\\n t['Ssmall'] = 0xF773;\\r\\n t['Stigmagreek'] = 0x03DA;\\r\\n t['T'] = 0x0054;\\r\\n t['Tau'] = 0x03A4;\\r\\n t['Tbar'] = 0x0166;\\r\\n t['Tcaron'] = 0x0164;\\r\\n t['Tcedilla'] = 0x0162;\\r\\n t['Tcircle'] = 0x24C9;\\r\\n t['Tcircumflexbelow'] = 0x1E70;\\r\\n t['Tcommaaccent'] = 0x0162;\\r\\n t['Tdotaccent'] = 0x1E6A;\\r\\n t['Tdotbelow'] = 0x1E6C;\\r\\n t['Tecyrillic'] = 0x0422;\\r\\n t['Tedescendercyrillic'] = 0x04AC;\\r\\n t['Tenroman'] = 0x2169;\\r\\n t['Tetsecyrillic'] = 0x04B4;\\r\\n t['Theta'] = 0x0398;\\r\\n t['Thook'] = 0x01AC;\\r\\n t['Thorn'] = 0x00DE;\\r\\n t['Thornsmall'] = 0xF7FE;\\r\\n t['Threeroman'] = 0x2162;\\r\\n t['Tildesmall'] = 0xF6FE;\\r\\n t['Tiwnarmenian'] = 0x054F;\\r\\n t['Tlinebelow'] = 0x1E6E;\\r\\n t['Tmonospace'] = 0xFF34;\\r\\n t['Toarmenian'] = 0x0539;\\r\\n t['Tonefive'] = 0x01BC;\\r\\n t['Tonesix'] = 0x0184;\\r\\n t['Tonetwo'] = 0x01A7;\\r\\n t['Tretroflexhook'] = 0x01AE;\\r\\n t['Tsecyrillic'] = 0x0426;\\r\\n t['Tshecyrillic'] = 0x040B;\\r\\n t['Tsmall'] = 0xF774;\\r\\n t['Twelveroman'] = 0x216B;\\r\\n t['Tworoman'] = 0x2161;\\r\\n t['U'] = 0x0055;\\r\\n t['Uacute'] = 0x00DA;\\r\\n t['Uacutesmall'] = 0xF7FA;\\r\\n t['Ubreve'] = 0x016C;\\r\\n t['Ucaron'] = 0x01D3;\\r\\n t['Ucircle'] = 0x24CA;\\r\\n t['Ucircumflex'] = 0x00DB;\\r\\n t['Ucircumflexbelow'] = 0x1E76;\\r\\n t['Ucircumflexsmall'] = 0xF7FB;\\r\\n t['Ucyrillic'] = 0x0423;\\r\\n t['Udblacute'] = 0x0170;\\r\\n t['Udblgrave'] = 0x0214;\\r\\n t['Udieresis'] = 0x00DC;\\r\\n t['Udieresisacute'] = 0x01D7;\\r\\n t['Udieresisbelow'] = 0x1E72;\\r\\n t['Udieresiscaron'] = 0x01D9;\\r\\n t['Udieresiscyrillic'] = 0x04F0;\\r\\n t['Udieresisgrave'] = 0x01DB;\\r\\n t['Udieresismacron'] = 0x01D5;\\r\\n t['Udieresissmall'] = 0xF7FC;\\r\\n t['Udotbelow'] = 0x1EE4;\\r\\n t['Ugrave'] = 0x00D9;\\r\\n t['Ugravesmall'] = 0xF7F9;\\r\\n t['Uhookabove'] = 0x1EE6;\\r\\n t['Uhorn'] = 0x01AF;\\r\\n t['Uhornacute'] = 0x1EE8;\\r\\n t['Uhorndotbelow'] = 0x1EF0;\\r\\n t['Uhorngrave'] = 0x1EEA;\\r\\n t['Uhornhookabove'] = 0x1EEC;\\r\\n t['Uhorntilde'] = 0x1EEE;\\r\\n t['Uhungarumlaut'] = 0x0170;\\r\\n t['Uhungarumlautcyrillic'] = 0x04F2;\\r\\n t['Uinvertedbreve'] = 0x0216;\\r\\n t['Ukcyrillic'] = 0x0478;\\r\\n t['Umacron'] = 0x016A;\\r\\n t['Umacroncyrillic'] = 0x04EE;\\r\\n t['Umacrondieresis'] = 0x1E7A;\\r\\n t['Umonospace'] = 0xFF35;\\r\\n t['Uogonek'] = 0x0172;\\r\\n t['Upsilon'] = 0x03A5;\\r\\n t['Upsilon1'] = 0x03D2;\\r\\n t['Upsilonacutehooksymbolgreek'] = 0x03D3;\\r\\n t['Upsilonafrican'] = 0x01B1;\\r\\n t['Upsilondieresis'] = 0x03AB;\\r\\n t['Upsilondieresishooksymbolgreek'] = 0x03D4;\\r\\n t['Upsilonhooksymbol'] = 0x03D2;\\r\\n t['Upsilontonos'] = 0x038E;\\r\\n t['Uring'] = 0x016E;\\r\\n t['Ushortcyrillic'] = 0x040E;\\r\\n t['Usmall'] = 0xF775;\\r\\n t['Ustraightcyrillic'] = 0x04AE;\\r\\n t['Ustraightstrokecyrillic'] = 0x04B0;\\r\\n t['Utilde'] = 0x0168;\\r\\n t['Utildeacute'] = 0x1E78;\\r\\n t['Utildebelow'] = 0x1E74;\\r\\n t['V'] = 0x0056;\\r\\n t['Vcircle'] = 0x24CB;\\r\\n t['Vdotbelow'] = 0x1E7E;\\r\\n t['Vecyrillic'] = 0x0412;\\r\\n t['Vewarmenian'] = 0x054E;\\r\\n t['Vhook'] = 0x01B2;\\r\\n t['Vmonospace'] = 0xFF36;\\r\\n t['Voarmenian'] = 0x0548;\\r\\n t['Vsmall'] = 0xF776;\\r\\n t['Vtilde'] = 0x1E7C;\\r\\n t['W'] = 0x0057;\\r\\n t['Wacute'] = 0x1E82;\\r\\n t['Wcircle'] = 0x24CC;\\r\\n t['Wcircumflex'] = 0x0174;\\r\\n t['Wdieresis'] = 0x1E84;\\r\\n t['Wdotaccent'] = 0x1E86;\\r\\n t['Wdotbelow'] = 0x1E88;\\r\\n t['Wgrave'] = 0x1E80;\\r\\n t['Wmonospace'] = 0xFF37;\\r\\n t['Wsmall'] = 0xF777;\\r\\n t['X'] = 0x0058;\\r\\n t['Xcircle'] = 0x24CD;\\r\\n t['Xdieresis'] = 0x1E8C;\\r\\n t['Xdotaccent'] = 0x1E8A;\\r\\n t['Xeharmenian'] = 0x053D;\\r\\n t['Xi'] = 0x039E;\\r\\n t['Xmonospace'] = 0xFF38;\\r\\n t['Xsmall'] = 0xF778;\\r\\n t['Y'] = 0x0059;\\r\\n t['Yacute'] = 0x00DD;\\r\\n t['Yacutesmall'] = 0xF7FD;\\r\\n t['Yatcyrillic'] = 0x0462;\\r\\n t['Ycircle'] = 0x24CE;\\r\\n t['Ycircumflex'] = 0x0176;\\r\\n t['Ydieresis'] = 0x0178;\\r\\n t['Ydieresissmall'] = 0xF7FF;\\r\\n t['Ydotaccent'] = 0x1E8E;\\r\\n t['Ydotbelow'] = 0x1EF4;\\r\\n t['Yericyrillic'] = 0x042B;\\r\\n t['Yerudieresiscyrillic'] = 0x04F8;\\r\\n t['Ygrave'] = 0x1EF2;\\r\\n t['Yhook'] = 0x01B3;\\r\\n t['Yhookabove'] = 0x1EF6;\\r\\n t['Yiarmenian'] = 0x0545;\\r\\n t['Yicyrillic'] = 0x0407;\\r\\n t['Yiwnarmenian'] = 0x0552;\\r\\n t['Ymonospace'] = 0xFF39;\\r\\n t['Ysmall'] = 0xF779;\\r\\n t['Ytilde'] = 0x1EF8;\\r\\n t['Yusbigcyrillic'] = 0x046A;\\r\\n t['Yusbigiotifiedcyrillic'] = 0x046C;\\r\\n t['Yuslittlecyrillic'] = 0x0466;\\r\\n t['Yuslittleiotifiedcyrillic'] = 0x0468;\\r\\n t['Z'] = 0x005A;\\r\\n t['Zaarmenian'] = 0x0536;\\r\\n t['Zacute'] = 0x0179;\\r\\n t['Zcaron'] = 0x017D;\\r\\n t['Zcaronsmall'] = 0xF6FF;\\r\\n t['Zcircle'] = 0x24CF;\\r\\n t['Zcircumflex'] = 0x1E90;\\r\\n t['Zdot'] = 0x017B;\\r\\n t['Zdotaccent'] = 0x017B;\\r\\n t['Zdotbelow'] = 0x1E92;\\r\\n t['Zecyrillic'] = 0x0417;\\r\\n t['Zedescendercyrillic'] = 0x0498;\\r\\n t['Zedieresiscyrillic'] = 0x04DE;\\r\\n t['Zeta'] = 0x0396;\\r\\n t['Zhearmenian'] = 0x053A;\\r\\n t['Zhebrevecyrillic'] = 0x04C1;\\r\\n t['Zhecyrillic'] = 0x0416;\\r\\n t['Zhedescendercyrillic'] = 0x0496;\\r\\n t['Zhedieresiscyrillic'] = 0x04DC;\\r\\n t['Zlinebelow'] = 0x1E94;\\r\\n t['Zmonospace'] = 0xFF3A;\\r\\n t['Zsmall'] = 0xF77A;\\r\\n t['Zstroke'] = 0x01B5;\\r\\n t['a'] = 0x0061;\\r\\n t['aabengali'] = 0x0986;\\r\\n t['aacute'] = 0x00E1;\\r\\n t['aadeva'] = 0x0906;\\r\\n t['aagujarati'] = 0x0A86;\\r\\n t['aagurmukhi'] = 0x0A06;\\r\\n t['aamatragurmukhi'] = 0x0A3E;\\r\\n t['aarusquare'] = 0x3303;\\r\\n t['aavowelsignbengali'] = 0x09BE;\\r\\n t['aavowelsigndeva'] = 0x093E;\\r\\n t['aavowelsigngujarati'] = 0x0ABE;\\r\\n t['abbreviationmarkarmenian'] = 0x055F;\\r\\n t['abbreviationsigndeva'] = 0x0970;\\r\\n t['abengali'] = 0x0985;\\r\\n t['abopomofo'] = 0x311A;\\r\\n t['abreve'] = 0x0103;\\r\\n t['abreveacute'] = 0x1EAF;\\r\\n t['abrevecyrillic'] = 0x04D1;\\r\\n t['abrevedotbelow'] = 0x1EB7;\\r\\n t['abrevegrave'] = 0x1EB1;\\r\\n t['abrevehookabove'] = 0x1EB3;\\r\\n t['abrevetilde'] = 0x1EB5;\\r\\n t['acaron'] = 0x01CE;\\r\\n t['acircle'] = 0x24D0;\\r\\n t['acircumflex'] = 0x00E2;\\r\\n t['acircumflexacute'] = 0x1EA5;\\r\\n t['acircumflexdotbelow'] = 0x1EAD;\\r\\n t['acircumflexgrave'] = 0x1EA7;\\r\\n t['acircumflexhookabove'] = 0x1EA9;\\r\\n t['acircumflextilde'] = 0x1EAB;\\r\\n t['acute'] = 0x00B4;\\r\\n t['acutebelowcmb'] = 0x0317;\\r\\n t['acutecmb'] = 0x0301;\\r\\n t['acutecomb'] = 0x0301;\\r\\n t['acutedeva'] = 0x0954;\\r\\n t['acutelowmod'] = 0x02CF;\\r\\n t['acutetonecmb'] = 0x0341;\\r\\n t['acyrillic'] = 0x0430;\\r\\n t['adblgrave'] = 0x0201;\\r\\n t['addakgurmukhi'] = 0x0A71;\\r\\n t['adeva'] = 0x0905;\\r\\n t['adieresis'] = 0x00E4;\\r\\n t['adieresiscyrillic'] = 0x04D3;\\r\\n t['adieresismacron'] = 0x01DF;\\r\\n t['adotbelow'] = 0x1EA1;\\r\\n t['adotmacron'] = 0x01E1;\\r\\n t['ae'] = 0x00E6;\\r\\n t['aeacute'] = 0x01FD;\\r\\n t['aekorean'] = 0x3150;\\r\\n t['aemacron'] = 0x01E3;\\r\\n t['afii00208'] = 0x2015;\\r\\n t['afii08941'] = 0x20A4;\\r\\n t['afii10017'] = 0x0410;\\r\\n t['afii10018'] = 0x0411;\\r\\n t['afii10019'] = 0x0412;\\r\\n t['afii10020'] = 0x0413;\\r\\n t['afii10021'] = 0x0414;\\r\\n t['afii10022'] = 0x0415;\\r\\n t['afii10023'] = 0x0401;\\r\\n t['afii10024'] = 0x0416;\\r\\n t['afii10025'] = 0x0417;\\r\\n t['afii10026'] = 0x0418;\\r\\n t['afii10027'] = 0x0419;\\r\\n t['afii10028'] = 0x041A;\\r\\n t['afii10029'] = 0x041B;\\r\\n t['afii10030'] = 0x041C;\\r\\n t['afii10031'] = 0x041D;\\r\\n t['afii10032'] = 0x041E;\\r\\n t['afii10033'] = 0x041F;\\r\\n t['afii10034'] = 0x0420;\\r\\n t['afii10035'] = 0x0421;\\r\\n t['afii10036'] = 0x0422;\\r\\n t['afii10037'] = 0x0423;\\r\\n t['afii10038'] = 0x0424;\\r\\n t['afii10039'] = 0x0425;\\r\\n t['afii10040'] = 0x0426;\\r\\n t['afii10041'] = 0x0427;\\r\\n t['afii10042'] = 0x0428;\\r\\n t['afii10043'] = 0x0429;\\r\\n t['afii10044'] = 0x042A;\\r\\n t['afii10045'] = 0x042B;\\r\\n t['afii10046'] = 0x042C;\\r\\n t['afii10047'] = 0x042D;\\r\\n t['afii10048'] = 0x042E;\\r\\n t['afii10049'] = 0x042F;\\r\\n t['afii10050'] = 0x0490;\\r\\n t['afii10051'] = 0x0402;\\r\\n t['afii10052'] = 0x0403;\\r\\n t['afii10053'] = 0x0404;\\r\\n t['afii10054'] = 0x0405;\\r\\n t['afii10055'] = 0x0406;\\r\\n t['afii10056'] = 0x0407;\\r\\n t['afii10057'] = 0x0408;\\r\\n t['afii10058'] = 0x0409;\\r\\n t['afii10059'] = 0x040A;\\r\\n t['afii10060'] = 0x040B;\\r\\n t['afii10061'] = 0x040C;\\r\\n t['afii10062'] = 0x040E;\\r\\n t['afii10063'] = 0xF6C4;\\r\\n t['afii10064'] = 0xF6C5;\\r\\n t['afii10065'] = 0x0430;\\r\\n t['afii10066'] = 0x0431;\\r\\n t['afii10067'] = 0x0432;\\r\\n t['afii10068'] = 0x0433;\\r\\n t['afii10069'] = 0x0434;\\r\\n t['afii10070'] = 0x0435;\\r\\n t['afii10071'] = 0x0451;\\r\\n t['afii10072'] = 0x0436;\\r\\n t['afii10073'] = 0x0437;\\r\\n t['afii10074'] = 0x0438;\\r\\n t['afii10075'] = 0x0439;\\r\\n t['afii10076'] = 0x043A;\\r\\n t['afii10077'] = 0x043B;\\r\\n t['afii10078'] = 0x043C;\\r\\n t['afii10079'] = 0x043D;\\r\\n t['afii10080'] = 0x043E;\\r\\n t['afii10081'] = 0x043F;\\r\\n t['afii10082'] = 0x0440;\\r\\n t['afii10083'] = 0x0441;\\r\\n t['afii10084'] = 0x0442;\\r\\n t['afii10085'] = 0x0443;\\r\\n t['afii10086'] = 0x0444;\\r\\n t['afii10087'] = 0x0445;\\r\\n t['afii10088'] = 0x0446;\\r\\n t['afii10089'] = 0x0447;\\r\\n t['afii10090'] = 0x0448;\\r\\n t['afii10091'] = 0x0449;\\r\\n t['afii10092'] = 0x044A;\\r\\n t['afii10093'] = 0x044B;\\r\\n t['afii10094'] = 0x044C;\\r\\n t['afii10095'] = 0x044D;\\r\\n t['afii10096'] = 0x044E;\\r\\n t['afii10097'] = 0x044F;\\r\\n t['afii10098'] = 0x0491;\\r\\n t['afii10099'] = 0x0452;\\r\\n t['afii10100'] = 0x0453;\\r\\n t['afii10101'] = 0x0454;\\r\\n t['afii10102'] = 0x0455;\\r\\n t['afii10103'] = 0x0456;\\r\\n t['afii10104'] = 0x0457;\\r\\n t['afii10105'] = 0x0458;\\r\\n t['afii10106'] = 0x0459;\\r\\n t['afii10107'] = 0x045A;\\r\\n t['afii10108'] = 0x045B;\\r\\n t['afii10109'] = 0x045C;\\r\\n t['afii10110'] = 0x045E;\\r\\n t['afii10145'] = 0x040F;\\r\\n t['afii10146'] = 0x0462;\\r\\n t['afii10147'] = 0x0472;\\r\\n t['afii10148'] = 0x0474;\\r\\n t['afii10192'] = 0xF6C6;\\r\\n t['afii10193'] = 0x045F;\\r\\n t['afii10194'] = 0x0463;\\r\\n t['afii10195'] = 0x0473;\\r\\n t['afii10196'] = 0x0475;\\r\\n t['afii10831'] = 0xF6C7;\\r\\n t['afii10832'] = 0xF6C8;\\r\\n t['afii10846'] = 0x04D9;\\r\\n t['afii299'] = 0x200E;\\r\\n t['afii300'] = 0x200F;\\r\\n t['afii301'] = 0x200D;\\r\\n t['afii57381'] = 0x066A;\\r\\n t['afii57388'] = 0x060C;\\r\\n t['afii57392'] = 0x0660;\\r\\n t['afii57393'] = 0x0661;\\r\\n t['afii57394'] = 0x0662;\\r\\n t['afii57395'] = 0x0663;\\r\\n t['afii57396'] = 0x0664;\\r\\n t['afii57397'] = 0x0665;\\r\\n t['afii57398'] = 0x0666;\\r\\n t['afii57399'] = 0x0667;\\r\\n t['afii57400'] = 0x0668;\\r\\n t['afii57401'] = 0x0669;\\r\\n t['afii57403'] = 0x061B;\\r\\n t['afii57407'] = 0x061F;\\r\\n t['afii57409'] = 0x0621;\\r\\n t['afii57410'] = 0x0622;\\r\\n t['afii57411'] = 0x0623;\\r\\n t['afii57412'] = 0x0624;\\r\\n t['afii57413'] = 0x0625;\\r\\n t['afii57414'] = 0x0626;\\r\\n t['afii57415'] = 0x0627;\\r\\n t['afii57416'] = 0x0628;\\r\\n t['afii57417'] = 0x0629;\\r\\n t['afii57418'] = 0x062A;\\r\\n t['afii57419'] = 0x062B;\\r\\n t['afii57420'] = 0x062C;\\r\\n t['afii57421'] = 0x062D;\\r\\n t['afii57422'] = 0x062E;\\r\\n t['afii57423'] = 0x062F;\\r\\n t['afii57424'] = 0x0630;\\r\\n t['afii57425'] = 0x0631;\\r\\n t['afii57426'] = 0x0632;\\r\\n t['afii57427'] = 0x0633;\\r\\n t['afii57428'] = 0x0634;\\r\\n t['afii57429'] = 0x0635;\\r\\n t['afii57430'] = 0x0636;\\r\\n t['afii57431'] = 0x0637;\\r\\n t['afii57432'] = 0x0638;\\r\\n t['afii57433'] = 0x0639;\\r\\n t['afii57434'] = 0x063A;\\r\\n t['afii57440'] = 0x0640;\\r\\n t['afii57441'] = 0x0641;\\r\\n t['afii57442'] = 0x0642;\\r\\n t['afii57443'] = 0x0643;\\r\\n t['afii57444'] = 0x0644;\\r\\n t['afii57445'] = 0x0645;\\r\\n t['afii57446'] = 0x0646;\\r\\n t['afii57448'] = 0x0648;\\r\\n t['afii57449'] = 0x0649;\\r\\n t['afii57450'] = 0x064A;\\r\\n t['afii57451'] = 0x064B;\\r\\n t['afii57452'] = 0x064C;\\r\\n t['afii57453'] = 0x064D;\\r\\n t['afii57454'] = 0x064E;\\r\\n t['afii57455'] = 0x064F;\\r\\n t['afii57456'] = 0x0650;\\r\\n t['afii57457'] = 0x0651;\\r\\n t['afii57458'] = 0x0652;\\r\\n t['afii57470'] = 0x0647;\\r\\n t['afii57505'] = 0x06A4;\\r\\n t['afii57506'] = 0x067E;\\r\\n t['afii57507'] = 0x0686;\\r\\n t['afii57508'] = 0x0698;\\r\\n t['afii57509'] = 0x06AF;\\r\\n t['afii57511'] = 0x0679;\\r\\n t['afii57512'] = 0x0688;\\r\\n t['afii57513'] = 0x0691;\\r\\n t['afii57514'] = 0x06BA;\\r\\n t['afii57519'] = 0x06D2;\\r\\n t['afii57534'] = 0x06D5;\\r\\n t['afii57636'] = 0x20AA;\\r\\n t['afii57645'] = 0x05BE;\\r\\n t['afii57658'] = 0x05C3;\\r\\n t['afii57664'] = 0x05D0;\\r\\n t['afii57665'] = 0x05D1;\\r\\n t['afii57666'] = 0x05D2;\\r\\n t['afii57667'] = 0x05D3;\\r\\n t['afii57668'] = 0x05D4;\\r\\n t['afii57669'] = 0x05D5;\\r\\n t['afii57670'] = 0x05D6;\\r\\n t['afii57671'] = 0x05D7;\\r\\n t['afii57672'] = 0x05D8;\\r\\n t['afii57673'] = 0x05D9;\\r\\n t['afii57674'] = 0x05DA;\\r\\n t['afii57675'] = 0x05DB;\\r\\n t['afii57676'] = 0x05DC;\\r\\n t['afii57677'] = 0x05DD;\\r\\n t['afii57678'] = 0x05DE;\\r\\n t['afii57679'] = 0x05DF;\\r\\n t['afii57680'] = 0x05E0;\\r\\n t['afii57681'] = 0x05E1;\\r\\n t['afii57682'] = 0x05E2;\\r\\n t['afii57683'] = 0x05E3;\\r\\n t['afii57684'] = 0x05E4;\\r\\n t['afii57685'] = 0x05E5;\\r\\n t['afii57686'] = 0x05E6;\\r\\n t['afii57687'] = 0x05E7;\\r\\n t['afii57688'] = 0x05E8;\\r\\n t['afii57689'] = 0x05E9;\\r\\n t['afii57690'] = 0x05EA;\\r\\n t['afii57694'] = 0xFB2A;\\r\\n t['afii57695'] = 0xFB2B;\\r\\n t['afii57700'] = 0xFB4B;\\r\\n t['afii57705'] = 0xFB1F;\\r\\n t['afii57716'] = 0x05F0;\\r\\n t['afii57717'] = 0x05F1;\\r\\n t['afii57718'] = 0x05F2;\\r\\n t['afii57723'] = 0xFB35;\\r\\n t['afii57793'] = 0x05B4;\\r\\n t['afii57794'] = 0x05B5;\\r\\n t['afii57795'] = 0x05B6;\\r\\n t['afii57796'] = 0x05BB;\\r\\n t['afii57797'] = 0x05B8;\\r\\n t['afii57798'] = 0x05B7;\\r\\n t['afii57799'] = 0x05B0;\\r\\n t['afii57800'] = 0x05B2;\\r\\n t['afii57801'] = 0x05B1;\\r\\n t['afii57802'] = 0x05B3;\\r\\n t['afii57803'] = 0x05C2;\\r\\n t['afii57804'] = 0x05C1;\\r\\n t['afii57806'] = 0x05B9;\\r\\n t['afii57807'] = 0x05BC;\\r\\n t['afii57839'] = 0x05BD;\\r\\n t['afii57841'] = 0x05BF;\\r\\n t['afii57842'] = 0x05C0;\\r\\n t['afii57929'] = 0x02BC;\\r\\n t['afii61248'] = 0x2105;\\r\\n t['afii61289'] = 0x2113;\\r\\n t['afii61352'] = 0x2116;\\r\\n t['afii61573'] = 0x202C;\\r\\n t['afii61574'] = 0x202D;\\r\\n t['afii61575'] = 0x202E;\\r\\n t['afii61664'] = 0x200C;\\r\\n t['afii63167'] = 0x066D;\\r\\n t['afii64937'] = 0x02BD;\\r\\n t['agrave'] = 0x00E0;\\r\\n t['agujarati'] = 0x0A85;\\r\\n t['agurmukhi'] = 0x0A05;\\r\\n t['ahiragana'] = 0x3042;\\r\\n t['ahookabove'] = 0x1EA3;\\r\\n\";a.a+=\" t['aibengali'] = 0x0990;\\r\\n t['aibopomofo'] = 0x311E;\\r\\n t['aideva'] = 0x0910;\\r\\n t['aiecyrillic'] = 0x04D5;\\r\\n t['aigujarati'] = 0x0A90;\\r\\n t['aigurmukhi'] = 0x0A10;\\r\\n t['aimatragurmukhi'] = 0x0A48;\\r\\n t['ainarabic'] = 0x0639;\\r\\n t['ainfinalarabic'] = 0xFECA;\\r\\n t['aininitialarabic'] = 0xFECB;\\r\\n t['ainmedialarabic'] = 0xFECC;\\r\\n t['ainvertedbreve'] = 0x0203;\\r\\n t['aivowelsignbengali'] = 0x09C8;\\r\\n t['aivowelsigndeva'] = 0x0948;\\r\\n t['aivowelsigngujarati'] = 0x0AC8;\\r\\n t['akatakana'] = 0x30A2;\\r\\n t['akatakanahalfwidth'] = 0xFF71;\\r\\n t['akorean'] = 0x314F;\\r\\n t['alef'] = 0x05D0;\\r\\n t['alefarabic'] = 0x0627;\\r\\n t['alefdageshhebrew'] = 0xFB30;\\r\\n t['aleffinalarabic'] = 0xFE8E;\\r\\n t['alefhamzaabovearabic'] = 0x0623;\\r\\n t['alefhamzaabovefinalarabic'] = 0xFE84;\\r\\n t['alefhamzabelowarabic'] = 0x0625;\\r\\n t['alefhamzabelowfinalarabic'] = 0xFE88;\\r\\n t['alefhebrew'] = 0x05D0;\\r\\n t['aleflamedhebrew'] = 0xFB4F;\\r\\n t['alefmaddaabovearabic'] = 0x0622;\\r\\n t['alefmaddaabovefinalarabic'] = 0xFE82;\\r\\n t['alefmaksuraarabic'] = 0x0649;\\r\\n t['alefmaksurafinalarabic'] = 0xFEF0;\\r\\n t['alefmaksurainitialarabic'] = 0xFEF3;\\r\\n t['alefmaksuramedialarabic'] = 0xFEF4;\\r\\n t['alefpatahhebrew'] = 0xFB2E;\\r\\n t['alefqamatshebrew'] = 0xFB2F;\\r\\n t['aleph'] = 0x2135;\\r\\n t['allequal'] = 0x224C;\\r\\n t['alpha'] = 0x03B1;\\r\\n t['alphatonos'] = 0x03AC;\\r\\n t['amacron'] = 0x0101;\\r\\n t['amonospace'] = 0xFF41;\\r\\n t['ampersand'] = 0x0026;\\r\\n t['ampersandmonospace'] = 0xFF06;\\r\\n t['ampersandsmall'] = 0xF726;\\r\\n t['amsquare'] = 0x33C2;\\r\\n t['anbopomofo'] = 0x3122;\\r\\n t['angbopomofo'] = 0x3124;\\r\\n t['angbracketleft'] = 0x3008;\\r\\n t['angbracketright'] = 0x3009;\\r\\n t['angkhankhuthai'] = 0x0E5A;\\r\\n t['angle'] = 0x2220;\\r\\n t['anglebracketleft'] = 0x3008;\\r\\n t['anglebracketleftvertical'] = 0xFE3F;\\r\\n t['anglebracketright'] = 0x3009;\\r\\n t['anglebracketrightvertical'] = 0xFE40;\\r\\n t['angleleft'] = 0x2329;\\r\\n t['angleright'] = 0x232A;\\r\\n t['angstrom'] = 0x212B;\\r\\n t['anoteleia'] = 0x0387;\\r\\n t['anudattadeva'] = 0x0952;\\r\\n t['anusvarabengali'] = 0x0982;\\r\\n t['anusvaradeva'] = 0x0902;\\r\\n t['anusvaragujarati'] = 0x0A82;\\r\\n t['aogonek'] = 0x0105;\\r\\n t['apaatosquare'] = 0x3300;\\r\\n t['aparen'] = 0x249C;\\r\\n t['apostrophearmenian'] = 0x055A;\\r\\n t['apostrophemod'] = 0x02BC;\\r\\n t['apple'] = 0xF8FF;\\r\\n t['approaches'] = 0x2250;\\r\\n t['approxequal'] = 0x2248;\\r\\n t['approxequalorimage'] = 0x2252;\\r\\n t['approximatelyequal'] = 0x2245;\\r\\n t['araeaekorean'] = 0x318E;\\r\\n t['araeakorean'] = 0x318D;\\r\\n t['arc'] = 0x2312;\\r\\n t['arighthalfring'] = 0x1E9A;\\r\\n t['aring'] = 0x00E5;\\r\\n t['aringacute'] = 0x01FB;\\r\\n t['aringbelow'] = 0x1E01;\\r\\n t['arrowboth'] = 0x2194;\\r\\n t['arrowdashdown'] = 0x21E3;\\r\\n t['arrowdashleft'] = 0x21E0;\\r\\n t['arrowdashright'] = 0x21E2;\\r\\n t['arrowdashup'] = 0x21E1;\\r\\n t['arrowdblboth'] = 0x21D4;\\r\\n t['arrowdbldown'] = 0x21D3;\\r\\n t['arrowdblleft'] = 0x21D0;\\r\\n t['arrowdblright'] = 0x21D2;\\r\\n t['arrowdblup'] = 0x21D1;\\r\\n t['arrowdown'] = 0x2193;\\r\\n t['arrowdownleft'] = 0x2199;\\r\\n t['arrowdownright'] = 0x2198;\\r\\n t['arrowdownwhite'] = 0x21E9;\\r\\n t['arrowheaddownmod'] = 0x02C5;\\r\\n t['arrowheadleftmod'] = 0x02C2;\\r\\n t['arrowheadrightmod'] = 0x02C3;\\r\\n t['arrowheadupmod'] = 0x02C4;\\r\\n t['arrowhorizex'] = 0xF8E7;\\r\\n t['arrowleft'] = 0x2190;\\r\\n t['arrowleftdbl'] = 0x21D0;\\r\\n t['arrowleftdblstroke'] = 0x21CD;\\r\\n t['arrowleftoverright'] = 0x21C6;\\r\\n t['arrowleftwhite'] = 0x21E6;\\r\\n t['arrowright'] = 0x2192;\\r\\n t['arrowrightdblstroke'] = 0x21CF;\\r\\n t['arrowrightheavy'] = 0x279E;\\r\\n t['arrowrightoverleft'] = 0x21C4;\\r\\n t['arrowrightwhite'] = 0x21E8;\\r\\n t['arrowtableft'] = 0x21E4;\\r\\n t['arrowtabright'] = 0x21E5;\\r\\n t['arrowup'] = 0x2191;\\r\\n t['arrowupdn'] = 0x2195;\\r\\n t['arrowupdnbse'] = 0x21A8;\\r\\n t['arrowupdownbase'] = 0x21A8;\\r\\n t['arrowupleft'] = 0x2196;\\r\\n t['arrowupleftofdown'] = 0x21C5;\\r\\n t['arrowupright'] = 0x2197;\\r\\n t['arrowupwhite'] = 0x21E7;\\r\\n t['arrowvertex'] = 0xF8E6;\\r\\n t['asciicircum'] = 0x005E;\\r\\n t['asciicircummonospace'] = 0xFF3E;\\r\\n t['asciitilde'] = 0x007E;\\r\\n t['asciitildemonospace'] = 0xFF5E;\\r\\n t['ascript'] = 0x0251;\\r\\n t['ascriptturned'] = 0x0252;\\r\\n t['asmallhiragana'] = 0x3041;\\r\\n t['asmallkatakana'] = 0x30A1;\\r\\n t['asmallkatakanahalfwidth'] = 0xFF67;\\r\\n t['asterisk'] = 0x002A;\\r\\n t['asteriskaltonearabic'] = 0x066D;\\r\\n t['asteriskarabic'] = 0x066D;\\r\\n t['asteriskmath'] = 0x2217;\\r\\n t['asteriskmonospace'] = 0xFF0A;\\r\\n t['asterisksmall'] = 0xFE61;\\r\\n t['asterism'] = 0x2042;\\r\\n t['asuperior'] = 0xF6E9;\\r\\n t['asymptoticallyequal'] = 0x2243;\\r\\n t['at'] = 0x0040;\\r\\n t['atilde'] = 0x00E3;\\r\\n t['atmonospace'] = 0xFF20;\\r\\n t['atsmall'] = 0xFE6B;\\r\\n t['aturned'] = 0x0250;\\r\\n t['aubengali'] = 0x0994;\\r\\n t['aubopomofo'] = 0x3120;\\r\\n t['audeva'] = 0x0914;\\r\\n t['augujarati'] = 0x0A94;\\r\\n t['augurmukhi'] = 0x0A14;\\r\\n t['aulengthmarkbengali'] = 0x09D7;\\r\\n t['aumatragurmukhi'] = 0x0A4C;\\r\\n t['auvowelsignbengali'] = 0x09CC;\\r\\n t['auvowelsigndeva'] = 0x094C;\\r\\n t['auvowelsigngujarati'] = 0x0ACC;\\r\\n t['avagrahadeva'] = 0x093D;\\r\\n t['aybarmenian'] = 0x0561;\\r\\n t['ayin'] = 0x05E2;\\r\\n t['ayinaltonehebrew'] = 0xFB20;\\r\\n t['ayinhebrew'] = 0x05E2;\\r\\n t['b'] = 0x0062;\\r\\n t['babengali'] = 0x09AC;\\r\\n t['backslash'] = 0x005C;\\r\\n t['backslashmonospace'] = 0xFF3C;\\r\\n t['badeva'] = 0x092C;\\r\\n t['bagujarati'] = 0x0AAC;\\r\\n t['bagurmukhi'] = 0x0A2C;\\r\\n t['bahiragana'] = 0x3070;\\r\\n t['bahtthai'] = 0x0E3F;\\r\\n t['bakatakana'] = 0x30D0;\\r\\n t['bar'] = 0x007C;\\r\\n t['barmonospace'] = 0xFF5C;\\r\\n t['bbopomofo'] = 0x3105;\\r\\n t['bcircle'] = 0x24D1;\\r\\n t['bdotaccent'] = 0x1E03;\\r\\n t['bdotbelow'] = 0x1E05;\\r\\n t['beamedsixteenthnotes'] = 0x266C;\\r\\n t['because'] = 0x2235;\\r\\n t['becyrillic'] = 0x0431;\\r\\n t['beharabic'] = 0x0628;\\r\\n t['behfinalarabic'] = 0xFE90;\\r\\n t['behinitialarabic'] = 0xFE91;\\r\\n t['behiragana'] = 0x3079;\\r\\n t['behmedialarabic'] = 0xFE92;\\r\\n t['behmeeminitialarabic'] = 0xFC9F;\\r\\n t['behmeemisolatedarabic'] = 0xFC08;\\r\\n t['behnoonfinalarabic'] = 0xFC6D;\\r\\n t['bekatakana'] = 0x30D9;\\r\\n t['benarmenian'] = 0x0562;\\r\\n t['bet'] = 0x05D1;\\r\\n t['beta'] = 0x03B2;\\r\\n t['betasymbolgreek'] = 0x03D0;\\r\\n t['betdagesh'] = 0xFB31;\\r\\n t['betdageshhebrew'] = 0xFB31;\\r\\n t['bethebrew'] = 0x05D1;\\r\\n t['betrafehebrew'] = 0xFB4C;\\r\\n t['bhabengali'] = 0x09AD;\\r\\n t['bhadeva'] = 0x092D;\\r\\n t['bhagujarati'] = 0x0AAD;\\r\\n t['bhagurmukhi'] = 0x0A2D;\\r\\n t['bhook'] = 0x0253;\\r\\n t['bihiragana'] = 0x3073;\\r\\n t['bikatakana'] = 0x30D3;\\r\\n t['bilabialclick'] = 0x0298;\\r\\n t['bindigurmukhi'] = 0x0A02;\\r\\n t['birusquare'] = 0x3331;\\r\\n t['blackcircle'] = 0x25CF;\\r\\n t['blackdiamond'] = 0x25C6;\\r\\n t['blackdownpointingtriangle'] = 0x25BC;\\r\\n t['blackleftpointingpointer'] = 0x25C4;\\r\\n t['blackleftpointingtriangle'] = 0x25C0;\\r\\n t['blacklenticularbracketleft'] = 0x3010;\\r\\n t['blacklenticularbracketleftvertical'] = 0xFE3B;\\r\\n t['blacklenticularbracketright'] = 0x3011;\\r\\n t['blacklenticularbracketrightvertical'] = 0xFE3C;\\r\\n t['blacklowerlefttriangle'] = 0x25E3;\\r\\n t['blacklowerrighttriangle'] = 0x25E2;\\r\\n t['blackrectangle'] = 0x25AC;\\r\\n t['blackrightpointingpointer'] = 0x25BA;\\r\\n t['blackrightpointingtriangle'] = 0x25B6;\\r\\n t['blacksmallsquare'] = 0x25AA;\\r\\n t['blacksmilingface'] = 0x263B;\\r\\n t['blacksquare'] = 0x25A0;\\r\\n t['blackstar'] = 0x2605;\\r\\n t['blackupperlefttriangle'] = 0x25E4;\\r\\n t['blackupperrighttriangle'] = 0x25E5;\\r\\n t['blackuppointingsmalltriangle'] = 0x25B4;\\r\\n t['blackuppointingtriangle'] = 0x25B2;\\r\\n t['blank'] = 0x2423;\\r\\n t['blinebelow'] = 0x1E07;\\r\\n t['block'] = 0x2588;\\r\\n t['bmonospace'] = 0xFF42;\\r\\n t['bobaimaithai'] = 0x0E1A;\\r\\n t['bohiragana'] = 0x307C;\\r\\n t['bokatakana'] = 0x30DC;\\r\\n t['bparen'] = 0x249D;\\r\\n t['bqsquare'] = 0x33C3;\\r\\n t['braceex'] = 0xF8F4;\\r\\n t['braceleft'] = 0x007B;\\r\\n t['braceleftbt'] = 0xF8F3;\\r\\n t['braceleftmid'] = 0xF8F2;\\r\\n t['braceleftmonospace'] = 0xFF5B;\\r\\n t['braceleftsmall'] = 0xFE5B;\\r\\n t['bracelefttp'] = 0xF8F1;\\r\\n t['braceleftvertical'] = 0xFE37;\\r\\n t['braceright'] = 0x007D;\\r\\n t['bracerightbt'] = 0xF8FE;\\r\\n t['bracerightmid'] = 0xF8FD;\\r\\n t['bracerightmonospace'] = 0xFF5D;\\r\\n t['bracerightsmall'] = 0xFE5C;\\r\\n t['bracerighttp'] = 0xF8FC;\\r\\n t['bracerightvertical'] = 0xFE38;\\r\\n t['bracketleft'] = 0x005B;\\r\\n t['bracketleftbt'] = 0xF8F0;\\r\\n t['bracketleftex'] = 0xF8EF;\\r\\n t['bracketleftmonospace'] = 0xFF3B;\\r\\n t['bracketlefttp'] = 0xF8EE;\\r\\n t['bracketright'] = 0x005D;\\r\\n t['bracketrightbt'] = 0xF8FB;\\r\\n t['bracketrightex'] = 0xF8FA;\\r\\n t['bracketrightmonospace'] = 0xFF3D;\\r\\n t['bracketrighttp'] = 0xF8F9;\\r\\n t['breve'] = 0x02D8;\\r\\n t['brevebelowcmb'] = 0x032E;\\r\\n t['brevecmb'] = 0x0306;\\r\\n t['breveinvertedbelowcmb'] = 0x032F;\\r\\n t['breveinvertedcmb'] = 0x0311;\\r\\n t['breveinverteddoublecmb'] = 0x0361;\\r\\n t['bridgebelowcmb'] = 0x032A;\\r\\n t['bridgeinvertedbelowcmb'] = 0x033A;\\r\\n t['brokenbar'] = 0x00A6;\\r\\n t['bstroke'] = 0x0180;\\r\\n t['bsuperior'] = 0xF6EA;\\r\\n t['btopbar'] = 0x0183;\\r\\n t['buhiragana'] = 0x3076;\\r\\n t['bukatakana'] = 0x30D6;\\r\\n t['bullet'] = 0x2022;\\r\\n t['bulletinverse'] = 0x25D8;\\r\\n t['bulletoperator'] = 0x2219;\\r\\n t['bullseye'] = 0x25CE;\\r\\n t['c'] = 0x0063;\\r\\n t['caarmenian'] = 0x056E;\\r\\n t['cabengali'] = 0x099A;\\r\\n t['cacute'] = 0x0107;\\r\\n t['cadeva'] = 0x091A;\\r\\n t['cagujarati'] = 0x0A9A;\\r\\n t['cagurmukhi'] = 0x0A1A;\\r\\n t['calsquare'] = 0x3388;\\r\\n t['candrabindubengali'] = 0x0981;\\r\\n t['candrabinducmb'] = 0x0310;\\r\\n t['candrabindudeva'] = 0x0901;\\r\\n t['candrabindugujarati'] = 0x0A81;\\r\\n t['capslock'] = 0x21EA;\\r\\n t['careof'] = 0x2105;\\r\\n t['caron'] = 0x02C7;\\r\\n t['caronbelowcmb'] = 0x032C;\\r\\n t['caroncmb'] = 0x030C;\\r\\n t['carriagereturn'] = 0x21B5;\\r\\n t['cbopomofo'] = 0x3118;\\r\\n t['ccaron'] = 0x010D;\\r\\n t['ccedilla'] = 0x00E7;\\r\\n t['ccedillaacute'] = 0x1E09;\\r\\n t['ccircle'] = 0x24D2;\\r\\n t['ccircumflex'] = 0x0109;\\r\\n t['ccurl'] = 0x0255;\\r\\n t['cdot'] = 0x010B;\\r\\n t['cdotaccent'] = 0x010B;\\r\\n t['cdsquare'] = 0x33C5;\\r\\n t['cedilla'] = 0x00B8;\\r\\n t['cedillacmb'] = 0x0327;\\r\\n t['cent'] = 0x00A2;\\r\\n t['centigrade'] = 0x2103;\\r\\n t['centinferior'] = 0xF6DF;\\r\\n t['centmonospace'] = 0xFFE0;\\r\\n t['centoldstyle'] = 0xF7A2;\\r\\n t['centsuperior'] = 0xF6E0;\\r\\n t['chaarmenian'] = 0x0579;\\r\\n t['chabengali'] = 0x099B;\\r\\n t['chadeva'] = 0x091B;\\r\\n t['chagujarati'] = 0x0A9B;\\r\\n t['chagurmukhi'] = 0x0A1B;\\r\\n t['chbopomofo'] = 0x3114;\\r\\n t['cheabkhasiancyrillic'] = 0x04BD;\\r\\n t['checkmark'] = 0x2713;\\r\\n t['checyrillic'] = 0x0447;\\r\\n t['chedescenderabkhasiancyrillic'] = 0x04BF;\\r\\n t['chedescendercyrillic'] = 0x04B7;\\r\\n t['chedieresiscyrillic'] = 0x04F5;\\r\\n t['cheharmenian'] = 0x0573;\\r\\n t['chekhakassiancyrillic'] = 0x04CC;\\r\\n t['cheverticalstrokecyrillic'] = 0x04B9;\\r\\n t['chi'] = 0x03C7;\\r\\n t['chieuchacirclekorean'] = 0x3277;\\r\\n t['chieuchaparenkorean'] = 0x3217;\\r\\n t['chieuchcirclekorean'] = 0x3269;\\r\\n t['chieuchkorean'] = 0x314A;\\r\\n t['chieuchparenkorean'] = 0x3209;\\r\\n t['chochangthai'] = 0x0E0A;\\r\\n t['chochanthai'] = 0x0E08;\\r\\n t['chochingthai'] = 0x0E09;\\r\\n t['chochoethai'] = 0x0E0C;\\r\\n t['chook'] = 0x0188;\\r\\n t['cieucacirclekorean'] = 0x3276;\\r\\n t['cieucaparenkorean'] = 0x3216;\\r\\n t['cieuccirclekorean'] = 0x3268;\\r\\n t['cieuckorean'] = 0x3148;\\r\\n t['cieucparenkorean'] = 0x3208;\\r\\n t['cieucuparenkorean'] = 0x321C;\\r\\n t['circle'] = 0x25CB;\\r\\n t['circlecopyrt'] = 0x00A9;\\r\\n t['circlemultiply'] = 0x2297;\\r\\n t['circleot'] = 0x2299;\\r\\n t['circleplus'] = 0x2295;\\r\\n t['circlepostalmark'] = 0x3036;\\r\\n t['circlewithlefthalfblack'] = 0x25D0;\\r\\n t['circlewithrighthalfblack'] = 0x25D1;\\r\\n t['circumflex'] = 0x02C6;\\r\\n t['circumflexbelowcmb'] = 0x032D;\\r\\n t['circumflexcmb'] = 0x0302;\\r\\n t['clear'] = 0x2327;\\r\\n t['clickalveolar'] = 0x01C2;\\r\\n t['clickdental'] = 0x01C0;\\r\\n t['clicklateral'] = 0x01C1;\\r\\n t['clickretroflex'] = 0x01C3;\\r\\n t['club'] = 0x2663;\\r\\n t['clubsuitblack'] = 0x2663;\\r\\n t['clubsuitwhite'] = 0x2667;\\r\\n t['cmcubedsquare'] = 0x33A4;\\r\\n t['cmonospace'] = 0xFF43;\\r\\n t['cmsquaredsquare'] = 0x33A0;\\r\\n t['coarmenian'] = 0x0581;\\r\\n t['colon'] = 0x003A;\\r\\n t['colonmonetary'] = 0x20A1;\\r\\n t['colonmonospace'] = 0xFF1A;\\r\\n t['colonsign'] = 0x20A1;\\r\\n t['colonsmall'] = 0xFE55;\\r\\n t['colontriangularhalfmod'] = 0x02D1;\\r\\n t['colontriangularmod'] = 0x02D0;\\r\\n t['comma'] = 0x002C;\\r\\n t['commaabovecmb'] = 0x0313;\\r\\n t['commaaboverightcmb'] = 0x0315;\\r\\n t['commaaccent'] = 0xF6C3;\\r\\n t['commaarabic'] = 0x060C;\\r\\n t['commaarmenian'] = 0x055D;\\r\\n t['commainferior'] = 0xF6E1;\\r\\n t['commamonospace'] = 0xFF0C;\\r\\n t['commareversedabovecmb'] = 0x0314;\\r\\n t['commareversedmod'] = 0x02BD;\\r\\n t['commasmall'] = 0xFE50;\\r\\n t['commasuperior'] = 0xF6E2;\\r\\n t['commaturnedabovecmb'] = 0x0312;\\r\\n t['commaturnedmod'] = 0x02BB;\\r\\n t['compass'] = 0x263C;\\r\\n t['congruent'] = 0x2245;\\r\\n t['contourintegral'] = 0x222E;\\r\\n t['control'] = 0x2303;\\r\\n t['controlACK'] = 0x0006;\\r\\n t['controlBEL'] = 0x0007;\\r\\n t['controlBS'] = 0x0008;\\r\\n t['controlCAN'] = 0x0018;\\r\\n t['controlCR'] = 0x000D;\\r\\n t['controlDC1'] = 0x0011;\\r\\n t['controlDC2'] = 0x0012;\\r\\n t['controlDC3'] = 0x0013;\\r\\n t['controlDC4'] = 0x0014;\\r\\n t['controlDEL'] = 0x007F;\\r\\n t['controlDLE'] = 0x0010;\\r\\n t['controlEM'] = 0x0019;\\r\\n t['controlENQ'] = 0x0005;\\r\\n t['controlEOT'] = 0x0004;\\r\\n t['controlESC'] = 0x001B;\\r\\n t['controlETB'] = 0x0017;\\r\\n t['controlETX'] = 0x0003;\\r\\n t['controlFF'] = 0x000C;\\r\\n t['controlFS'] = 0x001C;\\r\\n t['controlGS'] = 0x001D;\\r\\n t['controlHT'] = 0x0009;\\r\\n t['controlLF'] = 0x000A;\\r\\n t['controlNAK'] = 0x0015;\\r\\n t['controlNULL'] = 0x0000;\\r\\n t['controlRS'] = 0x001E;\\r\\n t['controlSI'] = 0x000F;\\r\\n t['controlSO'] = 0x000E;\\r\\n t['controlSOT'] = 0x0002;\\r\\n t['controlSTX'] = 0x0001;\\r\\n t['controlSUB'] = 0x001A;\\r\\n t['controlSYN'] = 0x0016;\\r\\n t['controlUS'] = 0x001F;\\r\\n t['controlVT'] = 0x000B;\\r\\n t['copyright'] = 0x00A9;\\r\\n t['copyrightsans'] = 0xF8E9;\\r\\n t['copyrightserif'] = 0xF6D9;\\r\\n t['cornerbracketleft'] = 0x300C;\\r\\n t['cornerbracketlefthalfwidth'] = 0xFF62;\\r\\n t['cornerbracketleftvertical'] = 0xFE41;\\r\\n t['cornerbracketright'] = 0x300D;\\r\\n t['cornerbracketrighthalfwidth'] = 0xFF63;\\r\\n t['cornerbracketrightvertical'] = 0xFE42;\\r\\n t['corporationsquare'] = 0x337F;\\r\\n t['cosquare'] = 0x33C7;\\r\\n t['coverkgsquare'] = 0x33C6;\\r\\n t['cparen'] = 0x249E;\\r\\n t['cruzeiro'] = 0x20A2;\\r\\n t['cstretched'] = 0x0297;\\r\\n t['curlyand'] = 0x22CF;\\r\\n t['curlyor'] = 0x22CE;\\r\\n t['currency'] = 0x00A4;\\r\\n t['cyrBreve'] = 0xF6D1;\\r\\n t['cyrFlex'] = 0xF6D2;\\r\\n t['cyrbreve'] = 0xF6D4;\\r\\n t['cyrflex'] = 0xF6D5;\\r\\n t['d'] = 0x0064;\\r\\n t['daarmenian'] = 0x0564;\\r\\n t['dabengali'] = 0x09A6;\\r\\n t['dadarabic'] = 0x0636;\\r\\n t['dadeva'] = 0x0926;\\r\\n t['dadfinalarabic'] = 0xFEBE;\\r\\n t['dadinitialarabic'] = 0xFEBF;\\r\\n t['dadmedialarabic'] = 0xFEC0;\\r\\n t['dagesh'] = 0x05BC;\\r\\n t['dageshhebrew'] = 0x05BC;\\r\\n t['dagger'] = 0x2020;\\r\\n t['daggerdbl'] = 0x2021;\\r\\n t['dagujarati'] = 0x0AA6;\\r\\n t['dagurmukhi'] = 0x0A26;\\r\\n t['dahiragana'] = 0x3060;\\r\\n t['dakatakana'] = 0x30C0;\\r\\n t['dalarabic'] = 0x062F;\\r\\n t['dalet'] = 0x05D3;\\r\\n t['daletdagesh'] = 0xFB33;\\r\\n t['daletdageshhebrew'] = 0xFB33;\\r\\n t['dalethebrew'] = 0x05D3;\\r\\n t['dalfinalarabic'] = 0xFEAA;\\r\\n t['dammaarabic'] = 0x064F;\\r\\n t['dammalowarabic'] = 0x064F;\\r\\n t['dammatanaltonearabic'] = 0x064C;\\r\\n t['dammatanarabic'] = 0x064C;\\r\\n t['danda'] = 0x0964;\\r\\n t['dargahebrew'] = 0x05A7;\\r\\n t['dargalefthebrew'] = 0x05A7;\\r\\n t['dasiapneumatacyrilliccmb'] = 0x0485;\\r\\n t['dblGrave'] = 0xF6D3;\\r\\n t['dblanglebracketleft'] = 0x300A;\\r\\n t['dblanglebracketleftvertical'] = 0xFE3D;\\r\\n t['dblanglebracketright'] = 0x300B;\\r\\n t['dblanglebracketrightvertical'] = 0xFE3E;\\r\\n t['dblarchinvertedbelowcmb'] = 0x032B;\\r\\n t['dblarrowleft'] = 0x21D4;\\r\\n t['dblarrowright'] = 0x21D2;\\r\\n t['dbldanda'] = 0x0965;\\r\\n t['dblgrave'] = 0xF6D6;\\r\\n t['dblgravecmb'] = 0x030F;\\r\\n t['dblintegral'] = 0x222C;\\r\\n t['dbllowline'] = 0x2017;\\r\\n t['dbllowlinecmb'] = 0x0333;\\r\\n t['dbloverlinecmb'] = 0x033F;\\r\\n t['dblprimemod'] = 0x02BA;\\r\\n t['dblverticalbar'] = 0x2016;\\r\\n t['dblverticallineabovecmb'] = 0x030E;\\r\\n t['dbopomofo'] = 0x3109;\\r\\n t['dbsquare'] = 0x33C8;\\r\\n t['dcaron'] = 0x010F;\\r\\n t['dcedilla'] = 0x1E11;\\r\\n t['dcircle'] = 0x24D3;\\r\\n t['dcircumflexbelow'] = 0x1E13;\\r\\n t['dcroat'] = 0x0111;\\r\\n t['ddabengali'] = 0x09A1;\\r\\n t['ddadeva'] = 0x0921;\\r\\n t['ddagujarati'] = 0x0AA1;\\r\\n t['ddagurmukhi'] = 0x0A21;\\r\\n t['ddalarabic'] = 0x0688;\\r\\n t['ddalfinalarabic'] = 0xFB89;\\r\\n t['dddhadeva'] = 0x095C;\\r\\n t['ddhabengali'] = 0x09A2;\\r\\n t['ddhadeva'] = 0x0922;\\r\\n t['ddhagujarati'] = 0x0AA2;\\r\\n t['ddhagurmukhi'] = 0x0A22;\\r\\n t['ddotaccent'] = 0x1E0B;\\r\\n t['ddotbelow'] = 0x1E0D;\\r\\n t['decimalseparatorarabic'] = 0x066B;\\r\\n t['decimalseparatorpersian'] = 0x066B;\\r\\n t['decyrillic'] = 0x0434;\\r\\n t['degree'] = 0x00B0;\\r\\n t['dehihebrew'] = 0x05AD;\\r\\n t['dehiragana'] = 0x3067;\\r\\n t['deicoptic'] = 0x03EF;\\r\\n t['dekatakana'] = 0x30C7;\\r\\n t['deleteleft'] = 0x232B;\\r\\n t['deleteright'] = 0x2326;\\r\\n t['delta'] = 0x03B4;\\r\\n t['deltaturned'] = 0x018D;\\r\\n t['denominatorminusonenumeratorbengali'] = 0x09F8;\\r\\n t['dezh'] = 0x02A4;\\r\\n t['dhabengali'] = 0x09A7;\\r\\n t['dhadeva'] = 0x0927;\\r\\n t['dhagujarati'] = 0x0AA7;\\r\\n t['dhagurmukhi'] = 0x0A27;\\r\\n t['dhook'] = 0x0257;\\r\\n t['dialytikaton\";a.a+=\"os'] = 0x0385;\\r\\n t['dialytikatonoscmb'] = 0x0344;\\r\\n t['diamond'] = 0x2666;\\r\\n t['diamondsuitwhite'] = 0x2662;\\r\\n t['dieresis'] = 0x00A8;\\r\\n t['dieresisacute'] = 0xF6D7;\\r\\n t['dieresisbelowcmb'] = 0x0324;\\r\\n t['dieresiscmb'] = 0x0308;\\r\\n t['dieresisgrave'] = 0xF6D8;\\r\\n t['dieresistonos'] = 0x0385;\\r\\n t['dihiragana'] = 0x3062;\\r\\n t['dikatakana'] = 0x30C2;\\r\\n t['dittomark'] = 0x3003;\\r\\n t['divide'] = 0x00F7;\\r\\n t['divides'] = 0x2223;\\r\\n t['divisionslash'] = 0x2215;\\r\\n t['djecyrillic'] = 0x0452;\\r\\n t['dkshade'] = 0x2593;\\r\\n t['dlinebelow'] = 0x1E0F;\\r\\n t['dlsquare'] = 0x3397;\\r\\n t['dmacron'] = 0x0111;\\r\\n t['dmonospace'] = 0xFF44;\\r\\n t['dnblock'] = 0x2584;\\r\\n t['dochadathai'] = 0x0E0E;\\r\\n t['dodekthai'] = 0x0E14;\\r\\n t['dohiragana'] = 0x3069;\\r\\n t['dokatakana'] = 0x30C9;\\r\\n t['dollar'] = 0x0024;\\r\\n t['dollarinferior'] = 0xF6E3;\\r\\n t['dollarmonospace'] = 0xFF04;\\r\\n t['dollaroldstyle'] = 0xF724;\\r\\n t['dollarsmall'] = 0xFE69;\\r\\n t['dollarsuperior'] = 0xF6E4;\\r\\n t['dong'] = 0x20AB;\\r\\n t['dorusquare'] = 0x3326;\\r\\n t['dotaccent'] = 0x02D9;\\r\\n t['dotaccentcmb'] = 0x0307;\\r\\n t['dotbelowcmb'] = 0x0323;\\r\\n t['dotbelowcomb'] = 0x0323;\\r\\n t['dotkatakana'] = 0x30FB;\\r\\n t['dotlessi'] = 0x0131;\\r\\n t['dotlessj'] = 0xF6BE;\\r\\n t['dotlessjstrokehook'] = 0x0284;\\r\\n t['dotmath'] = 0x22C5;\\r\\n t['dottedcircle'] = 0x25CC;\\r\\n t['doubleyodpatah'] = 0xFB1F;\\r\\n t['doubleyodpatahhebrew'] = 0xFB1F;\\r\\n t['downtackbelowcmb'] = 0x031E;\\r\\n t['downtackmod'] = 0x02D5;\\r\\n t['dparen'] = 0x249F;\\r\\n t['dsuperior'] = 0xF6EB;\\r\\n t['dtail'] = 0x0256;\\r\\n t['dtopbar'] = 0x018C;\\r\\n t['duhiragana'] = 0x3065;\\r\\n t['dukatakana'] = 0x30C5;\\r\\n t['dz'] = 0x01F3;\\r\\n t['dzaltone'] = 0x02A3;\\r\\n t['dzcaron'] = 0x01C6;\\r\\n t['dzcurl'] = 0x02A5;\\r\\n t['dzeabkhasiancyrillic'] = 0x04E1;\\r\\n t['dzecyrillic'] = 0x0455;\\r\\n t['dzhecyrillic'] = 0x045F;\\r\\n t['e'] = 0x0065;\\r\\n t['eacute'] = 0x00E9;\\r\\n t['earth'] = 0x2641;\\r\\n t['ebengali'] = 0x098F;\\r\\n t['ebopomofo'] = 0x311C;\\r\\n t['ebreve'] = 0x0115;\\r\\n t['ecandradeva'] = 0x090D;\\r\\n t['ecandragujarati'] = 0x0A8D;\\r\\n t['ecandravowelsigndeva'] = 0x0945;\\r\\n t['ecandravowelsigngujarati'] = 0x0AC5;\\r\\n t['ecaron'] = 0x011B;\\r\\n t['ecedillabreve'] = 0x1E1D;\\r\\n t['echarmenian'] = 0x0565;\\r\\n t['echyiwnarmenian'] = 0x0587;\\r\\n t['ecircle'] = 0x24D4;\\r\\n t['ecircumflex'] = 0x00EA;\\r\\n t['ecircumflexacute'] = 0x1EBF;\\r\\n t['ecircumflexbelow'] = 0x1E19;\\r\\n t['ecircumflexdotbelow'] = 0x1EC7;\\r\\n t['ecircumflexgrave'] = 0x1EC1;\\r\\n t['ecircumflexhookabove'] = 0x1EC3;\\r\\n t['ecircumflextilde'] = 0x1EC5;\\r\\n t['ecyrillic'] = 0x0454;\\r\\n t['edblgrave'] = 0x0205;\\r\\n t['edeva'] = 0x090F;\\r\\n t['edieresis'] = 0x00EB;\\r\\n t['edot'] = 0x0117;\\r\\n t['edotaccent'] = 0x0117;\\r\\n t['edotbelow'] = 0x1EB9;\\r\\n t['eegurmukhi'] = 0x0A0F;\\r\\n t['eematragurmukhi'] = 0x0A47;\\r\\n t['efcyrillic'] = 0x0444;\\r\\n t['egrave'] = 0x00E8;\\r\\n t['egujarati'] = 0x0A8F;\\r\\n t['eharmenian'] = 0x0567;\\r\\n t['ehbopomofo'] = 0x311D;\\r\\n t['ehiragana'] = 0x3048;\\r\\n t['ehookabove'] = 0x1EBB;\\r\\n t['eibopomofo'] = 0x311F;\\r\\n t['eight'] = 0x0038;\\r\\n t['eightarabic'] = 0x0668;\\r\\n t['eightbengali'] = 0x09EE;\\r\\n t['eightcircle'] = 0x2467;\\r\\n t['eightcircleinversesansserif'] = 0x2791;\\r\\n t['eightdeva'] = 0x096E;\\r\\n t['eighteencircle'] = 0x2471;\\r\\n t['eighteenparen'] = 0x2485;\\r\\n t['eighteenperiod'] = 0x2499;\\r\\n t['eightgujarati'] = 0x0AEE;\\r\\n t['eightgurmukhi'] = 0x0A6E;\\r\\n t['eighthackarabic'] = 0x0668;\\r\\n t['eighthangzhou'] = 0x3028;\\r\\n t['eighthnotebeamed'] = 0x266B;\\r\\n t['eightideographicparen'] = 0x3227;\\r\\n t['eightinferior'] = 0x2088;\\r\\n t['eightmonospace'] = 0xFF18;\\r\\n t['eightoldstyle'] = 0xF738;\\r\\n t['eightparen'] = 0x247B;\\r\\n t['eightperiod'] = 0x248F;\\r\\n t['eightpersian'] = 0x06F8;\\r\\n t['eightroman'] = 0x2177;\\r\\n t['eightsuperior'] = 0x2078;\\r\\n t['eightthai'] = 0x0E58;\\r\\n t['einvertedbreve'] = 0x0207;\\r\\n t['eiotifiedcyrillic'] = 0x0465;\\r\\n t['ekatakana'] = 0x30A8;\\r\\n t['ekatakanahalfwidth'] = 0xFF74;\\r\\n t['ekonkargurmukhi'] = 0x0A74;\\r\\n t['ekorean'] = 0x3154;\\r\\n t['elcyrillic'] = 0x043B;\\r\\n t['element'] = 0x2208;\\r\\n t['elevencircle'] = 0x246A;\\r\\n t['elevenparen'] = 0x247E;\\r\\n t['elevenperiod'] = 0x2492;\\r\\n t['elevenroman'] = 0x217A;\\r\\n t['ellipsis'] = 0x2026;\\r\\n t['ellipsisvertical'] = 0x22EE;\\r\\n t['emacron'] = 0x0113;\\r\\n t['emacronacute'] = 0x1E17;\\r\\n t['emacrongrave'] = 0x1E15;\\r\\n t['emcyrillic'] = 0x043C;\\r\\n t['emdash'] = 0x2014;\\r\\n t['emdashvertical'] = 0xFE31;\\r\\n t['emonospace'] = 0xFF45;\\r\\n t['emphasismarkarmenian'] = 0x055B;\\r\\n t['emptyset'] = 0x2205;\\r\\n t['enbopomofo'] = 0x3123;\\r\\n t['encyrillic'] = 0x043D;\\r\\n t['endash'] = 0x2013;\\r\\n t['endashvertical'] = 0xFE32;\\r\\n t['endescendercyrillic'] = 0x04A3;\\r\\n t['eng'] = 0x014B;\\r\\n t['engbopomofo'] = 0x3125;\\r\\n t['enghecyrillic'] = 0x04A5;\\r\\n t['enhookcyrillic'] = 0x04C8;\\r\\n t['enspace'] = 0x2002;\\r\\n t['eogonek'] = 0x0119;\\r\\n t['eokorean'] = 0x3153;\\r\\n t['eopen'] = 0x025B;\\r\\n t['eopenclosed'] = 0x029A;\\r\\n t['eopenreversed'] = 0x025C;\\r\\n t['eopenreversedclosed'] = 0x025E;\\r\\n t['eopenreversedhook'] = 0x025D;\\r\\n t['eparen'] = 0x24A0;\\r\\n t['epsilon'] = 0x03B5;\\r\\n t['epsilontonos'] = 0x03AD;\\r\\n t['equal'] = 0x003D;\\r\\n t['equalmonospace'] = 0xFF1D;\\r\\n t['equalsmall'] = 0xFE66;\\r\\n t['equalsuperior'] = 0x207C;\\r\\n t['equivalence'] = 0x2261;\\r\\n t['erbopomofo'] = 0x3126;\\r\\n t['ercyrillic'] = 0x0440;\\r\\n t['ereversed'] = 0x0258;\\r\\n t['ereversedcyrillic'] = 0x044D;\\r\\n t['escyrillic'] = 0x0441;\\r\\n t['esdescendercyrillic'] = 0x04AB;\\r\\n t['esh'] = 0x0283;\\r\\n t['eshcurl'] = 0x0286;\\r\\n t['eshortdeva'] = 0x090E;\\r\\n t['eshortvowelsigndeva'] = 0x0946;\\r\\n t['eshreversedloop'] = 0x01AA;\\r\\n t['eshsquatreversed'] = 0x0285;\\r\\n t['esmallhiragana'] = 0x3047;\\r\\n t['esmallkatakana'] = 0x30A7;\\r\\n t['esmallkatakanahalfwidth'] = 0xFF6A;\\r\\n t['estimated'] = 0x212E;\\r\\n t['esuperior'] = 0xF6EC;\\r\\n t['eta'] = 0x03B7;\\r\\n t['etarmenian'] = 0x0568;\\r\\n t['etatonos'] = 0x03AE;\\r\\n t['eth'] = 0x00F0;\\r\\n t['etilde'] = 0x1EBD;\\r\\n t['etildebelow'] = 0x1E1B;\\r\\n t['etnahtafoukhhebrew'] = 0x0591;\\r\\n t['etnahtafoukhlefthebrew'] = 0x0591;\\r\\n t['etnahtahebrew'] = 0x0591;\\r\\n t['etnahtalefthebrew'] = 0x0591;\\r\\n t['eturned'] = 0x01DD;\\r\\n t['eukorean'] = 0x3161;\\r\\n t['euro'] = 0x20AC;\\r\\n t['evowelsignbengali'] = 0x09C7;\\r\\n t['evowelsigndeva'] = 0x0947;\\r\\n t['evowelsigngujarati'] = 0x0AC7;\\r\\n t['exclam'] = 0x0021;\\r\\n t['exclamarmenian'] = 0x055C;\\r\\n t['exclamdbl'] = 0x203C;\\r\\n t['exclamdown'] = 0x00A1;\\r\\n t['exclamdownsmall'] = 0xF7A1;\\r\\n t['exclammonospace'] = 0xFF01;\\r\\n t['exclamsmall'] = 0xF721;\\r\\n t['existential'] = 0x2203;\\r\\n t['ezh'] = 0x0292;\\r\\n t['ezhcaron'] = 0x01EF;\\r\\n t['ezhcurl'] = 0x0293;\\r\\n t['ezhreversed'] = 0x01B9;\\r\\n t['ezhtail'] = 0x01BA;\\r\\n t['f'] = 0x0066;\\r\\n t['fadeva'] = 0x095E;\\r\\n t['fagurmukhi'] = 0x0A5E;\\r\\n t['fahrenheit'] = 0x2109;\\r\\n t['fathaarabic'] = 0x064E;\\r\\n t['fathalowarabic'] = 0x064E;\\r\\n t['fathatanarabic'] = 0x064B;\\r\\n t['fbopomofo'] = 0x3108;\\r\\n t['fcircle'] = 0x24D5;\\r\\n t['fdotaccent'] = 0x1E1F;\\r\\n t['feharabic'] = 0x0641;\\r\\n t['feharmenian'] = 0x0586;\\r\\n t['fehfinalarabic'] = 0xFED2;\\r\\n t['fehinitialarabic'] = 0xFED3;\\r\\n t['fehmedialarabic'] = 0xFED4;\\r\\n t['feicoptic'] = 0x03E5;\\r\\n t['female'] = 0x2640;\\r\\n t['ff'] = 0xFB00;\\r\\n t['ffi'] = 0xFB03;\\r\\n t['ffl'] = 0xFB04;\\r\\n t['fi'] = 0xFB01;\\r\\n t['fifteencircle'] = 0x246E;\\r\\n t['fifteenparen'] = 0x2482;\\r\\n t['fifteenperiod'] = 0x2496;\\r\\n t['figuredash'] = 0x2012;\\r\\n t['filledbox'] = 0x25A0;\\r\\n t['filledrect'] = 0x25AC;\\r\\n t['finalkaf'] = 0x05DA;\\r\\n t['finalkafdagesh'] = 0xFB3A;\\r\\n t['finalkafdageshhebrew'] = 0xFB3A;\\r\\n t['finalkafhebrew'] = 0x05DA;\\r\\n t['finalmem'] = 0x05DD;\\r\\n t['finalmemhebrew'] = 0x05DD;\\r\\n t['finalnun'] = 0x05DF;\\r\\n t['finalnunhebrew'] = 0x05DF;\\r\\n t['finalpe'] = 0x05E3;\\r\\n t['finalpehebrew'] = 0x05E3;\\r\\n t['finaltsadi'] = 0x05E5;\\r\\n t['finaltsadihebrew'] = 0x05E5;\\r\\n t['firsttonechinese'] = 0x02C9;\\r\\n t['fisheye'] = 0x25C9;\\r\\n t['fitacyrillic'] = 0x0473;\\r\\n t['five'] = 0x0035;\\r\\n t['fivearabic'] = 0x0665;\\r\\n t['fivebengali'] = 0x09EB;\\r\\n t['fivecircle'] = 0x2464;\\r\\n t['fivecircleinversesansserif'] = 0x278E;\\r\\n t['fivedeva'] = 0x096B;\\r\\n t['fiveeighths'] = 0x215D;\\r\\n t['fivegujarati'] = 0x0AEB;\\r\\n t['fivegurmukhi'] = 0x0A6B;\\r\\n t['fivehackarabic'] = 0x0665;\\r\\n t['fivehangzhou'] = 0x3025;\\r\\n t['fiveideographicparen'] = 0x3224;\\r\\n t['fiveinferior'] = 0x2085;\\r\\n t['fivemonospace'] = 0xFF15;\\r\\n t['fiveoldstyle'] = 0xF735;\\r\\n t['fiveparen'] = 0x2478;\\r\\n t['fiveperiod'] = 0x248C;\\r\\n t['fivepersian'] = 0x06F5;\\r\\n t['fiveroman'] = 0x2174;\\r\\n t['fivesuperior'] = 0x2075;\\r\\n t['fivethai'] = 0x0E55;\\r\\n t['fl'] = 0xFB02;\\r\\n t['florin'] = 0x0192;\\r\\n t['fmonospace'] = 0xFF46;\\r\\n t['fmsquare'] = 0x3399;\\r\\n t['fofanthai'] = 0x0E1F;\\r\\n t['fofathai'] = 0x0E1D;\\r\\n t['fongmanthai'] = 0x0E4F;\\r\\n t['forall'] = 0x2200;\\r\\n t['four'] = 0x0034;\\r\\n t['fourarabic'] = 0x0664;\\r\\n t['fourbengali'] = 0x09EA;\\r\\n t['fourcircle'] = 0x2463;\\r\\n t['fourcircleinversesansserif'] = 0x278D;\\r\\n t['fourdeva'] = 0x096A;\\r\\n t['fourgujarati'] = 0x0AEA;\\r\\n t['fourgurmukhi'] = 0x0A6A;\\r\\n t['fourhackarabic'] = 0x0664;\\r\\n t['fourhangzhou'] = 0x3024;\\r\\n t['fourideographicparen'] = 0x3223;\\r\\n t['fourinferior'] = 0x2084;\\r\\n t['fourmonospace'] = 0xFF14;\\r\\n t['fournumeratorbengali'] = 0x09F7;\\r\\n t['fouroldstyle'] = 0xF734;\\r\\n t['fourparen'] = 0x2477;\\r\\n t['fourperiod'] = 0x248B;\\r\\n t['fourpersian'] = 0x06F4;\\r\\n t['fourroman'] = 0x2173;\\r\\n t['foursuperior'] = 0x2074;\\r\\n t['fourteencircle'] = 0x246D;\\r\\n t['fourteenparen'] = 0x2481;\\r\\n t['fourteenperiod'] = 0x2495;\\r\\n t['fourthai'] = 0x0E54;\\r\\n t['fourthtonechinese'] = 0x02CB;\\r\\n t['fparen'] = 0x24A1;\\r\\n t['fraction'] = 0x2044;\\r\\n t['franc'] = 0x20A3;\\r\\n t['g'] = 0x0067;\\r\\n t['gabengali'] = 0x0997;\\r\\n t['gacute'] = 0x01F5;\\r\\n t['gadeva'] = 0x0917;\\r\\n t['gafarabic'] = 0x06AF;\\r\\n t['gaffinalarabic'] = 0xFB93;\\r\\n t['gafinitialarabic'] = 0xFB94;\\r\\n t['gafmedialarabic'] = 0xFB95;\\r\\n t['gagujarati'] = 0x0A97;\\r\\n t['gagurmukhi'] = 0x0A17;\\r\\n t['gahiragana'] = 0x304C;\\r\\n t['gakatakana'] = 0x30AC;\\r\\n t['gamma'] = 0x03B3;\\r\\n t['gammalatinsmall'] = 0x0263;\\r\\n t['gammasuperior'] = 0x02E0;\\r\\n t['gangiacoptic'] = 0x03EB;\\r\\n t['gbopomofo'] = 0x310D;\\r\\n t['gbreve'] = 0x011F;\\r\\n t['gcaron'] = 0x01E7;\\r\\n t['gcedilla'] = 0x0123;\\r\\n t['gcircle'] = 0x24D6;\\r\\n t['gcircumflex'] = 0x011D;\\r\\n t['gcommaaccent'] = 0x0123;\\r\\n t['gdot'] = 0x0121;\\r\\n t['gdotaccent'] = 0x0121;\\r\\n t['gecyrillic'] = 0x0433;\\r\\n t['gehiragana'] = 0x3052;\\r\\n t['gekatakana'] = 0x30B2;\\r\\n t['geometricallyequal'] = 0x2251;\\r\\n t['gereshaccenthebrew'] = 0x059C;\\r\\n t['gereshhebrew'] = 0x05F3;\\r\\n t['gereshmuqdamhebrew'] = 0x059D;\\r\\n t['germandbls'] = 0x00DF;\\r\\n t['gershayimaccenthebrew'] = 0x059E;\\r\\n t['gershayimhebrew'] = 0x05F4;\\r\\n t['getamark'] = 0x3013;\\r\\n t['ghabengali'] = 0x0998;\\r\\n t['ghadarmenian'] = 0x0572;\\r\\n t['ghadeva'] = 0x0918;\\r\\n t['ghagujarati'] = 0x0A98;\\r\\n t['ghagurmukhi'] = 0x0A18;\\r\\n t['ghainarabic'] = 0x063A;\\r\\n t['ghainfinalarabic'] = 0xFECE;\\r\\n t['ghaininitialarabic'] = 0xFECF;\\r\\n t['ghainmedialarabic'] = 0xFED0;\\r\\n t['ghemiddlehookcyrillic'] = 0x0495;\\r\\n t['ghestrokecyrillic'] = 0x0493;\\r\\n t['gheupturncyrillic'] = 0x0491;\\r\\n t['ghhadeva'] = 0x095A;\\r\\n t['ghhagurmukhi'] = 0x0A5A;\\r\\n t['ghook'] = 0x0260;\\r\\n t['ghzsquare'] = 0x3393;\\r\\n t['gihiragana'] = 0x304E;\\r\\n t['gikatakana'] = 0x30AE;\\r\\n t['gimarmenian'] = 0x0563;\\r\\n t['gimel'] = 0x05D2;\\r\\n t['gimeldagesh'] = 0xFB32;\\r\\n t['gimeldageshhebrew'] = 0xFB32;\\r\\n t['gimelhebrew'] = 0x05D2;\\r\\n t['gjecyrillic'] = 0x0453;\\r\\n t['glottalinvertedstroke'] = 0x01BE;\\r\\n t['glottalstop'] = 0x0294;\\r\\n t['glottalstopinverted'] = 0x0296;\\r\\n t['glottalstopmod'] = 0x02C0;\\r\\n t['glottalstopreversed'] = 0x0295;\\r\\n t['glottalstopreversedmod'] = 0x02C1;\\r\\n t['glottalstopreversedsuperior'] = 0x02E4;\\r\\n t['glottalstopstroke'] = 0x02A1;\\r\\n t['glottalstopstrokereversed'] = 0x02A2;\\r\\n t['gmacron'] = 0x1E21;\\r\\n t['gmonospace'] = 0xFF47;\\r\\n t['gohiragana'] = 0x3054;\\r\\n t['gokatakana'] = 0x30B4;\\r\\n t['gparen'] = 0x24A2;\\r\\n t['gpasquare'] = 0x33AC;\\r\\n t['gradient'] = 0x2207;\\r\\n t['grave'] = 0x0060;\\r\\n t['gravebelowcmb'] = 0x0316;\\r\\n t['gravecmb'] = 0x0300;\\r\\n t['gravecomb'] = 0x0300;\\r\\n t['gravedeva'] = 0x0953;\\r\\n t['gravelowmod'] = 0x02CE;\\r\\n t['gravemonospace'] = 0xFF40;\\r\\n t['gravetonecmb'] = 0x0340;\\r\\n t['greater'] = 0x003E;\\r\\n t['greaterequal'] = 0x2265;\\r\\n t['greaterequalorless'] = 0x22DB;\\r\\n t['greatermonospace'] = 0xFF1E;\\r\\n t['greaterorequivalent'] = 0x2273;\\r\\n t['greaterorless'] = 0x2277;\\r\\n t['greateroverequal'] = 0x2267;\\r\\n t['greatersmall'] = 0xFE65;\\r\\n t['gscript'] = 0x0261;\\r\\n t['gstroke'] = 0x01E5;\\r\\n t['guhiragana'] = 0x3050;\\r\\n t['guillemotleft'] = 0x00AB;\\r\\n t['guillemotright'] = 0x00BB;\\r\\n t['guilsinglleft'] = 0x2039;\\r\\n t['guilsinglright'] = 0x203A;\\r\\n t['gukatakana'] = 0x30B0;\\r\\n t['guramusquare'] = 0x3318;\\r\\n t['gysquare'] = 0x33C9;\\r\\n t['h'] = 0x0068;\\r\\n t['haabkhasiancyrillic'] = 0x04A9;\\r\\n t['haaltonearabic'] = 0x06C1;\\r\\n t['habengali'] = 0x09B9;\\r\\n t['hadescendercyrillic'] = 0x04B3;\\r\\n t['hadeva'] = 0x0939;\\r\\n t['hagujarati'] = 0x0AB9;\\r\\n t['hagurmukhi'] = 0x0A39;\\r\\n t['haharabic'] = 0x062D;\\r\\n t['hahfinalarabic'] = 0xFEA2;\\r\\n t['hahinitialarabic'] = 0xFEA3;\\r\\n t['hahiragana'] = 0x306F;\\r\\n t['hahmedialarabic'] = 0xFEA4;\\r\\n t['haitusquare'] = 0x332A;\\r\\n t['hakatakana'] = 0x30CF;\\r\\n t['hakatakanahalfwidth'] = 0xFF8A;\\r\\n t['halantgurmukhi'] = 0x0A4D;\\r\\n t['hamzaarabic'] = 0x0621;\\r\\n t['hamzalowarabic'] = 0x0621;\\r\\n t['hangulfiller'] = 0x3164;\\r\\n t['hardsigncyrillic'] = 0x044A;\\r\\n t['harpoonleftbarbup'] = 0x21BC;\\r\\n t['harpoonrightbarbup'] = 0x21C0;\\r\\n t['hasquare'] = 0x33CA;\\r\\n t['hatafpatah'] = 0x05B2;\\r\\n t['hatafpatah16'] = 0x05B2;\\r\\n t['hatafpatah23'] = 0x05B2;\\r\\n t['hatafpatah2f'] = 0x05B2;\\r\\n t['hatafpatahhebrew'] = 0x05B2;\\r\\n t['hatafpatahnarrowhebrew'] = 0x05B2;\\r\\n t['hatafpatahquarterhebrew'] = 0x05B2;\\r\\n t['hatafpatahwidehebrew'] = 0x05B2;\\r\\n t['hatafqamats'] = 0x05B3;\\r\\n t['hatafqamats1b'] = 0x05B3;\\r\\n t['hatafqamats28'] = 0x05B3;\\r\\n t['hatafqamats34'] = 0x05B3;\\r\\n t['hatafqamatshebrew'] = 0x05B3;\\r\\n t['hatafqamatsnarrowhebrew'] = 0x05B3;\\r\\n t['hatafqamatsquarterhebrew'] = 0x05B3;\\r\\n t['hatafqamatswidehebrew'] = 0x05B3;\\r\\n t['hatafsegol'] = 0x05B1;\\r\\n t['hatafsegol17'] = 0x05B1;\\r\\n t['hatafsegol24'] = 0x05B1;\\r\\n t['hatafsegol30'] = 0x05B1;\\r\\n t['hatafsegolhebrew'] = 0x05B1;\\r\\n t['hatafsegolnarrowhebrew'] = 0x05B1;\\r\\n t['hatafsegolquarterhebrew'] = 0x05B1;\\r\\n t['hatafsegolwidehebrew'] = 0x05B1;\\r\\n t['hbar'] = 0x0127;\\r\\n t['hbopomofo'] = 0x310F;\\r\\n t['hbrevebelow'] = 0x1E2B;\\r\\n t['hcedilla'] = 0x1E29;\\r\\n t['hcircle'] = 0x24D7;\\r\\n t['hcircumflex'] = 0x0125;\\r\\n t['hdieresis'] = 0x1E27;\\r\\n t['hdotaccent'] = 0x1E23;\\r\\n t['hdotbelow'] = 0x1E25;\\r\\n t['he'] = 0x05D4;\\r\\n t['heart'] = 0x2665;\\r\\n t['heartsuitblack'] = 0x2665;\\r\\n t['heartsuitwhite'] = 0x2661;\\r\\n t['hedagesh'] = 0xFB34;\\r\\n t['hedageshhebrew'] = 0xFB34;\\r\\n t['hehaltonearabic'] = 0x06C1;\\r\\n t['heharabic'] = 0x0647;\\r\\n t['hehebrew'] = 0x05D4;\\r\\n t['hehfinalaltonearabic'] = 0xFBA7;\\r\\n t['hehfinalalttwoarabic'] = 0xFEEA;\\r\\n t['hehfinalarabic'] = 0xFEEA;\\r\\n t['hehhamzaabovefinalarabic'] = 0xFBA5;\\r\\n t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\\r\\n t['hehinitialaltonearabic'] = 0xFBA8;\\r\\n t['hehinitialarabic'] = 0xFEEB;\\r\\n t['hehiragana'] = 0x3078;\\r\\n t['hehmedialaltonearabic'] = 0xFBA9;\\r\\n t['hehmedialarabic'] = 0xFEEC;\\r\\n t['heiseierasquare'] = 0x337B;\\r\\n t['hekatakana'] = 0x30D8;\\r\\n t['hekatakanahalfwidth'] = 0xFF8D;\\r\\n t['hekutaarusquare'] = 0x3336;\\r\\n t['henghook'] = 0x0267;\\r\\n t['herutusquare'] = 0x3339;\\r\\n t['het'] = 0x05D7;\\r\\n t['hethebrew'] = 0x05D7;\\r\\n t['hhook'] = 0x0266;\\r\\n t['hhooksuperior'] = 0x02B1;\\r\\n t['hieuhacirclekorean'] = 0x327B;\\r\\n t['hieuhaparenkorean'] = 0x321B;\\r\\n t['hieuhcirclekorean'] = 0x326D;\\r\\n t['hieuhkorean'] = 0x314E;\\r\\n t['hieuhparenkorean'] = 0x320D;\\r\\n t['hihiragana'] = 0x3072;\\r\\n t['hikatakana'] = 0x30D2;\\r\\n t['hikatakanahalfwidth'] = 0xFF8B;\\r\\n t['hiriq'] = 0x05B4;\\r\\n t['hiriq14'] = 0x05B4;\\r\\n t['hiriq21'] = 0x05B4;\\r\\n t['hiriq2d'] = 0x05B4;\\r\\n t['hiriqhebrew'] = 0x05B4;\\r\\n t['hiriqnarrowhebrew'] = 0x05B4;\\r\\n t['hiriqquarterhebrew'] = 0x05B4;\\r\\n t['hiriqwidehebrew'] = 0x05B4;\\r\\n t['hlinebelow'] = 0x1E96;\\r\\n t['hmonospace'] = 0xFF48;\\r\\n t['hoarmenian'] = 0x0570;\\r\\n t['hohipthai'] = 0x0E2B;\\r\\n t['hohiragana'] = 0x307B;\\r\\n t['hokatakana'] = 0x30DB;\\r\\n t['hokatakanahalfwidth'] = 0xFF8E;\\r\\n t['holam'] = 0x05B9;\\r\\n t['holam19'] = 0x05B9;\\r\\n t['holam26'] = 0x05B9;\\r\\n t['holam32'] = 0x05B9;\\r\\n t['holamhebrew'] = 0x05B9;\\r\\n t['holamnarrowhebrew'] = 0x05B9;\\r\\n t['holamquarterhebrew'] = 0x05B9;\\r\\n t['holamwidehebrew'] = 0x05B9;\\r\\n t['honokhukthai'] = 0x0E2E;\\r\\n t['hookabovecomb'] = 0x0309;\\r\\n t['hookcmb'] = 0x0309;\\r\\n t['hookpalatalizedbelowcmb'] = 0x0321;\\r\\n t['hookretroflexbelowcmb'] = 0x0322;\\r\\n t['hoonsquare'] = 0x3342;\\r\\n t['horicoptic'] = 0x03E9;\\r\\n t['horizontalbar'] = 0x2015;\\r\\n t['horncmb'] = 0x031B;\\r\\n t['hotsprings'] = 0x2668;\\r\\n t['house'] = 0x2302;\\r\\n t['hparen'] = 0x24A3;\\r\\n t['hsuperior'] = 0x02B0;\\r\\n t['hturned'] = 0x0265;\\r\\n t['huhiragana'] = 0x3075;\\r\\n t['huiitosquare'] = 0x3333;\\r\\n t['hukatakana'] = 0x30D5;\";a.a+=\"\\r\\n t['hukatakanahalfwidth'] = 0xFF8C;\\r\\n t['hungarumlaut'] = 0x02DD;\\r\\n t['hungarumlautcmb'] = 0x030B;\\r\\n t['hv'] = 0x0195;\\r\\n t['hyphen'] = 0x002D;\\r\\n t['hypheninferior'] = 0xF6E5;\\r\\n t['hyphenmonospace'] = 0xFF0D;\\r\\n t['hyphensmall'] = 0xFE63;\\r\\n t['hyphensuperior'] = 0xF6E6;\\r\\n t['hyphentwo'] = 0x2010;\\r\\n t['i'] = 0x0069;\\r\\n t['iacute'] = 0x00ED;\\r\\n t['iacyrillic'] = 0x044F;\\r\\n t['ibengali'] = 0x0987;\\r\\n t['ibopomofo'] = 0x3127;\\r\\n t['ibreve'] = 0x012D;\\r\\n t['icaron'] = 0x01D0;\\r\\n t['icircle'] = 0x24D8;\\r\\n t['icircumflex'] = 0x00EE;\\r\\n t['icyrillic'] = 0x0456;\\r\\n t['idblgrave'] = 0x0209;\\r\\n t['ideographearthcircle'] = 0x328F;\\r\\n t['ideographfirecircle'] = 0x328B;\\r\\n t['ideographicallianceparen'] = 0x323F;\\r\\n t['ideographiccallparen'] = 0x323A;\\r\\n t['ideographiccentrecircle'] = 0x32A5;\\r\\n t['ideographicclose'] = 0x3006;\\r\\n t['ideographiccomma'] = 0x3001;\\r\\n t['ideographiccommaleft'] = 0xFF64;\\r\\n t['ideographiccongratulationparen'] = 0x3237;\\r\\n t['ideographiccorrectcircle'] = 0x32A3;\\r\\n t['ideographicearthparen'] = 0x322F;\\r\\n t['ideographicenterpriseparen'] = 0x323D;\\r\\n t['ideographicexcellentcircle'] = 0x329D;\\r\\n t['ideographicfestivalparen'] = 0x3240;\\r\\n t['ideographicfinancialcircle'] = 0x3296;\\r\\n t['ideographicfinancialparen'] = 0x3236;\\r\\n t['ideographicfireparen'] = 0x322B;\\r\\n t['ideographichaveparen'] = 0x3232;\\r\\n t['ideographichighcircle'] = 0x32A4;\\r\\n t['ideographiciterationmark'] = 0x3005;\\r\\n t['ideographiclaborcircle'] = 0x3298;\\r\\n t['ideographiclaborparen'] = 0x3238;\\r\\n t['ideographicleftcircle'] = 0x32A7;\\r\\n t['ideographiclowcircle'] = 0x32A6;\\r\\n t['ideographicmedicinecircle'] = 0x32A9;\\r\\n t['ideographicmetalparen'] = 0x322E;\\r\\n t['ideographicmoonparen'] = 0x322A;\\r\\n t['ideographicnameparen'] = 0x3234;\\r\\n t['ideographicperiod'] = 0x3002;\\r\\n t['ideographicprintcircle'] = 0x329E;\\r\\n t['ideographicreachparen'] = 0x3243;\\r\\n t['ideographicrepresentparen'] = 0x3239;\\r\\n t['ideographicresourceparen'] = 0x323E;\\r\\n t['ideographicrightcircle'] = 0x32A8;\\r\\n t['ideographicsecretcircle'] = 0x3299;\\r\\n t['ideographicselfparen'] = 0x3242;\\r\\n t['ideographicsocietyparen'] = 0x3233;\\r\\n t['ideographicspace'] = 0x3000;\\r\\n t['ideographicspecialparen'] = 0x3235;\\r\\n t['ideographicstockparen'] = 0x3231;\\r\\n t['ideographicstudyparen'] = 0x323B;\\r\\n t['ideographicsunparen'] = 0x3230;\\r\\n t['ideographicsuperviseparen'] = 0x323C;\\r\\n t['ideographicwaterparen'] = 0x322C;\\r\\n t['ideographicwoodparen'] = 0x322D;\\r\\n t['ideographiczero'] = 0x3007;\\r\\n t['ideographmetalcircle'] = 0x328E;\\r\\n t['ideographmooncircle'] = 0x328A;\\r\\n t['ideographnamecircle'] = 0x3294;\\r\\n t['ideographsuncircle'] = 0x3290;\\r\\n t['ideographwatercircle'] = 0x328C;\\r\\n t['ideographwoodcircle'] = 0x328D;\\r\\n t['ideva'] = 0x0907;\\r\\n t['idieresis'] = 0x00EF;\\r\\n t['idieresisacute'] = 0x1E2F;\\r\\n t['idieresiscyrillic'] = 0x04E5;\\r\\n t['idotbelow'] = 0x1ECB;\\r\\n t['iebrevecyrillic'] = 0x04D7;\\r\\n t['iecyrillic'] = 0x0435;\\r\\n t['ieungacirclekorean'] = 0x3275;\\r\\n t['ieungaparenkorean'] = 0x3215;\\r\\n t['ieungcirclekorean'] = 0x3267;\\r\\n t['ieungkorean'] = 0x3147;\\r\\n t['ieungparenkorean'] = 0x3207;\\r\\n t['igrave'] = 0x00EC;\\r\\n t['igujarati'] = 0x0A87;\\r\\n t['igurmukhi'] = 0x0A07;\\r\\n t['ihiragana'] = 0x3044;\\r\\n t['ihookabove'] = 0x1EC9;\\r\\n t['iibengali'] = 0x0988;\\r\\n t['iicyrillic'] = 0x0438;\\r\\n t['iideva'] = 0x0908;\\r\\n t['iigujarati'] = 0x0A88;\\r\\n t['iigurmukhi'] = 0x0A08;\\r\\n t['iimatragurmukhi'] = 0x0A40;\\r\\n t['iinvertedbreve'] = 0x020B;\\r\\n t['iishortcyrillic'] = 0x0439;\\r\\n t['iivowelsignbengali'] = 0x09C0;\\r\\n t['iivowelsigndeva'] = 0x0940;\\r\\n t['iivowelsigngujarati'] = 0x0AC0;\\r\\n t['ij'] = 0x0133;\\r\\n t['ikatakana'] = 0x30A4;\\r\\n t['ikatakanahalfwidth'] = 0xFF72;\\r\\n t['ikorean'] = 0x3163;\\r\\n t['ilde'] = 0x02DC;\\r\\n t['iluyhebrew'] = 0x05AC;\\r\\n t['imacron'] = 0x012B;\\r\\n t['imacroncyrillic'] = 0x04E3;\\r\\n t['imageorapproximatelyequal'] = 0x2253;\\r\\n t['imatragurmukhi'] = 0x0A3F;\\r\\n t['imonospace'] = 0xFF49;\\r\\n t['increment'] = 0x2206;\\r\\n t['infinity'] = 0x221E;\\r\\n t['iniarmenian'] = 0x056B;\\r\\n t['integral'] = 0x222B;\\r\\n t['integralbottom'] = 0x2321;\\r\\n t['integralbt'] = 0x2321;\\r\\n t['integralex'] = 0xF8F5;\\r\\n t['integraltop'] = 0x2320;\\r\\n t['integraltp'] = 0x2320;\\r\\n t['intersection'] = 0x2229;\\r\\n t['intisquare'] = 0x3305;\\r\\n t['invbullet'] = 0x25D8;\\r\\n t['invcircle'] = 0x25D9;\\r\\n t['invsmileface'] = 0x263B;\\r\\n t['iocyrillic'] = 0x0451;\\r\\n t['iogonek'] = 0x012F;\\r\\n t['iota'] = 0x03B9;\\r\\n t['iotadieresis'] = 0x03CA;\\r\\n t['iotadieresistonos'] = 0x0390;\\r\\n t['iotalatin'] = 0x0269;\\r\\n t['iotatonos'] = 0x03AF;\\r\\n t['iparen'] = 0x24A4;\\r\\n t['irigurmukhi'] = 0x0A72;\\r\\n t['ismallhiragana'] = 0x3043;\\r\\n t['ismallkatakana'] = 0x30A3;\\r\\n t['ismallkatakanahalfwidth'] = 0xFF68;\\r\\n t['issharbengali'] = 0x09FA;\\r\\n t['istroke'] = 0x0268;\\r\\n t['isuperior'] = 0xF6ED;\\r\\n t['iterationhiragana'] = 0x309D;\\r\\n t['iterationkatakana'] = 0x30FD;\\r\\n t['itilde'] = 0x0129;\\r\\n t['itildebelow'] = 0x1E2D;\\r\\n t['iubopomofo'] = 0x3129;\\r\\n t['iucyrillic'] = 0x044E;\\r\\n t['ivowelsignbengali'] = 0x09BF;\\r\\n t['ivowelsigndeva'] = 0x093F;\\r\\n t['ivowelsigngujarati'] = 0x0ABF;\\r\\n t['izhitsacyrillic'] = 0x0475;\\r\\n t['izhitsadblgravecyrillic'] = 0x0477;\\r\\n t['j'] = 0x006A;\\r\\n t['jaarmenian'] = 0x0571;\\r\\n t['jabengali'] = 0x099C;\\r\\n t['jadeva'] = 0x091C;\\r\\n t['jagujarati'] = 0x0A9C;\\r\\n t['jagurmukhi'] = 0x0A1C;\\r\\n t['jbopomofo'] = 0x3110;\\r\\n t['jcaron'] = 0x01F0;\\r\\n t['jcircle'] = 0x24D9;\\r\\n t['jcircumflex'] = 0x0135;\\r\\n t['jcrossedtail'] = 0x029D;\\r\\n t['jdotlessstroke'] = 0x025F;\\r\\n t['jecyrillic'] = 0x0458;\\r\\n t['jeemarabic'] = 0x062C;\\r\\n t['jeemfinalarabic'] = 0xFE9E;\\r\\n t['jeeminitialarabic'] = 0xFE9F;\\r\\n t['jeemmedialarabic'] = 0xFEA0;\\r\\n t['jeharabic'] = 0x0698;\\r\\n t['jehfinalarabic'] = 0xFB8B;\\r\\n t['jhabengali'] = 0x099D;\\r\\n t['jhadeva'] = 0x091D;\\r\\n t['jhagujarati'] = 0x0A9D;\\r\\n t['jhagurmukhi'] = 0x0A1D;\\r\\n t['jheharmenian'] = 0x057B;\\r\\n t['jis'] = 0x3004;\\r\\n t['jmonospace'] = 0xFF4A;\\r\\n t['jparen'] = 0x24A5;\\r\\n t['jsuperior'] = 0x02B2;\\r\\n t['k'] = 0x006B;\\r\\n t['kabashkircyrillic'] = 0x04A1;\\r\\n t['kabengali'] = 0x0995;\\r\\n t['kacute'] = 0x1E31;\\r\\n t['kacyrillic'] = 0x043A;\\r\\n t['kadescendercyrillic'] = 0x049B;\\r\\n t['kadeva'] = 0x0915;\\r\\n t['kaf'] = 0x05DB;\\r\\n t['kafarabic'] = 0x0643;\\r\\n t['kafdagesh'] = 0xFB3B;\\r\\n t['kafdageshhebrew'] = 0xFB3B;\\r\\n t['kaffinalarabic'] = 0xFEDA;\\r\\n t['kafhebrew'] = 0x05DB;\\r\\n t['kafinitialarabic'] = 0xFEDB;\\r\\n t['kafmedialarabic'] = 0xFEDC;\\r\\n t['kafrafehebrew'] = 0xFB4D;\\r\\n t['kagujarati'] = 0x0A95;\\r\\n t['kagurmukhi'] = 0x0A15;\\r\\n t['kahiragana'] = 0x304B;\\r\\n t['kahookcyrillic'] = 0x04C4;\\r\\n t['kakatakana'] = 0x30AB;\\r\\n t['kakatakanahalfwidth'] = 0xFF76;\\r\\n t['kappa'] = 0x03BA;\\r\\n t['kappasymbolgreek'] = 0x03F0;\\r\\n t['kapyeounmieumkorean'] = 0x3171;\\r\\n t['kapyeounphieuphkorean'] = 0x3184;\\r\\n t['kapyeounpieupkorean'] = 0x3178;\\r\\n t['kapyeounssangpieupkorean'] = 0x3179;\\r\\n t['karoriisquare'] = 0x330D;\\r\\n t['kashidaautoarabic'] = 0x0640;\\r\\n t['kashidaautonosidebearingarabic'] = 0x0640;\\r\\n t['kasmallkatakana'] = 0x30F5;\\r\\n t['kasquare'] = 0x3384;\\r\\n t['kasraarabic'] = 0x0650;\\r\\n t['kasratanarabic'] = 0x064D;\\r\\n t['kastrokecyrillic'] = 0x049F;\\r\\n t['katahiraprolongmarkhalfwidth'] = 0xFF70;\\r\\n t['kaverticalstrokecyrillic'] = 0x049D;\\r\\n t['kbopomofo'] = 0x310E;\\r\\n t['kcalsquare'] = 0x3389;\\r\\n t['kcaron'] = 0x01E9;\\r\\n t['kcedilla'] = 0x0137;\\r\\n t['kcircle'] = 0x24DA;\\r\\n t['kcommaaccent'] = 0x0137;\\r\\n t['kdotbelow'] = 0x1E33;\\r\\n t['keharmenian'] = 0x0584;\\r\\n t['kehiragana'] = 0x3051;\\r\\n t['kekatakana'] = 0x30B1;\\r\\n t['kekatakanahalfwidth'] = 0xFF79;\\r\\n t['kenarmenian'] = 0x056F;\\r\\n t['kesmallkatakana'] = 0x30F6;\\r\\n t['kgreenlandic'] = 0x0138;\\r\\n t['khabengali'] = 0x0996;\\r\\n t['khacyrillic'] = 0x0445;\\r\\n t['khadeva'] = 0x0916;\\r\\n t['khagujarati'] = 0x0A96;\\r\\n t['khagurmukhi'] = 0x0A16;\\r\\n t['khaharabic'] = 0x062E;\\r\\n t['khahfinalarabic'] = 0xFEA6;\\r\\n t['khahinitialarabic'] = 0xFEA7;\\r\\n t['khahmedialarabic'] = 0xFEA8;\\r\\n t['kheicoptic'] = 0x03E7;\\r\\n t['khhadeva'] = 0x0959;\\r\\n t['khhagurmukhi'] = 0x0A59;\\r\\n t['khieukhacirclekorean'] = 0x3278;\\r\\n t['khieukhaparenkorean'] = 0x3218;\\r\\n t['khieukhcirclekorean'] = 0x326A;\\r\\n t['khieukhkorean'] = 0x314B;\\r\\n t['khieukhparenkorean'] = 0x320A;\\r\\n t['khokhaithai'] = 0x0E02;\\r\\n t['khokhonthai'] = 0x0E05;\\r\\n t['khokhuatthai'] = 0x0E03;\\r\\n t['khokhwaithai'] = 0x0E04;\\r\\n t['khomutthai'] = 0x0E5B;\\r\\n t['khook'] = 0x0199;\\r\\n t['khorakhangthai'] = 0x0E06;\\r\\n t['khzsquare'] = 0x3391;\\r\\n t['kihiragana'] = 0x304D;\\r\\n t['kikatakana'] = 0x30AD;\\r\\n t['kikatakanahalfwidth'] = 0xFF77;\\r\\n t['kiroguramusquare'] = 0x3315;\\r\\n t['kiromeetorusquare'] = 0x3316;\\r\\n t['kirosquare'] = 0x3314;\\r\\n t['kiyeokacirclekorean'] = 0x326E;\\r\\n t['kiyeokaparenkorean'] = 0x320E;\\r\\n t['kiyeokcirclekorean'] = 0x3260;\\r\\n t['kiyeokkorean'] = 0x3131;\\r\\n t['kiyeokparenkorean'] = 0x3200;\\r\\n t['kiyeoksioskorean'] = 0x3133;\\r\\n t['kjecyrillic'] = 0x045C;\\r\\n t['klinebelow'] = 0x1E35;\\r\\n t['klsquare'] = 0x3398;\\r\\n t['kmcubedsquare'] = 0x33A6;\\r\\n t['kmonospace'] = 0xFF4B;\\r\\n t['kmsquaredsquare'] = 0x33A2;\\r\\n t['kohiragana'] = 0x3053;\\r\\n t['kohmsquare'] = 0x33C0;\\r\\n t['kokaithai'] = 0x0E01;\\r\\n t['kokatakana'] = 0x30B3;\\r\\n t['kokatakanahalfwidth'] = 0xFF7A;\\r\\n t['kooposquare'] = 0x331E;\\r\\n t['koppacyrillic'] = 0x0481;\\r\\n t['koreanstandardsymbol'] = 0x327F;\\r\\n t['koroniscmb'] = 0x0343;\\r\\n t['kparen'] = 0x24A6;\\r\\n t['kpasquare'] = 0x33AA;\\r\\n t['ksicyrillic'] = 0x046F;\\r\\n t['ktsquare'] = 0x33CF;\\r\\n t['kturned'] = 0x029E;\\r\\n t['kuhiragana'] = 0x304F;\\r\\n t['kukatakana'] = 0x30AF;\\r\\n t['kukatakanahalfwidth'] = 0xFF78;\\r\\n t['kvsquare'] = 0x33B8;\\r\\n t['kwsquare'] = 0x33BE;\\r\\n t['l'] = 0x006C;\\r\\n t['labengali'] = 0x09B2;\\r\\n t['lacute'] = 0x013A;\\r\\n t['ladeva'] = 0x0932;\\r\\n t['lagujarati'] = 0x0AB2;\\r\\n t['lagurmukhi'] = 0x0A32;\\r\\n t['lakkhangyaothai'] = 0x0E45;\\r\\n t['lamaleffinalarabic'] = 0xFEFC;\\r\\n t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\\r\\n t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\\r\\n t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\\r\\n t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\\r\\n t['lamalefisolatedarabic'] = 0xFEFB;\\r\\n t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\\r\\n t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\\r\\n t['lamarabic'] = 0x0644;\\r\\n t['lambda'] = 0x03BB;\\r\\n t['lambdastroke'] = 0x019B;\\r\\n t['lamed'] = 0x05DC;\\r\\n t['lameddagesh'] = 0xFB3C;\\r\\n t['lameddageshhebrew'] = 0xFB3C;\\r\\n t['lamedhebrew'] = 0x05DC;\\r\\n t['lamfinalarabic'] = 0xFEDE;\\r\\n t['lamhahinitialarabic'] = 0xFCCA;\\r\\n t['laminitialarabic'] = 0xFEDF;\\r\\n t['lamjeeminitialarabic'] = 0xFCC9;\\r\\n t['lamkhahinitialarabic'] = 0xFCCB;\\r\\n t['lamlamhehisolatedarabic'] = 0xFDF2;\\r\\n t['lammedialarabic'] = 0xFEE0;\\r\\n t['lammeemhahinitialarabic'] = 0xFD88;\\r\\n t['lammeeminitialarabic'] = 0xFCCC;\\r\\n t['largecircle'] = 0x25EF;\\r\\n t['lbar'] = 0x019A;\\r\\n t['lbelt'] = 0x026C;\\r\\n t['lbopomofo'] = 0x310C;\\r\\n t['lcaron'] = 0x013E;\\r\\n t['lcedilla'] = 0x013C;\\r\\n t['lcircle'] = 0x24DB;\\r\\n t['lcircumflexbelow'] = 0x1E3D;\\r\\n t['lcommaaccent'] = 0x013C;\\r\\n t['ldot'] = 0x0140;\\r\\n t['ldotaccent'] = 0x0140;\\r\\n t['ldotbelow'] = 0x1E37;\\r\\n t['ldotbelowmacron'] = 0x1E39;\\r\\n t['leftangleabovecmb'] = 0x031A;\\r\\n t['lefttackbelowcmb'] = 0x0318;\\r\\n t['less'] = 0x003C;\\r\\n t['lessequal'] = 0x2264;\\r\\n t['lessequalorgreater'] = 0x22DA;\\r\\n t['lessmonospace'] = 0xFF1C;\\r\\n t['lessorequivalent'] = 0x2272;\\r\\n t['lessorgreater'] = 0x2276;\\r\\n t['lessoverequal'] = 0x2266;\\r\\n t['lesssmall'] = 0xFE64;\\r\\n t['lezh'] = 0x026E;\\r\\n t['lfblock'] = 0x258C;\\r\\n t['lhookretroflex'] = 0x026D;\\r\\n t['lira'] = 0x20A4;\\r\\n t['liwnarmenian'] = 0x056C;\\r\\n t['lj'] = 0x01C9;\\r\\n t['ljecyrillic'] = 0x0459;\\r\\n t['ll'] = 0xF6C0;\\r\\n t['lladeva'] = 0x0933;\\r\\n t['llagujarati'] = 0x0AB3;\\r\\n t['llinebelow'] = 0x1E3B;\\r\\n t['llladeva'] = 0x0934;\\r\\n t['llvocalicbengali'] = 0x09E1;\\r\\n t['llvocalicdeva'] = 0x0961;\\r\\n t['llvocalicvowelsignbengali'] = 0x09E3;\\r\\n t['llvocalicvowelsigndeva'] = 0x0963;\\r\\n t['lmiddletilde'] = 0x026B;\\r\\n t['lmonospace'] = 0xFF4C;\\r\\n t['lmsquare'] = 0x33D0;\\r\\n t['lochulathai'] = 0x0E2C;\\r\\n t['logicaland'] = 0x2227;\\r\\n t['logicalnot'] = 0x00AC;\\r\\n t['logicalnotreversed'] = 0x2310;\\r\\n t['logicalor'] = 0x2228;\\r\\n t['lolingthai'] = 0x0E25;\\r\\n t['longs'] = 0x017F;\\r\\n t['lowlinecenterline'] = 0xFE4E;\\r\\n t['lowlinecmb'] = 0x0332;\\r\\n t['lowlinedashed'] = 0xFE4D;\\r\\n t['lozenge'] = 0x25CA;\\r\\n t['lparen'] = 0x24A7;\\r\\n t['lslash'] = 0x0142;\\r\\n t['lsquare'] = 0x2113;\\r\\n t['lsuperior'] = 0xF6EE;\\r\\n t['ltshade'] = 0x2591;\\r\\n t['luthai'] = 0x0E26;\\r\\n t['lvocalicbengali'] = 0x098C;\\r\\n t['lvocalicdeva'] = 0x090C;\\r\\n t['lvocalicvowelsignbengali'] = 0x09E2;\\r\\n t['lvocalicvowelsigndeva'] = 0x0962;\\r\\n t['lxsquare'] = 0x33D3;\\r\\n t['m'] = 0x006D;\\r\\n t['mabengali'] = 0x09AE;\\r\\n t['macron'] = 0x00AF;\\r\\n t['macronbelowcmb'] = 0x0331;\\r\\n t['macroncmb'] = 0x0304;\\r\\n t['macronlowmod'] = 0x02CD;\\r\\n t['macronmonospace'] = 0xFFE3;\\r\\n t['macute'] = 0x1E3F;\\r\\n t['madeva'] = 0x092E;\\r\\n t['magujarati'] = 0x0AAE;\\r\\n t['magurmukhi'] = 0x0A2E;\\r\\n t['mahapakhhebrew'] = 0x05A4;\\r\\n t['mahapakhlefthebrew'] = 0x05A4;\\r\\n t['mahiragana'] = 0x307E;\\r\\n t['maichattawalowleftthai'] = 0xF895;\\r\\n t['maichattawalowrightthai'] = 0xF894;\\r\\n t['maichattawathai'] = 0x0E4B;\\r\\n t['maichattawaupperleftthai'] = 0xF893;\\r\\n t['maieklowleftthai'] = 0xF88C;\\r\\n t['maieklowrightthai'] = 0xF88B;\\r\\n t['maiekthai'] = 0x0E48;\\r\\n t['maiekupperleftthai'] = 0xF88A;\\r\\n t['maihanakatleftthai'] = 0xF884;\\r\\n t['maihanakatthai'] = 0x0E31;\\r\\n t['maitaikhuleftthai'] = 0xF889;\\r\\n t['maitaikhuthai'] = 0x0E47;\\r\\n t['maitholowleftthai'] = 0xF88F;\\r\\n t['maitholowrightthai'] = 0xF88E;\\r\\n t['maithothai'] = 0x0E49;\\r\\n t['maithoupperleftthai'] = 0xF88D;\\r\\n t['maitrilowleftthai'] = 0xF892;\\r\\n t['maitrilowrightthai'] = 0xF891;\\r\\n t['maitrithai'] = 0x0E4A;\\r\\n t['maitriupperleftthai'] = 0xF890;\\r\\n t['maiyamokthai'] = 0x0E46;\\r\\n t['makatakana'] = 0x30DE;\\r\\n t['makatakanahalfwidth'] = 0xFF8F;\\r\\n t['male'] = 0x2642;\\r\\n t['mansyonsquare'] = 0x3347;\\r\\n t['maqafhebrew'] = 0x05BE;\\r\\n t['mars'] = 0x2642;\\r\\n t['masoracirclehebrew'] = 0x05AF;\\r\\n t['masquare'] = 0x3383;\\r\\n t['mbopomofo'] = 0x3107;\\r\\n t['mbsquare'] = 0x33D4;\\r\\n t['mcircle'] = 0x24DC;\\r\\n t['mcubedsquare'] = 0x33A5;\\r\\n t['mdotaccent'] = 0x1E41;\\r\\n t['mdotbelow'] = 0x1E43;\\r\\n t['meemarabic'] = 0x0645;\\r\\n t['meemfinalarabic'] = 0xFEE2;\\r\\n t['meeminitialarabic'] = 0xFEE3;\\r\\n t['meemmedialarabic'] = 0xFEE4;\\r\\n t['meemmeeminitialarabic'] = 0xFCD1;\\r\\n t['meemmeemisolatedarabic'] = 0xFC48;\\r\\n t['meetorusquare'] = 0x334D;\\r\\n t['mehiragana'] = 0x3081;\\r\\n t['meizierasquare'] = 0x337E;\\r\\n t['mekatakana'] = 0x30E1;\\r\\n t['mekatakanahalfwidth'] = 0xFF92;\\r\\n t['mem'] = 0x05DE;\\r\\n t['memdagesh'] = 0xFB3E;\\r\\n t['memdageshhebrew'] = 0xFB3E;\\r\\n t['memhebrew'] = 0x05DE;\\r\\n t['menarmenian'] = 0x0574;\\r\\n t['merkhahebrew'] = 0x05A5;\\r\\n t['merkhakefulahebrew'] = 0x05A6;\\r\\n t['merkhakefulalefthebrew'] = 0x05A6;\\r\\n t['merkhalefthebrew'] = 0x05A5;\\r\\n t['mhook'] = 0x0271;\\r\\n t['mhzsquare'] = 0x3392;\\r\\n t['middledotkatakanahalfwidth'] = 0xFF65;\\r\\n t['middot'] = 0x00B7;\\r\\n t['mieumacirclekorean'] = 0x3272;\\r\\n t['mieumaparenkorean'] = 0x3212;\\r\\n t['mieumcirclekorean'] = 0x3264;\\r\\n t['mieumkorean'] = 0x3141;\\r\\n t['mieumpansioskorean'] = 0x3170;\\r\\n t['mieumparenkorean'] = 0x3204;\\r\\n t['mieumpieupkorean'] = 0x316E;\\r\\n t['mieumsioskorean'] = 0x316F;\\r\\n t['mihiragana'] = 0x307F;\\r\\n t['mikatakana'] = 0x30DF;\\r\\n t['mikatakanahalfwidth'] = 0xFF90;\\r\\n t['minus'] = 0x2212;\\r\\n t['minusbelowcmb'] = 0x0320;\\r\\n t['minuscircle'] = 0x2296;\\r\\n t['minusmod'] = 0x02D7;\\r\\n t['minusplus'] = 0x2213;\\r\\n t['minute'] = 0x2032;\\r\\n t['miribaarusquare'] = 0x334A;\\r\\n t['mirisquare'] = 0x3349;\\r\\n t['mlonglegturned'] = 0x0270;\\r\\n t['mlsquare'] = 0x3396;\\r\\n t['mmcubedsquare'] = 0x33A3;\\r\\n t['mmonospace'] = 0xFF4D;\\r\\n t['mmsquaredsquare'] = 0x339F;\\r\\n t['mohiragana'] = 0x3082;\\r\\n t['mohmsquare'] = 0x33C1;\\r\\n t['mokatakana'] = 0x30E2;\\r\\n t['mokatakanahalfwidth'] = 0xFF93;\\r\\n t['molsquare'] = 0x33D6;\\r\\n t['momathai'] = 0x0E21;\\r\\n t['moverssquare'] = 0x33A7;\\r\\n t['moverssquaredsquare'] = 0x33A8;\\r\\n t['mparen'] = 0x24A8;\\r\\n t['mpasquare'] = 0x33AB;\\r\\n t['mssquare'] = 0x33B3;\\r\\n t['msuperior'] = 0xF6EF;\\r\\n t['mturned'] = 0x026F;\\r\\n t['mu'] = 0x00B5;\\r\\n t['mu1'] = 0x00B5;\\r\\n t['muasquare'] = 0x3382;\\r\\n t['muchgreater'] = 0x226B;\\r\\n t['muchless'] = 0x226A;\\r\\n t['mufsquare'] = 0x338C;\\r\\n t['mugreek'] = 0x03BC;\\r\\n t['mugsquare'] = 0x338D;\\r\\n t['muhiragana'] = 0x3080;\\r\\n t['mukatakana'] = 0x30E0;\\r\\n t['mukatakanahalfwidth'] = 0xFF91;\\r\\n t['mulsquare'] = 0x3395;\\r\\n t['multiply'] = 0x00D7;\\r\\n t['mumsquare'] = 0x339B;\\r\\n t['munahhebrew'] = 0x05A3;\\r\\n t['munahlefthebrew'] = 0x05A3;\\r\\n t['musicalnote'] = 0x266A;\\r\\n t['musicalnotedbl'] = 0x266B;\\r\\n t['musicflatsign'] = 0x266D;\\r\\n t['musicsharpsign'] = 0x266F;\\r\\n t['mussquare'] = 0x33B2;\\r\\n t['muvsquare'] = 0x33B6;\\r\\n t['muwsquare'] = 0x33BC;\\r\\n t['mvmegasquare'] = 0x33B9;\\r\\n t['mvsquare'] = 0x33B7;\\r\\n t['mwmegasquare'] = 0x33BF;\\r\\n t['mwsquare'] = 0x33BD;\\r\\n t['n'] = 0x006E;\\r\\n t['nabengali'] = 0x09A8;\\r\\n t['nabla'] = 0x2207;\\r\\n t['nacute'] = 0x0144;\\r\\n t['nad\";a.a+=\"eva'] = 0x0928;\\r\\n t['nagujarati'] = 0x0AA8;\\r\\n t['nagurmukhi'] = 0x0A28;\\r\\n t['nahiragana'] = 0x306A;\\r\\n t['nakatakana'] = 0x30CA;\\r\\n t['nakatakanahalfwidth'] = 0xFF85;\\r\\n t['napostrophe'] = 0x0149;\\r\\n t['nasquare'] = 0x3381;\\r\\n t['nbopomofo'] = 0x310B;\\r\\n t['nbspace'] = 0x00A0;\\r\\n t['ncaron'] = 0x0148;\\r\\n t['ncedilla'] = 0x0146;\\r\\n t['ncircle'] = 0x24DD;\\r\\n t['ncircumflexbelow'] = 0x1E4B;\\r\\n t['ncommaaccent'] = 0x0146;\\r\\n t['ndotaccent'] = 0x1E45;\\r\\n t['ndotbelow'] = 0x1E47;\\r\\n t['nehiragana'] = 0x306D;\\r\\n t['nekatakana'] = 0x30CD;\\r\\n t['nekatakanahalfwidth'] = 0xFF88;\\r\\n t['newsheqelsign'] = 0x20AA;\\r\\n t['nfsquare'] = 0x338B;\\r\\n t['ngabengali'] = 0x0999;\\r\\n t['ngadeva'] = 0x0919;\\r\\n t['ngagujarati'] = 0x0A99;\\r\\n t['ngagurmukhi'] = 0x0A19;\\r\\n t['ngonguthai'] = 0x0E07;\\r\\n t['nhiragana'] = 0x3093;\\r\\n t['nhookleft'] = 0x0272;\\r\\n t['nhookretroflex'] = 0x0273;\\r\\n t['nieunacirclekorean'] = 0x326F;\\r\\n t['nieunaparenkorean'] = 0x320F;\\r\\n t['nieuncieuckorean'] = 0x3135;\\r\\n t['nieuncirclekorean'] = 0x3261;\\r\\n t['nieunhieuhkorean'] = 0x3136;\\r\\n t['nieunkorean'] = 0x3134;\\r\\n t['nieunpansioskorean'] = 0x3168;\\r\\n t['nieunparenkorean'] = 0x3201;\\r\\n t['nieunsioskorean'] = 0x3167;\\r\\n t['nieuntikeutkorean'] = 0x3166;\\r\\n t['nihiragana'] = 0x306B;\\r\\n t['nikatakana'] = 0x30CB;\\r\\n t['nikatakanahalfwidth'] = 0xFF86;\\r\\n t['nikhahitleftthai'] = 0xF899;\\r\\n t['nikhahitthai'] = 0x0E4D;\\r\\n t['nine'] = 0x0039;\\r\\n t['ninearabic'] = 0x0669;\\r\\n t['ninebengali'] = 0x09EF;\\r\\n t['ninecircle'] = 0x2468;\\r\\n t['ninecircleinversesansserif'] = 0x2792;\\r\\n t['ninedeva'] = 0x096F;\\r\\n t['ninegujarati'] = 0x0AEF;\\r\\n t['ninegurmukhi'] = 0x0A6F;\\r\\n t['ninehackarabic'] = 0x0669;\\r\\n t['ninehangzhou'] = 0x3029;\\r\\n t['nineideographicparen'] = 0x3228;\\r\\n t['nineinferior'] = 0x2089;\\r\\n t['ninemonospace'] = 0xFF19;\\r\\n t['nineoldstyle'] = 0xF739;\\r\\n t['nineparen'] = 0x247C;\\r\\n t['nineperiod'] = 0x2490;\\r\\n t['ninepersian'] = 0x06F9;\\r\\n t['nineroman'] = 0x2178;\\r\\n t['ninesuperior'] = 0x2079;\\r\\n t['nineteencircle'] = 0x2472;\\r\\n t['nineteenparen'] = 0x2486;\\r\\n t['nineteenperiod'] = 0x249A;\\r\\n t['ninethai'] = 0x0E59;\\r\\n t['nj'] = 0x01CC;\\r\\n t['njecyrillic'] = 0x045A;\\r\\n t['nkatakana'] = 0x30F3;\\r\\n t['nkatakanahalfwidth'] = 0xFF9D;\\r\\n t['nlegrightlong'] = 0x019E;\\r\\n t['nlinebelow'] = 0x1E49;\\r\\n t['nmonospace'] = 0xFF4E;\\r\\n t['nmsquare'] = 0x339A;\\r\\n t['nnabengali'] = 0x09A3;\\r\\n t['nnadeva'] = 0x0923;\\r\\n t['nnagujarati'] = 0x0AA3;\\r\\n t['nnagurmukhi'] = 0x0A23;\\r\\n t['nnnadeva'] = 0x0929;\\r\\n t['nohiragana'] = 0x306E;\\r\\n t['nokatakana'] = 0x30CE;\\r\\n t['nokatakanahalfwidth'] = 0xFF89;\\r\\n t['nonbreakingspace'] = 0x00A0;\\r\\n t['nonenthai'] = 0x0E13;\\r\\n t['nonuthai'] = 0x0E19;\\r\\n t['noonarabic'] = 0x0646;\\r\\n t['noonfinalarabic'] = 0xFEE6;\\r\\n t['noonghunnaarabic'] = 0x06BA;\\r\\n t['noonghunnafinalarabic'] = 0xFB9F;\\r\\n t['nooninitialarabic'] = 0xFEE7;\\r\\n t['noonjeeminitialarabic'] = 0xFCD2;\\r\\n t['noonjeemisolatedarabic'] = 0xFC4B;\\r\\n t['noonmedialarabic'] = 0xFEE8;\\r\\n t['noonmeeminitialarabic'] = 0xFCD5;\\r\\n t['noonmeemisolatedarabic'] = 0xFC4E;\\r\\n t['noonnoonfinalarabic'] = 0xFC8D;\\r\\n t['notcontains'] = 0x220C;\\r\\n t['notelement'] = 0x2209;\\r\\n t['notelementof'] = 0x2209;\\r\\n t['notequal'] = 0x2260;\\r\\n t['notgreater'] = 0x226F;\\r\\n t['notgreaternorequal'] = 0x2271;\\r\\n t['notgreaternorless'] = 0x2279;\\r\\n t['notidentical'] = 0x2262;\\r\\n t['notless'] = 0x226E;\\r\\n t['notlessnorequal'] = 0x2270;\\r\\n t['notparallel'] = 0x2226;\\r\\n t['notprecedes'] = 0x2280;\\r\\n t['notsubset'] = 0x2284;\\r\\n t['notsucceeds'] = 0x2281;\\r\\n t['notsuperset'] = 0x2285;\\r\\n t['nowarmenian'] = 0x0576;\\r\\n t['nparen'] = 0x24A9;\\r\\n t['nssquare'] = 0x33B1;\\r\\n t['nsuperior'] = 0x207F;\\r\\n t['ntilde'] = 0x00F1;\\r\\n t['nu'] = 0x03BD;\\r\\n t['nuhiragana'] = 0x306C;\\r\\n t['nukatakana'] = 0x30CC;\\r\\n t['nukatakanahalfwidth'] = 0xFF87;\\r\\n t['nuktabengali'] = 0x09BC;\\r\\n t['nuktadeva'] = 0x093C;\\r\\n t['nuktagujarati'] = 0x0ABC;\\r\\n t['nuktagurmukhi'] = 0x0A3C;\\r\\n t['numbersign'] = 0x0023;\\r\\n t['numbersignmonospace'] = 0xFF03;\\r\\n t['numbersignsmall'] = 0xFE5F;\\r\\n t['numeralsigngreek'] = 0x0374;\\r\\n t['numeralsignlowergreek'] = 0x0375;\\r\\n t['numero'] = 0x2116;\\r\\n t['nun'] = 0x05E0;\\r\\n t['nundagesh'] = 0xFB40;\\r\\n t['nundageshhebrew'] = 0xFB40;\\r\\n t['nunhebrew'] = 0x05E0;\\r\\n t['nvsquare'] = 0x33B5;\\r\\n t['nwsquare'] = 0x33BB;\\r\\n t['nyabengali'] = 0x099E;\\r\\n t['nyadeva'] = 0x091E;\\r\\n t['nyagujarati'] = 0x0A9E;\\r\\n t['nyagurmukhi'] = 0x0A1E;\\r\\n t['o'] = 0x006F;\\r\\n t['oacute'] = 0x00F3;\\r\\n t['oangthai'] = 0x0E2D;\\r\\n t['obarred'] = 0x0275;\\r\\n t['obarredcyrillic'] = 0x04E9;\\r\\n t['obarreddieresiscyrillic'] = 0x04EB;\\r\\n t['obengali'] = 0x0993;\\r\\n t['obopomofo'] = 0x311B;\\r\\n t['obreve'] = 0x014F;\\r\\n t['ocandradeva'] = 0x0911;\\r\\n t['ocandragujarati'] = 0x0A91;\\r\\n t['ocandravowelsigndeva'] = 0x0949;\\r\\n t['ocandravowelsigngujarati'] = 0x0AC9;\\r\\n t['ocaron'] = 0x01D2;\\r\\n t['ocircle'] = 0x24DE;\\r\\n t['ocircumflex'] = 0x00F4;\\r\\n t['ocircumflexacute'] = 0x1ED1;\\r\\n t['ocircumflexdotbelow'] = 0x1ED9;\\r\\n t['ocircumflexgrave'] = 0x1ED3;\\r\\n t['ocircumflexhookabove'] = 0x1ED5;\\r\\n t['ocircumflextilde'] = 0x1ED7;\\r\\n t['ocyrillic'] = 0x043E;\\r\\n t['odblacute'] = 0x0151;\\r\\n t['odblgrave'] = 0x020D;\\r\\n t['odeva'] = 0x0913;\\r\\n t['odieresis'] = 0x00F6;\\r\\n t['odieresiscyrillic'] = 0x04E7;\\r\\n t['odotbelow'] = 0x1ECD;\\r\\n t['oe'] = 0x0153;\\r\\n t['oekorean'] = 0x315A;\\r\\n t['ogonek'] = 0x02DB;\\r\\n t['ogonekcmb'] = 0x0328;\\r\\n t['ograve'] = 0x00F2;\\r\\n t['ogujarati'] = 0x0A93;\\r\\n t['oharmenian'] = 0x0585;\\r\\n t['ohiragana'] = 0x304A;\\r\\n t['ohookabove'] = 0x1ECF;\\r\\n t['ohorn'] = 0x01A1;\\r\\n t['ohornacute'] = 0x1EDB;\\r\\n t['ohorndotbelow'] = 0x1EE3;\\r\\n t['ohorngrave'] = 0x1EDD;\\r\\n t['ohornhookabove'] = 0x1EDF;\\r\\n t['ohorntilde'] = 0x1EE1;\\r\\n t['ohungarumlaut'] = 0x0151;\\r\\n t['oi'] = 0x01A3;\\r\\n t['oinvertedbreve'] = 0x020F;\\r\\n t['okatakana'] = 0x30AA;\\r\\n t['okatakanahalfwidth'] = 0xFF75;\\r\\n t['okorean'] = 0x3157;\\r\\n t['olehebrew'] = 0x05AB;\\r\\n t['omacron'] = 0x014D;\\r\\n t['omacronacute'] = 0x1E53;\\r\\n t['omacrongrave'] = 0x1E51;\\r\\n t['omdeva'] = 0x0950;\\r\\n t['omega'] = 0x03C9;\\r\\n t['omega1'] = 0x03D6;\\r\\n t['omegacyrillic'] = 0x0461;\\r\\n t['omegalatinclosed'] = 0x0277;\\r\\n t['omegaroundcyrillic'] = 0x047B;\\r\\n t['omegatitlocyrillic'] = 0x047D;\\r\\n t['omegatonos'] = 0x03CE;\\r\\n t['omgujarati'] = 0x0AD0;\\r\\n t['omicron'] = 0x03BF;\\r\\n t['omicrontonos'] = 0x03CC;\\r\\n t['omonospace'] = 0xFF4F;\\r\\n t['one'] = 0x0031;\\r\\n t['onearabic'] = 0x0661;\\r\\n t['onebengali'] = 0x09E7;\\r\\n t['onecircle'] = 0x2460;\\r\\n t['onecircleinversesansserif'] = 0x278A;\\r\\n t['onedeva'] = 0x0967;\\r\\n t['onedotenleader'] = 0x2024;\\r\\n t['oneeighth'] = 0x215B;\\r\\n t['onefitted'] = 0xF6DC;\\r\\n t['onegujarati'] = 0x0AE7;\\r\\n t['onegurmukhi'] = 0x0A67;\\r\\n t['onehackarabic'] = 0x0661;\\r\\n t['onehalf'] = 0x00BD;\\r\\n t['onehangzhou'] = 0x3021;\\r\\n t['oneideographicparen'] = 0x3220;\\r\\n t['oneinferior'] = 0x2081;\\r\\n t['onemonospace'] = 0xFF11;\\r\\n t['onenumeratorbengali'] = 0x09F4;\\r\\n t['oneoldstyle'] = 0xF731;\\r\\n t['oneparen'] = 0x2474;\\r\\n t['oneperiod'] = 0x2488;\\r\\n t['onepersian'] = 0x06F1;\\r\\n t['onequarter'] = 0x00BC;\\r\\n t['oneroman'] = 0x2170;\\r\\n t['onesuperior'] = 0x00B9;\\r\\n t['onethai'] = 0x0E51;\\r\\n t['onethird'] = 0x2153;\\r\\n t['oogonek'] = 0x01EB;\\r\\n t['oogonekmacron'] = 0x01ED;\\r\\n t['oogurmukhi'] = 0x0A13;\\r\\n t['oomatragurmukhi'] = 0x0A4B;\\r\\n t['oopen'] = 0x0254;\\r\\n t['oparen'] = 0x24AA;\\r\\n t['openbullet'] = 0x25E6;\\r\\n t['option'] = 0x2325;\\r\\n t['ordfeminine'] = 0x00AA;\\r\\n t['ordmasculine'] = 0x00BA;\\r\\n t['orthogonal'] = 0x221F;\\r\\n t['oshortdeva'] = 0x0912;\\r\\n t['oshortvowelsigndeva'] = 0x094A;\\r\\n t['oslash'] = 0x00F8;\\r\\n t['oslashacute'] = 0x01FF;\\r\\n t['osmallhiragana'] = 0x3049;\\r\\n t['osmallkatakana'] = 0x30A9;\\r\\n t['osmallkatakanahalfwidth'] = 0xFF6B;\\r\\n t['ostrokeacute'] = 0x01FF;\\r\\n t['osuperior'] = 0xF6F0;\\r\\n t['otcyrillic'] = 0x047F;\\r\\n t['otilde'] = 0x00F5;\\r\\n t['otildeacute'] = 0x1E4D;\\r\\n t['otildedieresis'] = 0x1E4F;\\r\\n t['oubopomofo'] = 0x3121;\\r\\n t['overline'] = 0x203E;\\r\\n t['overlinecenterline'] = 0xFE4A;\\r\\n t['overlinecmb'] = 0x0305;\\r\\n t['overlinedashed'] = 0xFE49;\\r\\n t['overlinedblwavy'] = 0xFE4C;\\r\\n t['overlinewavy'] = 0xFE4B;\\r\\n t['overscore'] = 0x00AF;\\r\\n t['ovowelsignbengali'] = 0x09CB;\\r\\n t['ovowelsigndeva'] = 0x094B;\\r\\n t['ovowelsigngujarati'] = 0x0ACB;\\r\\n t['p'] = 0x0070;\\r\\n t['paampssquare'] = 0x3380;\\r\\n t['paasentosquare'] = 0x332B;\\r\\n t['pabengali'] = 0x09AA;\\r\\n t['pacute'] = 0x1E55;\\r\\n t['padeva'] = 0x092A;\\r\\n t['pagedown'] = 0x21DF;\\r\\n t['pageup'] = 0x21DE;\\r\\n t['pagujarati'] = 0x0AAA;\\r\\n t['pagurmukhi'] = 0x0A2A;\\r\\n t['pahiragana'] = 0x3071;\\r\\n t['paiyannoithai'] = 0x0E2F;\\r\\n t['pakatakana'] = 0x30D1;\\r\\n t['palatalizationcyrilliccmb'] = 0x0484;\\r\\n t['palochkacyrillic'] = 0x04C0;\\r\\n t['pansioskorean'] = 0x317F;\\r\\n t['paragraph'] = 0x00B6;\\r\\n t['parallel'] = 0x2225;\\r\\n t['parenleft'] = 0x0028;\\r\\n t['parenleftaltonearabic'] = 0xFD3E;\\r\\n t['parenleftbt'] = 0xF8ED;\\r\\n t['parenleftex'] = 0xF8EC;\\r\\n t['parenleftinferior'] = 0x208D;\\r\\n t['parenleftmonospace'] = 0xFF08;\\r\\n t['parenleftsmall'] = 0xFE59;\\r\\n t['parenleftsuperior'] = 0x207D;\\r\\n t['parenlefttp'] = 0xF8EB;\\r\\n t['parenleftvertical'] = 0xFE35;\\r\\n t['parenright'] = 0x0029;\\r\\n t['parenrightaltonearabic'] = 0xFD3F;\\r\\n t['parenrightbt'] = 0xF8F8;\\r\\n t['parenrightex'] = 0xF8F7;\\r\\n t['parenrightinferior'] = 0x208E;\\r\\n t['parenrightmonospace'] = 0xFF09;\\r\\n t['parenrightsmall'] = 0xFE5A;\\r\\n t['parenrightsuperior'] = 0x207E;\\r\\n t['parenrighttp'] = 0xF8F6;\\r\\n t['parenrightvertical'] = 0xFE36;\\r\\n t['partialdiff'] = 0x2202;\\r\\n t['paseqhebrew'] = 0x05C0;\\r\\n t['pashtahebrew'] = 0x0599;\\r\\n t['pasquare'] = 0x33A9;\\r\\n t['patah'] = 0x05B7;\\r\\n t['patah11'] = 0x05B7;\\r\\n t['patah1d'] = 0x05B7;\\r\\n t['patah2a'] = 0x05B7;\\r\\n t['patahhebrew'] = 0x05B7;\\r\\n t['patahnarrowhebrew'] = 0x05B7;\\r\\n t['patahquarterhebrew'] = 0x05B7;\\r\\n t['patahwidehebrew'] = 0x05B7;\\r\\n t['pazerhebrew'] = 0x05A1;\\r\\n t['pbopomofo'] = 0x3106;\\r\\n t['pcircle'] = 0x24DF;\\r\\n t['pdotaccent'] = 0x1E57;\\r\\n t['pe'] = 0x05E4;\\r\\n t['pecyrillic'] = 0x043F;\\r\\n t['pedagesh'] = 0xFB44;\\r\\n t['pedageshhebrew'] = 0xFB44;\\r\\n t['peezisquare'] = 0x333B;\\r\\n t['pefinaldageshhebrew'] = 0xFB43;\\r\\n t['peharabic'] = 0x067E;\\r\\n t['peharmenian'] = 0x057A;\\r\\n t['pehebrew'] = 0x05E4;\\r\\n t['pehfinalarabic'] = 0xFB57;\\r\\n t['pehinitialarabic'] = 0xFB58;\\r\\n t['pehiragana'] = 0x307A;\\r\\n t['pehmedialarabic'] = 0xFB59;\\r\\n t['pekatakana'] = 0x30DA;\\r\\n t['pemiddlehookcyrillic'] = 0x04A7;\\r\\n t['perafehebrew'] = 0xFB4E;\\r\\n t['percent'] = 0x0025;\\r\\n t['percentarabic'] = 0x066A;\\r\\n t['percentmonospace'] = 0xFF05;\\r\\n t['percentsmall'] = 0xFE6A;\\r\\n t['period'] = 0x002E;\\r\\n t['periodarmenian'] = 0x0589;\\r\\n t['periodcentered'] = 0x00B7;\\r\\n t['periodhalfwidth'] = 0xFF61;\\r\\n t['periodinferior'] = 0xF6E7;\\r\\n t['periodmonospace'] = 0xFF0E;\\r\\n t['periodsmall'] = 0xFE52;\\r\\n t['periodsuperior'] = 0xF6E8;\\r\\n t['perispomenigreekcmb'] = 0x0342;\\r\\n t['perpendicular'] = 0x22A5;\\r\\n t['perthousand'] = 0x2030;\\r\\n t['peseta'] = 0x20A7;\\r\\n t['pfsquare'] = 0x338A;\\r\\n t['phabengali'] = 0x09AB;\\r\\n t['phadeva'] = 0x092B;\\r\\n t['phagujarati'] = 0x0AAB;\\r\\n t['phagurmukhi'] = 0x0A2B;\\r\\n t['phi'] = 0x03C6;\\r\\n t['phi1'] = 0x03D5;\\r\\n t['phieuphacirclekorean'] = 0x327A;\\r\\n t['phieuphaparenkorean'] = 0x321A;\\r\\n t['phieuphcirclekorean'] = 0x326C;\\r\\n t['phieuphkorean'] = 0x314D;\\r\\n t['phieuphparenkorean'] = 0x320C;\\r\\n t['philatin'] = 0x0278;\\r\\n t['phinthuthai'] = 0x0E3A;\\r\\n t['phisymbolgreek'] = 0x03D5;\\r\\n t['phook'] = 0x01A5;\\r\\n t['phophanthai'] = 0x0E1E;\\r\\n t['phophungthai'] = 0x0E1C;\\r\\n t['phosamphaothai'] = 0x0E20;\\r\\n t['pi'] = 0x03C0;\\r\\n t['pieupacirclekorean'] = 0x3273;\\r\\n t['pieupaparenkorean'] = 0x3213;\\r\\n t['pieupcieuckorean'] = 0x3176;\\r\\n t['pieupcirclekorean'] = 0x3265;\\r\\n t['pieupkiyeokkorean'] = 0x3172;\\r\\n t['pieupkorean'] = 0x3142;\\r\\n t['pieupparenkorean'] = 0x3205;\\r\\n t['pieupsioskiyeokkorean'] = 0x3174;\\r\\n t['pieupsioskorean'] = 0x3144;\\r\\n t['pieupsiostikeutkorean'] = 0x3175;\\r\\n t['pieupthieuthkorean'] = 0x3177;\\r\\n t['pieuptikeutkorean'] = 0x3173;\\r\\n t['pihiragana'] = 0x3074;\\r\\n t['pikatakana'] = 0x30D4;\\r\\n t['pisymbolgreek'] = 0x03D6;\\r\\n t['piwrarmenian'] = 0x0583;\\r\\n t['plus'] = 0x002B;\\r\\n t['plusbelowcmb'] = 0x031F;\\r\\n t['pluscircle'] = 0x2295;\\r\\n t['plusminus'] = 0x00B1;\\r\\n t['plusmod'] = 0x02D6;\\r\\n t['plusmonospace'] = 0xFF0B;\\r\\n t['plussmall'] = 0xFE62;\\r\\n t['plussuperior'] = 0x207A;\\r\\n t['pmonospace'] = 0xFF50;\\r\\n t['pmsquare'] = 0x33D8;\\r\\n t['pohiragana'] = 0x307D;\\r\\n t['pointingindexdownwhite'] = 0x261F;\\r\\n t['pointingindexleftwhite'] = 0x261C;\\r\\n t['pointingindexrightwhite'] = 0x261E;\\r\\n t['pointingindexupwhite'] = 0x261D;\\r\\n t['pokatakana'] = 0x30DD;\\r\\n t['poplathai'] = 0x0E1B;\\r\\n t['postalmark'] = 0x3012;\\r\\n t['postalmarkface'] = 0x3020;\\r\\n t['pparen'] = 0x24AB;\\r\\n t['precedes'] = 0x227A;\\r\\n t['prescription'] = 0x211E;\\r\\n t['primemod'] = 0x02B9;\\r\\n t['primereversed'] = 0x2035;\\r\\n t['product'] = 0x220F;\\r\\n t['projective'] = 0x2305;\\r\\n t['prolongedkana'] = 0x30FC;\\r\\n t['propellor'] = 0x2318;\\r\\n t['propersubset'] = 0x2282;\\r\\n t['propersuperset'] = 0x2283;\\r\\n t['proportion'] = 0x2237;\\r\\n t['proportional'] = 0x221D;\\r\\n t['psi'] = 0x03C8;\\r\\n t['psicyrillic'] = 0x0471;\\r\\n t['psilipneumatacyrilliccmb'] = 0x0486;\\r\\n t['pssquare'] = 0x33B0;\\r\\n t['puhiragana'] = 0x3077;\\r\\n t['pukatakana'] = 0x30D7;\\r\\n t['pvsquare'] = 0x33B4;\\r\\n t['pwsquare'] = 0x33BA;\\r\\n t['q'] = 0x0071;\\r\\n t['qadeva'] = 0x0958;\\r\\n t['qadmahebrew'] = 0x05A8;\\r\\n t['qafarabic'] = 0x0642;\\r\\n t['qaffinalarabic'] = 0xFED6;\\r\\n t['qafinitialarabic'] = 0xFED7;\\r\\n t['qafmedialarabic'] = 0xFED8;\\r\\n t['qamats'] = 0x05B8;\\r\\n t['qamats10'] = 0x05B8;\\r\\n t['qamats1a'] = 0x05B8;\\r\\n t['qamats1c'] = 0x05B8;\\r\\n t['qamats27'] = 0x05B8;\\r\\n t['qamats29'] = 0x05B8;\\r\\n t['qamats33'] = 0x05B8;\\r\\n t['qamatsde'] = 0x05B8;\\r\\n t['qamatshebrew'] = 0x05B8;\\r\\n t['qamatsnarrowhebrew'] = 0x05B8;\\r\\n t['qamatsqatanhebrew'] = 0x05B8;\\r\\n t['qamatsqatannarrowhebrew'] = 0x05B8;\\r\\n t['qamatsqatanquarterhebrew'] = 0x05B8;\\r\\n t['qamatsqatanwidehebrew'] = 0x05B8;\\r\\n t['qamatsquarterhebrew'] = 0x05B8;\\r\\n t['qamatswidehebrew'] = 0x05B8;\\r\\n t['qarneyparahebrew'] = 0x059F;\\r\\n t['qbopomofo'] = 0x3111;\\r\\n t['qcircle'] = 0x24E0;\\r\\n t['qhook'] = 0x02A0;\\r\\n t['qmonospace'] = 0xFF51;\\r\\n t['qof'] = 0x05E7;\\r\\n t['qofdagesh'] = 0xFB47;\\r\\n t['qofdageshhebrew'] = 0xFB47;\\r\\n t['qofhebrew'] = 0x05E7;\\r\\n t['qparen'] = 0x24AC;\\r\\n t['quarternote'] = 0x2669;\\r\\n t['qubuts'] = 0x05BB;\\r\\n t['qubuts18'] = 0x05BB;\\r\\n t['qubuts25'] = 0x05BB;\\r\\n t['qubuts31'] = 0x05BB;\\r\\n t['qubutshebrew'] = 0x05BB;\\r\\n t['qubutsnarrowhebrew'] = 0x05BB;\\r\\n t['qubutsquarterhebrew'] = 0x05BB;\\r\\n t['qubutswidehebrew'] = 0x05BB;\\r\\n t['question'] = 0x003F;\\r\\n t['questionarabic'] = 0x061F;\\r\\n t['questionarmenian'] = 0x055E;\\r\\n t['questiondown'] = 0x00BF;\\r\\n t['questiondownsmall'] = 0xF7BF;\\r\\n t['questiongreek'] = 0x037E;\\r\\n t['questionmonospace'] = 0xFF1F;\\r\\n t['questionsmall'] = 0xF73F;\\r\\n t['quotedbl'] = 0x0022;\\r\\n t['quotedblbase'] = 0x201E;\\r\\n t['quotedblleft'] = 0x201C;\\r\\n t['quotedblmonospace'] = 0xFF02;\\r\\n t['quotedblprime'] = 0x301E;\\r\\n t['quotedblprimereversed'] = 0x301D;\\r\\n t['quotedblright'] = 0x201D;\\r\\n t['quoteleft'] = 0x2018;\\r\\n t['quoteleftreversed'] = 0x201B;\\r\\n t['quotereversed'] = 0x201B;\\r\\n t['quoteright'] = 0x2019;\\r\\n t['quoterightn'] = 0x0149;\\r\\n t['quotesinglbase'] = 0x201A;\\r\\n t['quotesingle'] = 0x0027;\\r\\n t['quotesinglemonospace'] = 0xFF07;\\r\\n t['r'] = 0x0072;\\r\\n t['raarmenian'] = 0x057C;\\r\\n t['rabengali'] = 0x09B0;\\r\\n t['racute'] = 0x0155;\\r\\n t['radeva'] = 0x0930;\\r\\n t['radical'] = 0x221A;\\r\\n t['radicalex'] = 0xF8E5;\\r\\n t['radoverssquare'] = 0x33AE;\\r\\n t['radoverssquaredsquare'] = 0x33AF;\\r\\n t['radsquare'] = 0x33AD;\\r\\n t['rafe'] = 0x05BF;\\r\\n t['rafehebrew'] = 0x05BF;\\r\\n t['ragujarati'] = 0x0AB0;\\r\\n t['ragurmukhi'] = 0x0A30;\\r\\n t['rahiragana'] = 0x3089;\\r\\n t['rakatakana'] = 0x30E9;\\r\\n t['rakatakanahalfwidth'] = 0xFF97;\\r\\n t['ralowerdiagonalbengali'] = 0x09F1;\\r\\n t['ramiddlediagonalbengali'] = 0x09F0;\\r\\n t['ramshorn'] = 0x0264;\\r\\n t['ratio'] = 0x2236;\\r\\n t['rbopomofo'] = 0x3116;\\r\\n t['rcaron'] = 0x0159;\\r\\n t['rcedilla'] = 0x0157;\\r\\n t['rcircle'] = 0x24E1;\\r\\n t['rcommaaccent'] = 0x0157;\\r\\n t['rdblgrave'] = 0x0211;\\r\\n t['rdotaccent'] = 0x1E59;\\r\\n t['rdotbelow'] = 0x1E5B;\\r\\n t['rdotbelowmacron'] = 0x1E5D;\\r\\n t['referencemark'] = 0x203B;\\r\\n t['reflexsubset'] = 0x2286;\\r\\n t['reflexsuperset'] = 0x2287;\\r\\n t['registered'] = 0x00AE;\\r\\n t['registersans'] = 0xF8E8;\\r\\n t['registerserif'] = 0xF6DA;\\r\\n t['reharabic'] = 0x0631;\\r\\n t['reharmenian'] = 0x0580;\\r\\n t['rehfinalarabic'] = 0xFEAE;\\r\\n t['rehiragana'] = 0x308C;\\r\\n t['rekatakana'] = 0x30EC;\\r\\n t['rekatakanahalfwidth'] = 0xFF9A;\\r\\n t['resh'] = 0x05E8;\\r\\n t['reshdageshhebrew'] = 0xFB48;\\r\\n t['reshhebrew'] = 0x05E8;\\r\\n t['reversedtilde'] = 0x223D;\\r\\n t['reviahebrew'] = 0x0597;\\r\\n t['reviamugrashhebrew'] = 0x0597;\\r\\n t['revlogicalnot'] = 0x2310;\\r\\n t['rfishhook'] = 0x027E;\\r\\n t['rfishhookreversed'] = 0x027F;\\r\\n t['rhabengali'] = 0x09DD;\\r\\n t['rhadeva'] = 0x095D;\\r\\n t['rho'] = 0x03C1;\\r\\n t['rhook'] = 0x027D;\\r\\n t['rhookturned'] = 0x027B;\\r\\n t['rhooktu\";a.a+=\"rnedsuperior'] = 0x02B5;\\r\\n t['rhosymbolgreek'] = 0x03F1;\\r\\n t['rhotichookmod'] = 0x02DE;\\r\\n t['rieulacirclekorean'] = 0x3271;\\r\\n t['rieulaparenkorean'] = 0x3211;\\r\\n t['rieulcirclekorean'] = 0x3263;\\r\\n t['rieulhieuhkorean'] = 0x3140;\\r\\n t['rieulkiyeokkorean'] = 0x313A;\\r\\n t['rieulkiyeoksioskorean'] = 0x3169;\\r\\n t['rieulkorean'] = 0x3139;\\r\\n t['rieulmieumkorean'] = 0x313B;\\r\\n t['rieulpansioskorean'] = 0x316C;\\r\\n t['rieulparenkorean'] = 0x3203;\\r\\n t['rieulphieuphkorean'] = 0x313F;\\r\\n t['rieulpieupkorean'] = 0x313C;\\r\\n t['rieulpieupsioskorean'] = 0x316B;\\r\\n t['rieulsioskorean'] = 0x313D;\\r\\n t['rieulthieuthkorean'] = 0x313E;\\r\\n t['rieultikeutkorean'] = 0x316A;\\r\\n t['rieulyeorinhieuhkorean'] = 0x316D;\\r\\n t['rightangle'] = 0x221F;\\r\\n t['righttackbelowcmb'] = 0x0319;\\r\\n t['righttriangle'] = 0x22BF;\\r\\n t['rihiragana'] = 0x308A;\\r\\n t['rikatakana'] = 0x30EA;\\r\\n t['rikatakanahalfwidth'] = 0xFF98;\\r\\n t['ring'] = 0x02DA;\\r\\n t['ringbelowcmb'] = 0x0325;\\r\\n t['ringcmb'] = 0x030A;\\r\\n t['ringhalfleft'] = 0x02BF;\\r\\n t['ringhalfleftarmenian'] = 0x0559;\\r\\n t['ringhalfleftbelowcmb'] = 0x031C;\\r\\n t['ringhalfleftcentered'] = 0x02D3;\\r\\n t['ringhalfright'] = 0x02BE;\\r\\n t['ringhalfrightbelowcmb'] = 0x0339;\\r\\n t['ringhalfrightcentered'] = 0x02D2;\\r\\n t['rinvertedbreve'] = 0x0213;\\r\\n t['rittorusquare'] = 0x3351;\\r\\n t['rlinebelow'] = 0x1E5F;\\r\\n t['rlongleg'] = 0x027C;\\r\\n t['rlonglegturned'] = 0x027A;\\r\\n t['rmonospace'] = 0xFF52;\\r\\n t['rohiragana'] = 0x308D;\\r\\n t['rokatakana'] = 0x30ED;\\r\\n t['rokatakanahalfwidth'] = 0xFF9B;\\r\\n t['roruathai'] = 0x0E23;\\r\\n t['rparen'] = 0x24AD;\\r\\n t['rrabengali'] = 0x09DC;\\r\\n t['rradeva'] = 0x0931;\\r\\n t['rragurmukhi'] = 0x0A5C;\\r\\n t['rreharabic'] = 0x0691;\\r\\n t['rrehfinalarabic'] = 0xFB8D;\\r\\n t['rrvocalicbengali'] = 0x09E0;\\r\\n t['rrvocalicdeva'] = 0x0960;\\r\\n t['rrvocalicgujarati'] = 0x0AE0;\\r\\n t['rrvocalicvowelsignbengali'] = 0x09C4;\\r\\n t['rrvocalicvowelsigndeva'] = 0x0944;\\r\\n t['rrvocalicvowelsigngujarati'] = 0x0AC4;\\r\\n t['rsuperior'] = 0xF6F1;\\r\\n t['rtblock'] = 0x2590;\\r\\n t['rturned'] = 0x0279;\\r\\n t['rturnedsuperior'] = 0x02B4;\\r\\n t['ruhiragana'] = 0x308B;\\r\\n t['rukatakana'] = 0x30EB;\\r\\n t['rukatakanahalfwidth'] = 0xFF99;\\r\\n t['rupeemarkbengali'] = 0x09F2;\\r\\n t['rupeesignbengali'] = 0x09F3;\\r\\n t['rupiah'] = 0xF6DD;\\r\\n t['ruthai'] = 0x0E24;\\r\\n t['rvocalicbengali'] = 0x098B;\\r\\n t['rvocalicdeva'] = 0x090B;\\r\\n t['rvocalicgujarati'] = 0x0A8B;\\r\\n t['rvocalicvowelsignbengali'] = 0x09C3;\\r\\n t['rvocalicvowelsigndeva'] = 0x0943;\\r\\n t['rvocalicvowelsigngujarati'] = 0x0AC3;\\r\\n t['s'] = 0x0073;\\r\\n t['sabengali'] = 0x09B8;\\r\\n t['sacute'] = 0x015B;\\r\\n t['sacutedotaccent'] = 0x1E65;\\r\\n t['sadarabic'] = 0x0635;\\r\\n t['sadeva'] = 0x0938;\\r\\n t['sadfinalarabic'] = 0xFEBA;\\r\\n t['sadinitialarabic'] = 0xFEBB;\\r\\n t['sadmedialarabic'] = 0xFEBC;\\r\\n t['sagujarati'] = 0x0AB8;\\r\\n t['sagurmukhi'] = 0x0A38;\\r\\n t['sahiragana'] = 0x3055;\\r\\n t['sakatakana'] = 0x30B5;\\r\\n t['sakatakanahalfwidth'] = 0xFF7B;\\r\\n t['sallallahoualayhewasallamarabic'] = 0xFDFA;\\r\\n t['samekh'] = 0x05E1;\\r\\n t['samekhdagesh'] = 0xFB41;\\r\\n t['samekhdageshhebrew'] = 0xFB41;\\r\\n t['samekhhebrew'] = 0x05E1;\\r\\n t['saraaathai'] = 0x0E32;\\r\\n t['saraaethai'] = 0x0E41;\\r\\n t['saraaimaimalaithai'] = 0x0E44;\\r\\n t['saraaimaimuanthai'] = 0x0E43;\\r\\n t['saraamthai'] = 0x0E33;\\r\\n t['saraathai'] = 0x0E30;\\r\\n t['saraethai'] = 0x0E40;\\r\\n t['saraiileftthai'] = 0xF886;\\r\\n t['saraiithai'] = 0x0E35;\\r\\n t['saraileftthai'] = 0xF885;\\r\\n t['saraithai'] = 0x0E34;\\r\\n t['saraothai'] = 0x0E42;\\r\\n t['saraueeleftthai'] = 0xF888;\\r\\n t['saraueethai'] = 0x0E37;\\r\\n t['saraueleftthai'] = 0xF887;\\r\\n t['sarauethai'] = 0x0E36;\\r\\n t['sarauthai'] = 0x0E38;\\r\\n t['sarauuthai'] = 0x0E39;\\r\\n t['sbopomofo'] = 0x3119;\\r\\n t['scaron'] = 0x0161;\\r\\n t['scarondotaccent'] = 0x1E67;\\r\\n t['scedilla'] = 0x015F;\\r\\n t['schwa'] = 0x0259;\\r\\n t['schwacyrillic'] = 0x04D9;\\r\\n t['schwadieresiscyrillic'] = 0x04DB;\\r\\n t['schwahook'] = 0x025A;\\r\\n t['scircle'] = 0x24E2;\\r\\n t['scircumflex'] = 0x015D;\\r\\n t['scommaaccent'] = 0x0219;\\r\\n t['sdotaccent'] = 0x1E61;\\r\\n t['sdotbelow'] = 0x1E63;\\r\\n t['sdotbelowdotaccent'] = 0x1E69;\\r\\n t['seagullbelowcmb'] = 0x033C;\\r\\n t['second'] = 0x2033;\\r\\n t['secondtonechinese'] = 0x02CA;\\r\\n t['section'] = 0x00A7;\\r\\n t['seenarabic'] = 0x0633;\\r\\n t['seenfinalarabic'] = 0xFEB2;\\r\\n t['seeninitialarabic'] = 0xFEB3;\\r\\n t['seenmedialarabic'] = 0xFEB4;\\r\\n t['segol'] = 0x05B6;\\r\\n t['segol13'] = 0x05B6;\\r\\n t['segol1f'] = 0x05B6;\\r\\n t['segol2c'] = 0x05B6;\\r\\n t['segolhebrew'] = 0x05B6;\\r\\n t['segolnarrowhebrew'] = 0x05B6;\\r\\n t['segolquarterhebrew'] = 0x05B6;\\r\\n t['segoltahebrew'] = 0x0592;\\r\\n t['segolwidehebrew'] = 0x05B6;\\r\\n t['seharmenian'] = 0x057D;\\r\\n t['sehiragana'] = 0x305B;\\r\\n t['sekatakana'] = 0x30BB;\\r\\n t['sekatakanahalfwidth'] = 0xFF7E;\\r\\n t['semicolon'] = 0x003B;\\r\\n t['semicolonarabic'] = 0x061B;\\r\\n t['semicolonmonospace'] = 0xFF1B;\\r\\n t['semicolonsmall'] = 0xFE54;\\r\\n t['semivoicedmarkkana'] = 0x309C;\\r\\n t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\\r\\n t['sentisquare'] = 0x3322;\\r\\n t['sentosquare'] = 0x3323;\\r\\n t['seven'] = 0x0037;\\r\\n t['sevenarabic'] = 0x0667;\\r\\n t['sevenbengali'] = 0x09ED;\\r\\n t['sevencircle'] = 0x2466;\\r\\n t['sevencircleinversesansserif'] = 0x2790;\\r\\n t['sevendeva'] = 0x096D;\\r\\n t['seveneighths'] = 0x215E;\\r\\n t['sevengujarati'] = 0x0AED;\\r\\n t['sevengurmukhi'] = 0x0A6D;\\r\\n t['sevenhackarabic'] = 0x0667;\\r\\n t['sevenhangzhou'] = 0x3027;\\r\\n t['sevenideographicparen'] = 0x3226;\\r\\n t['seveninferior'] = 0x2087;\\r\\n t['sevenmonospace'] = 0xFF17;\\r\\n t['sevenoldstyle'] = 0xF737;\\r\\n t['sevenparen'] = 0x247A;\\r\\n t['sevenperiod'] = 0x248E;\\r\\n t['sevenpersian'] = 0x06F7;\\r\\n t['sevenroman'] = 0x2176;\\r\\n t['sevensuperior'] = 0x2077;\\r\\n t['seventeencircle'] = 0x2470;\\r\\n t['seventeenparen'] = 0x2484;\\r\\n t['seventeenperiod'] = 0x2498;\\r\\n t['seventhai'] = 0x0E57;\\r\\n t['sfthyphen'] = 0x00AD;\\r\\n t['shaarmenian'] = 0x0577;\\r\\n t['shabengali'] = 0x09B6;\\r\\n t['shacyrillic'] = 0x0448;\\r\\n t['shaddaarabic'] = 0x0651;\\r\\n t['shaddadammaarabic'] = 0xFC61;\\r\\n t['shaddadammatanarabic'] = 0xFC5E;\\r\\n t['shaddafathaarabic'] = 0xFC60;\\r\\n t['shaddakasraarabic'] = 0xFC62;\\r\\n t['shaddakasratanarabic'] = 0xFC5F;\\r\\n t['shade'] = 0x2592;\\r\\n t['shadedark'] = 0x2593;\\r\\n t['shadelight'] = 0x2591;\\r\\n t['shademedium'] = 0x2592;\\r\\n t['shadeva'] = 0x0936;\\r\\n t['shagujarati'] = 0x0AB6;\\r\\n t['shagurmukhi'] = 0x0A36;\\r\\n t['shalshelethebrew'] = 0x0593;\\r\\n t['shbopomofo'] = 0x3115;\\r\\n t['shchacyrillic'] = 0x0449;\\r\\n t['sheenarabic'] = 0x0634;\\r\\n t['sheenfinalarabic'] = 0xFEB6;\\r\\n t['sheeninitialarabic'] = 0xFEB7;\\r\\n t['sheenmedialarabic'] = 0xFEB8;\\r\\n t['sheicoptic'] = 0x03E3;\\r\\n t['sheqel'] = 0x20AA;\\r\\n t['sheqelhebrew'] = 0x20AA;\\r\\n t['sheva'] = 0x05B0;\\r\\n t['sheva115'] = 0x05B0;\\r\\n t['sheva15'] = 0x05B0;\\r\\n t['sheva22'] = 0x05B0;\\r\\n t['sheva2e'] = 0x05B0;\\r\\n t['shevahebrew'] = 0x05B0;\\r\\n t['shevanarrowhebrew'] = 0x05B0;\\r\\n t['shevaquarterhebrew'] = 0x05B0;\\r\\n t['shevawidehebrew'] = 0x05B0;\\r\\n t['shhacyrillic'] = 0x04BB;\\r\\n t['shimacoptic'] = 0x03ED;\\r\\n t['shin'] = 0x05E9;\\r\\n t['shindagesh'] = 0xFB49;\\r\\n t['shindageshhebrew'] = 0xFB49;\\r\\n t['shindageshshindot'] = 0xFB2C;\\r\\n t['shindageshshindothebrew'] = 0xFB2C;\\r\\n t['shindageshsindot'] = 0xFB2D;\\r\\n t['shindageshsindothebrew'] = 0xFB2D;\\r\\n t['shindothebrew'] = 0x05C1;\\r\\n t['shinhebrew'] = 0x05E9;\\r\\n t['shinshindot'] = 0xFB2A;\\r\\n t['shinshindothebrew'] = 0xFB2A;\\r\\n t['shinsindot'] = 0xFB2B;\\r\\n t['shinsindothebrew'] = 0xFB2B;\\r\\n t['shook'] = 0x0282;\\r\\n t['sigma'] = 0x03C3;\\r\\n t['sigma1'] = 0x03C2;\\r\\n t['sigmafinal'] = 0x03C2;\\r\\n t['sigmalunatesymbolgreek'] = 0x03F2;\\r\\n t['sihiragana'] = 0x3057;\\r\\n t['sikatakana'] = 0x30B7;\\r\\n t['sikatakanahalfwidth'] = 0xFF7C;\\r\\n t['siluqhebrew'] = 0x05BD;\\r\\n t['siluqlefthebrew'] = 0x05BD;\\r\\n t['similar'] = 0x223C;\\r\\n t['sindothebrew'] = 0x05C2;\\r\\n t['siosacirclekorean'] = 0x3274;\\r\\n t['siosaparenkorean'] = 0x3214;\\r\\n t['sioscieuckorean'] = 0x317E;\\r\\n t['sioscirclekorean'] = 0x3266;\\r\\n t['sioskiyeokkorean'] = 0x317A;\\r\\n t['sioskorean'] = 0x3145;\\r\\n t['siosnieunkorean'] = 0x317B;\\r\\n t['siosparenkorean'] = 0x3206;\\r\\n t['siospieupkorean'] = 0x317D;\\r\\n t['siostikeutkorean'] = 0x317C;\\r\\n t['six'] = 0x0036;\\r\\n t['sixarabic'] = 0x0666;\\r\\n t['sixbengali'] = 0x09EC;\\r\\n t['sixcircle'] = 0x2465;\\r\\n t['sixcircleinversesansserif'] = 0x278F;\\r\\n t['sixdeva'] = 0x096C;\\r\\n t['sixgujarati'] = 0x0AEC;\\r\\n t['sixgurmukhi'] = 0x0A6C;\\r\\n t['sixhackarabic'] = 0x0666;\\r\\n t['sixhangzhou'] = 0x3026;\\r\\n t['sixideographicparen'] = 0x3225;\\r\\n t['sixinferior'] = 0x2086;\\r\\n t['sixmonospace'] = 0xFF16;\\r\\n t['sixoldstyle'] = 0xF736;\\r\\n t['sixparen'] = 0x2479;\\r\\n t['sixperiod'] = 0x248D;\\r\\n t['sixpersian'] = 0x06F6;\\r\\n t['sixroman'] = 0x2175;\\r\\n t['sixsuperior'] = 0x2076;\\r\\n t['sixteencircle'] = 0x246F;\\r\\n t['sixteencurrencydenominatorbengali'] = 0x09F9;\\r\\n t['sixteenparen'] = 0x2483;\\r\\n t['sixteenperiod'] = 0x2497;\\r\\n t['sixthai'] = 0x0E56;\\r\\n t['slash'] = 0x002F;\\r\\n t['slashmonospace'] = 0xFF0F;\\r\\n t['slong'] = 0x017F;\\r\\n t['slongdotaccent'] = 0x1E9B;\\r\\n t['smileface'] = 0x263A;\\r\\n t['smonospace'] = 0xFF53;\\r\\n t['sofpasuqhebrew'] = 0x05C3;\\r\\n t['softhyphen'] = 0x00AD;\\r\\n t['softsigncyrillic'] = 0x044C;\\r\\n t['sohiragana'] = 0x305D;\\r\\n t['sokatakana'] = 0x30BD;\\r\\n t['sokatakanahalfwidth'] = 0xFF7F;\\r\\n t['soliduslongoverlaycmb'] = 0x0338;\\r\\n t['solidusshortoverlaycmb'] = 0x0337;\\r\\n t['sorusithai'] = 0x0E29;\\r\\n t['sosalathai'] = 0x0E28;\\r\\n t['sosothai'] = 0x0E0B;\\r\\n t['sosuathai'] = 0x0E2A;\\r\\n t['space'] = 0x0020;\\r\\n t['spacehackarabic'] = 0x0020;\\r\\n t['spade'] = 0x2660;\\r\\n t['spadesuitblack'] = 0x2660;\\r\\n t['spadesuitwhite'] = 0x2664;\\r\\n t['sparen'] = 0x24AE;\\r\\n t['squarebelowcmb'] = 0x033B;\\r\\n t['squarecc'] = 0x33C4;\\r\\n t['squarecm'] = 0x339D;\\r\\n t['squarediagonalcrosshatchfill'] = 0x25A9;\\r\\n t['squarehorizontalfill'] = 0x25A4;\\r\\n t['squarekg'] = 0x338F;\\r\\n t['squarekm'] = 0x339E;\\r\\n t['squarekmcapital'] = 0x33CE;\\r\\n t['squareln'] = 0x33D1;\\r\\n t['squarelog'] = 0x33D2;\\r\\n t['squaremg'] = 0x338E;\\r\\n t['squaremil'] = 0x33D5;\\r\\n t['squaremm'] = 0x339C;\\r\\n t['squaremsquared'] = 0x33A1;\\r\\n t['squareorthogonalcrosshatchfill'] = 0x25A6;\\r\\n t['squareupperlefttolowerrightfill'] = 0x25A7;\\r\\n t['squareupperrighttolowerleftfill'] = 0x25A8;\\r\\n t['squareverticalfill'] = 0x25A5;\\r\\n t['squarewhitewithsmallblack'] = 0x25A3;\\r\\n t['srsquare'] = 0x33DB;\\r\\n t['ssabengali'] = 0x09B7;\\r\\n t['ssadeva'] = 0x0937;\\r\\n t['ssagujarati'] = 0x0AB7;\\r\\n t['ssangcieuckorean'] = 0x3149;\\r\\n t['ssanghieuhkorean'] = 0x3185;\\r\\n t['ssangieungkorean'] = 0x3180;\\r\\n t['ssangkiyeokkorean'] = 0x3132;\\r\\n t['ssangnieunkorean'] = 0x3165;\\r\\n t['ssangpieupkorean'] = 0x3143;\\r\\n t['ssangsioskorean'] = 0x3146;\\r\\n t['ssangtikeutkorean'] = 0x3138;\\r\\n t['ssuperior'] = 0xF6F2;\\r\\n t['sterling'] = 0x00A3;\\r\\n t['sterlingmonospace'] = 0xFFE1;\\r\\n t['strokelongoverlaycmb'] = 0x0336;\\r\\n t['strokeshortoverlaycmb'] = 0x0335;\\r\\n t['subset'] = 0x2282;\\r\\n t['subsetnotequal'] = 0x228A;\\r\\n t['subsetorequal'] = 0x2286;\\r\\n t['succeeds'] = 0x227B;\\r\\n t['suchthat'] = 0x220B;\\r\\n t['suhiragana'] = 0x3059;\\r\\n t['sukatakana'] = 0x30B9;\\r\\n t['sukatakanahalfwidth'] = 0xFF7D;\\r\\n t['sukunarabic'] = 0x0652;\\r\\n t['summation'] = 0x2211;\\r\\n t['sun'] = 0x263C;\\r\\n t['superset'] = 0x2283;\\r\\n t['supersetnotequal'] = 0x228B;\\r\\n t['supersetorequal'] = 0x2287;\\r\\n t['svsquare'] = 0x33DC;\\r\\n t['syouwaerasquare'] = 0x337C;\\r\\n t['t'] = 0x0074;\\r\\n t['tabengali'] = 0x09A4;\\r\\n t['tackdown'] = 0x22A4;\\r\\n t['tackleft'] = 0x22A3;\\r\\n t['tadeva'] = 0x0924;\\r\\n t['tagujarati'] = 0x0AA4;\\r\\n t['tagurmukhi'] = 0x0A24;\\r\\n t['taharabic'] = 0x0637;\\r\\n t['tahfinalarabic'] = 0xFEC2;\\r\\n t['tahinitialarabic'] = 0xFEC3;\\r\\n t['tahiragana'] = 0x305F;\\r\\n t['tahmedialarabic'] = 0xFEC4;\\r\\n t['taisyouerasquare'] = 0x337D;\\r\\n t['takatakana'] = 0x30BF;\\r\\n t['takatakanahalfwidth'] = 0xFF80;\\r\\n t['tatweelarabic'] = 0x0640;\\r\\n t['tau'] = 0x03C4;\\r\\n t['tav'] = 0x05EA;\\r\\n t['tavdages'] = 0xFB4A;\\r\\n t['tavdagesh'] = 0xFB4A;\\r\\n t['tavdageshhebrew'] = 0xFB4A;\\r\\n t['tavhebrew'] = 0x05EA;\\r\\n t['tbar'] = 0x0167;\\r\\n t['tbopomofo'] = 0x310A;\\r\\n t['tcaron'] = 0x0165;\\r\\n t['tccurl'] = 0x02A8;\\r\\n t['tcedilla'] = 0x0163;\\r\\n t['tcheharabic'] = 0x0686;\\r\\n t['tchehfinalarabic'] = 0xFB7B;\\r\\n t['tchehinitialarabic'] = 0xFB7C;\\r\\n t['tchehmedialarabic'] = 0xFB7D;\\r\\n t['tcircle'] = 0x24E3;\\r\\n t['tcircumflexbelow'] = 0x1E71;\\r\\n t['tcommaaccent'] = 0x0163;\\r\\n t['tdieresis'] = 0x1E97;\\r\\n t['tdotaccent'] = 0x1E6B;\\r\\n t['tdotbelow'] = 0x1E6D;\\r\\n t['tecyrillic'] = 0x0442;\\r\\n t['tedescendercyrillic'] = 0x04AD;\\r\\n t['teharabic'] = 0x062A;\\r\\n t['tehfinalarabic'] = 0xFE96;\\r\\n t['tehhahinitialarabic'] = 0xFCA2;\\r\\n t['tehhahisolatedarabic'] = 0xFC0C;\\r\\n t['tehinitialarabic'] = 0xFE97;\\r\\n t['tehiragana'] = 0x3066;\\r\\n t['tehjeeminitialarabic'] = 0xFCA1;\\r\\n t['tehjeemisolatedarabic'] = 0xFC0B;\\r\\n t['tehmarbutaarabic'] = 0x0629;\\r\\n t['tehmarbutafinalarabic'] = 0xFE94;\\r\\n t['tehmedialarabic'] = 0xFE98;\\r\\n t['tehmeeminitialarabic'] = 0xFCA4;\\r\\n t['tehmeemisolatedarabic'] = 0xFC0E;\\r\\n t['tehnoonfinalarabic'] = 0xFC73;\\r\\n t['tekatakana'] = 0x30C6;\\r\\n t['tekatakanahalfwidth'] = 0xFF83;\\r\\n t['telephone'] = 0x2121;\\r\\n t['telephoneblack'] = 0x260E;\\r\\n t['telishagedolahebrew'] = 0x05A0;\\r\\n t['telishaqetanahebrew'] = 0x05A9;\\r\\n t['tencircle'] = 0x2469;\\r\\n t['tenideographicparen'] = 0x3229;\\r\\n t['tenparen'] = 0x247D;\\r\\n t['tenperiod'] = 0x2491;\\r\\n t['tenroman'] = 0x2179;\\r\\n t['tesh'] = 0x02A7;\\r\\n t['tet'] = 0x05D8;\\r\\n t['tetdagesh'] = 0xFB38;\\r\\n t['tetdageshhebrew'] = 0xFB38;\\r\\n t['tethebrew'] = 0x05D8;\\r\\n t['tetsecyrillic'] = 0x04B5;\\r\\n t['tevirhebrew'] = 0x059B;\\r\\n t['tevirlefthebrew'] = 0x059B;\\r\\n t['thabengali'] = 0x09A5;\\r\\n t['thadeva'] = 0x0925;\\r\\n t['thagujarati'] = 0x0AA5;\\r\\n t['thagurmukhi'] = 0x0A25;\\r\\n t['thalarabic'] = 0x0630;\\r\\n t['thalfinalarabic'] = 0xFEAC;\\r\\n t['thanthakhatlowleftthai'] = 0xF898;\\r\\n t['thanthakhatlowrightthai'] = 0xF897;\\r\\n t['thanthakhatthai'] = 0x0E4C;\\r\\n t['thanthakhatupperleftthai'] = 0xF896;\\r\\n t['theharabic'] = 0x062B;\\r\\n t['thehfinalarabic'] = 0xFE9A;\\r\\n t['thehinitialarabic'] = 0xFE9B;\\r\\n t['thehmedialarabic'] = 0xFE9C;\\r\\n t['thereexists'] = 0x2203;\\r\\n t['therefore'] = 0x2234;\\r\\n t['theta'] = 0x03B8;\\r\\n t['theta1'] = 0x03D1;\\r\\n t['thetasymbolgreek'] = 0x03D1;\\r\\n t['thieuthacirclekorean'] = 0x3279;\\r\\n t['thieuthaparenkorean'] = 0x3219;\\r\\n t['thieuthcirclekorean'] = 0x326B;\\r\\n t['thieuthkorean'] = 0x314C;\\r\\n t['thieuthparenkorean'] = 0x320B;\\r\\n t['thirteencircle'] = 0x246C;\\r\\n t['thirteenparen'] = 0x2480;\\r\\n t['thirteenperiod'] = 0x2494;\\r\\n t['thonangmonthothai'] = 0x0E11;\\r\\n t['thook'] = 0x01AD;\\r\\n t['thophuthaothai'] = 0x0E12;\\r\\n t['thorn'] = 0x00FE;\\r\\n t['thothahanthai'] = 0x0E17;\\r\\n t['thothanthai'] = 0x0E10;\\r\\n t['thothongthai'] = 0x0E18;\\r\\n t['thothungthai'] = 0x0E16;\\r\\n t['thousandcyrillic'] = 0x0482;\\r\\n t['thousandsseparatorarabic'] = 0x066C;\\r\\n t['thousandsseparatorpersian'] = 0x066C;\\r\\n t['three'] = 0x0033;\\r\\n t['threearabic'] = 0x0663;\\r\\n t['threebengali'] = 0x09E9;\\r\\n t['threecircle'] = 0x2462;\\r\\n t['threecircleinversesansserif'] = 0x278C;\\r\\n t['threedeva'] = 0x0969;\\r\\n t['threeeighths'] = 0x215C;\\r\\n t['threegujarati'] = 0x0AE9;\\r\\n t['threegurmukhi'] = 0x0A69;\\r\\n t['threehackarabic'] = 0x0663;\\r\\n t['threehangzhou'] = 0x3023;\\r\\n t['threeideographicparen'] = 0x3222;\\r\\n t['threeinferior'] = 0x2083;\\r\\n t['threemonospace'] = 0xFF13;\\r\\n t['threenumeratorbengali'] = 0x09F6;\\r\\n t['threeoldstyle'] = 0xF733;\\r\\n t['threeparen'] = 0x2476;\\r\\n t['threeperiod'] = 0x248A;\\r\\n t['threepersian'] = 0x06F3;\\r\\n t['threequarters'] = 0x00BE;\\r\\n t['threequartersemdash'] = 0xF6DE;\\r\\n t['threeroman'] = 0x2172;\\r\\n t['threesuperior'] = 0x00B3;\\r\\n t['threethai'] = 0x0E53;\\r\\n t['thzsquare'] = 0x3394;\\r\\n t['tihiragana'] = 0x3061;\\r\\n t['tikatakana'] = 0x30C1;\\r\\n t['tikatakanahalfwidth'] = 0xFF81;\\r\\n t['tikeutacirclekorean'] = 0x3270;\\r\\n t['tikeutaparenkorean'] = 0x3210;\\r\\n t['tikeutcirclekorean'] = 0x3262;\\r\\n t['tikeutkorean'] = 0x3137;\\r\\n t['tikeutparenkorean'] = 0x3202;\\r\\n t['tilde'] = 0x02DC;\\r\\n t['tildebelowcmb'] = 0x0330;\\r\\n t['tildecmb'] = 0x0303;\\r\\n t['tildecomb'] = 0x0303;\\r\\n t['tildedoublecmb'] = 0x0360;\\r\\n t['tildeoperator'] = 0x223C;\\r\\n t['tildeoverlaycmb'] = 0x0334;\\r\\n t['tildeverticalcmb'] = 0x033E;\\r\\n t['timescircle'] = 0x2297;\\r\\n t['tipehahebrew'] = 0x0596;\\r\\n t['tipehalefthebrew'] = 0x0596;\\r\\n t['tippigurmukhi'] = 0x0A70;\\r\\n t['titlocyrilliccmb'] = 0x0483;\\r\\n t['tiwnarmenian'] = 0x057F;\\r\\n t['tlinebelow'] = 0x1E6F;\\r\\n t['tmonospace'] = 0xFF54;\\r\\n t['toarmenian'] = 0x0569;\\r\\n t['tohiragana'] = 0x3068;\\r\\n t['tokatakana'] = 0x30C8;\\r\\n t['tokatakanahalfwidth'] = 0xFF84;\\r\\n t['tonebarextrahighmod'] = 0x02E5;\\r\\n t['tonebarextralowmod'] = 0x02E9;\\r\\n t['tonebarhighmod'] = 0x02E6;\\r\\n t['tonebarlowmod'] = 0x02E8;\\r\\n t['tonebarmidmod'] = 0x02E7;\\r\\n t['tonefive'] = 0x01BD;\\r\\n t['tonesix'] = 0x0185;\\r\\n t['tonetwo'] = 0x01A8;\\r\\n t['tonos'] = 0x0384;\\r\\n t['tonsquare'] = 0x3327;\\r\\n t['topatakthai'] = 0x0E0F;\\r\\n t['tortoiseshellbracketleft'] = 0x3014;\\r\\n t['tortoiseshellbracketleftsmall'] = 0xFE5D;\\r\\n t['tortoiseshellbracketleftvertical'] = 0\";a.a+=\"xFE39;\\r\\n t['tortoiseshellbracketright'] = 0x3015;\\r\\n t['tortoiseshellbracketrightsmall'] = 0xFE5E;\\r\\n t['tortoiseshellbracketrightvertical'] = 0xFE3A;\\r\\n t['totaothai'] = 0x0E15;\\r\\n t['tpalatalhook'] = 0x01AB;\\r\\n t['tparen'] = 0x24AF;\\r\\n t['trademark'] = 0x2122;\\r\\n t['trademarksans'] = 0xF8EA;\\r\\n t['trademarkserif'] = 0xF6DB;\\r\\n t['tretroflexhook'] = 0x0288;\\r\\n t['triagdn'] = 0x25BC;\\r\\n t['triaglf'] = 0x25C4;\\r\\n t['triagrt'] = 0x25BA;\\r\\n t['triagup'] = 0x25B2;\\r\\n t['ts'] = 0x02A6;\\r\\n t['tsadi'] = 0x05E6;\\r\\n t['tsadidagesh'] = 0xFB46;\\r\\n t['tsadidageshhebrew'] = 0xFB46;\\r\\n t['tsadihebrew'] = 0x05E6;\\r\\n t['tsecyrillic'] = 0x0446;\\r\\n t['tsere'] = 0x05B5;\\r\\n t['tsere12'] = 0x05B5;\\r\\n t['tsere1e'] = 0x05B5;\\r\\n t['tsere2b'] = 0x05B5;\\r\\n t['tserehebrew'] = 0x05B5;\\r\\n t['tserenarrowhebrew'] = 0x05B5;\\r\\n t['tserequarterhebrew'] = 0x05B5;\\r\\n t['tserewidehebrew'] = 0x05B5;\\r\\n t['tshecyrillic'] = 0x045B;\\r\\n t['tsuperior'] = 0xF6F3;\\r\\n t['ttabengali'] = 0x099F;\\r\\n t['ttadeva'] = 0x091F;\\r\\n t['ttagujarati'] = 0x0A9F;\\r\\n t['ttagurmukhi'] = 0x0A1F;\\r\\n t['tteharabic'] = 0x0679;\\r\\n t['ttehfinalarabic'] = 0xFB67;\\r\\n t['ttehinitialarabic'] = 0xFB68;\\r\\n t['ttehmedialarabic'] = 0xFB69;\\r\\n t['tthabengali'] = 0x09A0;\\r\\n t['tthadeva'] = 0x0920;\\r\\n t['tthagujarati'] = 0x0AA0;\\r\\n t['tthagurmukhi'] = 0x0A20;\\r\\n t['tturned'] = 0x0287;\\r\\n t['tuhiragana'] = 0x3064;\\r\\n t['tukatakana'] = 0x30C4;\\r\\n t['tukatakanahalfwidth'] = 0xFF82;\\r\\n t['tusmallhiragana'] = 0x3063;\\r\\n t['tusmallkatakana'] = 0x30C3;\\r\\n t['tusmallkatakanahalfwidth'] = 0xFF6F;\\r\\n t['twelvecircle'] = 0x246B;\\r\\n t['twelveparen'] = 0x247F;\\r\\n t['twelveperiod'] = 0x2493;\\r\\n t['twelveroman'] = 0x217B;\\r\\n t['twentycircle'] = 0x2473;\\r\\n t['twentyhangzhou'] = 0x5344;\\r\\n t['twentyparen'] = 0x2487;\\r\\n t['twentyperiod'] = 0x249B;\\r\\n t['two'] = 0x0032;\\r\\n t['twoarabic'] = 0x0662;\\r\\n t['twobengali'] = 0x09E8;\\r\\n t['twocircle'] = 0x2461;\\r\\n t['twocircleinversesansserif'] = 0x278B;\\r\\n t['twodeva'] = 0x0968;\\r\\n t['twodotenleader'] = 0x2025;\\r\\n t['twodotleader'] = 0x2025;\\r\\n t['twodotleadervertical'] = 0xFE30;\\r\\n t['twogujarati'] = 0x0AE8;\\r\\n t['twogurmukhi'] = 0x0A68;\\r\\n t['twohackarabic'] = 0x0662;\\r\\n t['twohangzhou'] = 0x3022;\\r\\n t['twoideographicparen'] = 0x3221;\\r\\n t['twoinferior'] = 0x2082;\\r\\n t['twomonospace'] = 0xFF12;\\r\\n t['twonumeratorbengali'] = 0x09F5;\\r\\n t['twooldstyle'] = 0xF732;\\r\\n t['twoparen'] = 0x2475;\\r\\n t['twoperiod'] = 0x2489;\\r\\n t['twopersian'] = 0x06F2;\\r\\n t['tworoman'] = 0x2171;\\r\\n t['twostroke'] = 0x01BB;\\r\\n t['twosuperior'] = 0x00B2;\\r\\n t['twothai'] = 0x0E52;\\r\\n t['twothirds'] = 0x2154;\\r\\n t['u'] = 0x0075;\\r\\n t['uacute'] = 0x00FA;\\r\\n t['ubar'] = 0x0289;\\r\\n t['ubengali'] = 0x0989;\\r\\n t['ubopomofo'] = 0x3128;\\r\\n t['ubreve'] = 0x016D;\\r\\n t['ucaron'] = 0x01D4;\\r\\n t['ucircle'] = 0x24E4;\\r\\n t['ucircumflex'] = 0x00FB;\\r\\n t['ucircumflexbelow'] = 0x1E77;\\r\\n t['ucyrillic'] = 0x0443;\\r\\n t['udattadeva'] = 0x0951;\\r\\n t['udblacute'] = 0x0171;\\r\\n t['udblgrave'] = 0x0215;\\r\\n t['udeva'] = 0x0909;\\r\\n t['udieresis'] = 0x00FC;\\r\\n t['udieresisacute'] = 0x01D8;\\r\\n t['udieresisbelow'] = 0x1E73;\\r\\n t['udieresiscaron'] = 0x01DA;\\r\\n t['udieresiscyrillic'] = 0x04F1;\\r\\n t['udieresisgrave'] = 0x01DC;\\r\\n t['udieresismacron'] = 0x01D6;\\r\\n t['udotbelow'] = 0x1EE5;\\r\\n t['ugrave'] = 0x00F9;\\r\\n t['ugujarati'] = 0x0A89;\\r\\n t['ugurmukhi'] = 0x0A09;\\r\\n t['uhiragana'] = 0x3046;\\r\\n t['uhookabove'] = 0x1EE7;\\r\\n t['uhorn'] = 0x01B0;\\r\\n t['uhornacute'] = 0x1EE9;\\r\\n t['uhorndotbelow'] = 0x1EF1;\\r\\n t['uhorngrave'] = 0x1EEB;\\r\\n t['uhornhookabove'] = 0x1EED;\\r\\n t['uhorntilde'] = 0x1EEF;\\r\\n t['uhungarumlaut'] = 0x0171;\\r\\n t['uhungarumlautcyrillic'] = 0x04F3;\\r\\n t['uinvertedbreve'] = 0x0217;\\r\\n t['ukatakana'] = 0x30A6;\\r\\n t['ukatakanahalfwidth'] = 0xFF73;\\r\\n t['ukcyrillic'] = 0x0479;\\r\\n t['ukorean'] = 0x315C;\\r\\n t['umacron'] = 0x016B;\\r\\n t['umacroncyrillic'] = 0x04EF;\\r\\n t['umacrondieresis'] = 0x1E7B;\\r\\n t['umatragurmukhi'] = 0x0A41;\\r\\n t['umonospace'] = 0xFF55;\\r\\n t['underscore'] = 0x005F;\\r\\n t['underscoredbl'] = 0x2017;\\r\\n t['underscoremonospace'] = 0xFF3F;\\r\\n t['underscorevertical'] = 0xFE33;\\r\\n t['underscorewavy'] = 0xFE4F;\\r\\n t['union'] = 0x222A;\\r\\n t['universal'] = 0x2200;\\r\\n t['uogonek'] = 0x0173;\\r\\n t['uparen'] = 0x24B0;\\r\\n t['upblock'] = 0x2580;\\r\\n t['upperdothebrew'] = 0x05C4;\\r\\n t['upsilon'] = 0x03C5;\\r\\n t['upsilondieresis'] = 0x03CB;\\r\\n t['upsilondieresistonos'] = 0x03B0;\\r\\n t['upsilonlatin'] = 0x028A;\\r\\n t['upsilontonos'] = 0x03CD;\\r\\n t['uptackbelowcmb'] = 0x031D;\\r\\n t['uptackmod'] = 0x02D4;\\r\\n t['uragurmukhi'] = 0x0A73;\\r\\n t['uring'] = 0x016F;\\r\\n t['ushortcyrillic'] = 0x045E;\\r\\n t['usmallhiragana'] = 0x3045;\\r\\n t['usmallkatakana'] = 0x30A5;\\r\\n t['usmallkatakanahalfwidth'] = 0xFF69;\\r\\n t['ustraightcyrillic'] = 0x04AF;\\r\\n t['ustraightstrokecyrillic'] = 0x04B1;\\r\\n t['utilde'] = 0x0169;\\r\\n t['utildeacute'] = 0x1E79;\\r\\n t['utildebelow'] = 0x1E75;\\r\\n t['uubengali'] = 0x098A;\\r\\n t['uudeva'] = 0x090A;\\r\\n t['uugujarati'] = 0x0A8A;\\r\\n t['uugurmukhi'] = 0x0A0A;\\r\\n t['uumatragurmukhi'] = 0x0A42;\\r\\n t['uuvowelsignbengali'] = 0x09C2;\\r\\n t['uuvowelsigndeva'] = 0x0942;\\r\\n t['uuvowelsigngujarati'] = 0x0AC2;\\r\\n t['uvowelsignbengali'] = 0x09C1;\\r\\n t['uvowelsigndeva'] = 0x0941;\\r\\n t['uvowelsigngujarati'] = 0x0AC1;\\r\\n t['v'] = 0x0076;\\r\\n t['vadeva'] = 0x0935;\\r\\n t['vagujarati'] = 0x0AB5;\\r\\n t['vagurmukhi'] = 0x0A35;\\r\\n t['vakatakana'] = 0x30F7;\\r\\n t['vav'] = 0x05D5;\\r\\n t['vavdagesh'] = 0xFB35;\\r\\n t['vavdagesh65'] = 0xFB35;\\r\\n t['vavdageshhebrew'] = 0xFB35;\\r\\n t['vavhebrew'] = 0x05D5;\\r\\n t['vavholam'] = 0xFB4B;\\r\\n t['vavholamhebrew'] = 0xFB4B;\\r\\n t['vavvavhebrew'] = 0x05F0;\\r\\n t['vavyodhebrew'] = 0x05F1;\\r\\n t['vcircle'] = 0x24E5;\\r\\n t['vdotbelow'] = 0x1E7F;\\r\\n t['vecyrillic'] = 0x0432;\\r\\n t['veharabic'] = 0x06A4;\\r\\n t['vehfinalarabic'] = 0xFB6B;\\r\\n t['vehinitialarabic'] = 0xFB6C;\\r\\n t['vehmedialarabic'] = 0xFB6D;\\r\\n t['vekatakana'] = 0x30F9;\\r\\n t['venus'] = 0x2640;\\r\\n t['verticalbar'] = 0x007C;\\r\\n t['verticallineabovecmb'] = 0x030D;\\r\\n t['verticallinebelowcmb'] = 0x0329;\\r\\n t['verticallinelowmod'] = 0x02CC;\\r\\n t['verticallinemod'] = 0x02C8;\\r\\n t['vewarmenian'] = 0x057E;\\r\\n t['vhook'] = 0x028B;\\r\\n t['vikatakana'] = 0x30F8;\\r\\n t['viramabengali'] = 0x09CD;\\r\\n t['viramadeva'] = 0x094D;\\r\\n t['viramagujarati'] = 0x0ACD;\\r\\n t['visargabengali'] = 0x0983;\\r\\n t['visargadeva'] = 0x0903;\\r\\n t['visargagujarati'] = 0x0A83;\\r\\n t['vmonospace'] = 0xFF56;\\r\\n t['voarmenian'] = 0x0578;\\r\\n t['voicediterationhiragana'] = 0x309E;\\r\\n t['voicediterationkatakana'] = 0x30FE;\\r\\n t['voicedmarkkana'] = 0x309B;\\r\\n t['voicedmarkkanahalfwidth'] = 0xFF9E;\\r\\n t['vokatakana'] = 0x30FA;\\r\\n t['vparen'] = 0x24B1;\\r\\n t['vtilde'] = 0x1E7D;\\r\\n t['vturned'] = 0x028C;\\r\\n t['vuhiragana'] = 0x3094;\\r\\n t['vukatakana'] = 0x30F4;\\r\\n t['w'] = 0x0077;\\r\\n t['wacute'] = 0x1E83;\\r\\n t['waekorean'] = 0x3159;\\r\\n t['wahiragana'] = 0x308F;\\r\\n t['wakatakana'] = 0x30EF;\\r\\n t['wakatakanahalfwidth'] = 0xFF9C;\\r\\n t['wakorean'] = 0x3158;\\r\\n t['wasmallhiragana'] = 0x308E;\\r\\n t['wasmallkatakana'] = 0x30EE;\\r\\n t['wattosquare'] = 0x3357;\\r\\n t['wavedash'] = 0x301C;\\r\\n t['wavyunderscorevertical'] = 0xFE34;\\r\\n t['wawarabic'] = 0x0648;\\r\\n t['wawfinalarabic'] = 0xFEEE;\\r\\n t['wawhamzaabovearabic'] = 0x0624;\\r\\n t['wawhamzaabovefinalarabic'] = 0xFE86;\\r\\n t['wbsquare'] = 0x33DD;\\r\\n t['wcircle'] = 0x24E6;\\r\\n t['wcircumflex'] = 0x0175;\\r\\n t['wdieresis'] = 0x1E85;\\r\\n t['wdotaccent'] = 0x1E87;\\r\\n t['wdotbelow'] = 0x1E89;\\r\\n t['wehiragana'] = 0x3091;\\r\\n t['weierstrass'] = 0x2118;\\r\\n t['wekatakana'] = 0x30F1;\\r\\n t['wekorean'] = 0x315E;\\r\\n t['weokorean'] = 0x315D;\\r\\n t['wgrave'] = 0x1E81;\\r\\n t['whitebullet'] = 0x25E6;\\r\\n t['whitecircle'] = 0x25CB;\\r\\n t['whitecircleinverse'] = 0x25D9;\\r\\n t['whitecornerbracketleft'] = 0x300E;\\r\\n t['whitecornerbracketleftvertical'] = 0xFE43;\\r\\n t['whitecornerbracketright'] = 0x300F;\\r\\n t['whitecornerbracketrightvertical'] = 0xFE44;\\r\\n t['whitediamond'] = 0x25C7;\\r\\n t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\\r\\n t['whitedownpointingsmalltriangle'] = 0x25BF;\\r\\n t['whitedownpointingtriangle'] = 0x25BD;\\r\\n t['whiteleftpointingsmalltriangle'] = 0x25C3;\\r\\n t['whiteleftpointingtriangle'] = 0x25C1;\\r\\n t['whitelenticularbracketleft'] = 0x3016;\\r\\n t['whitelenticularbracketright'] = 0x3017;\\r\\n t['whiterightpointingsmalltriangle'] = 0x25B9;\\r\\n t['whiterightpointingtriangle'] = 0x25B7;\\r\\n t['whitesmallsquare'] = 0x25AB;\\r\\n t['whitesmilingface'] = 0x263A;\\r\\n t['whitesquare'] = 0x25A1;\\r\\n t['whitestar'] = 0x2606;\\r\\n t['whitetelephone'] = 0x260F;\\r\\n t['whitetortoiseshellbracketleft'] = 0x3018;\\r\\n t['whitetortoiseshellbracketright'] = 0x3019;\\r\\n t['whiteuppointingsmalltriangle'] = 0x25B5;\\r\\n t['whiteuppointingtriangle'] = 0x25B3;\\r\\n t['wihiragana'] = 0x3090;\\r\\n t['wikatakana'] = 0x30F0;\\r\\n t['wikorean'] = 0x315F;\\r\\n t['wmonospace'] = 0xFF57;\\r\\n t['wohiragana'] = 0x3092;\\r\\n t['wokatakana'] = 0x30F2;\\r\\n t['wokatakanahalfwidth'] = 0xFF66;\\r\\n t['won'] = 0x20A9;\\r\\n t['wonmonospace'] = 0xFFE6;\\r\\n t['wowaenthai'] = 0x0E27;\\r\\n t['wparen'] = 0x24B2;\\r\\n t['wring'] = 0x1E98;\\r\\n t['wsuperior'] = 0x02B7;\\r\\n t['wturned'] = 0x028D;\\r\\n t['wynn'] = 0x01BF;\\r\\n t['x'] = 0x0078;\\r\\n t['xabovecmb'] = 0x033D;\\r\\n t['xbopomofo'] = 0x3112;\\r\\n t['xcircle'] = 0x24E7;\\r\\n t['xdieresis'] = 0x1E8D;\\r\\n t['xdotaccent'] = 0x1E8B;\\r\\n t['xeharmenian'] = 0x056D;\\r\\n t['xi'] = 0x03BE;\\r\\n t['xmonospace'] = 0xFF58;\\r\\n t['xparen'] = 0x24B3;\\r\\n t['xsuperior'] = 0x02E3;\\r\\n t['y'] = 0x0079;\\r\\n t['yaadosquare'] = 0x334E;\\r\\n t['yabengali'] = 0x09AF;\\r\\n t['yacute'] = 0x00FD;\\r\\n t['yadeva'] = 0x092F;\\r\\n t['yaekorean'] = 0x3152;\\r\\n t['yagujarati'] = 0x0AAF;\\r\\n t['yagurmukhi'] = 0x0A2F;\\r\\n t['yahiragana'] = 0x3084;\\r\\n t['yakatakana'] = 0x30E4;\\r\\n t['yakatakanahalfwidth'] = 0xFF94;\\r\\n t['yakorean'] = 0x3151;\\r\\n t['yamakkanthai'] = 0x0E4E;\\r\\n t['yasmallhiragana'] = 0x3083;\\r\\n t['yasmallkatakana'] = 0x30E3;\\r\\n t['yasmallkatakanahalfwidth'] = 0xFF6C;\\r\\n t['yatcyrillic'] = 0x0463;\\r\\n t['ycircle'] = 0x24E8;\\r\\n t['ycircumflex'] = 0x0177;\\r\\n t['ydieresis'] = 0x00FF;\\r\\n t['ydotaccent'] = 0x1E8F;\\r\\n t['ydotbelow'] = 0x1EF5;\\r\\n t['yeharabic'] = 0x064A;\\r\\n t['yehbarreearabic'] = 0x06D2;\\r\\n t['yehbarreefinalarabic'] = 0xFBAF;\\r\\n t['yehfinalarabic'] = 0xFEF2;\\r\\n t['yehhamzaabovearabic'] = 0x0626;\\r\\n t['yehhamzaabovefinalarabic'] = 0xFE8A;\\r\\n t['yehhamzaaboveinitialarabic'] = 0xFE8B;\\r\\n t['yehhamzaabovemedialarabic'] = 0xFE8C;\\r\\n t['yehinitialarabic'] = 0xFEF3;\\r\\n t['yehmedialarabic'] = 0xFEF4;\\r\\n t['yehmeeminitialarabic'] = 0xFCDD;\\r\\n t['yehmeemisolatedarabic'] = 0xFC58;\\r\\n t['yehnoonfinalarabic'] = 0xFC94;\\r\\n t['yehthreedotsbelowarabic'] = 0x06D1;\\r\\n t['yekorean'] = 0x3156;\\r\\n t['yen'] = 0x00A5;\\r\\n t['yenmonospace'] = 0xFFE5;\\r\\n t['yeokorean'] = 0x3155;\\r\\n t['yeorinhieuhkorean'] = 0x3186;\\r\\n t['yerahbenyomohebrew'] = 0x05AA;\\r\\n t['yerahbenyomolefthebrew'] = 0x05AA;\\r\\n t['yericyrillic'] = 0x044B;\\r\\n t['yerudieresiscyrillic'] = 0x04F9;\\r\\n t['yesieungkorean'] = 0x3181;\\r\\n t['yesieungpansioskorean'] = 0x3183;\\r\\n t['yesieungsioskorean'] = 0x3182;\\r\\n t['yetivhebrew'] = 0x059A;\\r\\n t['ygrave'] = 0x1EF3;\\r\\n t['yhook'] = 0x01B4;\\r\\n t['yhookabove'] = 0x1EF7;\\r\\n t['yiarmenian'] = 0x0575;\\r\\n t['yicyrillic'] = 0x0457;\\r\\n t['yikorean'] = 0x3162;\\r\\n t['yinyang'] = 0x262F;\\r\\n t['yiwnarmenian'] = 0x0582;\\r\\n t['ymonospace'] = 0xFF59;\\r\\n t['yod'] = 0x05D9;\\r\\n t['yoddagesh'] = 0xFB39;\\r\\n t['yoddageshhebrew'] = 0xFB39;\\r\\n t['yodhebrew'] = 0x05D9;\\r\\n t['yodyodhebrew'] = 0x05F2;\\r\\n t['yodyodpatahhebrew'] = 0xFB1F;\\r\\n t['yohiragana'] = 0x3088;\\r\\n t['yoikorean'] = 0x3189;\\r\\n t['yokatakana'] = 0x30E8;\\r\\n t['yokatakanahalfwidth'] = 0xFF96;\\r\\n t['yokorean'] = 0x315B;\\r\\n t['yosmallhiragana'] = 0x3087;\\r\\n t['yosmallkatakana'] = 0x30E7;\\r\\n t['yosmallkatakanahalfwidth'] = 0xFF6E;\\r\\n t['yotgreek'] = 0x03F3;\\r\\n t['yoyaekorean'] = 0x3188;\\r\\n t['yoyakorean'] = 0x3187;\\r\\n t['yoyakthai'] = 0x0E22;\\r\\n t['yoyingthai'] = 0x0E0D;\\r\\n t['yparen'] = 0x24B4;\\r\\n t['ypogegrammeni'] = 0x037A;\\r\\n t['ypogegrammenigreekcmb'] = 0x0345;\\r\\n t['yr'] = 0x01A6;\\r\\n t['yring'] = 0x1E99;\\r\\n t['ysuperior'] = 0x02B8;\\r\\n t['ytilde'] = 0x1EF9;\\r\\n t['yturned'] = 0x028E;\\r\\n t['yuhiragana'] = 0x3086;\\r\\n t['yuikorean'] = 0x318C;\\r\\n t['yukatakana'] = 0x30E6;\\r\\n t['yukatakanahalfwidth'] = 0xFF95;\\r\\n t['yukorean'] = 0x3160;\\r\\n t['yusbigcyrillic'] = 0x046B;\\r\\n t['yusbigiotifiedcyrillic'] = 0x046D;\\r\\n t['yuslittlecyrillic'] = 0x0467;\\r\\n t['yuslittleiotifiedcyrillic'] = 0x0469;\\r\\n t['yusmallhiragana'] = 0x3085;\\r\\n t['yusmallkatakana'] = 0x30E5;\\r\\n t['yusmallkatakanahalfwidth'] = 0xFF6D;\\r\\n t['yuyekorean'] = 0x318B;\\r\\n t['yuyeokorean'] = 0x318A;\\r\\n t['yyabengali'] = 0x09DF;\\r\\n t['yyadeva'] = 0x095F;\\r\\n t['z'] = 0x007A;\\r\\n t['zaarmenian'] = 0x0566;\\r\\n t['zacute'] = 0x017A;\\r\\n t['zadeva'] = 0x095B;\\r\\n t['zagurmukhi'] = 0x0A5B;\\r\\n t['zaharabic'] = 0x0638;\\r\\n t['zahfinalarabic'] = 0xFEC6;\\r\\n t['zahinitialarabic'] = 0xFEC7;\\r\\n t['zahiragana'] = 0x3056;\\r\\n t['zahmedialarabic'] = 0xFEC8;\\r\\n t['zainarabic'] = 0x0632;\\r\\n t['zainfinalarabic'] = 0xFEB0;\\r\\n t['zakatakana'] = 0x30B6;\\r\\n t['zaqefgadolhebrew'] = 0x0595;\\r\\n t['zaqefqatanhebrew'] = 0x0594;\\r\\n t['zarqahebrew'] = 0x0598;\\r\\n t['zayin'] = 0x05D6;\\r\\n t['zayindagesh'] = 0xFB36;\\r\\n t['zayindageshhebrew'] = 0xFB36;\\r\\n t['zayinhebrew'] = 0x05D6;\\r\\n t['zbopomofo'] = 0x3117;\\r\\n t['zcaron'] = 0x017E;\\r\\n t['zcircle'] = 0x24E9;\\r\\n t['zcircumflex'] = 0x1E91;\\r\\n t['zcurl'] = 0x0291;\\r\\n t['zdot'] = 0x017C;\\r\\n t['zdotaccent'] = 0x017C;\\r\\n t['zdotbelow'] = 0x1E93;\\r\\n t['zecyrillic'] = 0x0437;\\r\\n t['zedescendercyrillic'] = 0x0499;\\r\\n t['zedieresiscyrillic'] = 0x04DF;\\r\\n t['zehiragana'] = 0x305C;\\r\\n t['zekatakana'] = 0x30BC;\\r\\n t['zero'] = 0x0030;\\r\\n t['zeroarabic'] = 0x0660;\\r\\n t['zerobengali'] = 0x09E6;\\r\\n t['zerodeva'] = 0x0966;\\r\\n t['zerogujarati'] = 0x0AE6;\\r\\n t['zerogurmukhi'] = 0x0A66;\\r\\n t['zerohackarabic'] = 0x0660;\\r\\n t['zeroinferior'] = 0x2080;\\r\\n t['zeromonospace'] = 0xFF10;\\r\\n t['zerooldstyle'] = 0xF730;\\r\\n t['zeropersian'] = 0x06F0;\\r\\n t['zerosuperior'] = 0x2070;\\r\\n t['zerothai'] = 0x0E50;\\r\\n t['zerowidthjoiner'] = 0xFEFF;\\r\\n t['zerowidthnonjoiner'] = 0x200C;\\r\\n t['zerowidthspace'] = 0x200B;\\r\\n t['zeta'] = 0x03B6;\\r\\n t['zhbopomofo'] = 0x3113;\\r\\n t['zhearmenian'] = 0x056A;\\r\\n t['zhebrevecyrillic'] = 0x04C2;\\r\\n t['zhecyrillic'] = 0x0436;\\r\\n t['zhedescendercyrillic'] = 0x0497;\\r\\n t['zhedieresiscyrillic'] = 0x04DD;\\r\\n t['zihiragana'] = 0x3058;\\r\\n t['zikatakana'] = 0x30B8;\\r\\n t['zinorhebrew'] = 0x05AE;\\r\\n t['zlinebelow'] = 0x1E95;\\r\\n t['zmonospace'] = 0xFF5A;\\r\\n t['zohiragana'] = 0x305E;\\r\\n t['zokatakana'] = 0x30BE;\\r\\n t['zparen'] = 0x24B5;\\r\\n t['zretroflexhook'] = 0x0290;\\r\\n t['zstroke'] = 0x01B6;\\r\\n t['zuhiragana'] = 0x305A;\\r\\n t['zukatakana'] = 0x30BA;\\r\\n t['.notdef'] = 0x0000;\\r\\n t['angbracketleftbig'] = 0x2329;\\r\\n t['angbracketleftBig'] = 0x2329;\\r\\n t['angbracketleftbigg'] = 0x2329;\\r\\n t['angbracketleftBigg'] = 0x2329;\\r\\n t['angbracketrightBig'] = 0x232A;\\r\\n t['angbracketrightbig'] = 0x232A;\\r\\n t['angbracketrightBigg'] = 0x232A;\\r\\n t['angbracketrightbigg'] = 0x232A;\\r\\n t['arrowhookleft'] = 0x21AA;\\r\\n t['arrowhookright'] = 0x21A9;\\r\\n t['arrowlefttophalf'] = 0x21BC;\\r\\n t['arrowleftbothalf'] = 0x21BD;\\r\\n t['arrownortheast'] = 0x2197;\\r\\n t['arrownorthwest'] = 0x2196;\\r\\n t['arrowrighttophalf'] = 0x21C0;\\r\\n t['arrowrightbothalf'] = 0x21C1;\\r\\n t['arrowsoutheast'] = 0x2198;\\r\\n t['arrowsouthwest'] = 0x2199;\\r\\n t['backslashbig'] = 0x2216;\\r\\n t['backslashBig'] = 0x2216;\\r\\n t['backslashBigg'] = 0x2216;\\r\\n t['backslashbigg'] = 0x2216;\\r\\n t['bardbl'] = 0x2016;\\r\\n t['bracehtipdownleft'] = 0xFE37;\\r\\n t['bracehtipdownright'] = 0xFE37;\\r\\n t['bracehtipupleft'] = 0xFE38;\\r\\n t['bracehtipupright'] = 0xFE38;\\r\\n t['braceleftBig'] = 0x007B;\\r\\n t['braceleftbig'] = 0x007B;\\r\\n t['braceleftbigg'] = 0x007B;\\r\\n t['braceleftBigg'] = 0x007B;\\r\\n t['bracerightBig'] = 0x007D;\\r\\n t['bracerightbig'] = 0x007D;\\r\\n t['bracerightbigg'] = 0x007D;\\r\\n t['bracerightBigg'] = 0x007D;\\r\\n t['bracketleftbig'] = 0x005B;\\r\\n t['bracketleftBig'] = 0x005B;\\r\\n t['bracketleftbigg'] = 0x005B;\\r\\n t['bracketleftBigg'] = 0x005B;\\r\\n t['bracketrightBig'] = 0x005D;\\r\\n t['bracketrightbig'] = 0x005D;\\r\\n t['bracketrightbigg'] = 0x005D;\\r\\n t['bracketrightBigg'] = 0x005D;\\r\\n t['ceilingleftbig'] = 0x2308;\\r\\n t['ceilingleftBig'] = 0x2308;\\r\\n t['ceilingleftBigg'] = 0x2308;\\r\\n t['ceilingleftbigg'] = 0x2308;\\r\\n t['ceilingrightbig'] = 0x2309;\\r\\n t['ceilingrightBig'] = 0x2309;\\r\\n t['ceilingrightbigg'] = 0x2309;\\r\\n t['ceilingrightBigg'] = 0x2309;\\r\\n t['circledotdisplay'] = 0x2299;\\r\\n t['circledottext'] = 0x2299;\\r\\n t['circlemultiplydisplay'] = 0x2297;\\r\\n t['circlemultiplytext'] = 0x2297;\\r\\n t['circleplusdisplay'] = 0x2295;\\r\\n t['circleplustext'] = 0x2295;\\r\\n t['contintegraldisplay'] = 0x222E;\\r\\n t['contintegraltext'] = 0x222E;\\r\\n t['coproductdisplay'] = 0x2210;\\r\\n t['coproducttext'] = 0x2210;\\r\\n t['floorleftBig'] = 0x230A;\\r\\n t['floorleftbig'] = 0x230A;\\r\\n t['floorleftbigg'] = 0x230A;\\r\\n t['floorleftBigg'] = 0x230A;\\r\\n t['floorrightbig'] = 0x230B;\\r\\n t['floorrightBig'] = 0x230B;\\r\\n t['floorrightBigg'] = 0x230B;\\r\\n t['floorrightbigg'] = 0x\";a.a+=\"230B;\\r\\n t['hatwide'] = 0x0302;\\r\\n t['hatwider'] = 0x0302;\\r\\n t['hatwidest'] = 0x0302;\\r\\n t['intercal'] = 0x1D40;\\r\\n t['integraldisplay'] = 0x222B;\\r\\n t['integraltext'] = 0x222B;\\r\\n t['intersectiondisplay'] = 0x22C2;\\r\\n t['intersectiontext'] = 0x22C2;\\r\\n t['logicalanddisplay'] = 0x2227;\\r\\n t['logicalandtext'] = 0x2227;\\r\\n t['logicalordisplay'] = 0x2228;\\r\\n t['logicalortext'] = 0x2228;\\r\\n t['parenleftBig'] = 0x0028;\\r\\n t['parenleftbig'] = 0x0028;\\r\\n t['parenleftBigg'] = 0x0028;\\r\\n t['parenleftbigg'] = 0x0028;\\r\\n t['parenrightBig'] = 0x0029;\\r\\n t['parenrightbig'] = 0x0029;\\r\\n t['parenrightBigg'] = 0x0029;\\r\\n t['parenrightbigg'] = 0x0029;\\r\\n t['prime'] = 0x2032;\\r\\n t['productdisplay'] = 0x220F;\\r\\n t['producttext'] = 0x220F;\\r\\n t['radicalbig'] = 0x221A;\\r\\n t['radicalBig'] = 0x221A;\\r\\n t['radicalBigg'] = 0x221A;\\r\\n t['radicalbigg'] = 0x221A;\\r\\n t['radicalbt'] = 0x221A;\\r\\n t['radicaltp'] = 0x221A;\\r\\n t['radicalvertex'] = 0x221A;\\r\\n t['slashbig'] = 0x002F;\\r\\n t['slashBig'] = 0x002F;\\r\\n t['slashBigg'] = 0x002F;\\r\\n t['slashbigg'] = 0x002F;\\r\\n t['summationdisplay'] = 0x2211;\\r\\n t['summationtext'] = 0x2211;\\r\\n t['tildewide'] = 0x02DC;\\r\\n t['tildewider'] = 0x02DC;\\r\\n t['tildewidest'] = 0x02DC;\\r\\n t['uniondisplay'] = 0x22C3;\\r\\n t['unionmultidisplay'] = 0x228E;\\r\\n t['unionmultitext'] = 0x228E;\\r\\n t['unionsqdisplay'] = 0x2294;\\r\\n t['unionsqtext'] = 0x2294;\\r\\n t['uniontext'] = 0x22C3;\\r\\n t['vextenddouble'] = 0x2225;\\r\\n t['vextendsingle'] = 0x2223;\\r\\n});\\r\\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\\r\\n t['space'] = 0x0020;\\r\\n t['a1'] = 0x2701;\\r\\n t['a2'] = 0x2702;\\r\\n t['a202'] = 0x2703;\\r\\n t['a3'] = 0x2704;\\r\\n t['a4'] = 0x260E;\\r\\n t['a5'] = 0x2706;\\r\\n t['a119'] = 0x2707;\\r\\n t['a118'] = 0x2708;\\r\\n t['a117'] = 0x2709;\\r\\n t['a11'] = 0x261B;\\r\\n t['a12'] = 0x261E;\\r\\n t['a13'] = 0x270C;\\r\\n t['a14'] = 0x270D;\\r\\n t['a15'] = 0x270E;\\r\\n t['a16'] = 0x270F;\\r\\n t['a105'] = 0x2710;\\r\\n t['a17'] = 0x2711;\\r\\n t['a18'] = 0x2712;\\r\\n t['a19'] = 0x2713;\\r\\n t['a20'] = 0x2714;\\r\\n t['a21'] = 0x2715;\\r\\n t['a22'] = 0x2716;\\r\\n t['a23'] = 0x2717;\\r\\n t['a24'] = 0x2718;\\r\\n t['a25'] = 0x2719;\\r\\n t['a26'] = 0x271A;\\r\\n t['a27'] = 0x271B;\\r\\n t['a28'] = 0x271C;\\r\\n t['a6'] = 0x271D;\\r\\n t['a7'] = 0x271E;\\r\\n t['a8'] = 0x271F;\\r\\n t['a9'] = 0x2720;\\r\\n t['a10'] = 0x2721;\\r\\n t['a29'] = 0x2722;\\r\\n t['a30'] = 0x2723;\\r\\n t['a31'] = 0x2724;\\r\\n t['a32'] = 0x2725;\\r\\n t['a33'] = 0x2726;\\r\\n t['a34'] = 0x2727;\\r\\n t['a35'] = 0x2605;\\r\\n t['a36'] = 0x2729;\\r\\n t['a37'] = 0x272A;\\r\\n t['a38'] = 0x272B;\\r\\n t['a39'] = 0x272C;\\r\\n t['a40'] = 0x272D;\\r\\n t['a41'] = 0x272E;\\r\\n t['a42'] = 0x272F;\\r\\n t['a43'] = 0x2730;\\r\\n t['a44'] = 0x2731;\\r\\n t['a45'] = 0x2732;\\r\\n t['a46'] = 0x2733;\\r\\n t['a47'] = 0x2734;\\r\\n t['a48'] = 0x2735;\\r\\n t['a49'] = 0x2736;\\r\\n t['a50'] = 0x2737;\\r\\n t['a51'] = 0x2738;\\r\\n t['a52'] = 0x2739;\\r\\n t['a53'] = 0x273A;\\r\\n t['a54'] = 0x273B;\\r\\n t['a55'] = 0x273C;\\r\\n t['a56'] = 0x273D;\\r\\n t['a57'] = 0x273E;\\r\\n t['a58'] = 0x273F;\\r\\n t['a59'] = 0x2740;\\r\\n t['a60'] = 0x2741;\\r\\n t['a61'] = 0x2742;\\r\\n t['a62'] = 0x2743;\\r\\n t['a63'] = 0x2744;\\r\\n t['a64'] = 0x2745;\\r\\n t['a65'] = 0x2746;\\r\\n t['a66'] = 0x2747;\\r\\n t['a67'] = 0x2748;\\r\\n t['a68'] = 0x2749;\\r\\n t['a69'] = 0x274A;\\r\\n t['a70'] = 0x274B;\\r\\n t['a71'] = 0x25CF;\\r\\n t['a72'] = 0x274D;\\r\\n t['a73'] = 0x25A0;\\r\\n t['a74'] = 0x274F;\\r\\n t['a203'] = 0x2750;\\r\\n t['a75'] = 0x2751;\\r\\n t['a204'] = 0x2752;\\r\\n t['a76'] = 0x25B2;\\r\\n t['a77'] = 0x25BC;\\r\\n t['a78'] = 0x25C6;\\r\\n t['a79'] = 0x2756;\\r\\n t['a81'] = 0x25D7;\\r\\n t['a82'] = 0x2758;\\r\\n t['a83'] = 0x2759;\\r\\n t['a84'] = 0x275A;\\r\\n t['a97'] = 0x275B;\\r\\n t['a98'] = 0x275C;\\r\\n t['a99'] = 0x275D;\\r\\n t['a100'] = 0x275E;\\r\\n t['a101'] = 0x2761;\\r\\n t['a102'] = 0x2762;\\r\\n t['a103'] = 0x2763;\\r\\n t['a104'] = 0x2764;\\r\\n t['a106'] = 0x2765;\\r\\n t['a107'] = 0x2766;\\r\\n t['a108'] = 0x2767;\\r\\n t['a112'] = 0x2663;\\r\\n t['a111'] = 0x2666;\\r\\n t['a110'] = 0x2665;\\r\\n t['a109'] = 0x2660;\\r\\n t['a120'] = 0x2460;\\r\\n t['a121'] = 0x2461;\\r\\n t['a122'] = 0x2462;\\r\\n t['a123'] = 0x2463;\\r\\n t['a124'] = 0x2464;\\r\\n t['a125'] = 0x2465;\\r\\n t['a126'] = 0x2466;\\r\\n t['a127'] = 0x2467;\\r\\n t['a128'] = 0x2468;\\r\\n t['a129'] = 0x2469;\\r\\n t['a130'] = 0x2776;\\r\\n t['a131'] = 0x2777;\\r\\n t['a132'] = 0x2778;\\r\\n t['a133'] = 0x2779;\\r\\n t['a134'] = 0x277A;\\r\\n t['a135'] = 0x277B;\\r\\n t['a136'] = 0x277C;\\r\\n t['a137'] = 0x277D;\\r\\n t['a138'] = 0x277E;\\r\\n t['a139'] = 0x277F;\\r\\n t['a140'] = 0x2780;\\r\\n t['a141'] = 0x2781;\\r\\n t['a142'] = 0x2782;\\r\\n t['a143'] = 0x2783;\\r\\n t['a144'] = 0x2784;\\r\\n t['a145'] = 0x2785;\\r\\n t['a146'] = 0x2786;\\r\\n t['a147'] = 0x2787;\\r\\n t['a148'] = 0x2788;\\r\\n t['a149'] = 0x2789;\\r\\n t['a150'] = 0x278A;\\r\\n t['a151'] = 0x278B;\\r\\n t['a152'] = 0x278C;\\r\\n t['a153'] = 0x278D;\\r\\n t['a154'] = 0x278E;\\r\\n t['a155'] = 0x278F;\\r\\n t['a156'] = 0x2790;\\r\\n t['a157'] = 0x2791;\\r\\n t['a158'] = 0x2792;\\r\\n t['a159'] = 0x2793;\\r\\n t['a160'] = 0x2794;\\r\\n t['a161'] = 0x2192;\\r\\n t['a163'] = 0x2194;\\r\\n t['a164'] = 0x2195;\\r\\n t['a196'] = 0x2798;\\r\\n t['a165'] = 0x2799;\\r\\n t['a192'] = 0x279A;\\r\\n t['a166'] = 0x279B;\\r\\n t['a167'] = 0x279C;\\r\\n t['a168'] = 0x279D;\\r\\n t['a169'] = 0x279E;\\r\\n t['a170'] = 0x279F;\\r\\n t['a171'] = 0x27A0;\\r\\n t['a172'] = 0x27A1;\\r\\n t['a173'] = 0x27A2;\\r\\n t['a162'] = 0x27A3;\\r\\n t['a174'] = 0x27A4;\\r\\n t['a175'] = 0x27A5;\\r\\n t['a176'] = 0x27A6;\\r\\n t['a177'] = 0x27A7;\\r\\n t['a178'] = 0x27A8;\\r\\n t['a179'] = 0x27A9;\\r\\n t['a193'] = 0x27AA;\\r\\n t['a180'] = 0x27AB;\\r\\n t['a199'] = 0x27AC;\\r\\n t['a181'] = 0x27AD;\\r\\n t['a200'] = 0x27AE;\\r\\n t['a182'] = 0x27AF;\\r\\n t['a201'] = 0x27B1;\\r\\n t['a183'] = 0x27B2;\\r\\n t['a184'] = 0x27B3;\\r\\n t['a197'] = 0x27B4;\\r\\n t['a185'] = 0x27B5;\\r\\n t['a194'] = 0x27B6;\\r\\n t['a198'] = 0x27B7;\\r\\n t['a186'] = 0x27B8;\\r\\n t['a195'] = 0x27B9;\\r\\n t['a187'] = 0x27BA;\\r\\n t['a188'] = 0x27BB;\\r\\n t['a189'] = 0x27BC;\\r\\n t['a190'] = 0x27BD;\\r\\n t['a191'] = 0x27BE;\\r\\n t['a89'] = 0x2768;\\r\\n t['a90'] = 0x2769;\\r\\n t['a93'] = 0x276A;\\r\\n t['a94'] = 0x276B;\\r\\n t['a91'] = 0x276C;\\r\\n t['a92'] = 0x276D;\\r\\n t['a205'] = 0x276E;\\r\\n t['a85'] = 0x276F;\\r\\n t['a206'] = 0x2770;\\r\\n t['a86'] = 0x2771;\\r\\n t['a87'] = 0x2772;\\r\\n t['a88'] = 0x2773;\\r\\n t['a95'] = 0x2774;\\r\\n t['a96'] = 0x2775;\\r\\n t['.notdef'] = 0x0000;\\r\\n});\\r\\nexports.getGlyphsUnicode = getGlyphsUnicode;\\r\\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\\r\\n\\r\\n/***/ }),\\r\\n/* 50 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.validateResponseStatus = exports.validateRangeRequestCapabilities = exports.createResponseStatusError = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nfunction validateRangeRequestCapabilities(_ref) {\\r\\n  var getResponseHeader = _ref.getResponseHeader,\\r\\n      isHttp = _ref.isHttp,\\r\\n      rangeChunkSize = _ref.rangeChunkSize,\\r\\n      disableRange = _ref.disableRange;\\r\\n\\r\\n  (0, _util.assert)(rangeChunkSize > 0);\\r\\n  var returnValues = {\\r\\n    allowRangeRequests: false,\\r\\n    suggestedLength: undefined\\r\\n  };\\r\\n  if (disableRange || !isHttp) {\\r\\n    return returnValues;\\r\\n  }\\r\\n  if (getResponseHeader('Accept-Ranges') !== 'bytes') {\\r\\n    return returnValues;\\r\\n  }\\r\\n  var contentEncoding = getResponseHeader('Content-Encoding') || 'identity';\\r\\n  if (contentEncoding !== 'identity') {\\r\\n    return returnValues;\\r\\n  }\\r\\n  var length = parseInt(getResponseHeader('Content-Length'), 10);\\r\\n  if (!Number.isInteger(length)) {\\r\\n    return returnValues;\\r\\n  }\\r\\n  returnValues.suggestedLength = length;\\r\\n  if (length <= 2 * rangeChunkSize) {\\r\\n    return returnValues;\\r\\n  }\\r\\n  returnValues.allowRangeRequests = true;\\r\\n  return returnValues;\\r\\n}\\r\\nfunction createResponseStatusError(status, url) {\\r\\n  if (status === 404 || status === 0 && /^file:/.test(url)) {\\r\\n    return new _util.MissingPDFException('Missing PDF \\\"' + url + '\\\".');\\r\\n  }\\r\\n  return new _util.UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \\\"' + url + '\\\".', status);\\r\\n}\\r\\nfunction validateResponseStatus(status) {\\r\\n  return status === 200 || status === 206;\\r\\n}\\r\\nexports.createResponseStatusError = createResponseStatusError;\\r\\nexports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\\r\\nexports.validateResponseStatus = validateResponseStatus;\\r\\n\\r\\n/***/ }),\\r\\n/* 51 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = !__w_pdfjs_require__(10) && !__w_pdfjs_require__(11)(function () {\\r\\n  return Object.defineProperty(__w_pdfjs_require__(37)('div'), 'a', {\\r\\n    get: function get() {\\r\\n      return 7;\\r\\n    }\\r\\n  }).a != 7;\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 52 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar hide = __w_pdfjs_require__(8);\\r\\nvar uid = __w_pdfjs_require__(18);\\r\\nvar TYPED = uid('typed_array');\\r\\nvar VIEW = uid('view');\\r\\nvar ABV = !!(global.ArrayBuffer && global.DataView);\\r\\nvar CONSTR = ABV;\\r\\nvar i = 0;\\r\\nvar l = 9;\\r\\nvar Typed;\\r\\nvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\\r\\nwhile (i < l) {\\r\\n  if (Typed = global[TypedArrayConstructors[i++]]) {\\r\\n    hide(Typed.prototype, TYPED, true);\\r\\n    hide(Typed.prototype, VIEW, true);\\r\\n  } else CONSTR = false;\\r\\n}\\r\\nmodule.exports = {\\r\\n  ABV: ABV,\\r\\n  CONSTR: CONSTR,\\r\\n  TYPED: TYPED,\\r\\n  VIEW: VIEW\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 53 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toInteger = __w_pdfjs_require__(19);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nmodule.exports = function (it) {\\r\\n  if (it === undefined) return 0;\\r\\n  var number = toInteger(it);\\r\\n  var length = toLength(number);\\r\\n  if (number !== length) throw RangeError('Wrong length!');\\r\\n  return length;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 54 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $keys = __w_pdfjs_require__(55);\\r\\nvar hiddenKeys = __w_pdfjs_require__(42).concat('length', 'prototype');\\r\\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\\r\\n  return $keys(O, hiddenKeys);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 55 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar has = __w_pdfjs_require__(12);\\r\\nvar toIObject = __w_pdfjs_require__(32);\\r\\nvar arrayIndexOf = __w_pdfjs_require__(56)(false);\\r\\nvar IE_PROTO = __w_pdfjs_require__(41)('IE_PROTO');\\r\\nmodule.exports = function (object, names) {\\r\\n  var O = toIObject(object);\\r\\n  var i = 0;\\r\\n  var result = [];\\r\\n  var key;\\r\\n  for (key in O) {\\r\\n    if (key != IE_PROTO) has(O, key) && result.push(key);\\r\\n  }while (names.length > i) {\\r\\n    if (has(O, key = names[i++])) {\\r\\n      ~arrayIndexOf(result, key) || result.push(key);\\r\\n    }\\r\\n  }return result;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 56 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toIObject = __w_pdfjs_require__(32);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nvar toAbsoluteIndex = __w_pdfjs_require__(33);\\r\\nmodule.exports = function (IS_INCLUDES) {\\r\\n  return function ($this, el, fromIndex) {\\r\\n    var O = toIObject($this);\\r\\n    var length = toLength(O.length);\\r\\n    var index = toAbsoluteIndex(fromIndex, length);\\r\\n    var value;\\r\\n    if (IS_INCLUDES && el != el) while (length > index) {\\r\\n      value = O[index++];\\r\\n      if (value != value) return true;\\r\\n    } else for (; length > index; index++) {\\r\\n      if (IS_INCLUDES || index in O) {\\r\\n        if (O[index] === el) return IS_INCLUDES || index || 0;\\r\\n      }\\r\\n    }return !IS_INCLUDES && -1;\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 57 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar core = __w_pdfjs_require__(6);\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar SHARED = '__core-js_shared__';\\r\\nvar store = global[SHARED] || (global[SHARED] = {});\\r\\n(module.exports = function (key, value) {\\r\\n  return store[key] || (store[key] = value !== undefined ? value : {});\\r\\n})('versions', []).push({\\r\\n  version: core.version,\\r\\n  mode: __w_pdfjs_require__(23) ? 'pure' : 'global',\\r\\n  copyright: '\\uFFFD 2018 Denis Pushkarev (zloirock.ru)'\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 58 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toObject = __w_pdfjs_require__(20);\\r\\nvar toAbsoluteIndex = __w_pdfjs_require__(33);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nmodule.exports = function fill(value) {\\r\\n  var O = toObject(this);\\r\\n  var length = toLength(O.length);\\r\\n  var aLen = arguments.length;\\r\\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\\r\\n  var end = aLen > 2 ? arguments[2] : undefined;\\r\\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\\r\\n  while (endPos > index) {\\r\\n    O[index++] = value;\\r\\n  }return O;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 59 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar Iterators = __w_pdfjs_require__(21);\\r\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\r\\nvar ArrayProto = Array.prototype;\\r\\nmodule.exports = function (it) {\\r\\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 60 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar dPs = __w_pdfjs_require__(97);\\r\\nvar enumBugKeys = __w_pdfjs_require__(42);\\r\\nvar IE_PROTO = __w_pdfjs_require__(41)('IE_PROTO');\\r\\nvar Empty = function Empty() {};\\r\\nvar PROTOTYPE = 'prototype';\\r\\nvar _createDict = function createDict() {\\r\\n  var iframe = __w_pdfjs_require__(37)('iframe');\\r\\n  var i = enumBugKeys.length;\\r\\n  var lt = '<';\\r\\n  var gt = '>';\\r\\n  var iframeDocument;\\r\\n  iframe.style.display = 'none';\\r\\n  __w_pdfjs_require__(61).appendChild(iframe);\\r\\n  iframe.src = 'javascript:';\\r\\n  iframeDocument = iframe.contentWindow.document;\\r\\n  iframeDocument.open();\\r\\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\\r\\n  iframeDocument.close();\\r\\n  _createDict = iframeDocument.F;\\r\\n  while (i--) {\\r\\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\\r\\n  }return _createDict();\\r\\n};\\r\\nmodule.exports = Object.create || function create(O, Properties) {\\r\\n  var result;\\r\\n  if (O !== null) {\\r\\n    Empty[PROTOTYPE] = anObject(O);\\r\\n    result = new Empty();\\r\\n    Empty[PROTOTYPE] = null;\\r\\n    result[IE_PROTO] = O;\\r\\n  } else result = _createDict();\\r\\n  return Properties === undefined ? result : dPs(result, Properties);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 61 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar document = __w_pdfjs_require__(1).document;\\r\\nmodule.exports = document && document.documentElement;\\r\\n\\r\\n/***/ }),\\r\\n/* 62 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar has = __w_pdfjs_require__(12);\\r\\nvar toObject = __w_pdfjs_require__(20);\\r\\nvar IE_PROTO = __w_pdfjs_require__(41)('IE_PROTO');\\r\\nvar ObjectProto = Object.prototype;\\r\\nmodule.exports = Object.getPrototypeOf || function (O) {\\r\\n  O = toObject(O);\\r\\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\\r\\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\\r\\n    return O.constructor.prototype;\\r\\n  }\\r\\n  return O instanceof Object ? ObjectProto : null;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 63 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar classof = __w_pdfjs_require__(34);\\r\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\r\\nvar Iterators = __w_pdfjs_require__(21);\\r\\nmodule.exports = __w_pdfjs_require__(6).getIteratorMethod = function (it) {\\r\\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 64 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar addToUnscopables = __w_pdfjs_require__(101);\\r\\nvar step = __w_pdfjs_require__(102);\\r\\nvar Iterators = __w_pdfjs_require__(21);\\r\\nvar toIObject = __w_pdfjs_require__(32);\\r\\nmodule.exports = __w_pdfjs_require__(65)(Array, 'Array', function (iterated, kind) {\\r\\n  this._t = toIObject(iterated);\\r\\n  this._i = 0;\\r\\n  this._k = kind;\\r\\n}, function () {\\r\\n  var O = this._t;\\r\\n  var kind = this._k;\\r\\n  var index = this._i++;\\r\\n  if (!O || index >= O.length) {\\r\\n    this._t = undefined;\\r\\n    return step(1);\\r\\n  }\\r\\n  if (kind == 'keys') return step(0, index);\\r\\n  if (kind == 'values') return step(0, O[index]);\\r\\n  return step(0, [index, O[index]]);\\r\\n}, 'values');\\r\\nIterators.Arguments = Iterators.Array;\\r\\naddToUnscopables('keys');\\r\\naddToUnscopables('values');\\r\\naddToUnscopables('entries');\\r\\n\\r\\n/***/ }),\\r\\n/* 65 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar LIBRARY = __w_pdfjs_require__(23);\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nvar redefine = __w_pdfjs_require__(16);\\r\\nvar hide = __w_pdfjs_require__(8);\\r\\nvar Iterators = __w_pdfjs_require__(21);\\r\\nvar $iterCreate = __w_pdfj\";a.a+=\"s_require__(103);\\r\\nvar setToStringTag = __w_pdfjs_require__(28);\\r\\nvar getPrototypeOf = __w_pdfjs_require__(62);\\r\\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\\r\\nvar BUGGY = !([].keys && 'next' in [].keys());\\r\\nvar FF_ITERATOR = '@@iterator';\\r\\nvar KEYS = 'keys';\\r\\nvar VALUES = 'values';\\r\\nvar returnThis = function returnThis() {\\r\\n  return this;\\r\\n};\\r\\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\\r\\n  $iterCreate(Constructor, NAME, next);\\r\\n  var getMethod = function getMethod(kind) {\\r\\n    if (!BUGGY && kind in proto) return proto[kind];\\r\\n    switch (kind) {\\r\\n      case KEYS:\\r\\n        return function keys() {\\r\\n          return new Constructor(this, kind);\\r\\n        };\\r\\n      case VALUES:\\r\\n        return function values() {\\r\\n          return new Constructor(this, kind);\\r\\n        };\\r\\n    }\\r\\n    return function entries() {\\r\\n      return new Constructor(this, kind);\\r\\n    };\\r\\n  };\\r\\n  var TAG = NAME + ' Iterator';\\r\\n  var DEF_VALUES = DEFAULT == VALUES;\\r\\n  var VALUES_BUG = false;\\r\\n  var proto = Base.prototype;\\r\\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\\r\\n  var $default = $native || getMethod(DEFAULT);\\r\\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\\r\\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\\r\\n  var methods, key, IteratorPrototype;\\r\\n  if ($anyNative) {\\r\\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\\r\\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\\r\\n      setToStringTag(IteratorPrototype, TAG, true);\\r\\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\\r\\n    }\\r\\n  }\\r\\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\\r\\n    VALUES_BUG = true;\\r\\n    $default = function values() {\\r\\n      return $native.call(this);\\r\\n    };\\r\\n  }\\r\\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\\r\\n    hide(proto, ITERATOR, $default);\\r\\n  }\\r\\n  Iterators[NAME] = $default;\\r\\n  Iterators[TAG] = returnThis;\\r\\n  if (DEFAULT) {\\r\\n    methods = {\\r\\n      values: DEF_VALUES ? $default : getMethod(VALUES),\\r\\n      keys: IS_SET ? $default : getMethod(KEYS),\\r\\n      entries: $entries\\r\\n    };\\r\\n    if (FORCED) for (key in methods) {\\r\\n      if (!(key in proto)) redefine(proto, key, methods[key]);\\r\\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\\r\\n  }\\r\\n  return methods;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 66 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar dP = __w_pdfjs_require__(15);\\r\\nvar DESCRIPTORS = __w_pdfjs_require__(10);\\r\\nvar SPECIES = __w_pdfjs_require__(4)('species');\\r\\nmodule.exports = function (KEY) {\\r\\n  var C = global[KEY];\\r\\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\\r\\n    configurable: true,\\r\\n    get: function get() {\\r\\n      return this;\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 67 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar pIE = __w_pdfjs_require__(68);\\r\\nvar createDesc = __w_pdfjs_require__(31);\\r\\nvar toIObject = __w_pdfjs_require__(32);\\r\\nvar toPrimitive = __w_pdfjs_require__(38);\\r\\nvar has = __w_pdfjs_require__(12);\\r\\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(51);\\r\\nvar gOPD = Object.getOwnPropertyDescriptor;\\r\\nexports.f = __w_pdfjs_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {\\r\\n  O = toIObject(O);\\r\\n  P = toPrimitive(P, true);\\r\\n  if (IE8_DOM_DEFINE) try {\\r\\n    return gOPD(O, P);\\r\\n  } catch (e) {}\\r\\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 68 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nexports.f = {}.propertyIsEnumerable;\\r\\n\\r\\n/***/ }),\\r\\n/* 69 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar classof = __w_pdfjs_require__(34);\\r\\nvar test = {};\\r\\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\\r\\nif (test + '' != '[object z]') {\\r\\n  __w_pdfjs_require__(16)(Object.prototype, 'toString', function toString() {\\r\\n    return '[object ' + classof(this) + ']';\\r\\n  }, true);\\r\\n}\\r\\n\\r\\n/***/ }),\\r\\n/* 70 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $iterators = __w_pdfjs_require__(64);\\r\\nvar getKeys = __w_pdfjs_require__(43);\\r\\nvar redefine = __w_pdfjs_require__(16);\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar hide = __w_pdfjs_require__(8);\\r\\nvar Iterators = __w_pdfjs_require__(21);\\r\\nvar wks = __w_pdfjs_require__(4);\\r\\nvar ITERATOR = wks('iterator');\\r\\nvar TO_STRING_TAG = wks('toStringTag');\\r\\nvar ArrayValues = Iterators.Array;\\r\\nvar DOMIterables = {\\r\\n  CSSRuleList: true,\\r\\n  CSSStyleDeclaration: false,\\r\\n  CSSValueList: false,\\r\\n  ClientRectList: false,\\r\\n  DOMRectList: false,\\r\\n  DOMStringList: false,\\r\\n  DOMTokenList: true,\\r\\n  DataTransferItemList: false,\\r\\n  FileList: false,\\r\\n  HTMLAllCollection: false,\\r\\n  HTMLCollection: false,\\r\\n  HTMLFormElement: false,\\r\\n  HTMLSelectElement: false,\\r\\n  MediaList: true,\\r\\n  MimeTypeArray: false,\\r\\n  NamedNodeMap: false,\\r\\n  NodeList: true,\\r\\n  PaintRequestList: false,\\r\\n  Plugin: false,\\r\\n  PluginArray: false,\\r\\n  SVGLengthList: false,\\r\\n  SVGNumberList: false,\\r\\n  SVGPathSegList: false,\\r\\n  SVGPointList: false,\\r\\n  SVGStringList: false,\\r\\n  SVGTransformList: false,\\r\\n  SourceBufferList: false,\\r\\n  StyleSheetList: true,\\r\\n  TextTrackCueList: false,\\r\\n  TextTrackList: false,\\r\\n  TouchList: false\\r\\n};\\r\\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\\r\\n  var NAME = collections[i];\\r\\n  var explicit = DOMIterables[NAME];\\r\\n  var Collection = global[NAME];\\r\\n  var proto = Collection && Collection.prototype;\\r\\n  var key;\\r\\n  if (proto) {\\r\\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\\r\\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\\r\\n    Iterators[NAME] = ArrayValues;\\r\\n    if (explicit) for (key in $iterators) {\\r\\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\\r\\n/***/ }),\\r\\n/* 71 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar ctx = __w_pdfjs_require__(13);\\r\\nvar invoke = __w_pdfjs_require__(115);\\r\\nvar html = __w_pdfjs_require__(61);\\r\\nvar cel = __w_pdfjs_require__(37);\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar process = global.process;\\r\\nvar setTask = global.setImmediate;\\r\\nvar clearTask = global.clearImmediate;\\r\\nvar MessageChannel = global.MessageChannel;\\r\\nvar Dispatch = global.Dispatch;\\r\\nvar counter = 0;\\r\\nvar queue = {};\\r\\nvar ONREADYSTATECHANGE = 'onreadystatechange';\\r\\nvar defer, channel, port;\\r\\nvar run = function run() {\\r\\n  var id = +this;\\r\\n  if (queue.hasOwnProperty(id)) {\\r\\n    var fn = queue[id];\\r\\n    delete queue[id];\\r\\n    fn();\\r\\n  }\\r\\n};\\r\\nvar listener = function listener(event) {\\r\\n  run.call(event.data);\\r\\n};\\r\\nif (!setTask || !clearTask) {\\r\\n  setTask = function setImmediate(fn) {\\r\\n    var args = [];\\r\\n    var i = 1;\\r\\n    while (arguments.length > i) {\\r\\n      args.push(arguments[i++]);\\r\\n    }queue[++counter] = function () {\\r\\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\\r\\n    };\\r\\n    defer(counter);\\r\\n    return counter;\\r\\n  };\\r\\n  clearTask = function clearImmediate(id) {\\r\\n    delete queue[id];\\r\\n  };\\r\\n  if (__w_pdfjs_require__(27)(process) == 'process') {\\r\\n    defer = function defer(id) {\\r\\n      process.nextTick(ctx(run, id, 1));\\r\\n    };\\r\\n  } else if (Dispatch && Dispatch.now) {\\r\\n    defer = function defer(id) {\\r\\n      Dispatch.now(ctx(run, id, 1));\\r\\n    };\\r\\n  } else if (MessageChannel) {\\r\\n    channel = new MessageChannel();\\r\\n    port = channel.port2;\\r\\n    channel.port1.onmessage = listener;\\r\\n    defer = ctx(port.postMessage, port, 1);\\r\\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\\r\\n    defer = function defer(id) {\\r\\n      global.postMessage(id + '', '*');\\r\\n    };\\r\\n    global.addEventListener('message', listener, false);\\r\\n  } else if (ONREADYSTATECHANGE in cel('script')) {\\r\\n    defer = function defer(id) {\\r\\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\\r\\n        html.removeChild(this);\\r\\n        run.call(id);\\r\\n      };\\r\\n    };\\r\\n  } else {\\r\\n    defer = function defer(id) {\\r\\n      setTimeout(ctx(run, id, 1), 0);\\r\\n    };\\r\\n  }\\r\\n}\\r\\nmodule.exports = {\\r\\n  set: setTask,\\r\\n  clear: clearTask\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 72 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (exec) {\\r\\n  try {\\r\\n    return {\\r\\n      e: false,\\r\\n      v: exec()\\r\\n    };\\r\\n  } catch (e) {\\r\\n    return {\\r\\n      e: true,\\r\\n      v: e\\r\\n    };\\r\\n  }\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 73 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar newPromiseCapability = __w_pdfjs_require__(47);\\r\\nmodule.exports = function (C, x) {\\r\\n  anObject(C);\\r\\n  if (isObject(x) && x.constructor === C) return x;\\r\\n  var promiseCapability = newPromiseCapability.f(C);\\r\\n  var resolve = promiseCapability.resolve;\\r\\n  resolve(x);\\r\\n  return promiseCapability.promise;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 74 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nmodule.exports = function (it, TYPE) {\\r\\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\\r\\n  return it;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 75 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.build = exports.version = exports._UnsupportedManager = exports.setPDFNetworkStreamClass = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.getDocument = undefined;\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _dom_utils = __w_pdfjs_require__(17);\\r\\n\\r\\nvar _font_loader = __w_pdfjs_require__(135);\\r\\n\\r\\nvar _canvas = __w_pdfjs_require__(136);\\r\\n\\r\\nvar _global_scope = __w_pdfjs_require__(22);\\r\\n\\r\\nvar _global_scope2 = _interopRequireDefault(_global_scope);\\r\\n\\r\\nvar _metadata = __w_pdfjs_require__(77);\\r\\n\\r\\nvar _transport_stream = __w_pdfjs_require__(139);\\r\\n\\r\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar DEFAULT_RANGE_CHUNK_SIZE = 65536;\\r\\nvar isWorkerDisabled = false;\\r\\nvar workerSrc;\\r\\nvar isPostMessageTransfersDisabled = false;\\r\\nvar pdfjsFilePath = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : null;\\r\\nvar fakeWorkerFilesLoader = null;\\r\\nvar useRequireEnsure = false;\\r\\n;\\r\\nvar PDFNetworkStream;\\r\\nfunction setPDFNetworkStreamClass(cls) {\\r\\n  PDFNetworkStream = cls;\\r\\n}\\r\\nfunction getDocument(src, pdfDataRangeTransport, passwordCallback, progressCallback) {\\r\\n  var task = new PDFDocumentLoadingTask();\\r\\n  if (arguments.length > 1) {\\r\\n    (0, _util.deprecated)('getDocument is called with pdfDataRangeTransport, ' + 'passwordCallback or progressCallback argument');\\r\\n  }\\r\\n  if (pdfDataRangeTransport) {\\r\\n    if (!(pdfDataRangeTransport instanceof PDFDataRangeTransport)) {\\r\\n      pdfDataRangeTransport = Object.create(pdfDataRangeTransport);\\r\\n      pdfDataRangeTransport.length = src.length;\\r\\n      pdfDataRangeTransport.initialData = src.initialData;\\r\\n      if (!pdfDataRangeTransport.abort) {\\r\\n        pdfDataRangeTransport.abort = function () {};\\r\\n      }\\r\\n    }\\r\\n    src = Object.create(src);\\r\\n    src.range = pdfDataRangeTransport;\\r\\n  }\\r\\n  task.onPassword = passwordCallback || null;\\r\\n  task.onProgress = progressCallback || null;\\r\\n  var source;\\r\\n  if (typeof src === 'string') {\\r\\n    source = { url: src };\\r\\n  } else if ((0, _util.isArrayBuffer)(src)) {\\r\\n    source = { data: src };\\r\\n  } else if (src instanceof PDFDataRangeTransport) {\\r\\n    source = { range: src };\\r\\n  } else {\\r\\n    if ((typeof src === 'undefined' ? 'undefined' : _typeof(src)) !== 'object') {\\r\\n      throw new Error('Invalid parameter in getDocument, ' + 'need either Uint8Array, string or a parameter object');\\r\\n    }\\r\\n    if (!src.url && !src.data && !src.range) {\\r\\n      throw new Error('Invalid parameter object: need either .data, .range or .url');\\r\\n    }\\r\\n    source = src;\\r\\n  }\\r\\n  var params = {};\\r\\n  var rangeTransport = null;\\r\\n  var worker = null;\\r\\n  var CMapReaderFactory = _dom_utils.DOMCMapReaderFactory;\\r\\n  for (var key in source) {\\r\\n    if (key === 'url' && typeof window !== 'undefined') {\\r\\n      params[key] = new URL(source[key], window.location).href;\\r\\n      continue;\\r\\n    } else if (key === 'range') {\\r\\n      rangeTransport = source[key];\\r\\n      continue;\\r\\n    } else if (key === 'worker') {\\r\\n      worker = source[key];\\r\\n      continue;\\r\\n    } else if (key === 'data' && !(source[key] instanceof Uint8Array)) {\\r\\n      var pdfBytes = source[key];\\r\\n      if (typeof pdfBytes === 'string') {\\r\\n        params[key] = (0, _util.stringToBytes)(pdfBytes);\\r\\n      } else if ((typeof pdfBytes === 'undefined' ? 'undefined' : _typeof(pdfBytes)) === 'object' && pdfBytes !== null && !isNaN(pdfBytes.length)) {\\r\\n        params[key] = new Uint8Array(pdfBytes);\\r\\n      } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\\r\\n        params[key] = new Uint8Array(pdfBytes);\\r\\n      } else {\\r\\n        throw new Error('Invalid PDF binary data: either typed array, ' + 'string or array-like object is expected in the ' + 'data property.');\\r\\n      }\\r\\n      continue;\\r\\n    } else if (key === 'CMapReaderFactory') {\\r\\n      CMapReaderFactory = source[key];\\r\\n      continue;\\r\\n    }\\r\\n    params[key] = source[key];\\r\\n  }\\r\\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\\r\\n  params.ignoreErrors = params.stopAtErrors !== true;\\r\\n  if (params.disableNativeImageDecoder !== undefined) {\\r\\n    (0, _util.deprecated)('parameter disableNativeImageDecoder, ' + 'use nativeImageDecoderSupport instead');\\r\\n  }\\r\\n  params.nativeImageDecoderSupport = params.nativeImageDecoderSupport || (params.disableNativeImageDecoder === true ? _util.NativeImageDecoding.NONE : _util.NativeImageDecoding.DECODE);\\r\\n  if (params.nativeImageDecoderSupport !== _util.NativeImageDecoding.DECODE && params.nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && params.nativeImageDecoderSupport !== _util.NativeImageDecoding.DISPLAY) {\\r\\n    (0, _util.warn)('Invalid parameter nativeImageDecoderSupport: ' + 'need a state of enum {NativeImageDecoding}');\\r\\n    params.nativeImageDecoderSupport = _util.NativeImageDecoding.DECODE;\\r\\n  }\\r\\n  if (!worker) {\\r\\n    var workerPort = (0, _dom_utils.getDefaultSetting)('workerPort');\\r\\n    worker = workerPort ? PDFWorker.fromPort(workerPort) : new PDFWorker();\\r\\n    task._worker = worker;\\r\\n  }\\r\\n  var docId = task.docId;\\r\\n  worker.promise.then(function () {\\r\\n    if (task.destroyed) {\\r\\n      throw new Error('Loading aborted');\\r\\n    }\\r\\n    return _fetchDocument(worker, params, rangeTransport, docId).then(function (workerId) {\\r\\n      if (task.destroyed) {\\r\\n        throw new Error('Loading aborted');\\r\\n      }\\r\\n      var networkStream = void 0;\\r\\n      if (rangeTransport) {\\r\\n        networkStream = new _transport_stream.PDFDataTransportStream(params, rangeTransport);\\r\\n      } else if (!params.data) {\\r\\n        networkStream = new PDFNetworkStream({\\r\\n          source: params,\\r\\n          disableRange: (0, _dom_utils.getDefaultSetting)('disableRange')\\r\\n        });\\r\\n      }\\r\\n      var messageHandler = new _util.MessageHandler(docId, workerId, worker.port);\";a.a+=\"\\r\\n      messageHandler.postMessageTransfers = worker.postMessageTransfers;\\r\\n      var transport = new WorkerTransport(messageHandler, task, networkStream, CMapReaderFactory);\\r\\n      task._transport = transport;\\r\\n      messageHandler.send('Ready', null);\\r\\n    });\\r\\n  }).catch(task._capability.reject);\\r\\n  return task;\\r\\n}\\r\\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\\r\\n  if (worker.destroyed) {\\r\\n    return Promise.reject(new Error('Worker was destroyed'));\\r\\n  }\\r\\n  var apiVersion = '1.10.100';\\r\\n  source.disableAutoFetch = (0, _dom_utils.getDefaultSetting)('disableAutoFetch');\\r\\n  source.disableStream = (0, _dom_utils.getDefaultSetting)('disableStream');\\r\\n  source.chunkedViewerLoading = !!pdfDataRangeTransport;\\r\\n  if (pdfDataRangeTransport) {\\r\\n    source.length = pdfDataRangeTransport.length;\\r\\n    source.initialData = pdfDataRangeTransport.initialData;\\r\\n  }\\r\\n  return worker.messageHandler.sendWithPromise('GetDocRequest', {\\r\\n    docId: docId,\\r\\n    apiVersion: apiVersion,\\r\\n    source: {\\r\\n      data: source.data,\\r\\n      url: source.url,\\r\\n      password: source.password,\\r\\n      disableAutoFetch: source.disableAutoFetch,\\r\\n      rangeChunkSize: source.rangeChunkSize,\\r\\n      length: source.length\\r\\n    },\\r\\n    maxImageSize: (0, _dom_utils.getDefaultSetting)('maxImageSize'),\\r\\n    disableFontFace: (0, _dom_utils.getDefaultSetting)('disableFontFace'),\\r\\n    disableCreateObjectURL: (0, _dom_utils.getDefaultSetting)('disableCreateObjectURL'),\\r\\n    postMessageTransfers: (0, _dom_utils.getDefaultSetting)('postMessageTransfers') && !isPostMessageTransfersDisabled,\\r\\n    docBaseUrl: source.docBaseUrl,\\r\\n    nativeImageDecoderSupport: source.nativeImageDecoderSupport,\\r\\n    ignoreErrors: source.ignoreErrors,\\r\\n    isEvalSupported: (0, _dom_utils.getDefaultSetting)('isEvalSupported')\\r\\n  }).then(function (workerId) {\\r\\n    if (worker.destroyed) {\\r\\n      throw new Error('Worker was destroyed');\\r\\n    }\\r\\n    return workerId;\\r\\n  });\\r\\n}\\r\\nvar PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\\r\\n  var nextDocumentId = 0;\\r\\n  function PDFDocumentLoadingTask() {\\r\\n    this._capability = (0, _util.createPromiseCapability)();\\r\\n    this._transport = null;\\r\\n    this._worker = null;\\r\\n    this.docId = 'd' + nextDocumentId++;\\r\\n    this.destroyed = false;\\r\\n    this.onPassword = null;\\r\\n    this.onProgress = null;\\r\\n    this.onUnsupportedFeature = null;\\r\\n  }\\r\\n  PDFDocumentLoadingTask.prototype = {\\r\\n    get promise() {\\r\\n      return this._capability.promise;\\r\\n    },\\r\\n    destroy: function destroy() {\\r\\n      var _this = this;\\r\\n\\r\\n      this.destroyed = true;\\r\\n      var transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\\r\\n      return transportDestroyed.then(function () {\\r\\n        _this._transport = null;\\r\\n        if (_this._worker) {\\r\\n          _this._worker.destroy();\\r\\n          _this._worker = null;\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n\\r\\n    then: function PDFDocumentLoadingTask_then(onFulfilled, onRejected) {\\r\\n      return this.promise.then.apply(this.promise, arguments);\\r\\n    }\\r\\n  };\\r\\n  return PDFDocumentLoadingTask;\\r\\n}();\\r\\nvar PDFDataRangeTransport = function pdfDataRangeTransportClosure() {\\r\\n  function PDFDataRangeTransport(length, initialData) {\\r\\n    this.length = length;\\r\\n    this.initialData = initialData;\\r\\n    this._rangeListeners = [];\\r\\n    this._progressListeners = [];\\r\\n    this._progressiveReadListeners = [];\\r\\n    this._readyCapability = (0, _util.createPromiseCapability)();\\r\\n  }\\r\\n  PDFDataRangeTransport.prototype = {\\r\\n    addRangeListener: function PDFDataRangeTransport_addRangeListener(listener) {\\r\\n      this._rangeListeners.push(listener);\\r\\n    },\\r\\n    addProgressListener: function PDFDataRangeTransport_addProgressListener(listener) {\\r\\n      this._progressListeners.push(listener);\\r\\n    },\\r\\n    addProgressiveReadListener: function PDFDataRangeTransport_addProgressiveReadListener(listener) {\\r\\n      this._progressiveReadListeners.push(listener);\\r\\n    },\\r\\n    onDataRange: function PDFDataRangeTransport_onDataRange(begin, chunk) {\\r\\n      var listeners = this._rangeListeners;\\r\\n      for (var i = 0, n = listeners.length; i < n; ++i) {\\r\\n        listeners[i](begin, chunk);\\r\\n      }\\r\\n    },\\r\\n    onDataProgress: function PDFDataRangeTransport_onDataProgress(loaded) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      this._readyCapability.promise.then(function () {\\r\\n        var listeners = _this2._progressListeners;\\r\\n        for (var i = 0, n = listeners.length; i < n; ++i) {\\r\\n          listeners[i](loaded);\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    onDataProgressiveRead: function PDFDataRangeTransport_onDataProgress(chunk) {\\r\\n      var _this3 = this;\\r\\n\\r\\n      this._readyCapability.promise.then(function () {\\r\\n        var listeners = _this3._progressiveReadListeners;\\r\\n        for (var i = 0, n = listeners.length; i < n; ++i) {\\r\\n          listeners[i](chunk);\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    transportReady: function PDFDataRangeTransport_transportReady() {\\r\\n      this._readyCapability.resolve();\\r\\n    },\\r\\n    requestDataRange: function PDFDataRangeTransport_requestDataRange(begin, end) {\\r\\n      throw new Error('Abstract method PDFDataRangeTransport.requestDataRange');\\r\\n    },\\r\\n    abort: function PDFDataRangeTransport_abort() {}\\r\\n  };\\r\\n  return PDFDataRangeTransport;\\r\\n}();\\r\\nvar PDFDocumentProxy = function PDFDocumentProxyClosure() {\\r\\n  function PDFDocumentProxy(pdfInfo, transport, loadingTask) {\\r\\n    this.pdfInfo = pdfInfo;\\r\\n    this.transport = transport;\\r\\n    this.loadingTask = loadingTask;\\r\\n  }\\r\\n  PDFDocumentProxy.prototype = {\\r\\n    get numPages() {\\r\\n      return this.pdfInfo.numPages;\\r\\n    },\\r\\n    get fingerprint() {\\r\\n      return this.pdfInfo.fingerprint;\\r\\n    },\\r\\n    getPage: function PDFDocumentProxy_getPage(pageNumber) {\\r\\n      return this.transport.getPage(pageNumber);\\r\\n    },\\r\\n    getPageIndex: function PDFDocumentProxy_getPageIndex(ref) {\\r\\n      return this.transport.getPageIndex(ref);\\r\\n    },\\r\\n    getDestinations: function PDFDocumentProxy_getDestinations() {\\r\\n      return this.transport.getDestinations();\\r\\n    },\\r\\n    getDestination: function PDFDocumentProxy_getDestination(id) {\\r\\n      return this.transport.getDestination(id);\\r\\n    },\\r\\n    getPageLabels: function PDFDocumentProxy_getPageLabels() {\\r\\n      return this.transport.getPageLabels();\\r\\n    },\\r\\n    getPageMode: function getPageMode() {\\r\\n      return this.transport.getPageMode();\\r\\n    },\\r\\n\\r\\n    getAttachments: function PDFDocumentProxy_getAttachments() {\\r\\n      return this.transport.getAttachments();\\r\\n    },\\r\\n    getJavaScript: function PDFDocumentProxy_getJavaScript() {\\r\\n      return this.transport.getJavaScript();\\r\\n    },\\r\\n    getOutline: function PDFDocumentProxy_getOutline() {\\r\\n      return this.transport.getOutline();\\r\\n    },\\r\\n    getMetadata: function PDFDocumentProxy_getMetadata() {\\r\\n      return this.transport.getMetadata();\\r\\n    },\\r\\n    getData: function PDFDocumentProxy_getData() {\\r\\n      return this.transport.getData();\\r\\n    },\\r\\n    getDownloadInfo: function PDFDocumentProxy_getDownloadInfo() {\\r\\n      return this.transport.downloadInfoCapability.promise;\\r\\n    },\\r\\n    getStats: function PDFDocumentProxy_getStats() {\\r\\n      return this.transport.getStats();\\r\\n    },\\r\\n    cleanup: function PDFDocumentProxy_cleanup() {\\r\\n      this.transport.startCleanup();\\r\\n    },\\r\\n    destroy: function PDFDocumentProxy_destroy() {\\r\\n      return this.loadingTask.destroy();\\r\\n    }\\r\\n  };\\r\\n  return PDFDocumentProxy;\\r\\n}();\\r\\nvar PDFPageProxy = function PDFPageProxyClosure() {\\r\\n  function PDFPageProxy(pageIndex, pageInfo, transport) {\\r\\n    this.pageIndex = pageIndex;\\r\\n    this.pageInfo = pageInfo;\\r\\n    this.transport = transport;\\r\\n    this.stats = new _util.StatTimer();\\r\\n    this.stats.enabled = (0, _dom_utils.getDefaultSetting)('enableStats');\\r\\n    this.commonObjs = transport.commonObjs;\\r\\n    this.objs = new PDFObjects();\\r\\n    this.cleanupAfterRender = false;\\r\\n    this.pendingCleanup = false;\\r\\n    this.intentStates = Object.create(null);\\r\\n    this.destroyed = false;\\r\\n  }\\r\\n  PDFPageProxy.prototype = {\\r\\n    get pageNumber() {\\r\\n      return this.pageIndex + 1;\\r\\n    },\\r\\n    get rotate() {\\r\\n      return this.pageInfo.rotate;\\r\\n    },\\r\\n    get ref() {\\r\\n      return this.pageInfo.ref;\\r\\n    },\\r\\n    get userUnit() {\\r\\n      return this.pageInfo.userUnit;\\r\\n    },\\r\\n    get view() {\\r\\n      return this.pageInfo.view;\\r\\n    },\\r\\n    getViewport: function PDFPageProxy_getViewport(scale, rotate) {\\r\\n      if (arguments.length < 2) {\\r\\n        rotate = this.rotate;\\r\\n      }\\r\\n      return new _util.PageViewport(this.view, scale, rotate, 0, 0);\\r\\n    },\\r\\n    getAnnotations: function PDFPageProxy_getAnnotations(params) {\\r\\n      var intent = params && params.intent || null;\\r\\n      if (!this.annotationsPromise || this.annotationsIntent !== intent) {\\r\\n        this.annotationsPromise = this.transport.getAnnotations(this.pageIndex, intent);\\r\\n        this.annotationsIntent = intent;\\r\\n      }\\r\\n      return this.annotationsPromise;\\r\\n    },\\r\\n    render: function PDFPageProxy_render(params) {\\r\\n      var _this4 = this;\\r\\n\\r\\n      var stats = this.stats;\\r\\n      stats.time('Overall');\\r\\n      this.pendingCleanup = false;\\r\\n      var renderingIntent = params.intent === 'print' ? 'print' : 'display';\\r\\n      var canvasFactory = params.canvasFactory || new _dom_utils.DOMCanvasFactory();\\r\\n      if (!this.intentStates[renderingIntent]) {\\r\\n        this.intentStates[renderingIntent] = Object.create(null);\\r\\n      }\\r\\n      var intentState = this.intentStates[renderingIntent];\\r\\n      if (!intentState.displayReadyCapability) {\\r\\n        intentState.receivingOperatorList = true;\\r\\n        intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\\r\\n        intentState.operatorList = {\\r\\n          fnArray: [],\\r\\n          argsArray: [],\\r\\n          lastChunk: false\\r\\n        };\\r\\n        this.stats.time('Page Request');\\r\\n        this.transport.messageHandler.send('RenderPageRequest', {\\r\\n          pageIndex: this.pageNumber - 1,\\r\\n          intent: renderingIntent,\\r\\n          renderInteractiveForms: params.renderInteractiveForms === true\\r\\n        });\\r\\n      }\\r\\n      var complete = function complete(error) {\\r\\n        var i = intentState.renderTasks.indexOf(internalRenderTask);\\r\\n        if (i >= 0) {\\r\\n          intentState.renderTasks.splice(i, 1);\\r\\n        }\\r\\n        if (_this4.cleanupAfterRender) {\\r\\n          _this4.pendingCleanup = true;\\r\\n        }\\r\\n        _this4._tryCleanup();\\r\\n        if (error) {\\r\\n          internalRenderTask.capability.reject(error);\\r\\n        } else {\\r\\n          internalRenderTask.capability.resolve();\\r\\n        }\\r\\n        stats.timeEnd('Rendering');\\r\\n        stats.timeEnd('Overall');\\r\\n      };\\r\\n      var internalRenderTask = new InternalRenderTask(complete, params, this.objs, this.commonObjs, intentState.operatorList, this.pageNumber, canvasFactory);\\r\\n      internalRenderTask.useRequestAnimationFrame = renderingIntent !== 'print';\\r\\n      if (!intentState.renderTasks) {\\r\\n        intentState.renderTasks = [];\\r\\n      }\\r\\n      intentState.renderTasks.push(internalRenderTask);\\r\\n      var renderTask = internalRenderTask.task;\\r\\n      if (params.continueCallback) {\\r\\n        (0, _util.deprecated)('render is used with continueCallback parameter');\\r\\n        renderTask.onContinue = params.continueCallback;\\r\\n      }\\r\\n      intentState.displayReadyCapability.promise.then(function (transparency) {\\r\\n        if (_this4.pendingCleanup) {\\r\\n          complete();\\r\\n          return;\\r\\n        }\\r\\n        stats.time('Rendering');\\r\\n        internalRenderTask.initializeGraphics(transparency);\\r\\n        internalRenderTask.operatorListChanged();\\r\\n      }).catch(complete);\\r\\n      return renderTask;\\r\\n    },\\r\\n    getOperatorList: function PDFPageProxy_getOperatorList() {\\r\\n      function operatorListChanged() {\\r\\n        if (intentState.operatorList.lastChunk) {\\r\\n          intentState.opListReadCapability.resolve(intentState.operatorList);\\r\\n          var i = intentState.renderTasks.indexOf(opListTask);\\r\\n          if (i >= 0) {\\r\\n            intentState.renderTasks.splice(i, 1);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      var renderingIntent = 'oplist';\\r\\n      if (!this.intentStates[renderingIntent]) {\\r\\n        this.intentStates[renderingIntent] = Object.create(null);\\r\\n      }\\r\\n      var intentState = this.intentStates[renderingIntent];\\r\\n      var opListTask;\\r\\n      if (!intentState.opListReadCapability) {\\r\\n        opListTask = {};\\r\\n        opListTask.operatorListChanged = operatorListChanged;\\r\\n        intentState.receivingOperatorList = true;\\r\\n        intentState.opListReadCapability = (0, _util.createPromiseCapability)();\\r\\n        intentState.renderTasks = [];\\r\\n        intentState.renderTasks.push(opListTask);\\r\\n        intentState.operatorList = {\\r\\n          fnArray: [],\\r\\n          argsArray: [],\\r\\n          lastChunk: false\\r\\n        };\\r\\n        this.transport.messageHandler.send('RenderPageRequest', {\\r\\n          pageIndex: this.pageIndex,\\r\\n          intent: renderingIntent\\r\\n        });\\r\\n      }\\r\\n      return intentState.opListReadCapability.promise;\\r\\n    },\\r\\n    streamTextContent: function streamTextContent() {\\r\\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\r\\n\\r\\n      var TEXT_CONTENT_CHUNK_SIZE = 100;\\r\\n      return this.transport.messageHandler.sendWithStream('GetTextContent', {\\r\\n        pageIndex: this.pageNumber - 1,\\r\\n        normalizeWhitespace: params.normalizeWhitespace === true,\\r\\n        combineTextItems: params.disableCombineTextItems !== true\\r\\n      }, {\\r\\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\\r\\n        size: function size(textContent) {\\r\\n          return textContent.items.length;\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n\\r\\n    getTextContent: function PDFPageProxy_getTextContent(params) {\\r\\n      params = params || {};\\r\\n      var readableStream = this.streamTextContent(params);\\r\\n      return new Promise(function (resolve, reject) {\\r\\n        function pump() {\\r\\n          reader.read().then(function (_ref) {\\r\\n            var value = _ref.value,\\r\\n                done = _ref.done;\\r\\n\\r\\n            if (done) {\\r\\n              resolve(textContent);\\r\\n              return;\\r\\n            }\\r\\n            _util.Util.extendObj(textContent.styles, value.styles);\\r\\n            _util.Util.appendToArray(textContent.items, value.items);\\r\\n            pump();\\r\\n          }, reject);\\r\\n        }\\r\\n        var reader = readableStream.getReader();\\r\\n        var textContent = {\\r\\n          items: [],\\r\\n          styles: Object.create(null)\\r\\n        };\\r\\n        pump();\\r\\n      });\\r\\n    },\\r\\n    _destroy: function PDFPageProxy_destroy() {\\r\\n      this.destroyed = true;\\r\\n      this.transport.pageCache[this.pageIndex] = null;\\r\\n      var waitOn = [];\\r\\n      Object.keys(this.intentStates).forEach(function (intent) {\\r\\n        if (intent === 'oplist') {\\r\\n          return;\\r\\n        }\\r\\n        var intentState = this.intentStates[intent];\\r\\n        intentState.renderTasks.forEach(function (renderTask) {\\r\\n          var renderCompleted = renderTask.capability.promise.catch(function () {});\\r\\n          waitOn.push(renderCompleted);\\r\\n          renderTask.cancel();\\r\\n        });\\r\\n      }, this);\\r\\n      this.objs.clear();\\r\\n      this.annotationsPromise = null;\\r\\n      this.pendingCleanup = false;\\r\\n      return Promise.all(waitOn);\\r\\n    },\\r\\n    destroy: function destroy() {\\r\\n      (0, _util.deprecated)('page destroy method, use cleanup() instead');\\r\\n      this.cleanup();\\r\\n    },\\r\\n\\r\\n    cleanup: function PDFPageProxy_cleanup() {\\r\\n      this.pendingCleanup = true;\\r\\n      this._tryCleanup();\\r\\n    },\\r\\n    _tryCleanup: function PDFPageProxy_tryCleanup() {\\r\\n      if (!this.pendingCleanup || Object.keys(this.intentStates).some(function (intent) {\\r\\n        var intentState = this.intentStates[intent];\\r\\n        return intentState.renderTasks.length !== 0 || intentState.receivingOperatorList;\\r\\n      }, this)) {\\r\\n        return;\\r\\n      }\\r\\n      Object.keys(this.intentStates).forEach(function (intent) {\\r\\n        delete this.intentStates[intent];\\r\\n      }, this);\\r\\n      this.objs.clear();\\r\\n      this.annotationsPromise = null;\\r\\n      this.pendingCleanup = false;\\r\\n    },\\r\\n    _startRenderPage: function PDFPageProxy_startRenderPage(transparency, intent) {\\r\\n      var intentState = this.intentStates[intent];\\r\\n      if (intentState.displayReadyCapability) {\\r\\n        intentState.displayReadyCapability.resolve(transparency);\\r\\n      }\\r\\n    },\\r\\n    _renderPageChunk: function PDFPageProxy_renderPageChunk(operatorListChun\";a.a+=\"k, intent) {\\r\\n      var intentState = this.intentStates[intent];\\r\\n      var i, ii;\\r\\n      for (i = 0, ii = operatorListChunk.length; i < ii; i++) {\\r\\n        intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\\r\\n        intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\\r\\n      }\\r\\n      intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\\r\\n      for (i = 0; i < intentState.renderTasks.length; i++) {\\r\\n        intentState.renderTasks[i].operatorListChanged();\\r\\n      }\\r\\n      if (operatorListChunk.lastChunk) {\\r\\n        intentState.receivingOperatorList = false;\\r\\n        this._tryCleanup();\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return PDFPageProxy;\\r\\n}();\\r\\n\\r\\nvar LoopbackPort = function () {\\r\\n  function LoopbackPort(defer) {\\r\\n    _classCallCheck(this, LoopbackPort);\\r\\n\\r\\n    this._listeners = [];\\r\\n    this._defer = defer;\\r\\n    this._deferred = Promise.resolve(undefined);\\r\\n  }\\r\\n\\r\\n  _createClass(LoopbackPort, [{\\r\\n    key: 'postMessage',\\r\\n    value: function postMessage(obj, transfers) {\\r\\n      var _this5 = this;\\r\\n\\r\\n      function cloneValue(value) {\\r\\n        if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {\\r\\n          return value;\\r\\n        }\\r\\n        if (cloned.has(value)) {\\r\\n          return cloned.get(value);\\r\\n        }\\r\\n        var result;\\r\\n        var buffer;\\r\\n        if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\\r\\n          var transferable = transfers && transfers.indexOf(buffer) >= 0;\\r\\n          if (value === buffer) {\\r\\n            result = value;\\r\\n          } else if (transferable) {\\r\\n            result = new value.constructor(buffer, value.byteOffset, value.byteLength);\\r\\n          } else {\\r\\n            result = new value.constructor(value);\\r\\n          }\\r\\n          cloned.set(value, result);\\r\\n          return result;\\r\\n        }\\r\\n        result = Array.isArray(value) ? [] : {};\\r\\n        cloned.set(value, result);\\r\\n        for (var i in value) {\\r\\n          var desc,\\r\\n              p = value;\\r\\n          while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\\r\\n            p = Object.getPrototypeOf(p);\\r\\n          }\\r\\n          if (typeof desc.value === 'undefined' || typeof desc.value === 'function') {\\r\\n            continue;\\r\\n          }\\r\\n          result[i] = cloneValue(desc.value);\\r\\n        }\\r\\n        return result;\\r\\n      }\\r\\n      if (!this._defer) {\\r\\n        this._listeners.forEach(function (listener) {\\r\\n          listener.call(this, { data: obj });\\r\\n        }, this);\\r\\n        return;\\r\\n      }\\r\\n      var cloned = new WeakMap();\\r\\n      var e = { data: cloneValue(obj) };\\r\\n      this._deferred.then(function () {\\r\\n        _this5._listeners.forEach(function (listener) {\\r\\n          listener.call(this, e);\\r\\n        }, _this5);\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'addEventListener',\\r\\n    value: function addEventListener(name, listener) {\\r\\n      this._listeners.push(listener);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'removeEventListener',\\r\\n    value: function removeEventListener(name, listener) {\\r\\n      var i = this._listeners.indexOf(listener);\\r\\n      this._listeners.splice(i, 1);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'terminate',\\r\\n    value: function terminate() {\\r\\n      this._listeners = [];\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return LoopbackPort;\\r\\n}();\\r\\n\\r\\nvar PDFWorker = function PDFWorkerClosure() {\\r\\n  var nextFakeWorkerId = 0;\\r\\n  function getWorkerSrc() {\\r\\n    if (typeof workerSrc !== 'undefined') {\\r\\n      return workerSrc;\\r\\n    }\\r\\n    if ((0, _dom_utils.getDefaultSetting)('workerSrc')) {\\r\\n      return (0, _dom_utils.getDefaultSetting)('workerSrc');\\r\\n    }\\r\\n    if (pdfjsFilePath) {\\r\\n      return pdfjsFilePath.replace(/(\\\\.(?:min\\\\.)?js)(\\\\?.*)?$/i, '.worker$1$2');\\r\\n    }\\r\\n    throw new Error('No PDFJS.workerSrc specified');\\r\\n  }\\r\\n  var fakeWorkerFilesLoadedCapability = void 0;\\r\\n  function setupFakeWorkerGlobal() {\\r\\n    var WorkerMessageHandler;\\r\\n    if (fakeWorkerFilesLoadedCapability) {\\r\\n      return fakeWorkerFilesLoadedCapability.promise;\\r\\n    }\\r\\n    fakeWorkerFilesLoadedCapability = (0, _util.createPromiseCapability)();\\r\\n    var pdfjsCoreWorker = __w_pdfjs_require__(140);\\r\\n    WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\\r\\n    fakeWorkerFilesLoadedCapability.resolve(WorkerMessageHandler);\\r\\n    return fakeWorkerFilesLoadedCapability.promise;\\r\\n  }\\r\\n  function createCDNWrapper(url) {\\r\\n    var wrapper = 'importScripts(\\\\'' + url + '\\\\');';\\r\\n    return URL.createObjectURL(new Blob([wrapper]));\\r\\n  }\\r\\n  var pdfWorkerPorts = new WeakMap();\\r\\n  function PDFWorker(name, port) {\\r\\n    if (port && pdfWorkerPorts.has(port)) {\\r\\n      throw new Error('Cannot use more than one PDFWorker per port');\\r\\n    }\\r\\n    this.name = name;\\r\\n    this.destroyed = false;\\r\\n    this.postMessageTransfers = true;\\r\\n    this._readyCapability = (0, _util.createPromiseCapability)();\\r\\n    this._port = null;\\r\\n    this._webWorker = null;\\r\\n    this._messageHandler = null;\\r\\n    if (port) {\\r\\n      pdfWorkerPorts.set(port, this);\\r\\n      this._initializeFromPort(port);\\r\\n      return;\\r\\n    }\\r\\n    this._initialize();\\r\\n  }\\r\\n  PDFWorker.prototype = {\\r\\n    get promise() {\\r\\n      return this._readyCapability.promise;\\r\\n    },\\r\\n    get port() {\\r\\n      return this._port;\\r\\n    },\\r\\n    get messageHandler() {\\r\\n      return this._messageHandler;\\r\\n    },\\r\\n    _initializeFromPort: function PDFWorker_initializeFromPort(port) {\\r\\n      this._port = port;\\r\\n      this._messageHandler = new _util.MessageHandler('main', 'worker', port);\\r\\n      this._messageHandler.on('ready', function () {});\\r\\n      this._readyCapability.resolve();\\r\\n    },\\r\\n    _initialize: function PDFWorker_initialize() {\\r\\n      this._setupFakeWorker();\\r\\n    },\\r\\n    _setupFakeWorker: function PDFWorker_setupFakeWorker() {\\r\\n      var _this6 = this;\\r\\n\\r\\n      if (!isWorkerDisabled && !(0, _dom_utils.getDefaultSetting)('disableWorker')) {\\r\\n        (0, _util.warn)('Setting up fake worker.');\\r\\n        isWorkerDisabled = true;\\r\\n      }\\r\\n      setupFakeWorkerGlobal().then(function (WorkerMessageHandler) {\\r\\n        if (_this6.destroyed) {\\r\\n          _this6._readyCapability.reject(new Error('Worker was destroyed'));\\r\\n          return;\\r\\n        }\\r\\n        var isTypedArraysPresent = Uint8Array !== Float32Array;\\r\\n        var port = new LoopbackPort(isTypedArraysPresent);\\r\\n        _this6._port = port;\\r\\n        var id = 'fake' + nextFakeWorkerId++;\\r\\n        var workerHandler = new _util.MessageHandler(id + '_worker', id, port);\\r\\n        WorkerMessageHandler.setup(workerHandler, port);\\r\\n        var messageHandler = new _util.MessageHandler(id, id + '_worker', port);\\r\\n        _this6._messageHandler = messageHandler;\\r\\n        _this6._readyCapability.resolve();\\r\\n      });\\r\\n    },\\r\\n    destroy: function PDFWorker_destroy() {\\r\\n      this.destroyed = true;\\r\\n      if (this._webWorker) {\\r\\n        this._webWorker.terminate();\\r\\n        this._webWorker = null;\\r\\n      }\\r\\n      pdfWorkerPorts.delete(this._port);\\r\\n      this._port = null;\\r\\n      if (this._messageHandler) {\\r\\n        this._messageHandler.destroy();\\r\\n        this._messageHandler = null;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  PDFWorker.fromPort = function (port) {\\r\\n    if (pdfWorkerPorts.has(port)) {\\r\\n      return pdfWorkerPorts.get(port);\\r\\n    }\\r\\n    return new PDFWorker(null, port);\\r\\n  };\\r\\n  return PDFWorker;\\r\\n}();\\r\\nvar WorkerTransport = function WorkerTransportClosure() {\\r\\n  function WorkerTransport(messageHandler, loadingTask, networkStream, CMapReaderFactory) {\\r\\n    this.messageHandler = messageHandler;\\r\\n    this.loadingTask = loadingTask;\\r\\n    this.commonObjs = new PDFObjects();\\r\\n    this.fontLoader = new _font_loader.FontLoader(loadingTask.docId);\\r\\n    this.CMapReaderFactory = new CMapReaderFactory({\\r\\n      baseUrl: (0, _dom_utils.getDefaultSetting)('cMapUrl'),\\r\\n      isCompressed: (0, _dom_utils.getDefaultSetting)('cMapPacked')\\r\\n    });\\r\\n    this.destroyed = false;\\r\\n    this.destroyCapability = null;\\r\\n    this._passwordCapability = null;\\r\\n    this._networkStream = networkStream;\\r\\n    this._fullReader = null;\\r\\n    this._lastProgress = null;\\r\\n    this.pageCache = [];\\r\\n    this.pagePromises = [];\\r\\n    this.downloadInfoCapability = (0, _util.createPromiseCapability)();\\r\\n    this.setupMessageHandler();\\r\\n  }\\r\\n  WorkerTransport.prototype = {\\r\\n    destroy: function WorkerTransport_destroy() {\\r\\n      var _this7 = this;\\r\\n\\r\\n      if (this.destroyCapability) {\\r\\n        return this.destroyCapability.promise;\\r\\n      }\\r\\n      this.destroyed = true;\\r\\n      this.destroyCapability = (0, _util.createPromiseCapability)();\\r\\n      if (this._passwordCapability) {\\r\\n        this._passwordCapability.reject(new Error('Worker was destroyed during onPassword callback'));\\r\\n      }\\r\\n      var waitOn = [];\\r\\n      this.pageCache.forEach(function (page) {\\r\\n        if (page) {\\r\\n          waitOn.push(page._destroy());\\r\\n        }\\r\\n      });\\r\\n      this.pageCache = [];\\r\\n      this.pagePromises = [];\\r\\n      var terminated = this.messageHandler.sendWithPromise('Terminate', null);\\r\\n      waitOn.push(terminated);\\r\\n      Promise.all(waitOn).then(function () {\\r\\n        _this7.fontLoader.clear();\\r\\n        if (_this7._networkStream) {\\r\\n          _this7._networkStream.cancelAllRequests();\\r\\n        }\\r\\n        if (_this7.messageHandler) {\\r\\n          _this7.messageHandler.destroy();\\r\\n          _this7.messageHandler = null;\\r\\n        }\\r\\n        _this7.destroyCapability.resolve();\\r\\n      }, this.destroyCapability.reject);\\r\\n      return this.destroyCapability.promise;\\r\\n    },\\r\\n    setupMessageHandler: function WorkerTransport_setupMessageHandler() {\\r\\n      var messageHandler = this.messageHandler;\\r\\n      var loadingTask = this.loadingTask;\\r\\n      messageHandler.on('GetReader', function (data, sink) {\\r\\n        var _this8 = this;\\r\\n\\r\\n        (0, _util.assert)(this._networkStream);\\r\\n        this._fullReader = this._networkStream.getFullReader();\\r\\n        this._fullReader.onProgress = function (evt) {\\r\\n          _this8._lastProgress = {\\r\\n            loaded: evt.loaded,\\r\\n            total: evt.total\\r\\n          };\\r\\n        };\\r\\n        sink.onPull = function () {\\r\\n          _this8._fullReader.read().then(function (_ref2) {\\r\\n            var value = _ref2.value,\\r\\n                done = _ref2.done;\\r\\n\\r\\n            if (done) {\\r\\n              sink.close();\\r\\n              return;\\r\\n            }\\r\\n            (0, _util.assert)((0, _util.isArrayBuffer)(value));\\r\\n            sink.enqueue(new Uint8Array(value), 1, [value]);\\r\\n          }).catch(function (reason) {\\r\\n            sink.error(reason);\\r\\n          });\\r\\n        };\\r\\n        sink.onCancel = function (reason) {\\r\\n          _this8._fullReader.cancel(reason);\\r\\n        };\\r\\n      }, this);\\r\\n      messageHandler.on('ReaderHeadersReady', function (data) {\\r\\n        var _this9 = this;\\r\\n\\r\\n        var headersCapability = (0, _util.createPromiseCapability)();\\r\\n        var fullReader = this._fullReader;\\r\\n        fullReader.headersReady.then(function () {\\r\\n          if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\\r\\n            if (_this9._lastProgress) {\\r\\n              var _loadingTask = _this9.loadingTask;\\r\\n              if (_loadingTask.onProgress) {\\r\\n                _loadingTask.onProgress(_this9._lastProgress);\\r\\n              }\\r\\n            }\\r\\n            fullReader.onProgress = function (evt) {\\r\\n              var loadingTask = _this9.loadingTask;\\r\\n              if (loadingTask.onProgress) {\\r\\n                loadingTask.onProgress({\\r\\n                  loaded: evt.loaded,\\r\\n                  total: evt.total\\r\\n                });\\r\\n              }\\r\\n            };\\r\\n          }\\r\\n          headersCapability.resolve({\\r\\n            isStreamingSupported: fullReader.isStreamingSupported,\\r\\n            isRangeSupported: fullReader.isRangeSupported,\\r\\n            contentLength: fullReader.contentLength\\r\\n          });\\r\\n        }, headersCapability.reject);\\r\\n        return headersCapability.promise;\\r\\n      }, this);\\r\\n      messageHandler.on('GetRangeReader', function (data, sink) {\\r\\n        (0, _util.assert)(this._networkStream);\\r\\n        var _rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\\r\\n        sink.onPull = function () {\\r\\n          _rangeReader.read().then(function (_ref3) {\\r\\n            var value = _ref3.value,\\r\\n                done = _ref3.done;\\r\\n\\r\\n            if (done) {\\r\\n              sink.close();\\r\\n              return;\\r\\n            }\\r\\n            (0, _util.assert)((0, _util.isArrayBuffer)(value));\\r\\n            sink.enqueue(new Uint8Array(value), 1, [value]);\\r\\n          }).catch(function (reason) {\\r\\n            sink.error(reason);\\r\\n          });\\r\\n        };\\r\\n        sink.onCancel = function (reason) {\\r\\n          _rangeReader.cancel(reason);\\r\\n        };\\r\\n      }, this);\\r\\n      messageHandler.on('GetDoc', function transportDoc(data) {\\r\\n        var pdfInfo = data.pdfInfo;\\r\\n        this.numPages = data.pdfInfo.numPages;\\r\\n        var loadingTask = this.loadingTask;\\r\\n        var pdfDocument = new PDFDocumentProxy(pdfInfo, this, loadingTask);\\r\\n        this.pdfDocument = pdfDocument;\\r\\n        loadingTask._capability.resolve(pdfDocument);\\r\\n      }, this);\\r\\n      messageHandler.on('PasswordRequest', function transportPasswordRequest(exception) {\\r\\n        var _this10 = this;\\r\\n\\r\\n        this._passwordCapability = (0, _util.createPromiseCapability)();\\r\\n        if (loadingTask.onPassword) {\\r\\n          var updatePassword = function updatePassword(password) {\\r\\n            _this10._passwordCapability.resolve({ password: password });\\r\\n          };\\r\\n          loadingTask.onPassword(updatePassword, exception.code);\\r\\n        } else {\\r\\n          this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\\r\\n        }\\r\\n        return this._passwordCapability.promise;\\r\\n      }, this);\\r\\n      messageHandler.on('PasswordException', function transportPasswordException(exception) {\\r\\n        loadingTask._capability.reject(new _util.PasswordException(exception.message, exception.code));\\r\\n      }, this);\\r\\n      messageHandler.on('InvalidPDF', function transportInvalidPDF(exception) {\\r\\n        this.loadingTask._capability.reject(new _util.InvalidPDFException(exception.message));\\r\\n      }, this);\\r\\n      messageHandler.on('MissingPDF', function transportMissingPDF(exception) {\\r\\n        this.loadingTask._capability.reject(new _util.MissingPDFException(exception.message));\\r\\n      }, this);\\r\\n      messageHandler.on('UnexpectedResponse', function transportUnexpectedResponse(exception) {\\r\\n        this.loadingTask._capability.reject(new _util.UnexpectedResponseException(exception.message, exception.status));\\r\\n      }, this);\\r\\n      messageHandler.on('UnknownError', function transportUnknownError(exception) {\\r\\n        this.loadingTask._capability.reject(new _util.UnknownErrorException(exception.message, exception.details));\\r\\n      }, this);\\r\\n      messageHandler.on('DataLoaded', function transportPage(data) {\\r\\n        this.downloadInfoCapability.resolve(data);\\r\\n      }, this);\\r\\n      messageHandler.on('PDFManagerReady', function transportPage(data) {}, this);\\r\\n      messageHandler.on('StartRenderPage', function transportRender(data) {\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var page = this.pageCache[data.pageIndex];\\r\\n        page.stats.timeEnd('Page Request');\\r\\n        page._startRenderPage(data.transparency, data.intent);\\r\\n      }, this);\\r\\n      messageHandler.on('RenderPageChunk', function transportRender(data) {\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var page = this.pageCache[data.pageIndex];\\r\\n        page._renderPageChunk(data.operatorList, data.intent);\\r\\n      }, this);\\r\\n      messageHandler.on('commonobj', function transportObj(data) {\\r\\n        var _this11 = this;\\r\\n\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var id = data[0];\\r\\n        var type = data[1];\\r\\n        if (this.commonObjs.hasData(id)) {\\r\\n          return;\\r\\n        }\\r\\n        switch (type) {\\r\\n          case 'Font':\\r\\n            var exportedData = data[2];\\r\\n            if ('error' in exportedData) {\\r\\n              var exportedError = exportedData.error;\\r\\n              (0, _util.warn)('Error during font loading: ' + exportedError);\\r\\n              this.commonObjs.resolve(id, exportedError);\\r\\n              break;\\r\\n            }\\r\\n            var fontRegistry = null;\\r\\n            if ((0, _dom_utils.getDefaultSetting)('pdfBug') && _global_scope2.default.FontInspector && _global_scope2.default['FontInspector'].enabled)\";a.a+=\" {\\r\\n              fontRegistry = {\\r\\n                registerFont: function registerFont(font, url) {\\r\\n                  _global_scope2.default['FontInspector'].fontAdded(font, url);\\r\\n                }\\r\\n              };\\r\\n            }\\r\\n            var font = new _font_loader.FontFaceObject(exportedData, {\\r\\n              isEvalSupported: (0, _dom_utils.getDefaultSetting)('isEvalSupported'),\\r\\n              disableFontFace: (0, _dom_utils.getDefaultSetting)('disableFontFace'),\\r\\n              fontRegistry: fontRegistry\\r\\n            });\\r\\n            var fontReady = function fontReady(fontObjs) {\\r\\n              _this11.commonObjs.resolve(id, font);\\r\\n            };\\r\\n            this.fontLoader.bind([font], fontReady);\\r\\n            break;\\r\\n          case 'FontPath':\\r\\n            this.commonObjs.resolve(id, data[2]);\\r\\n            break;\\r\\n          default:\\r\\n            throw new Error('Got unknown common object type ' + type);\\r\\n        }\\r\\n      }, this);\\r\\n      messageHandler.on('obj', function transportObj(data) {\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var id = data[0];\\r\\n        var pageIndex = data[1];\\r\\n        var type = data[2];\\r\\n        var pageProxy = this.pageCache[pageIndex];\\r\\n        var imageData;\\r\\n        if (pageProxy.objs.hasData(id)) {\\r\\n          return;\\r\\n        }\\r\\n        switch (type) {\\r\\n          case 'JpegStream':\\r\\n            imageData = data[3];\\r\\n            (0, _util.loadJpegStream)(id, imageData, pageProxy.objs);\\r\\n            break;\\r\\n          case 'Image':\\r\\n            imageData = data[3];\\r\\n            pageProxy.objs.resolve(id, imageData);\\r\\n            var MAX_IMAGE_SIZE_TO_STORE = 8000000;\\r\\n            if (imageData && 'data' in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\\r\\n              pageProxy.cleanupAfterRender = true;\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            throw new Error('Got unknown object type ' + type);\\r\\n        }\\r\\n      }, this);\\r\\n      messageHandler.on('DocProgress', function transportDocProgress(data) {\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var loadingTask = this.loadingTask;\\r\\n        if (loadingTask.onProgress) {\\r\\n          loadingTask.onProgress({\\r\\n            loaded: data.loaded,\\r\\n            total: data.total\\r\\n          });\\r\\n        }\\r\\n      }, this);\\r\\n      messageHandler.on('PageError', function transportError(data) {\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var page = this.pageCache[data.pageNum - 1];\\r\\n        var intentState = page.intentStates[data.intent];\\r\\n        if (intentState.displayReadyCapability) {\\r\\n          intentState.displayReadyCapability.reject(data.error);\\r\\n        } else {\\r\\n          throw new Error(data.error);\\r\\n        }\\r\\n        if (intentState.operatorList) {\\r\\n          intentState.operatorList.lastChunk = true;\\r\\n          for (var i = 0; i < intentState.renderTasks.length; i++) {\\r\\n            intentState.renderTasks[i].operatorListChanged();\\r\\n          }\\r\\n        }\\r\\n      }, this);\\r\\n      messageHandler.on('UnsupportedFeature', function transportUnsupportedFeature(data) {\\r\\n        if (this.destroyed) {\\r\\n          return;\\r\\n        }\\r\\n        var featureId = data.featureId;\\r\\n        var loadingTask = this.loadingTask;\\r\\n        if (loadingTask.onUnsupportedFeature) {\\r\\n          loadingTask.onUnsupportedFeature(featureId);\\r\\n        }\\r\\n        _UnsupportedManager.notify(featureId);\\r\\n      }, this);\\r\\n      messageHandler.on('JpegDecode', function (data) {\\r\\n        if (this.destroyed) {\\r\\n          return Promise.reject(new Error('Worker was destroyed'));\\r\\n        }\\r\\n        if (typeof document === 'undefined') {\\r\\n          return Promise.reject(new Error('\\\"document\\\" is not defined.'));\\r\\n        }\\r\\n        var imageUrl = data[0];\\r\\n        var components = data[1];\\r\\n        if (components !== 3 && components !== 1) {\\r\\n          return Promise.reject(new Error('Only 3 components or 1 component can be returned'));\\r\\n        }\\r\\n        return new Promise(function (resolve, reject) {\\r\\n          var img = new Image();\\r\\n          img.onload = function () {\\r\\n            var width = img.width;\\r\\n            var height = img.height;\\r\\n            var size = width * height;\\r\\n            var rgbaLength = size * 4;\\r\\n            var buf = new Uint8Array(size * components);\\r\\n            var tmpCanvas = document.createElement('canvas');\\r\\n            tmpCanvas.width = width;\\r\\n            tmpCanvas.height = height;\\r\\n            var tmpCtx = tmpCanvas.getContext('2d');\\r\\n            tmpCtx.drawImage(img, 0, 0);\\r\\n            var data = tmpCtx.getImageData(0, 0, width, height).data;\\r\\n            var i, j;\\r\\n            if (components === 3) {\\r\\n              for (i = 0, j = 0; i < rgbaLength; i += 4, j += 3) {\\r\\n                buf[j] = data[i];\\r\\n                buf[j + 1] = data[i + 1];\\r\\n                buf[j + 2] = data[i + 2];\\r\\n              }\\r\\n            } else if (components === 1) {\\r\\n              for (i = 0, j = 0; i < rgbaLength; i += 4, j++) {\\r\\n                buf[j] = data[i];\\r\\n              }\\r\\n            }\\r\\n            resolve({\\r\\n              data: buf,\\r\\n              width: width,\\r\\n              height: height\\r\\n            });\\r\\n          };\\r\\n          img.onerror = function () {\\r\\n            reject(new Error('JpegDecode failed to load image'));\\r\\n          };\\r\\n          img.src = imageUrl;\\r\\n        });\\r\\n      }, this);\\r\\n      messageHandler.on('FetchBuiltInCMap', function (data) {\\r\\n        if (this.destroyed) {\\r\\n          return Promise.reject(new Error('Worker was destroyed'));\\r\\n        }\\r\\n        return this.CMapReaderFactory.fetch({ name: data.name });\\r\\n      }, this);\\r\\n    },\\r\\n    getData: function WorkerTransport_getData() {\\r\\n      return this.messageHandler.sendWithPromise('GetData', null);\\r\\n    },\\r\\n    getPage: function WorkerTransport_getPage(pageNumber, capability) {\\r\\n      var _this12 = this;\\r\\n\\r\\n      if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this.numPages) {\\r\\n        return Promise.reject(new Error('Invalid page request'));\\r\\n      }\\r\\n      var pageIndex = pageNumber - 1;\\r\\n      if (pageIndex in this.pagePromises) {\\r\\n        return this.pagePromises[pageIndex];\\r\\n      }\\r\\n      var promise = this.messageHandler.sendWithPromise('GetPage', { pageIndex: pageIndex }).then(function (pageInfo) {\\r\\n        if (_this12.destroyed) {\\r\\n          throw new Error('Transport destroyed');\\r\\n        }\\r\\n        var page = new PDFPageProxy(pageIndex, pageInfo, _this12);\\r\\n        _this12.pageCache[pageIndex] = page;\\r\\n        return page;\\r\\n      });\\r\\n      this.pagePromises[pageIndex] = promise;\\r\\n      return promise;\\r\\n    },\\r\\n    getPageIndex: function WorkerTransport_getPageIndexByRef(ref) {\\r\\n      return this.messageHandler.sendWithPromise('GetPageIndex', { ref: ref }).catch(function (reason) {\\r\\n        return Promise.reject(new Error(reason));\\r\\n      });\\r\\n    },\\r\\n    getAnnotations: function WorkerTransport_getAnnotations(pageIndex, intent) {\\r\\n      return this.messageHandler.sendWithPromise('GetAnnotations', {\\r\\n        pageIndex: pageIndex,\\r\\n        intent: intent\\r\\n      });\\r\\n    },\\r\\n    getDestinations: function WorkerTransport_getDestinations() {\\r\\n      return this.messageHandler.sendWithPromise('GetDestinations', null);\\r\\n    },\\r\\n    getDestination: function WorkerTransport_getDestination(id) {\\r\\n      return this.messageHandler.sendWithPromise('GetDestination', { id: id });\\r\\n    },\\r\\n    getPageLabels: function WorkerTransport_getPageLabels() {\\r\\n      return this.messageHandler.sendWithPromise('GetPageLabels', null);\\r\\n    },\\r\\n    getPageMode: function getPageMode() {\\r\\n      return this.messageHandler.sendWithPromise('GetPageMode', null);\\r\\n    },\\r\\n\\r\\n    getAttachments: function WorkerTransport_getAttachments() {\\r\\n      return this.messageHandler.sendWithPromise('GetAttachments', null);\\r\\n    },\\r\\n    getJavaScript: function WorkerTransport_getJavaScript() {\\r\\n      return this.messageHandler.sendWithPromise('GetJavaScript', null);\\r\\n    },\\r\\n    getOutline: function WorkerTransport_getOutline() {\\r\\n      return this.messageHandler.sendWithPromise('GetOutline', null);\\r\\n    },\\r\\n    getMetadata: function WorkerTransport_getMetadata() {\\r\\n      return this.messageHandler.sendWithPromise('GetMetadata', null).then(function transportMetadata(results) {\\r\\n        return {\\r\\n          info: results[0],\\r\\n          metadata: results[1] ? new _metadata.Metadata(results[1]) : null\\r\\n        };\\r\\n      });\\r\\n    },\\r\\n    getStats: function WorkerTransport_getStats() {\\r\\n      return this.messageHandler.sendWithPromise('GetStats', null);\\r\\n    },\\r\\n    startCleanup: function WorkerTransport_startCleanup() {\\r\\n      var _this13 = this;\\r\\n\\r\\n      this.messageHandler.sendWithPromise('Cleanup', null).then(function () {\\r\\n        for (var i = 0, ii = _this13.pageCache.length; i < ii; i++) {\\r\\n          var page = _this13.pageCache[i];\\r\\n          if (page) {\\r\\n            page.cleanup();\\r\\n          }\\r\\n        }\\r\\n        _this13.commonObjs.clear();\\r\\n        _this13.fontLoader.clear();\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n  return WorkerTransport;\\r\\n}();\\r\\nvar PDFObjects = function PDFObjectsClosure() {\\r\\n  function PDFObjects() {\\r\\n    this.objs = Object.create(null);\\r\\n  }\\r\\n  PDFObjects.prototype = {\\r\\n    ensureObj: function PDFObjects_ensureObj(objId) {\\r\\n      if (this.objs[objId]) {\\r\\n        return this.objs[objId];\\r\\n      }\\r\\n      var obj = {\\r\\n        capability: (0, _util.createPromiseCapability)(),\\r\\n        data: null,\\r\\n        resolved: false\\r\\n      };\\r\\n      this.objs[objId] = obj;\\r\\n      return obj;\\r\\n    },\\r\\n    get: function PDFObjects_get(objId, callback) {\\r\\n      if (callback) {\\r\\n        this.ensureObj(objId).capability.promise.then(callback);\\r\\n        return null;\\r\\n      }\\r\\n      var obj = this.objs[objId];\\r\\n      if (!obj || !obj.resolved) {\\r\\n        throw new Error('Requesting object that isn\\\\'t resolved yet ' + objId);\\r\\n      }\\r\\n      return obj.data;\\r\\n    },\\r\\n    resolve: function PDFObjects_resolve(objId, data) {\\r\\n      var obj = this.ensureObj(objId);\\r\\n      obj.resolved = true;\\r\\n      obj.data = data;\\r\\n      obj.capability.resolve(data);\\r\\n    },\\r\\n    isResolved: function PDFObjects_isResolved(objId) {\\r\\n      var objs = this.objs;\\r\\n      if (!objs[objId]) {\\r\\n        return false;\\r\\n      }\\r\\n      return objs[objId].resolved;\\r\\n    },\\r\\n    hasData: function PDFObjects_hasData(objId) {\\r\\n      return this.isResolved(objId);\\r\\n    },\\r\\n    getData: function PDFObjects_getData(objId) {\\r\\n      var objs = this.objs;\\r\\n      if (!objs[objId] || !objs[objId].resolved) {\\r\\n        return null;\\r\\n      }\\r\\n      return objs[objId].data;\\r\\n    },\\r\\n    clear: function PDFObjects_clear() {\\r\\n      this.objs = Object.create(null);\\r\\n    }\\r\\n  };\\r\\n  return PDFObjects;\\r\\n}();\\r\\nvar RenderTask = function RenderTaskClosure() {\\r\\n  function RenderTask(internalRenderTask) {\\r\\n    this._internalRenderTask = internalRenderTask;\\r\\n    this.onContinue = null;\\r\\n  }\\r\\n  RenderTask.prototype = {\\r\\n    get promise() {\\r\\n      return this._internalRenderTask.capability.promise;\\r\\n    },\\r\\n    cancel: function RenderTask_cancel() {\\r\\n      this._internalRenderTask.cancel();\\r\\n    },\\r\\n    then: function RenderTask_then(onFulfilled, onRejected) {\\r\\n      return this.promise.then.apply(this.promise, arguments);\\r\\n    }\\r\\n  };\\r\\n  return RenderTask;\\r\\n}();\\r\\nvar InternalRenderTask = function InternalRenderTaskClosure() {\\r\\n  var canvasInRendering = new WeakMap();\\r\\n  function InternalRenderTask(callback, params, objs, commonObjs, operatorList, pageNumber, canvasFactory) {\\r\\n    this.callback = callback;\\r\\n    this.params = params;\\r\\n    this.objs = objs;\\r\\n    this.commonObjs = commonObjs;\\r\\n    this.operatorListIdx = null;\\r\\n    this.operatorList = operatorList;\\r\\n    this.pageNumber = pageNumber;\\r\\n    this.canvasFactory = canvasFactory;\\r\\n    this.running = false;\\r\\n    this.graphicsReadyCallback = null;\\r\\n    this.graphicsReady = false;\\r\\n    this.useRequestAnimationFrame = false;\\r\\n    this.cancelled = false;\\r\\n    this.capability = (0, _util.createPromiseCapability)();\\r\\n    this.task = new RenderTask(this);\\r\\n    this._continueBound = this._continue.bind(this);\\r\\n    this._scheduleNextBound = this._scheduleNext.bind(this);\\r\\n    this._nextBound = this._next.bind(this);\\r\\n    this._canvas = params.canvasContext.canvas;\\r\\n  }\\r\\n  InternalRenderTask.prototype = {\\r\\n    initializeGraphics: function InternalRenderTask_initializeGraphics(transparency) {\\r\\n      if (this._canvas) {\\r\\n        if (canvasInRendering.has(this._canvas)) {\\r\\n          throw new Error('Cannot use the same canvas during multiple render() operations. ' + 'Use different canvas or ensure previous operations were ' + 'cancelled or completed.');\\r\\n        }\\r\\n        canvasInRendering.set(this._canvas, this);\\r\\n      }\\r\\n      if (this.cancelled) {\\r\\n        return;\\r\\n      }\\r\\n      if ((0, _dom_utils.getDefaultSetting)('pdfBug') && _global_scope2.default.StepperManager && _global_scope2.default.StepperManager.enabled) {\\r\\n        this.stepper = _global_scope2.default.StepperManager.create(this.pageNumber - 1);\\r\\n        this.stepper.init(this.operatorList);\\r\\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\\r\\n      }\\r\\n      var params = this.params;\\r\\n      this.gfx = new _canvas.CanvasGraphics(params.canvasContext, this.commonObjs, this.objs, this.canvasFactory, params.imageLayer);\\r\\n      this.gfx.beginDrawing({\\r\\n        transform: params.transform,\\r\\n        viewport: params.viewport,\\r\\n        transparency: transparency,\\r\\n        background: params.background\\r\\n      });\\r\\n      this.operatorListIdx = 0;\\r\\n      this.graphicsReady = true;\\r\\n      if (this.graphicsReadyCallback) {\\r\\n        this.graphicsReadyCallback();\\r\\n      }\\r\\n    },\\r\\n    cancel: function InternalRenderTask_cancel() {\\r\\n      this.running = false;\\r\\n      this.cancelled = true;\\r\\n      if (this._canvas) {\\r\\n        canvasInRendering.delete(this._canvas);\\r\\n      }\\r\\n      if ((0, _dom_utils.getDefaultSetting)('pdfjsNext')) {\\r\\n        this.callback(new _dom_utils.RenderingCancelledException('Rendering cancelled, page ' + this.pageNumber, 'canvas'));\\r\\n      } else {\\r\\n        this.callback('cancelled');\\r\\n      }\\r\\n    },\\r\\n    operatorListChanged: function InternalRenderTask_operatorListChanged() {\\r\\n      if (!this.graphicsReady) {\\r\\n        if (!this.graphicsReadyCallback) {\\r\\n          this.graphicsReadyCallback = this._continueBound;\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n      if (this.stepper) {\\r\\n        this.stepper.updateOperatorList(this.operatorList);\\r\\n      }\\r\\n      if (this.running) {\\r\\n        return;\\r\\n      }\\r\\n      this._continue();\\r\\n    },\\r\\n    _continue: function InternalRenderTask__continue() {\\r\\n      this.running = true;\\r\\n      if (this.cancelled) {\\r\\n        return;\\r\\n      }\\r\\n      if (this.task.onContinue) {\\r\\n        this.task.onContinue(this._scheduleNextBound);\\r\\n      } else {\\r\\n        this._scheduleNext();\\r\\n      }\\r\\n    },\\r\\n    _scheduleNext: function InternalRenderTask__scheduleNext() {\\r\\n      if (this.useRequestAnimationFrame && typeof window !== 'undefined') {\\r\\n        window.requestAnimationFrame(this._nextBound);\\r\\n      } else {\\r\\n        Promise.resolve(undefined).then(this._nextBound);\\r\\n      }\\r\\n    },\\r\\n    _next: function InternalRenderTask__next() {\\r\\n      if (this.cancelled) {\\r\\n        return;\\r\\n      }\\r\\n      this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\\r\\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\\r\\n        this.running = false;\\r\\n        if (this.operatorList.lastChunk) {\\r\\n          this.gfx.endDrawing();\\r\\n          if (this._canvas) {\\r\\n            canvasInRendering.delete(this._canvas);\\r\\n          }\\r\\n          this.callback();\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return InternalRenderTask;\\r\\n}();\\r\\nvar _UnsupportedManager = function UnsupportedManagerClosure() {\\r\\n  var listeners = [];\\r\\n  return {\\r\\n    listen: function listen(cb) {\\r\\n      (0, _util.deprecated)('Global UnsupportedManager.listen is used: ' + ' use PDFDocumentLoadingTask.onUnsupportedFeature instead');\\r\\n      listeners.push(cb);\\r\\n    },\\r\\n    notify: function notify(featureId) {\\r\\n      for (var i = 0, ii = listeners.length; i < ii; i++) {\\r\\n        listeners[i](featureId);\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n}();\\r\\nvar version, build;\\r\\n{\\r\\n  exports.version = version = '1.10.100';\\r\\n  exports.build = build = 'ea29ec83';\\r\\n}\\r\\nexports.getDocument = getDocument;\\r\\nexports.LoopbackPort = Loop\";a.a+=\"backPort;\\r\\nexports.PDFDataRangeTransport = PDFDataRangeTransport;\\r\\nexports.PDFWorker = PDFWorker;\\r\\nexports.PDFDocumentProxy = PDFDocumentProxy;\\r\\nexports.PDFPageProxy = PDFPageProxy;\\r\\nexports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\\r\\nexports._UnsupportedManager = _UnsupportedManager;\\r\\nexports.version = version;\\r\\nexports.build = build;\\r\\n\\r\\n/***/ }),\\r\\n/* 76 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.WebGLUtils = undefined;\\r\\n\\r\\nvar _dom_utils = __w_pdfjs_require__(17);\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar WebGLUtils = function WebGLUtilsClosure() {\\r\\n  function loadShader(gl, code, shaderType) {\\r\\n    var shader = gl.createShader(shaderType);\\r\\n    gl.shaderSource(shader, code);\\r\\n    gl.compileShader(shader);\\r\\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\\r\\n    if (!compiled) {\\r\\n      var errorMsg = gl.getShaderInfoLog(shader);\\r\\n      throw new Error('Error during shader compilation: ' + errorMsg);\\r\\n    }\\r\\n    return shader;\\r\\n  }\\r\\n  function createVertexShader(gl, code) {\\r\\n    return loadShader(gl, code, gl.VERTEX_SHADER);\\r\\n  }\\r\\n  function createFragmentShader(gl, code) {\\r\\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\\r\\n  }\\r\\n  function createProgram(gl, shaders) {\\r\\n    var program = gl.createProgram();\\r\\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\\r\\n      gl.attachShader(program, shaders[i]);\\r\\n    }\\r\\n    gl.linkProgram(program);\\r\\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\\r\\n    if (!linked) {\\r\\n      var errorMsg = gl.getProgramInfoLog(program);\\r\\n      throw new Error('Error during program linking: ' + errorMsg);\\r\\n    }\\r\\n    return program;\\r\\n  }\\r\\n  function createTexture(gl, image, textureId) {\\r\\n    gl.activeTexture(textureId);\\r\\n    var texture = gl.createTexture();\\r\\n    gl.bindTexture(gl.TEXTURE_2D, texture);\\r\\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\\r\\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\\r\\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\\r\\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\\r\\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\\r\\n    return texture;\\r\\n  }\\r\\n  var currentGL, currentCanvas;\\r\\n  function generateGL() {\\r\\n    if (currentGL) {\\r\\n      return;\\r\\n    }\\r\\n    currentCanvas = document.createElement('canvas');\\r\\n    currentGL = currentCanvas.getContext('webgl', { premultipliedalpha: false });\\r\\n  }\\r\\n  var smaskVertexShaderCode = '\\\\\\r\\n  attribute vec2 a_position;                                    \\\\\\r\\n  attribute vec2 a_texCoord;                                    \\\\\\r\\n                                                                \\\\\\r\\n  uniform vec2 u_resolution;                                    \\\\\\r\\n                                                                \\\\\\r\\n  varying vec2 v_texCoord;                                      \\\\\\r\\n                                                                \\\\\\r\\n  void main() {                                                 \\\\\\r\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\\\\r\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\\\\r\\n                                                                \\\\\\r\\n    v_texCoord = a_texCoord;                                    \\\\\\r\\n  }                                                             ';\\r\\n  var smaskFragmentShaderCode = '\\\\\\r\\n  precision mediump float;                                      \\\\\\r\\n                                                                \\\\\\r\\n  uniform vec4 u_backdrop;                                      \\\\\\r\\n  uniform int u_subtype;                                        \\\\\\r\\n  uniform sampler2D u_image;                                    \\\\\\r\\n  uniform sampler2D u_mask;                                     \\\\\\r\\n                                                                \\\\\\r\\n  varying vec2 v_texCoord;                                      \\\\\\r\\n                                                                \\\\\\r\\n  void main() {                                                 \\\\\\r\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\\\\r\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\\\\r\\n    if (u_backdrop.a > 0.0) {                                   \\\\\\r\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\\\\r\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\\\\r\\n    }                                                           \\\\\\r\\n    float lum;                                                  \\\\\\r\\n    if (u_subtype == 0) {                                       \\\\\\r\\n      lum = maskColor.a;                                        \\\\\\r\\n    } else {                                                    \\\\\\r\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\\\\r\\n            maskColor.b * 0.11;                                 \\\\\\r\\n    }                                                           \\\\\\r\\n    imageColor.a *= lum;                                        \\\\\\r\\n    imageColor.rgb *= imageColor.a;                             \\\\\\r\\n    gl_FragColor = imageColor;                                  \\\\\\r\\n  }                                                             ';\\r\\n  var smaskCache = null;\\r\\n  function initSmaskGL() {\\r\\n    var canvas, gl;\\r\\n    generateGL();\\r\\n    canvas = currentCanvas;\\r\\n    currentCanvas = null;\\r\\n    gl = currentGL;\\r\\n    currentGL = null;\\r\\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\\r\\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\\r\\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\\r\\n    gl.useProgram(program);\\r\\n    var cache = {};\\r\\n    cache.gl = gl;\\r\\n    cache.canvas = canvas;\\r\\n    cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');\\r\\n    cache.positionLocation = gl.getAttribLocation(program, 'a_position');\\r\\n    cache.backdropLocation = gl.getUniformLocation(program, 'u_backdrop');\\r\\n    cache.subtypeLocation = gl.getUniformLocation(program, 'u_subtype');\\r\\n    var texCoordLocation = gl.getAttribLocation(program, 'a_texCoord');\\r\\n    var texLayerLocation = gl.getUniformLocation(program, 'u_image');\\r\\n    var texMaskLocation = gl.getUniformLocation(program, 'u_mask');\\r\\n    var texCoordBuffer = gl.createBuffer();\\r\\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\\r\\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\\r\\n    gl.enableVertexAttribArray(texCoordLocation);\\r\\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\\r\\n    gl.uniform1i(texLayerLocation, 0);\\r\\n    gl.uniform1i(texMaskLocation, 1);\\r\\n    smaskCache = cache;\\r\\n  }\\r\\n  function composeSMask(layer, mask, properties) {\\r\\n    var width = layer.width,\\r\\n        height = layer.height;\\r\\n    if (!smaskCache) {\\r\\n      initSmaskGL();\\r\\n    }\\r\\n    var cache = smaskCache,\\r\\n        canvas = cache.canvas,\\r\\n        gl = cache.gl;\\r\\n    canvas.width = width;\\r\\n    canvas.height = height;\\r\\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\\r\\n    gl.uniform2f(cache.resolutionLocation, width, height);\\r\\n    if (properties.backdrop) {\\r\\n      gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\\r\\n    } else {\\r\\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\\r\\n    }\\r\\n    gl.uniform1i(cache.subtypeLocation, properties.subtype === 'Luminosity' ? 1 : 0);\\r\\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\\r\\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\\r\\n    var buffer = gl.createBuffer();\\r\\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\\r\\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\\r\\n    gl.enableVertexAttribArray(cache.positionLocation);\\r\\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\\r\\n    gl.clearColor(0, 0, 0, 0);\\r\\n    gl.enable(gl.BLEND);\\r\\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\\r\\n    gl.clear(gl.COLOR_BUFFER_BIT);\\r\\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\\r\\n    gl.flush();\\r\\n    gl.deleteTexture(texture);\\r\\n    gl.deleteTexture(maskTexture);\\r\\n    gl.deleteBuffer(buffer);\\r\\n    return canvas;\\r\\n  }\\r\\n  var figuresVertexShaderCode = '\\\\\\r\\n  attribute vec2 a_position;                                    \\\\\\r\\n  attribute vec3 a_color;                                       \\\\\\r\\n                                                                \\\\\\r\\n  uniform vec2 u_resolution;                                    \\\\\\r\\n  uniform vec2 u_scale;                                         \\\\\\r\\n  uniform vec2 u_offset;                                        \\\\\\r\\n                                                                \\\\\\r\\n  varying vec4 v_color;                                         \\\\\\r\\n                                                                \\\\\\r\\n  void main() {                                                 \\\\\\r\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\\\\r\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\\\\r\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\\\\r\\n                                                                \\\\\\r\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\\\\r\\n  }                                                             ';\\r\\n  var figuresFragmentShaderCode = '\\\\\\r\\n  precision mediump float;                                      \\\\\\r\\n                                                                \\\\\\r\\n  varying vec4 v_color;                                         \\\\\\r\\n                                                                \\\\\\r\\n  void main() {                                                 \\\\\\r\\n    gl_FragColor = v_color;                                     \\\\\\r\\n  }                                                             ';\\r\\n  var figuresCache = null;\\r\\n  function initFiguresGL() {\\r\\n    var canvas, gl;\\r\\n    generateGL();\\r\\n    canvas = currentCanvas;\\r\\n    currentCanvas = null;\\r\\n    gl = currentGL;\\r\\n    currentGL = null;\\r\\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\\r\\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\\r\\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\\r\\n    gl.useProgram(program);\\r\\n    var cache = {};\\r\\n    cache.gl = gl;\\r\\n    cache.canvas = canvas;\\r\\n    cache.resolutionLocation = gl.getUniformLocation(program, 'u_resolution');\\r\\n    cache.scaleLocation = gl.getUniformLocation(program, 'u_scale');\\r\\n    cache.offsetLocation = gl.getUniformLocation(program, 'u_offset');\\r\\n    cache.positionLocation = gl.getAttribLocation(program, 'a_position');\\r\\n    cache.colorLocation = gl.getAttribLocation(program, 'a_color');\\r\\n    figuresCache = cache;\\r\\n  }\\r\\n  function drawFigures(width, height, backgroundColor, figures, context) {\\r\\n    if (!figuresCache) {\\r\\n      initFiguresGL();\\r\\n    }\\r\\n    var cache = figuresCache,\\r\\n        canvas = cache.canvas,\\r\\n        gl = cache.gl;\\r\\n    canvas.width = width;\\r\\n    canvas.height = height;\\r\\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\\r\\n    gl.uniform2f(cache.resolutionLocation, width, height);\\r\\n    var count = 0;\\r\\n    var i, ii, rows;\\r\\n    for (i = 0, ii = figures.length; i < ii; i++) {\\r\\n      switch (figures[i].type) {\\r\\n        case 'lattice':\\r\\n          rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\\r\\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\\r\\n          break;\\r\\n        case 'triangles':\\r\\n          count += figures[i].coords.length;\\r\\n          break;\\r\\n      }\\r\\n    }\\r\\n    var coords = new Float32Array(count * 2);\\r\\n    var colors = new Uint8Array(count * 3);\\r\\n    var coordsMap = context.coords,\\r\\n        colorsMap = context.colors;\\r\\n    var pIndex = 0,\\r\\n        cIndex = 0;\\r\\n    for (i = 0, ii = figures.length; i < ii; i++) {\\r\\n      var figure = figures[i],\\r\\n          ps = figure.coords,\\r\\n          cs = figure.colors;\\r\\n      switch (figure.type) {\\r\\n        case 'lattice':\\r\\n          var cols = figure.verticesPerRow;\\r\\n          rows = ps.length / cols | 0;\\r\\n          for (var row = 1; row < rows; row++) {\\r\\n            var offset = row * cols + 1;\\r\\n            for (var col = 1; col < cols; col++, offset++) {\\r\\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\\r\\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\\r\\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\\r\\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\\r\\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\\r\\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\\r\\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\\r\\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\\r\\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\\r\\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\\r\\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\\r\\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\\r\\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\\r\\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\\r\\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\\r\\n              coords[pIndex + 6] = coords[pIndex + 2];\\r\\n              coords[pIndex + 7] = coords[pIndex + 3];\\r\\n              coords[pIndex + 8] = coords[pIndex + 4];\\r\\n              coords[pIndex + 9] = coords[pIndex + 5];\\r\\n              coords[pIndex + 10] = coordsMap[ps[offset]];\\r\\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\\r\\n              colors[cIndex + 9] = colors[cIndex + 3];\\r\\n              colors[cIndex + 10] = colors[cIndex + 4];\\r\\n              colors[cIndex + 11] = colors[cIndex + 5];\\r\\n              colors[cIndex + 12] = colors[cIndex + 6];\\r\\n              colors[cIndex + 13] = colors[cIndex + 7];\\r\\n              colors[cIndex + 14] = colors[cIndex + 8];\\r\\n              colors[cIndex + 15] = colorsMap[cs[offset]];\\r\\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\\r\\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\\r\\n              pIndex += 12;\\r\\n              cIndex += 18;\\r\\n            }\\r\\n          }\\r\\n          break;\\r\\n        case 'triangles':\\r\\n          for (var j = 0, jj = ps.length; j < jj; j++) {\\r\\n            coords[pIndex] = coordsMap[ps[j]];\\r\\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\\r\\n            colors[cIndex] = colorsMap[cs[j]];\\r\\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\\r\\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\\r\\n            pIndex += 2;\\r\\n            cIndex += 3;\\r\\n          }\\r\\n          break;\\r\\n      }\\r\\n    }\\r\\n    if (backgroundColor) {\\r\\n      gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\\r\\n    } else {\\r\\n      gl.clearColor(0, 0, 0, 0);\\r\\n    }\\r\\n    gl.clear(gl.COLOR_BUFFER_BIT);\\r\\n    var coordsBuffer = gl.createBuffer();\\r\\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\\r\\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\\r\\n    gl.enableVertexAttribArray(cache.positionLocation);\\r\\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\\r\\n    var colorsBuffer = gl.createBuffer();\\r\\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\\r\\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\\r\\n    gl.enableVertexAttribArray(cache.colorLocation);\\r\\n    gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\\r\\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\\r\\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\\r\\n    gl.drawArrays(gl.TRIANGLES, 0, count);\\r\\n    gl.flush();\\r\\n    gl.deleteBuffer(coordsBuffer);\\r\\n    gl.deleteBuffer(colorsBuffer);\\r\\n    return canvas;\\r\\n  }\\r\\n  function cleanup() {\\r\\n    if (smaskCache && smaskCache.canvas) {\\r\\n      smaskCache.canvas.width = 0;\\r\\n      smaskCache.canvas.height = 0;\\r\\n    }\\r\\n    if (figuresCache && figuresCache.canvas) {\\r\\n      figuresCache.canvas.width = 0;\\r\\n      figuresCache.canvas.height = 0;\\r\\n    }\\r\\n    smaskCache = null;\\r\\n    figuresCache = null;\\r\\n  }\\r\\n  return {\\r\\n    get isEnabled() {\\r\\n      if ((0, _dom_utils.getDefaultSetting)('disableWeb\";a.a+=\"GL')) {\\r\\n        return false;\\r\\n      }\\r\\n      var enabled = false;\\r\\n      try {\\r\\n        generateGL();\\r\\n        enabled = !!currentGL;\\r\\n      } catch (e) {}\\r\\n      return (0, _util.shadow)(this, 'isEnabled', enabled);\\r\\n    },\\r\\n    composeSMask: composeSMask,\\r\\n    drawFigures: drawFigures,\\r\\n    clear: cleanup\\r\\n  };\\r\\n}();\\r\\nexports.WebGLUtils = WebGLUtils;\\r\\n\\r\\n/***/ }),\\r\\n/* 77 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.Metadata = undefined;\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _xml_parser = __w_pdfjs_require__(138);\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar Metadata = function () {\\r\\n  function Metadata(data) {\\r\\n    _classCallCheck(this, Metadata);\\r\\n\\r\\n    (0, _util.assert)(typeof data === 'string', 'Metadata: input is not a string');\\r\\n    data = this._repair(data);\\r\\n    var parser = new _xml_parser.SimpleXMLParser();\\r\\n    var xmlDocument = parser.parseFromString(data);\\r\\n    this._metadata = Object.create(null);\\r\\n    if (xmlDocument) {\\r\\n      this._parse(xmlDocument);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  _createClass(Metadata, [{\\r\\n    key: '_repair',\\r\\n    value: function _repair(data) {\\r\\n      return data.replace(/>\\\\\\\\376\\\\\\\\377([^<]+)/g, function (all, codes) {\\r\\n        var bytes = codes.replace(/\\\\\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\\r\\n          return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\\r\\n        });\\r\\n        var chars = '';\\r\\n        for (var i = 0, ii = bytes.length; i < ii; i += 2) {\\r\\n          var code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\\r\\n          if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\\r\\n            chars += String.fromCharCode(code);\\r\\n          } else {\\r\\n            chars += '&#x' + (0x10000 + code).toString(16).substring(1) + ';';\\r\\n          }\\r\\n        }\\r\\n        return '>' + chars;\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: '_parse',\\r\\n    value: function _parse(xmlDocument) {\\r\\n      var rdf = xmlDocument.documentElement;\\r\\n      if (rdf.nodeName.toLowerCase() !== 'rdf:rdf') {\\r\\n        rdf = rdf.firstChild;\\r\\n        while (rdf && rdf.nodeName.toLowerCase() !== 'rdf:rdf') {\\r\\n          rdf = rdf.nextSibling;\\r\\n        }\\r\\n      }\\r\\n      var nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\\r\\n      if (!rdf || nodeName !== 'rdf:rdf' || !rdf.hasChildNodes()) {\\r\\n        return;\\r\\n      }\\r\\n      var children = rdf.childNodes;\\r\\n      for (var i = 0, ii = children.length; i < ii; i++) {\\r\\n        var desc = children[i];\\r\\n        if (desc.nodeName.toLowerCase() !== 'rdf:description') {\\r\\n          continue;\\r\\n        }\\r\\n        for (var j = 0, jj = desc.childNodes.length; j < jj; j++) {\\r\\n          if (desc.childNodes[j].nodeName.toLowerCase() !== '#text') {\\r\\n            var entry = desc.childNodes[j];\\r\\n            var name = entry.nodeName.toLowerCase();\\r\\n            this._metadata[name] = entry.textContent.trim();\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'get',\\r\\n    value: function get(name) {\\r\\n      return this._metadata[name] || null;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'getAll',\\r\\n    value: function getAll() {\\r\\n      return this._metadata;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'has',\\r\\n    value: function has(name) {\\r\\n      return typeof this._metadata[name] !== 'undefined';\\r\\n    }\\r\\n  }, {\\r\\n    key: 'metadata',\\r\\n    get: function get() {\\r\\n      (0, _util.deprecated)('`metadata` getter; use `getAll()` instead.');\\r\\n      return this.getAll();\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return Metadata;\\r\\n}();\\r\\n\\r\\nexports.Metadata = Metadata;\\r\\n\\r\\n/***/ }),\\r\\n/* 78 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar ChunkedStream = function ChunkedStreamClosure() {\\r\\n  function ChunkedStream(length, chunkSize, manager) {\\r\\n    this.bytes = new Uint8Array(length);\\r\\n    this.start = 0;\\r\\n    this.pos = 0;\\r\\n    this.end = length;\\r\\n    this.chunkSize = chunkSize;\\r\\n    this.loadedChunks = [];\\r\\n    this.numChunksLoaded = 0;\\r\\n    this.numChunks = Math.ceil(length / chunkSize);\\r\\n    this.manager = manager;\\r\\n    this.progressiveDataLength = 0;\\r\\n    this.lastSuccessfulEnsureByteChunk = -1;\\r\\n  }\\r\\n  ChunkedStream.prototype = {\\r\\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\\r\\n      var chunks = [];\\r\\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\\r\\n        if (!this.loadedChunks[chunk]) {\\r\\n          chunks.push(chunk);\\r\\n        }\\r\\n      }\\r\\n      return chunks;\\r\\n    },\\r\\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\\r\\n      return [this];\\r\\n    },\\r\\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\\r\\n      return this.numChunksLoaded === this.numChunks;\\r\\n    },\\r\\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\\r\\n      var end = begin + chunk.byteLength;\\r\\n      if (begin % this.chunkSize !== 0) {\\r\\n        throw new Error('Bad begin offset: ' + begin);\\r\\n      }\\r\\n      var length = this.bytes.length;\\r\\n      if (end % this.chunkSize !== 0 && end !== length) {\\r\\n        throw new Error('Bad end offset: ' + end);\\r\\n      }\\r\\n      this.bytes.set(new Uint8Array(chunk), begin);\\r\\n      var chunkSize = this.chunkSize;\\r\\n      var beginChunk = Math.floor(begin / chunkSize);\\r\\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\r\\n      var curChunk;\\r\\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\r\\n        if (!this.loadedChunks[curChunk]) {\\r\\n          this.loadedChunks[curChunk] = true;\\r\\n          ++this.numChunksLoaded;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\\r\\n      var position = this.progressiveDataLength;\\r\\n      var beginChunk = Math.floor(position / this.chunkSize);\\r\\n      this.bytes.set(new Uint8Array(data), position);\\r\\n      position += data.byteLength;\\r\\n      this.progressiveDataLength = position;\\r\\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\\r\\n      var curChunk;\\r\\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\\r\\n        if (!this.loadedChunks[curChunk]) {\\r\\n          this.loadedChunks[curChunk] = true;\\r\\n          ++this.numChunksLoaded;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    ensureByte: function ChunkedStream_ensureByte(pos) {\\r\\n      var chunk = Math.floor(pos / this.chunkSize);\\r\\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\\r\\n        return;\\r\\n      }\\r\\n      if (!this.loadedChunks[chunk]) {\\r\\n        throw new _util.MissingDataException(pos, pos + 1);\\r\\n      }\\r\\n      this.lastSuccessfulEnsureByteChunk = chunk;\\r\\n    },\\r\\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\\r\\n      if (begin >= end) {\\r\\n        return;\\r\\n      }\\r\\n      if (end <= this.progressiveDataLength) {\\r\\n        return;\\r\\n      }\\r\\n      var chunkSize = this.chunkSize;\\r\\n      var beginChunk = Math.floor(begin / chunkSize);\\r\\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\\r\\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\r\\n        if (!this.loadedChunks[chunk]) {\\r\\n          throw new _util.MissingDataException(begin, end);\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\\r\\n      var chunk,\\r\\n          numChunks = this.numChunks;\\r\\n      for (var i = 0; i < numChunks; ++i) {\\r\\n        chunk = (beginChunk + i) % numChunks;\\r\\n        if (!this.loadedChunks[chunk]) {\\r\\n          return chunk;\\r\\n        }\\r\\n      }\\r\\n      return null;\\r\\n    },\\r\\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\\r\\n      return !!this.loadedChunks[chunk];\\r\\n    },\\r\\n    get length() {\\r\\n      return this.end - this.start;\\r\\n    },\\r\\n    get isEmpty() {\\r\\n      return this.length === 0;\\r\\n    },\\r\\n    getByte: function ChunkedStream_getByte() {\\r\\n      var pos = this.pos;\\r\\n      if (pos >= this.end) {\\r\\n        return -1;\\r\\n      }\\r\\n      this.ensureByte(pos);\\r\\n      return this.bytes[this.pos++];\\r\\n    },\\r\\n    getUint16: function ChunkedStream_getUint16() {\\r\\n      var b0 = this.getByte();\\r\\n      var b1 = this.getByte();\\r\\n      if (b0 === -1 || b1 === -1) {\\r\\n        return -1;\\r\\n      }\\r\\n      return (b0 << 8) + b1;\\r\\n    },\\r\\n    getInt32: function ChunkedStream_getInt32() {\\r\\n      var b0 = this.getByte();\\r\\n      var b1 = this.getByte();\\r\\n      var b2 = this.getByte();\\r\\n      var b3 = this.getByte();\\r\\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\r\\n    },\\r\\n    getBytes: function ChunkedStream_getBytes(length) {\\r\\n      var bytes = this.bytes;\\r\\n      var pos = this.pos;\\r\\n      var strEnd = this.end;\\r\\n      if (!length) {\\r\\n        this.ensureRange(pos, strEnd);\\r\\n        return bytes.subarray(pos, strEnd);\\r\\n      }\\r\\n      var end = pos + length;\\r\\n      if (end > strEnd) {\\r\\n        end = strEnd;\\r\\n      }\\r\\n      this.ensureRange(pos, end);\\r\\n      this.pos = end;\\r\\n      return bytes.subarray(pos, end);\\r\\n    },\\r\\n    peekByte: function ChunkedStream_peekByte() {\\r\\n      var peekedByte = this.getByte();\\r\\n      this.pos--;\\r\\n      return peekedByte;\\r\\n    },\\r\\n    peekBytes: function ChunkedStream_peekBytes(length) {\\r\\n      var bytes = this.getBytes(length);\\r\\n      this.pos -= bytes.length;\\r\\n      return bytes;\\r\\n    },\\r\\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\\r\\n      this.ensureRange(begin, end);\\r\\n      return this.bytes.subarray(begin, end);\\r\\n    },\\r\\n    skip: function ChunkedStream_skip(n) {\\r\\n      if (!n) {\\r\\n        n = 1;\\r\\n      }\\r\\n      this.pos += n;\\r\\n    },\\r\\n    reset: function ChunkedStream_reset() {\\r\\n      this.pos = this.start;\\r\\n    },\\r\\n    moveStart: function ChunkedStream_moveStart() {\\r\\n      this.start = this.pos;\\r\\n    },\\r\\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\\r\\n      this.ensureRange(start, start + length);\\r\\n      function ChunkedStreamSubstream() {}\\r\\n      ChunkedStreamSubstream.prototype = Object.create(this);\\r\\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\\r\\n        var chunkSize = this.chunkSize;\\r\\n        var beginChunk = Math.floor(this.start / chunkSize);\\r\\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\\r\\n        var missingChunks = [];\\r\\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\r\\n          if (!this.loadedChunks[chunk]) {\\r\\n            missingChunks.push(chunk);\\r\\n          }\\r\\n        }\\r\\n        return missingChunks;\\r\\n      };\\r\\n      var subStream = new ChunkedStreamSubstream();\\r\\n      subStream.pos = subStream.start = start;\\r\\n      subStream.end = start + length || this.end;\\r\\n      subStream.dict = dict;\\r\\n      return subStream;\\r\\n    }\\r\\n  };\\r\\n  return ChunkedStream;\\r\\n}();\\r\\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\\r\\n  function ChunkedStreamManager(pdfNetworkStream, args) {\\r\\n    var chunkSize = args.rangeChunkSize;\\r\\n    var length = args.length;\\r\\n    this.stream = new ChunkedStream(length, chunkSize, this);\\r\\n    this.length = length;\\r\\n    this.chunkSize = chunkSize;\\r\\n    this.pdfNetworkStream = pdfNetworkStream;\\r\\n    this.url = args.url;\\r\\n    this.disableAutoFetch = args.disableAutoFetch;\\r\\n    this.msgHandler = args.msgHandler;\\r\\n    this.currRequestId = 0;\\r\\n    this.chunksNeededByRequest = Object.create(null);\\r\\n    this.requestsByChunk = Object.create(null);\\r\\n    this.promisesByRequest = Object.create(null);\\r\\n    this.progressiveDataLength = 0;\\r\\n    this.aborted = false;\\r\\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\r\\n  }\\r\\n  ChunkedStreamManager.prototype = {\\r\\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\\r\\n      return this._loadedStreamCapability.promise;\\r\\n    },\\r\\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\\r\\n      var _this = this;\\r\\n\\r\\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\\r\\n      if (!rangeReader.isStreamingSupported) {\\r\\n        rangeReader.onProgress = this.onProgress.bind(this);\\r\\n      }\\r\\n      var chunks = [],\\r\\n          loaded = 0;\\r\\n      var manager = this;\\r\\n      var promise = new Promise(function (resolve, reject) {\\r\\n        var readChunk = function readChunk(chunk) {\\r\\n          try {\\r\\n            if (!chunk.done) {\\r\\n              var data = chunk.value;\\r\\n              chunks.push(data);\\r\\n              loaded += (0, _util.arrayByteLength)(data);\\r\\n              if (rangeReader.isStreamingSupported) {\\r\\n                manager.onProgress({ loaded: loaded });\\r\\n              }\\r\\n              rangeReader.read().then(readChunk, reject);\\r\\n              return;\\r\\n            }\\r\\n            var chunkData = (0, _util.arraysToBytes)(chunks);\\r\\n            chunks = null;\\r\\n            resolve(chunkData);\\r\\n          } catch (e) {\\r\\n            reject(e);\\r\\n          }\\r\\n        };\\r\\n        rangeReader.read().then(readChunk, reject);\\r\\n      });\\r\\n      promise.then(function (data) {\\r\\n        if (_this.aborted) {\\r\\n          return;\\r\\n        }\\r\\n        _this.onReceiveData({\\r\\n          chunk: data,\\r\\n          begin: begin\\r\\n        });\\r\\n      });\\r\\n    },\\r\\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\\r\\n      var missingChunks = this.stream.getMissingChunks();\\r\\n      this._requestChunks(missingChunks);\\r\\n      return this._loadedStreamCapability.promise;\\r\\n    },\\r\\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\\r\\n      var requestId = this.currRequestId++;\\r\\n      var i, ii;\\r\\n      var chunksNeeded = Object.create(null);\\r\\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\\r\\n      for (i = 0, ii = chunks.length; i < ii; i++) {\\r\\n        if (!this.stream.hasChunk(chunks[i])) {\\r\\n          chunksNeeded[chunks[i]] = true;\\r\\n        }\\r\\n      }\\r\\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\\r\\n        return Promise.resolve();\\r\\n      }\\r\\n      var capability = (0, _util.createPromiseCapability)();\\r\\n      this.promisesByRequest[requestId] = capability;\\r\\n      var chunksToRequest = [];\\r\\n      for (var chunk in chunksNeeded) {\\r\\n        chunk = chunk | 0;\\r\\n        if (!(chunk in this.requestsByChunk)) {\\r\\n          this.requestsByChunk[chunk] = [];\\r\\n          chunksToRequest.push(chunk);\\r\\n        }\\r\\n        this.requestsByChunk[chunk].push(requestId);\\r\\n      }\\r\\n      if (!chunksToRequest.length) {\\r\\n        return capability.promise;\\r\\n      }\\r\\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\\r\\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\\r\\n        var groupedChunk = groupedChunksToRequest[i];\\r\\n        var begin = groupedChunk.beginChunk * this.chunkSize;\\r\\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\\r\\n        this.sendRequest(begin, end);\\r\\n      }\\r\\n      return capability.promise;\\r\\n    },\\r\\n    getStream: function ChunkedStreamManager_getStream() {\\r\\n      return this.stream;\\r\\n    },\\r\\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\\r\\n      end = Math.min(end, this.length);\\r\\n      var beginChunk = this.getBeginChunk(begin);\\r\\n      var endChunk = this.getEndChunk(end);\\r\\n      var chunks = [];\\r\\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\r\\n        chunks.push(chunk);\\r\\n      }\\r\\n      return this._requestChunks(chunks);\\r\\n    },\\r\\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\\r\\n      ranges = ranges || [];\\r\\n      var chunksToRequest = [];\\r\\n      for (var i = 0; i < ranges.length; i++) {\\r\\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\\r\\n        var endChunk = this.getEndChunk(ranges[i].end);\\r\\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\\r\\n          if (chunksToRequest.indexOf(chunk) < 0) {\\r\\n            chunksToRequest.push(chunk);\\r\\n          }\\r\\n        \";a.a+=\"}\\r\\n      }\\r\\n      chunksToRequest.sort(function (a, b) {\\r\\n        return a - b;\\r\\n      });\\r\\n      return this._requestChunks(chunksToRequest);\\r\\n    },\\r\\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\\r\\n      var groupedChunks = [];\\r\\n      var beginChunk = -1;\\r\\n      var prevChunk = -1;\\r\\n      for (var i = 0; i < chunks.length; ++i) {\\r\\n        var chunk = chunks[i];\\r\\n        if (beginChunk < 0) {\\r\\n          beginChunk = chunk;\\r\\n        }\\r\\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\\r\\n          groupedChunks.push({\\r\\n            beginChunk: beginChunk,\\r\\n            endChunk: prevChunk + 1\\r\\n          });\\r\\n          beginChunk = chunk;\\r\\n        }\\r\\n        if (i + 1 === chunks.length) {\\r\\n          groupedChunks.push({\\r\\n            beginChunk: beginChunk,\\r\\n            endChunk: chunk + 1\\r\\n          });\\r\\n        }\\r\\n        prevChunk = chunk;\\r\\n      }\\r\\n      return groupedChunks;\\r\\n    },\\r\\n    onProgress: function ChunkedStreamManager_onProgress(args) {\\r\\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\\r\\n      this.msgHandler.send('DocProgress', {\\r\\n        loaded: bytesLoaded,\\r\\n        total: this.length\\r\\n      });\\r\\n    },\\r\\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\\r\\n      var chunk = args.chunk;\\r\\n      var isProgressive = args.begin === undefined;\\r\\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\\r\\n      var end = begin + chunk.byteLength;\\r\\n      var beginChunk = Math.floor(begin / this.chunkSize);\\r\\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\\r\\n      if (isProgressive) {\\r\\n        this.stream.onReceiveProgressiveData(chunk);\\r\\n        this.progressiveDataLength = end;\\r\\n      } else {\\r\\n        this.stream.onReceiveData(begin, chunk);\\r\\n      }\\r\\n      if (this.stream.allChunksLoaded()) {\\r\\n        this._loadedStreamCapability.resolve(this.stream);\\r\\n      }\\r\\n      var loadedRequests = [];\\r\\n      var i, requestId;\\r\\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\\r\\n        var requestIds = this.requestsByChunk[chunk] || [];\\r\\n        delete this.requestsByChunk[chunk];\\r\\n        for (i = 0; i < requestIds.length; ++i) {\\r\\n          requestId = requestIds[i];\\r\\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\\r\\n          if (chunk in chunksNeeded) {\\r\\n            delete chunksNeeded[chunk];\\r\\n          }\\r\\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\\r\\n            continue;\\r\\n          }\\r\\n          loadedRequests.push(requestId);\\r\\n        }\\r\\n      }\\r\\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\\r\\n        var nextEmptyChunk;\\r\\n        if (this.stream.numChunksLoaded === 1) {\\r\\n          var lastChunk = this.stream.numChunks - 1;\\r\\n          if (!this.stream.hasChunk(lastChunk)) {\\r\\n            nextEmptyChunk = lastChunk;\\r\\n          }\\r\\n        } else {\\r\\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\\r\\n        }\\r\\n        if (Number.isInteger(nextEmptyChunk)) {\\r\\n          this._requestChunks([nextEmptyChunk]);\\r\\n        }\\r\\n      }\\r\\n      for (i = 0; i < loadedRequests.length; ++i) {\\r\\n        requestId = loadedRequests[i];\\r\\n        var capability = this.promisesByRequest[requestId];\\r\\n        delete this.promisesByRequest[requestId];\\r\\n        capability.resolve();\\r\\n      }\\r\\n      this.msgHandler.send('DocProgress', {\\r\\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\\r\\n        total: this.length\\r\\n      });\\r\\n    },\\r\\n    onError: function ChunkedStreamManager_onError(err) {\\r\\n      this._loadedStreamCapability.reject(err);\\r\\n    },\\r\\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\\r\\n      var chunk = Math.floor(begin / this.chunkSize);\\r\\n      return chunk;\\r\\n    },\\r\\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\\r\\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\\r\\n      return chunk;\\r\\n    },\\r\\n    abort: function ChunkedStreamManager_abort() {\\r\\n      this.aborted = true;\\r\\n      if (this.pdfNetworkStream) {\\r\\n        this.pdfNetworkStream.cancelAllRequests('abort');\\r\\n      }\\r\\n      for (var requestId in this.promisesByRequest) {\\r\\n        var capability = this.promisesByRequest[requestId];\\r\\n        capability.reject(new Error('Request was aborted'));\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return ChunkedStreamManager;\\r\\n}();\\r\\nexports.ChunkedStream = ChunkedStream;\\r\\nexports.ChunkedStreamManager = ChunkedStreamManager;\\r\\n\\r\\n/***/ }),\\r\\n/* 79 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _parser = __w_pdfjs_require__(36);\\r\\n\\r\\nvar _chunked_stream = __w_pdfjs_require__(78);\\r\\n\\r\\nvar _crypto = __w_pdfjs_require__(82);\\r\\n\\r\\nvar _colorspace = __w_pdfjs_require__(29);\\r\\n\\r\\nvar Catalog = function CatalogClosure() {\\r\\n  function Catalog(pdfManager, xref, pageFactory) {\\r\\n    this.pdfManager = pdfManager;\\r\\n    this.xref = xref;\\r\\n    this.catDict = xref.getCatalogObj();\\r\\n    if (!(0, _primitives.isDict)(this.catDict)) {\\r\\n      throw new _util.FormatError('catalog object is not a dictionary');\\r\\n    }\\r\\n    this.fontCache = new _primitives.RefSetCache();\\r\\n    this.builtInCMapCache = Object.create(null);\\r\\n    this.pageKidsCountCache = new _primitives.RefSetCache();\\r\\n    this.pageFactory = pageFactory;\\r\\n    this.pagePromises = [];\\r\\n  }\\r\\n  Catalog.prototype = {\\r\\n    get metadata() {\\r\\n      var streamRef = this.catDict.getRaw('Metadata');\\r\\n      if (!(0, _primitives.isRef)(streamRef)) {\\r\\n        return (0, _util.shadow)(this, 'metadata', null);\\r\\n      }\\r\\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\\r\\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\\r\\n      var metadata;\\r\\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\\r\\n        var type = stream.dict.get('Type');\\r\\n        var subtype = stream.dict.get('Subtype');\\r\\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\\r\\n          try {\\r\\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\\r\\n          } catch (e) {\\r\\n            if (e instanceof _util.MissingDataException) {\\r\\n              throw e;\\r\\n            }\\r\\n            (0, _util.info)('Skipping invalid metadata.');\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'metadata', metadata);\\r\\n    },\\r\\n    get toplevelPagesDict() {\\r\\n      var pagesObj = this.catDict.get('Pages');\\r\\n      if (!(0, _primitives.isDict)(pagesObj)) {\\r\\n        throw new _util.FormatError('invalid top-level pages dictionary');\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\\r\\n    },\\r\\n    get documentOutline() {\\r\\n      var obj = null;\\r\\n      try {\\r\\n        obj = this.readDocumentOutline();\\r\\n      } catch (ex) {\\r\\n        if (ex instanceof _util.MissingDataException) {\\r\\n          throw ex;\\r\\n        }\\r\\n        (0, _util.warn)('Unable to read document outline');\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'documentOutline', obj);\\r\\n    },\\r\\n    readDocumentOutline: function Catalog_readDocumentOutline() {\\r\\n      var obj = this.catDict.get('Outlines');\\r\\n      if (!(0, _primitives.isDict)(obj)) {\\r\\n        return null;\\r\\n      }\\r\\n      obj = obj.getRaw('First');\\r\\n      if (!(0, _primitives.isRef)(obj)) {\\r\\n        return null;\\r\\n      }\\r\\n      var root = { items: [] };\\r\\n      var queue = [{\\r\\n        obj: obj,\\r\\n        parent: root\\r\\n      }];\\r\\n      var processed = new _primitives.RefSet();\\r\\n      processed.put(obj);\\r\\n      var xref = this.xref,\\r\\n          blackColor = new Uint8Array(3);\\r\\n      while (queue.length > 0) {\\r\\n        var i = queue.shift();\\r\\n        var outlineDict = xref.fetchIfRef(i.obj);\\r\\n        if (outlineDict === null) {\\r\\n          continue;\\r\\n        }\\r\\n        if (!outlineDict.has('Title')) {\\r\\n          throw new _util.FormatError('Invalid outline item');\\r\\n        }\\r\\n        var data = {\\r\\n          url: null,\\r\\n          dest: null\\r\\n        };\\r\\n        Catalog.parseDestDictionary({\\r\\n          destDict: outlineDict,\\r\\n          resultObj: data,\\r\\n          docBaseUrl: this.pdfManager.docBaseUrl\\r\\n        });\\r\\n        var title = outlineDict.get('Title');\\r\\n        var flags = outlineDict.get('F') || 0;\\r\\n        var color = outlineDict.getArray('C'),\\r\\n            rgbColor = blackColor;\\r\\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\\r\\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\\r\\n        }\\r\\n        var outlineItem = {\\r\\n          dest: data.dest,\\r\\n          url: data.url,\\r\\n          unsafeUrl: data.unsafeUrl,\\r\\n          newWindow: data.newWindow,\\r\\n          title: (0, _util.stringToPDFString)(title),\\r\\n          color: rgbColor,\\r\\n          count: outlineDict.get('Count'),\\r\\n          bold: !!(flags & 2),\\r\\n          italic: !!(flags & 1),\\r\\n          items: []\\r\\n        };\\r\\n        i.parent.items.push(outlineItem);\\r\\n        obj = outlineDict.getRaw('First');\\r\\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\r\\n          queue.push({\\r\\n            obj: obj,\\r\\n            parent: outlineItem\\r\\n          });\\r\\n          processed.put(obj);\\r\\n        }\\r\\n        obj = outlineDict.getRaw('Next');\\r\\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\\r\\n          queue.push({\\r\\n            obj: obj,\\r\\n            parent: i.parent\\r\\n          });\\r\\n          processed.put(obj);\\r\\n        }\\r\\n      }\\r\\n      return root.items.length > 0 ? root.items : null;\\r\\n    },\\r\\n    get numPages() {\\r\\n      var obj = this.toplevelPagesDict.get('Count');\\r\\n      if (!Number.isInteger(obj)) {\\r\\n        throw new _util.FormatError('page count in top level pages object is not an integer');\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'numPages', obj);\\r\\n    },\\r\\n    get destinations() {\\r\\n      function fetchDestination(dest) {\\r\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\r\\n      }\\r\\n      var xref = this.xref;\\r\\n      var dests = {},\\r\\n          nameTreeRef,\\r\\n          nameDictionaryRef;\\r\\n      var obj = this.catDict.get('Names');\\r\\n      if (obj && obj.has('Dests')) {\\r\\n        nameTreeRef = obj.getRaw('Dests');\\r\\n      } else if (this.catDict.has('Dests')) {\\r\\n        nameDictionaryRef = this.catDict.get('Dests');\\r\\n      }\\r\\n      if (nameDictionaryRef) {\\r\\n        obj = nameDictionaryRef;\\r\\n        obj.forEach(function catalogForEach(key, value) {\\r\\n          if (!value) {\\r\\n            return;\\r\\n          }\\r\\n          dests[key] = fetchDestination(value);\\r\\n        });\\r\\n      }\\r\\n      if (nameTreeRef) {\\r\\n        var nameTree = new NameTree(nameTreeRef, xref);\\r\\n        var names = nameTree.getAll();\\r\\n        for (var name in names) {\\r\\n          dests[name] = fetchDestination(names[name]);\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'destinations', dests);\\r\\n    },\\r\\n    getDestination: function Catalog_getDestination(destinationId) {\\r\\n      function fetchDestination(dest) {\\r\\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\\r\\n      }\\r\\n      var xref = this.xref;\\r\\n      var dest = null,\\r\\n          nameTreeRef,\\r\\n          nameDictionaryRef;\\r\\n      var obj = this.catDict.get('Names');\\r\\n      if (obj && obj.has('Dests')) {\\r\\n        nameTreeRef = obj.getRaw('Dests');\\r\\n      } else if (this.catDict.has('Dests')) {\\r\\n        nameDictionaryRef = this.catDict.get('Dests');\\r\\n      }\\r\\n      if (nameDictionaryRef) {\\r\\n        var value = nameDictionaryRef.get(destinationId);\\r\\n        if (value) {\\r\\n          dest = fetchDestination(value);\\r\\n        }\\r\\n      }\\r\\n      if (nameTreeRef) {\\r\\n        var nameTree = new NameTree(nameTreeRef, xref);\\r\\n        dest = fetchDestination(nameTree.get(destinationId));\\r\\n      }\\r\\n      return dest;\\r\\n    },\\r\\n    get pageLabels() {\\r\\n      var obj = null;\\r\\n      try {\\r\\n        obj = this.readPageLabels();\\r\\n      } catch (ex) {\\r\\n        if (ex instanceof _util.MissingDataException) {\\r\\n          throw ex;\\r\\n        }\\r\\n        (0, _util.warn)('Unable to read page labels.');\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'pageLabels', obj);\\r\\n    },\\r\\n    readPageLabels: function Catalog_readPageLabels() {\\r\\n      var obj = this.catDict.getRaw('PageLabels');\\r\\n      if (!obj) {\\r\\n        return null;\\r\\n      }\\r\\n      var pageLabels = new Array(this.numPages);\\r\\n      var style = null;\\r\\n      var prefix = '';\\r\\n      var numberTree = new NumberTree(obj, this.xref);\\r\\n      var nums = numberTree.getAll();\\r\\n      var currentLabel = '',\\r\\n          currentIndex = 1;\\r\\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\\r\\n        if (i in nums) {\\r\\n          var labelDict = nums[i];\\r\\n          if (!(0, _primitives.isDict)(labelDict)) {\\r\\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\\r\\n          }\\r\\n          var type = labelDict.get('Type');\\r\\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\\r\\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\\r\\n          }\\r\\n          var s = labelDict.get('S');\\r\\n          if (s && !(0, _primitives.isName)(s)) {\\r\\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\\r\\n          }\\r\\n          style = s ? s.name : null;\\r\\n          var p = labelDict.get('P');\\r\\n          if (p && !(0, _util.isString)(p)) {\\r\\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\\r\\n          }\\r\\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\\r\\n          var st = labelDict.get('St');\\r\\n          if (st && !(Number.isInteger(st) && st >= 1)) {\\r\\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\\r\\n          }\\r\\n          currentIndex = st || 1;\\r\\n        }\\r\\n        switch (style) {\\r\\n          case 'D':\\r\\n            currentLabel = currentIndex;\\r\\n            break;\\r\\n          case 'R':\\r\\n          case 'r':\\r\\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\\r\\n            break;\\r\\n          case 'A':\\r\\n          case 'a':\\r\\n            var LIMIT = 26;\\r\\n            var A_UPPER_CASE = 0x41,\\r\\n                A_LOWER_CASE = 0x61;\\r\\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\\r\\n            var letterIndex = currentIndex - 1;\\r\\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\\r\\n            var charBuf = [];\\r\\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\\r\\n              charBuf.push(character);\\r\\n            }\\r\\n            currentLabel = charBuf.join('');\\r\\n            break;\\r\\n          default:\\r\\n            if (style) {\\r\\n              throw new _util.FormatError('Invalid style \\\"' + style + '\\\" in PageLabel dictionary.');\\r\\n            }\\r\\n        }\\r\\n        pageLabels[i] = prefix + currentLabel;\\r\\n        currentLabel = '';\\r\\n        currentIndex++;\\r\\n      }\\r\\n      return pageLabels;\\r\\n    },\\r\\n    get pageMode() {\\r\\n      var obj = this.catDict.get('PageMode');\\r\\n      var pageMode = 'UseNone';\\r\\n      if ((0, _primitives.isName)(obj)) {\\r\\n        switch (obj.name) {\\r\\n          case 'UseNone':\\r\\n          case 'UseOutlines':\\r\\n          case 'UseThumbs':\\r\\n          case 'FullScreen':\\r\\n          case 'UseOC':\\r\\n          case 'UseAttachments':\\r\\n            pageMode = obj.\";a.a+=\"name;\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\\r\\n    },\\r\\n    get attachments() {\\r\\n      var xref = this.xref;\\r\\n      var attachments = null,\\r\\n          nameTreeRef;\\r\\n      var obj = this.catDict.get('Names');\\r\\n      if (obj) {\\r\\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\\r\\n      }\\r\\n      if (nameTreeRef) {\\r\\n        var nameTree = new NameTree(nameTreeRef, xref);\\r\\n        var names = nameTree.getAll();\\r\\n        for (var name in names) {\\r\\n          var fs = new FileSpec(names[name], xref);\\r\\n          if (!attachments) {\\r\\n            attachments = Object.create(null);\\r\\n          }\\r\\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'attachments', attachments);\\r\\n    },\\r\\n    get javaScript() {\\r\\n      var xref = this.xref;\\r\\n      var obj = this.catDict.get('Names');\\r\\n      var javaScript = [];\\r\\n      function appendIfJavaScriptDict(jsDict) {\\r\\n        var type = jsDict.get('S');\\r\\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\\r\\n          return;\\r\\n        }\\r\\n        var js = jsDict.get('JS');\\r\\n        if ((0, _primitives.isStream)(js)) {\\r\\n          js = (0, _util.bytesToString)(js.getBytes());\\r\\n        } else if (!(0, _util.isString)(js)) {\\r\\n          return;\\r\\n        }\\r\\n        javaScript.push((0, _util.stringToPDFString)(js));\\r\\n      }\\r\\n      if (obj && obj.has('JavaScript')) {\\r\\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\\r\\n        var names = nameTree.getAll();\\r\\n        for (var name in names) {\\r\\n          var jsDict = names[name];\\r\\n          if ((0, _primitives.isDict)(jsDict)) {\\r\\n            appendIfJavaScriptDict(jsDict);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      var openactionDict = this.catDict.get('OpenAction');\\r\\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\\r\\n        var actionType = openactionDict.get('S');\\r\\n        if ((0, _primitives.isName)(actionType, 'Named')) {\\r\\n          var action = openactionDict.get('N');\\r\\n          if ((0, _primitives.isName)(action, 'Print')) {\\r\\n            javaScript.push('print({});');\\r\\n          }\\r\\n        } else {\\r\\n          appendIfJavaScriptDict(openactionDict);\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\\r\\n    },\\r\\n    cleanup: function Catalog_cleanup() {\\r\\n      var _this = this;\\r\\n\\r\\n      this.pageKidsCountCache.clear();\\r\\n      var promises = [];\\r\\n      this.fontCache.forEach(function (promise) {\\r\\n        promises.push(promise);\\r\\n      });\\r\\n      return Promise.all(promises).then(function (translatedFonts) {\\r\\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\\r\\n          var font = translatedFonts[i].dict;\\r\\n          delete font.translated;\\r\\n        }\\r\\n        _this.fontCache.clear();\\r\\n        _this.builtInCMapCache = Object.create(null);\\r\\n      });\\r\\n    },\\r\\n    getPage: function Catalog_getPage(pageIndex) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      if (!(pageIndex in this.pagePromises)) {\\r\\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\\r\\n          var _ref2 = _slicedToArray(_ref, 2),\\r\\n              dict = _ref2[0],\\r\\n              ref = _ref2[1];\\r\\n\\r\\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\\r\\n        });\\r\\n      }\\r\\n      return this.pagePromises[pageIndex];\\r\\n    },\\r\\n    getPageDict: function Catalog_getPageDict(pageIndex) {\\r\\n      var capability = (0, _util.createPromiseCapability)();\\r\\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\\r\\n      var count,\\r\\n          currentPageIndex = 0;\\r\\n      var xref = this.xref,\\r\\n          pageKidsCountCache = this.pageKidsCountCache;\\r\\n      function next() {\\r\\n        while (nodesToVisit.length) {\\r\\n          var currentNode = nodesToVisit.pop();\\r\\n          if ((0, _primitives.isRef)(currentNode)) {\\r\\n            count = pageKidsCountCache.get(currentNode);\\r\\n            if (count > 0 && currentPageIndex + count < pageIndex) {\\r\\n              currentPageIndex += count;\\r\\n              continue;\\r\\n            }\\r\\n            xref.fetchAsync(currentNode).then(function (obj) {\\r\\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\\r\\n                if (pageIndex === currentPageIndex) {\\r\\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\\r\\n                    pageKidsCountCache.put(currentNode, 1);\\r\\n                  }\\r\\n                  capability.resolve([obj, currentNode]);\\r\\n                } else {\\r\\n                  currentPageIndex++;\\r\\n                  next();\\r\\n                }\\r\\n                return;\\r\\n              }\\r\\n              nodesToVisit.push(obj);\\r\\n              next();\\r\\n            }, capability.reject);\\r\\n            return;\\r\\n          }\\r\\n          if (!(0, _primitives.isDict)(currentNode)) {\\r\\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\\r\\n            return;\\r\\n          }\\r\\n          count = currentNode.get('Count');\\r\\n          var objId = currentNode.objId;\\r\\n          if (objId && !pageKidsCountCache.has(objId)) {\\r\\n            pageKidsCountCache.put(objId, count);\\r\\n          }\\r\\n          if (currentPageIndex + count <= pageIndex) {\\r\\n            currentPageIndex += count;\\r\\n            continue;\\r\\n          }\\r\\n          var kids = currentNode.get('Kids');\\r\\n          if (!Array.isArray(kids)) {\\r\\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\\r\\n            return;\\r\\n          }\\r\\n          for (var last = kids.length - 1; last >= 0; last--) {\\r\\n            nodesToVisit.push(kids[last]);\\r\\n          }\\r\\n        }\\r\\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\\r\\n      }\\r\\n      next();\\r\\n      return capability.promise;\\r\\n    },\\r\\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\\r\\n      var xref = this.xref;\\r\\n      function pagesBeforeRef(kidRef) {\\r\\n        var total = 0;\\r\\n        var parentRef;\\r\\n        return xref.fetchAsync(kidRef).then(function (node) {\\r\\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\\r\\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\\r\\n          }\\r\\n          if (!node) {\\r\\n            return null;\\r\\n          }\\r\\n          if (!(0, _primitives.isDict)(node)) {\\r\\n            throw new _util.FormatError('node must be a Dict.');\\r\\n          }\\r\\n          parentRef = node.getRaw('Parent');\\r\\n          return node.getAsync('Parent');\\r\\n        }).then(function (parent) {\\r\\n          if (!parent) {\\r\\n            return null;\\r\\n          }\\r\\n          if (!(0, _primitives.isDict)(parent)) {\\r\\n            throw new _util.FormatError('parent must be a Dict.');\\r\\n          }\\r\\n          return parent.getAsync('Kids');\\r\\n        }).then(function (kids) {\\r\\n          if (!kids) {\\r\\n            return null;\\r\\n          }\\r\\n          var kidPromises = [];\\r\\n          var found = false;\\r\\n          for (var i = 0; i < kids.length; i++) {\\r\\n            var kid = kids[i];\\r\\n            if (!(0, _primitives.isRef)(kid)) {\\r\\n              throw new _util.FormatError('kid must be a Ref.');\\r\\n            }\\r\\n            if (kid.num === kidRef.num) {\\r\\n              found = true;\\r\\n              break;\\r\\n            }\\r\\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\\r\\n              if (kid.has('Count')) {\\r\\n                var count = kid.get('Count');\\r\\n                total += count;\\r\\n              } else {\\r\\n                total++;\\r\\n              }\\r\\n            }));\\r\\n          }\\r\\n          if (!found) {\\r\\n            throw new _util.FormatError('kid ref not found in parents kids');\\r\\n          }\\r\\n          return Promise.all(kidPromises).then(function () {\\r\\n            return [total, parentRef];\\r\\n          });\\r\\n        });\\r\\n      }\\r\\n      var total = 0;\\r\\n      function next(ref) {\\r\\n        return pagesBeforeRef(ref).then(function (args) {\\r\\n          if (!args) {\\r\\n            return total;\\r\\n          }\\r\\n          var count = args[0];\\r\\n          var parentRef = args[1];\\r\\n          total += count;\\r\\n          return next(parentRef);\\r\\n        });\\r\\n      }\\r\\n      return next(pageRef);\\r\\n    }\\r\\n  };\\r\\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\\r\\n    function addDefaultProtocolToUrl(url) {\\r\\n      if (url.indexOf('www.') === 0) {\\r\\n        return 'http://' + url;\\r\\n      }\\r\\n      return url;\\r\\n    }\\r\\n    function tryConvertUrlEncoding(url) {\\r\\n      try {\\r\\n        return (0, _util.stringToUTF8String)(url);\\r\\n      } catch (e) {\\r\\n        return url;\\r\\n      }\\r\\n    }\\r\\n    var destDict = params.destDict;\\r\\n    if (!(0, _primitives.isDict)(destDict)) {\\r\\n      (0, _util.warn)('parseDestDictionary: \\\"destDict\\\" must be a dictionary.');\\r\\n      return;\\r\\n    }\\r\\n    var resultObj = params.resultObj;\\r\\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\\r\\n      (0, _util.warn)('parseDestDictionary: \\\"resultObj\\\" must be an object.');\\r\\n      return;\\r\\n    }\\r\\n    var docBaseUrl = params.docBaseUrl || null;\\r\\n    var action = destDict.get('A'),\\r\\n        url,\\r\\n        dest;\\r\\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\\r\\n      action = destDict.get('Dest');\\r\\n    }\\r\\n    if ((0, _primitives.isDict)(action)) {\\r\\n      var actionType = action.get('S');\\r\\n      if (!(0, _primitives.isName)(actionType)) {\\r\\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\\r\\n        return;\\r\\n      }\\r\\n      var actionName = actionType.name;\\r\\n      switch (actionName) {\\r\\n        case 'URI':\\r\\n          url = action.get('URI');\\r\\n          if ((0, _primitives.isName)(url)) {\\r\\n            url = '/' + url.name;\\r\\n          } else if ((0, _util.isString)(url)) {\\r\\n            url = addDefaultProtocolToUrl(url);\\r\\n          }\\r\\n          break;\\r\\n        case 'GoTo':\\r\\n          dest = action.get('D');\\r\\n          break;\\r\\n        case 'Launch':\\r\\n        case 'GoToR':\\r\\n          var urlDict = action.get('F');\\r\\n          if ((0, _primitives.isDict)(urlDict)) {\\r\\n            url = urlDict.get('F') || null;\\r\\n          } else if ((0, _util.isString)(urlDict)) {\\r\\n            url = urlDict;\\r\\n          }\\r\\n          var remoteDest = action.get('D');\\r\\n          if (remoteDest) {\\r\\n            if ((0, _primitives.isName)(remoteDest)) {\\r\\n              remoteDest = remoteDest.name;\\r\\n            }\\r\\n            if ((0, _util.isString)(url)) {\\r\\n              var baseUrl = url.split('#')[0];\\r\\n              if ((0, _util.isString)(remoteDest)) {\\r\\n                url = baseUrl + '#' + remoteDest;\\r\\n              } else if (Array.isArray(remoteDest)) {\\r\\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n          var newWindow = action.get('NewWindow');\\r\\n          if ((0, _util.isBool)(newWindow)) {\\r\\n            resultObj.newWindow = newWindow;\\r\\n          }\\r\\n          break;\\r\\n        case 'Named':\\r\\n          var namedAction = action.get('N');\\r\\n          if ((0, _primitives.isName)(namedAction)) {\\r\\n            resultObj.action = namedAction.name;\\r\\n          }\\r\\n          break;\\r\\n        case 'JavaScript':\\r\\n          var jsAction = action.get('JS'),\\r\\n              js;\\r\\n          if ((0, _primitives.isStream)(jsAction)) {\\r\\n            js = (0, _util.bytesToString)(jsAction.getBytes());\\r\\n          } else if ((0, _util.isString)(jsAction)) {\\r\\n            js = jsAction;\\r\\n          }\\r\\n          if (js) {\\r\\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\\r\\n            var regex = new RegExp('^\\\\\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\\\\\.') + ')\\\\\\\\((?:\\\\'|\\\\\\\")([^\\\\'\\\\\\\"]*)(?:\\\\'|\\\\\\\")(?:,\\\\\\\\s*(\\\\\\\\w+)\\\\\\\\)|\\\\\\\\))', 'i');\\r\\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\\r\\n            if (jsUrl && jsUrl[2]) {\\r\\n              url = jsUrl[2];\\r\\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\\r\\n                resultObj.newWindow = true;\\r\\n              }\\r\\n              break;\\r\\n            }\\r\\n          }\\r\\n        default:\\r\\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \\\"' + actionName + '\\\".');\\r\\n          break;\\r\\n      }\\r\\n    } else if (destDict.has('Dest')) {\\r\\n      dest = destDict.get('Dest');\\r\\n    }\\r\\n    if ((0, _util.isString)(url)) {\\r\\n      url = tryConvertUrlEncoding(url);\\r\\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\\r\\n      if (absoluteUrl) {\\r\\n        resultObj.url = absoluteUrl.href;\\r\\n      }\\r\\n      resultObj.unsafeUrl = url;\\r\\n    }\\r\\n    if (dest) {\\r\\n      if ((0, _primitives.isName)(dest)) {\\r\\n        dest = dest.name;\\r\\n      }\\r\\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\\r\\n        resultObj.dest = dest;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return Catalog;\\r\\n}();\\r\\nvar XRef = function XRefClosure() {\\r\\n  function XRef(stream, pdfManager) {\\r\\n    this.stream = stream;\\r\\n    this.pdfManager = pdfManager;\\r\\n    this.entries = [];\\r\\n    this.xrefstms = Object.create(null);\\r\\n    this.cache = [];\\r\\n    this.stats = {\\r\\n      streamTypes: [],\\r\\n      fontTypes: []\\r\\n    };\\r\\n  }\\r\\n  XRef.prototype = {\\r\\n    setStartXRef: function XRef_setStartXRef(startXRef) {\\r\\n      this.startXRefQueue = [startXRef];\\r\\n    },\\r\\n    parse: function XRef_parse(recoveryMode) {\\r\\n      var trailerDict;\\r\\n      if (!recoveryMode) {\\r\\n        trailerDict = this.readXRef();\\r\\n      } else {\\r\\n        (0, _util.warn)('Indexing all PDF objects');\\r\\n        trailerDict = this.indexObjects();\\r\\n      }\\r\\n      trailerDict.assignXref(this);\\r\\n      this.trailer = trailerDict;\\r\\n      var encrypt = trailerDict.get('Encrypt');\\r\\n      if ((0, _primitives.isDict)(encrypt)) {\\r\\n        var ids = trailerDict.get('ID');\\r\\n        var fileId = ids && ids.length ? ids[0] : '';\\r\\n        encrypt.suppressEncryption = true;\\r\\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\\r\\n      }\\r\\n      if (!(this.root = trailerDict.get('Root'))) {\\r\\n        throw new _util.FormatError('Invalid root reference');\\r\\n      }\\r\\n    },\\r\\n    processXRefTable: function XRef_processXRefTable(parser) {\\r\\n      if (!('tableState' in this)) {\\r\\n        this.tableState = {\\r\\n          entryNum: 0,\\r\\n          streamPos: parser.lexer.stream.pos,\\r\\n          parserBuf1: parser.buf1,\\r\\n          parserBuf2: parser.buf2\\r\\n        };\\r\\n      }\\r\\n      var obj = this.readXRefTable(parser);\\r\\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\r\\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\\r\\n      }\\r\\n      var dict = parser.getObj();\\r\\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\\r\\n        dict = dict.dict;\\r\\n      }\\r\\n      if (!(0, _primitives.isDict)(dict)) {\\r\\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\\r\\n      }\\r\\n      delete this.tableState;\\r\\n      return dict;\\r\\n    },\\r\\n    readXRefTable: function XRef_readXRefTable(parser) {\\r\\n      var stream = parser.lexer.stream;\\r\\n      var tableState = this.tableState;\\r\\n      stream.pos = tableState.streamPos;\\r\\n      parser.buf1 = tableState.parserBuf1;\\r\\n      parser.buf2 = tableState.parserBuf2;\\r\\n      var obj;\\r\\n      while (true) {\\r\\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\\r\\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\\r\\n            break;\\r\\n          }\\r\\n          tableState.firstEntryNum = obj;\\r\\n          tableState.entryCount = parser.getObj();\\r\\n        }\\r\\n        var first = tableState.firstEntryNum;\\r\\n        var count = tableState.entryCount;\\r\\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\\r\\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\\r\\n        }\\r\\n        for (var i = tableState.entryNum; i < count; i++) {\\r\\n          tableState.streamPos = stream.pos;\\r\\n          tableState.entryNum = i;\\r\\n          tableState.parserBuf1 = parser.buf1;\\r\\n          tableState.parserBuf2 = parser.buf2;\\r\\n          var entry = {};\\r\\n          entry.offset = parser.getObj();\\r\\n          entry.gen = parser.getObj();\\r\\n          var type = parser.getObj();\\r\\n          if ((0, _primitives.isCmd)(type, 'f')) {\\r\\n            entry.free = true;\\r\\n          } else if ((0, _primitive\";a.a+=\"s.isCmd)(type, 'n')) {\\r\\n            entry.uncompressed = true;\\r\\n          }\\r\\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\\r\\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\\r\\n          }\\r\\n          if (i === 0 && entry.free && first === 1) {\\r\\n            first = 0;\\r\\n          }\\r\\n          if (!this.entries[i + first]) {\\r\\n            this.entries[i + first] = entry;\\r\\n          }\\r\\n        }\\r\\n        tableState.entryNum = 0;\\r\\n        tableState.streamPos = stream.pos;\\r\\n        tableState.parserBuf1 = parser.buf1;\\r\\n        tableState.parserBuf2 = parser.buf2;\\r\\n        delete tableState.firstEntryNum;\\r\\n        delete tableState.entryCount;\\r\\n      }\\r\\n      if (this.entries[0] && !this.entries[0].free) {\\r\\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\\r\\n      }\\r\\n      return obj;\\r\\n    },\\r\\n    processXRefStream: function XRef_processXRefStream(stream) {\\r\\n      if (!('streamState' in this)) {\\r\\n        var streamParameters = stream.dict;\\r\\n        var byteWidths = streamParameters.get('W');\\r\\n        var range = streamParameters.get('Index');\\r\\n        if (!range) {\\r\\n          range = [0, streamParameters.get('Size')];\\r\\n        }\\r\\n        this.streamState = {\\r\\n          entryRanges: range,\\r\\n          byteWidths: byteWidths,\\r\\n          entryNum: 0,\\r\\n          streamPos: stream.pos\\r\\n        };\\r\\n      }\\r\\n      this.readXRefStream(stream);\\r\\n      delete this.streamState;\\r\\n      return stream.dict;\\r\\n    },\\r\\n    readXRefStream: function XRef_readXRefStream(stream) {\\r\\n      var i, j;\\r\\n      var streamState = this.streamState;\\r\\n      stream.pos = streamState.streamPos;\\r\\n      var byteWidths = streamState.byteWidths;\\r\\n      var typeFieldWidth = byteWidths[0];\\r\\n      var offsetFieldWidth = byteWidths[1];\\r\\n      var generationFieldWidth = byteWidths[2];\\r\\n      var entryRanges = streamState.entryRanges;\\r\\n      while (entryRanges.length > 0) {\\r\\n        var first = entryRanges[0];\\r\\n        var n = entryRanges[1];\\r\\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\\r\\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\\r\\n        }\\r\\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\\r\\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\\r\\n        }\\r\\n        for (i = streamState.entryNum; i < n; ++i) {\\r\\n          streamState.entryNum = i;\\r\\n          streamState.streamPos = stream.pos;\\r\\n          var type = 0,\\r\\n              offset = 0,\\r\\n              generation = 0;\\r\\n          for (j = 0; j < typeFieldWidth; ++j) {\\r\\n            type = type << 8 | stream.getByte();\\r\\n          }\\r\\n          if (typeFieldWidth === 0) {\\r\\n            type = 1;\\r\\n          }\\r\\n          for (j = 0; j < offsetFieldWidth; ++j) {\\r\\n            offset = offset << 8 | stream.getByte();\\r\\n          }\\r\\n          for (j = 0; j < generationFieldWidth; ++j) {\\r\\n            generation = generation << 8 | stream.getByte();\\r\\n          }\\r\\n          var entry = {};\\r\\n          entry.offset = offset;\\r\\n          entry.gen = generation;\\r\\n          switch (type) {\\r\\n            case 0:\\r\\n              entry.free = true;\\r\\n              break;\\r\\n            case 1:\\r\\n              entry.uncompressed = true;\\r\\n              break;\\r\\n            case 2:\\r\\n              break;\\r\\n            default:\\r\\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\\r\\n          }\\r\\n          if (!this.entries[first + i]) {\\r\\n            this.entries[first + i] = entry;\\r\\n          }\\r\\n        }\\r\\n        streamState.entryNum = 0;\\r\\n        streamState.streamPos = stream.pos;\\r\\n        entryRanges.splice(0, 2);\\r\\n      }\\r\\n    },\\r\\n    indexObjects: function XRef_indexObjects() {\\r\\n      var TAB = 0x9,\\r\\n          LF = 0xA,\\r\\n          CR = 0xD,\\r\\n          SPACE = 0x20;\\r\\n      var PERCENT = 0x25,\\r\\n          LT = 0x3C;\\r\\n      function readToken(data, offset) {\\r\\n        var token = '',\\r\\n            ch = data[offset];\\r\\n        while (ch !== LF && ch !== CR && ch !== LT) {\\r\\n          if (++offset >= data.length) {\\r\\n            break;\\r\\n          }\\r\\n          token += String.fromCharCode(ch);\\r\\n          ch = data[offset];\\r\\n        }\\r\\n        return token;\\r\\n      }\\r\\n      function skipUntil(data, offset, what) {\\r\\n        var length = what.length,\\r\\n            dataLength = data.length;\\r\\n        var skipped = 0;\\r\\n        while (offset < dataLength) {\\r\\n          var i = 0;\\r\\n          while (i < length && data[offset + i] === what[i]) {\\r\\n            ++i;\\r\\n          }\\r\\n          if (i >= length) {\\r\\n            break;\\r\\n          }\\r\\n          offset++;\\r\\n          skipped++;\\r\\n        }\\r\\n        return skipped;\\r\\n      }\\r\\n      var objRegExp = /^(\\\\d+)\\\\s+(\\\\d+)\\\\s+obj\\\\b/;\\r\\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\\r\\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\\r\\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\\r\\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\\r\\n      this.entries.length = 0;\\r\\n      var stream = this.stream;\\r\\n      stream.pos = 0;\\r\\n      var buffer = stream.getBytes();\\r\\n      var position = stream.start,\\r\\n          length = buffer.length;\\r\\n      var trailers = [],\\r\\n          xrefStms = [];\\r\\n      while (position < length) {\\r\\n        var ch = buffer[position];\\r\\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\\r\\n          ++position;\\r\\n          continue;\\r\\n        }\\r\\n        if (ch === PERCENT) {\\r\\n          do {\\r\\n            ++position;\\r\\n            if (position >= length) {\\r\\n              break;\\r\\n            }\\r\\n            ch = buffer[position];\\r\\n          } while (ch !== LF && ch !== CR);\\r\\n          continue;\\r\\n        }\\r\\n        var token = readToken(buffer, position);\\r\\n        var m;\\r\\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\\\s/.test(token[4]))) {\\r\\n          position += skipUntil(buffer, position, trailerBytes);\\r\\n          trailers.push(position);\\r\\n          position += skipUntil(buffer, position, startxrefBytes);\\r\\n        } else if (m = objRegExp.exec(token)) {\\r\\n          if (typeof this.entries[m[1]] === 'undefined') {\\r\\n            this.entries[m[1]] = {\\r\\n              offset: position - stream.start,\\r\\n              gen: m[2] | 0,\\r\\n              uncompressed: true\\r\\n            };\\r\\n          }\\r\\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\\r\\n          var content = buffer.subarray(position, position + contentLength);\\r\\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\\r\\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\\r\\n            xrefStms.push(position - stream.start);\\r\\n            this.xrefstms[position - stream.start] = 1;\\r\\n          }\\r\\n          position += contentLength;\\r\\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\\\s/.test(token[7]))) {\\r\\n          trailers.push(position);\\r\\n          position += skipUntil(buffer, position, startxrefBytes);\\r\\n        } else {\\r\\n          position += token.length + 1;\\r\\n        }\\r\\n      }\\r\\n      var i, ii;\\r\\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\\r\\n        this.startXRefQueue.push(xrefStms[i]);\\r\\n        this.readXRef(true);\\r\\n      }\\r\\n      var dict;\\r\\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\\r\\n        stream.pos = trailers[i];\\r\\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\\r\\n        var obj = parser.getObj();\\r\\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\\r\\n          continue;\\r\\n        }\\r\\n        dict = parser.getObj();\\r\\n        if (!(0, _primitives.isDict)(dict)) {\\r\\n          continue;\\r\\n        }\\r\\n        if (dict.has('ID')) {\\r\\n          return dict;\\r\\n        }\\r\\n      }\\r\\n      if (dict) {\\r\\n        return dict;\\r\\n      }\\r\\n      throw new _util.InvalidPDFException('Invalid PDF structure');\\r\\n    },\\r\\n    readXRef: function XRef_readXRef(recoveryMode) {\\r\\n      var stream = this.stream;\\r\\n      var startXRefParsedCache = Object.create(null);\\r\\n      try {\\r\\n        while (this.startXRefQueue.length) {\\r\\n          var startXRef = this.startXRefQueue[0];\\r\\n          if (startXRefParsedCache[startXRef]) {\\r\\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\\r\\n            this.startXRefQueue.shift();\\r\\n            continue;\\r\\n          }\\r\\n          startXRefParsedCache[startXRef] = true;\\r\\n          stream.pos = startXRef + stream.start;\\r\\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\r\\n          var obj = parser.getObj();\\r\\n          var dict;\\r\\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\\r\\n            dict = this.processXRefTable(parser);\\r\\n            if (!this.topDict) {\\r\\n              this.topDict = dict;\\r\\n            }\\r\\n            obj = dict.get('XRefStm');\\r\\n            if (Number.isInteger(obj)) {\\r\\n              var pos = obj;\\r\\n              if (!(pos in this.xrefstms)) {\\r\\n                this.xrefstms[pos] = 1;\\r\\n                this.startXRefQueue.push(pos);\\r\\n              }\\r\\n            }\\r\\n          } else if (Number.isInteger(obj)) {\\r\\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\\r\\n              throw new _util.FormatError('Invalid XRef stream');\\r\\n            }\\r\\n            dict = this.processXRefStream(obj);\\r\\n            if (!this.topDict) {\\r\\n              this.topDict = dict;\\r\\n            }\\r\\n            if (!dict) {\\r\\n              throw new _util.FormatError('Failed to read XRef stream');\\r\\n            }\\r\\n          } else {\\r\\n            throw new _util.FormatError('Invalid XRef stream header');\\r\\n          }\\r\\n          obj = dict.get('Prev');\\r\\n          if (Number.isInteger(obj)) {\\r\\n            this.startXRefQueue.push(obj);\\r\\n          } else if ((0, _primitives.isRef)(obj)) {\\r\\n            this.startXRefQueue.push(obj.num);\\r\\n          }\\r\\n          this.startXRefQueue.shift();\\r\\n        }\\r\\n        return this.topDict;\\r\\n      } catch (e) {\\r\\n        if (e instanceof _util.MissingDataException) {\\r\\n          throw e;\\r\\n        }\\r\\n        (0, _util.info)('(while reading XRef): ' + e);\\r\\n      }\\r\\n      if (recoveryMode) {\\r\\n        return;\\r\\n      }\\r\\n      throw new _util.XRefParseException();\\r\\n    },\\r\\n    getEntry: function XRef_getEntry(i) {\\r\\n      var xrefEntry = this.entries[i];\\r\\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\\r\\n        return xrefEntry;\\r\\n      }\\r\\n      return null;\\r\\n    },\\r\\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\\r\\n      if (!(0, _primitives.isRef)(obj)) {\\r\\n        return obj;\\r\\n      }\\r\\n      return this.fetch(obj, suppressEncryption);\\r\\n    },\\r\\n    fetch: function XRef_fetch(ref, suppressEncryption) {\\r\\n      if (!(0, _primitives.isRef)(ref)) {\\r\\n        throw new Error('ref object is not a reference');\\r\\n      }\\r\\n      var num = ref.num;\\r\\n      if (num in this.cache) {\\r\\n        var cacheEntry = this.cache[num];\\r\\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\\r\\n          cacheEntry.objId = ref.toString();\\r\\n        }\\r\\n        return cacheEntry;\\r\\n      }\\r\\n      var xrefEntry = this.getEntry(num);\\r\\n      if (xrefEntry === null) {\\r\\n        return this.cache[num] = null;\\r\\n      }\\r\\n      if (xrefEntry.uncompressed) {\\r\\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\\r\\n      } else {\\r\\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\\r\\n      }\\r\\n      if ((0, _primitives.isDict)(xrefEntry)) {\\r\\n        xrefEntry.objId = ref.toString();\\r\\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\\r\\n        xrefEntry.dict.objId = ref.toString();\\r\\n      }\\r\\n      return xrefEntry;\\r\\n    },\\r\\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\\r\\n      var gen = ref.gen;\\r\\n      var num = ref.num;\\r\\n      if (xrefEntry.gen !== gen) {\\r\\n        throw new _util.FormatError('inconsistent generation in XRef');\\r\\n      }\\r\\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\\r\\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\\r\\n      var obj1 = parser.getObj();\\r\\n      var obj2 = parser.getObj();\\r\\n      var obj3 = parser.getObj();\\r\\n      if (!Number.isInteger(obj1)) {\\r\\n        obj1 = parseInt(obj1, 10);\\r\\n      }\\r\\n      if (!Number.isInteger(obj2)) {\\r\\n        obj2 = parseInt(obj2, 10);\\r\\n      }\\r\\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\\r\\n        throw new _util.FormatError('bad XRef entry');\\r\\n      }\\r\\n      if (obj3.cmd !== 'obj') {\\r\\n        if (obj3.cmd.indexOf('obj') === 0) {\\r\\n          num = parseInt(obj3.cmd.substring(3), 10);\\r\\n          if (!Number.isNaN(num)) {\\r\\n            return num;\\r\\n          }\\r\\n        }\\r\\n        throw new _util.FormatError('bad XRef entry');\\r\\n      }\\r\\n      if (this.encrypt && !suppressEncryption) {\\r\\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\\r\\n      } else {\\r\\n        xrefEntry = parser.getObj();\\r\\n      }\\r\\n      if (!(0, _primitives.isStream)(xrefEntry)) {\\r\\n        this.cache[num] = xrefEntry;\\r\\n      }\\r\\n      return xrefEntry;\\r\\n    },\\r\\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\\r\\n      var tableOffset = xrefEntry.offset;\\r\\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\\r\\n      if (!(0, _primitives.isStream)(stream)) {\\r\\n        throw new _util.FormatError('bad ObjStm stream');\\r\\n      }\\r\\n      var first = stream.dict.get('First');\\r\\n      var n = stream.dict.get('N');\\r\\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\\r\\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\\r\\n      }\\r\\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\\r\\n      parser.allowStreams = true;\\r\\n      var i,\\r\\n          entries = [],\\r\\n          num,\\r\\n          nums = [];\\r\\n      for (i = 0; i < n; ++i) {\\r\\n        num = parser.getObj();\\r\\n        if (!Number.isInteger(num)) {\\r\\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\\r\\n        }\\r\\n        nums.push(num);\\r\\n        var offset = parser.getObj();\\r\\n        if (!Number.isInteger(offset)) {\\r\\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\\r\\n        }\\r\\n      }\\r\\n      for (i = 0; i < n; ++i) {\\r\\n        entries.push(parser.getObj());\\r\\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\\r\\n          parser.shift();\\r\\n        }\\r\\n        num = nums[i];\\r\\n        var entry = this.entries[num];\\r\\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\\r\\n          this.cache[num] = entries[i];\\r\\n        }\\r\\n      }\\r\\n      xrefEntry = entries[xrefEntry.gen];\\r\\n      if (xrefEntry === undefined) {\\r\\n        throw new _util.FormatError('bad XRef entry for compressed object');\\r\\n      }\\r\\n      return xrefEntry;\\r\\n    },\\r\\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\\r\\n      if (!(0, _primitives.isRef)(obj)) {\\r\\n        return Promise.resolve(obj);\\r\\n      }\\r\\n      return this.fetchAsync(obj, suppressEncryption);\\r\\n    },\\r\\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\\r\\n      var streamManager = this.stream.manager;\\r\\n      var xref = this;\\r\\n      return new Promise(function tryFetch(resolve, reject) {\\r\\n        try {\\r\\n          resolve(xref.fetch(ref, suppressEncryption));\\r\\n        } catch (e) {\\r\\n          if (e instanceof _util.MissingDataException) {\\r\\n            streamManager.requestRange(e.begin, e.end).then(function () {\\r\\n              tryFetch(resolve, reject);\\r\\n            }, reject);\\r\\n            return;\\r\\n          }\\r\\n          reject(e);\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    getCatalogObj: function XRef_getCatalogObj() {\\r\\n      return this.root;\\r\\n    }\\r\\n  };\\r\\n  return XRef;\\r\\n}();\\r\\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\\r\\n  function NameOrNumberTree(root, xref) {\\r\\n    throw new Error('Cannot initialize NameOrNumberTree.');\\r\\n  }\\r\\n  NameOrNumberTree.prototype = {\\r\\n    getAll: function NameOrNumberTree_getAll() {\\r\\n      var dict = Object.create(null);\\r\\n      if (!this.root) {\\r\\n        return dict;\\r\\n      }\\r\\n      \";a.a+=\"var xref = this.xref;\\r\\n      var processed = new _primitives.RefSet();\\r\\n      processed.put(this.root);\\r\\n      var queue = [this.root];\\r\\n      while (queue.length > 0) {\\r\\n        var i, n;\\r\\n        var obj = xref.fetchIfRef(queue.shift());\\r\\n        if (!(0, _primitives.isDict)(obj)) {\\r\\n          continue;\\r\\n        }\\r\\n        if (obj.has('Kids')) {\\r\\n          var kids = obj.get('Kids');\\r\\n          for (i = 0, n = kids.length; i < n; i++) {\\r\\n            var kid = kids[i];\\r\\n            if (processed.has(kid)) {\\r\\n              throw new _util.FormatError('Duplicate entry in \\\"' + this._type + '\\\" tree.');\\r\\n            }\\r\\n            queue.push(kid);\\r\\n            processed.put(kid);\\r\\n          }\\r\\n          continue;\\r\\n        }\\r\\n        var entries = obj.get(this._type);\\r\\n        if (Array.isArray(entries)) {\\r\\n          for (i = 0, n = entries.length; i < n; i += 2) {\\r\\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return dict;\\r\\n    },\\r\\n    get: function NameOrNumberTree_get(key) {\\r\\n      if (!this.root) {\\r\\n        return null;\\r\\n      }\\r\\n      var xref = this.xref;\\r\\n      var kidsOrEntries = xref.fetchIfRef(this.root);\\r\\n      var loopCount = 0;\\r\\n      var MAX_LEVELS = 10;\\r\\n      var l, r, m;\\r\\n      while (kidsOrEntries.has('Kids')) {\\r\\n        if (++loopCount > MAX_LEVELS) {\\r\\n          (0, _util.warn)('Search depth limit reached for \\\"' + this._type + '\\\" tree.');\\r\\n          return null;\\r\\n        }\\r\\n        var kids = kidsOrEntries.get('Kids');\\r\\n        if (!Array.isArray(kids)) {\\r\\n          return null;\\r\\n        }\\r\\n        l = 0;\\r\\n        r = kids.length - 1;\\r\\n        while (l <= r) {\\r\\n          m = l + r >> 1;\\r\\n          var kid = xref.fetchIfRef(kids[m]);\\r\\n          var limits = kid.get('Limits');\\r\\n          if (key < xref.fetchIfRef(limits[0])) {\\r\\n            r = m - 1;\\r\\n          } else if (key > xref.fetchIfRef(limits[1])) {\\r\\n            l = m + 1;\\r\\n          } else {\\r\\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        if (l > r) {\\r\\n          return null;\\r\\n        }\\r\\n      }\\r\\n      var entries = kidsOrEntries.get(this._type);\\r\\n      if (Array.isArray(entries)) {\\r\\n        l = 0;\\r\\n        r = entries.length - 2;\\r\\n        while (l <= r) {\\r\\n          m = l + r & ~1;\\r\\n          var currentKey = xref.fetchIfRef(entries[m]);\\r\\n          if (key < currentKey) {\\r\\n            r = m - 2;\\r\\n          } else if (key > currentKey) {\\r\\n            l = m + 2;\\r\\n          } else {\\r\\n            return xref.fetchIfRef(entries[m + 1]);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return null;\\r\\n    }\\r\\n  };\\r\\n  return NameOrNumberTree;\\r\\n}();\\r\\nvar NameTree = function NameTreeClosure() {\\r\\n  function NameTree(root, xref) {\\r\\n    this.root = root;\\r\\n    this.xref = xref;\\r\\n    this._type = 'Names';\\r\\n  }\\r\\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\\r\\n  return NameTree;\\r\\n}();\\r\\nvar NumberTree = function NumberTreeClosure() {\\r\\n  function NumberTree(root, xref) {\\r\\n    this.root = root;\\r\\n    this.xref = xref;\\r\\n    this._type = 'Nums';\\r\\n  }\\r\\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\\r\\n  return NumberTree;\\r\\n}();\\r\\nvar FileSpec = function FileSpecClosure() {\\r\\n  function FileSpec(root, xref) {\\r\\n    if (!root || !(0, _primitives.isDict)(root)) {\\r\\n      return;\\r\\n    }\\r\\n    this.xref = xref;\\r\\n    this.root = root;\\r\\n    if (root.has('FS')) {\\r\\n      this.fs = root.get('FS');\\r\\n    }\\r\\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\\r\\n    if (root.has('RF')) {\\r\\n      (0, _util.warn)('Related file specifications are not supported');\\r\\n    }\\r\\n    this.contentAvailable = true;\\r\\n    if (!root.has('EF')) {\\r\\n      this.contentAvailable = false;\\r\\n      (0, _util.warn)('Non-embedded file specifications are not supported');\\r\\n    }\\r\\n  }\\r\\n  function pickPlatformItem(dict) {\\r\\n    if (dict.has('UF')) {\\r\\n      return dict.get('UF');\\r\\n    } else if (dict.has('F')) {\\r\\n      return dict.get('F');\\r\\n    } else if (dict.has('Unix')) {\\r\\n      return dict.get('Unix');\\r\\n    } else if (dict.has('Mac')) {\\r\\n      return dict.get('Mac');\\r\\n    } else if (dict.has('DOS')) {\\r\\n      return dict.get('DOS');\\r\\n    }\\r\\n    return null;\\r\\n  }\\r\\n  FileSpec.prototype = {\\r\\n    get filename() {\\r\\n      if (!this._filename && this.root) {\\r\\n        var filename = pickPlatformItem(this.root) || 'unnamed';\\r\\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\\\\\\\\\/g, '\\\\\\\\').replace(/\\\\\\\\\\\\//g, '/').replace(/\\\\\\\\/g, '/');\\r\\n      }\\r\\n      return this._filename;\\r\\n    },\\r\\n    get content() {\\r\\n      if (!this.contentAvailable) {\\r\\n        return null;\\r\\n      }\\r\\n      if (!this.contentRef && this.root) {\\r\\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\\r\\n      }\\r\\n      var content = null;\\r\\n      if (this.contentRef) {\\r\\n        var xref = this.xref;\\r\\n        var fileObj = xref.fetchIfRef(this.contentRef);\\r\\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\\r\\n          content = fileObj.getBytes();\\r\\n        } else {\\r\\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\\r\\n        }\\r\\n      } else {\\r\\n        (0, _util.warn)('Embedded file specification does not have a content');\\r\\n      }\\r\\n      return content;\\r\\n    },\\r\\n    get serializable() {\\r\\n      return {\\r\\n        filename: this.filename,\\r\\n        content: this.content\\r\\n      };\\r\\n    }\\r\\n  };\\r\\n  return FileSpec;\\r\\n}();\\r\\nvar ObjectLoader = function () {\\r\\n  function mayHaveChildren(value) {\\r\\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\\r\\n  }\\r\\n  function addChildren(node, nodesToVisit) {\\r\\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\\r\\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\\r\\n      var dictKeys = dict.getKeys();\\r\\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\\r\\n        var rawValue = dict.getRaw(dictKeys[i]);\\r\\n        if (mayHaveChildren(rawValue)) {\\r\\n          nodesToVisit.push(rawValue);\\r\\n        }\\r\\n      }\\r\\n    } else if (Array.isArray(node)) {\\r\\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\\r\\n        var value = node[_i];\\r\\n        if (mayHaveChildren(value)) {\\r\\n          nodesToVisit.push(value);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function ObjectLoader(dict, keys, xref) {\\r\\n    this.dict = dict;\\r\\n    this.keys = keys;\\r\\n    this.xref = xref;\\r\\n    this.refSet = null;\\r\\n    this.capability = null;\\r\\n  }\\r\\n  ObjectLoader.prototype = {\\r\\n    load: function load() {\\r\\n      this.capability = (0, _util.createPromiseCapability)();\\r\\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\\r\\n        this.capability.resolve();\\r\\n        return this.capability.promise;\\r\\n      }\\r\\n      var keys = this.keys,\\r\\n          dict = this.dict;\\r\\n\\r\\n      this.refSet = new _primitives.RefSet();\\r\\n      var nodesToVisit = [];\\r\\n      for (var i = 0, ii = keys.length; i < ii; i++) {\\r\\n        var rawValue = dict.getRaw(keys[i]);\\r\\n        if (rawValue !== undefined) {\\r\\n          nodesToVisit.push(rawValue);\\r\\n        }\\r\\n      }\\r\\n      this._walk(nodesToVisit);\\r\\n      return this.capability.promise;\\r\\n    },\\r\\n    _walk: function _walk(nodesToVisit) {\\r\\n      var _this3 = this;\\r\\n\\r\\n      var nodesToRevisit = [];\\r\\n      var pendingRequests = [];\\r\\n      while (nodesToVisit.length) {\\r\\n        var currentNode = nodesToVisit.pop();\\r\\n        if ((0, _primitives.isRef)(currentNode)) {\\r\\n          if (this.refSet.has(currentNode)) {\\r\\n            continue;\\r\\n          }\\r\\n          try {\\r\\n            this.refSet.put(currentNode);\\r\\n            currentNode = this.xref.fetch(currentNode);\\r\\n          } catch (ex) {\\r\\n            if (!(ex instanceof _util.MissingDataException)) {\\r\\n              throw ex;\\r\\n            }\\r\\n            nodesToRevisit.push(currentNode);\\r\\n            pendingRequests.push({\\r\\n              begin: ex.begin,\\r\\n              end: ex.end\\r\\n            });\\r\\n          }\\r\\n        }\\r\\n        if (currentNode && currentNode.getBaseStreams) {\\r\\n          var baseStreams = currentNode.getBaseStreams();\\r\\n          var foundMissingData = false;\\r\\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\\r\\n            var stream = baseStreams[i];\\r\\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\\r\\n              foundMissingData = true;\\r\\n              pendingRequests.push({\\r\\n                begin: stream.start,\\r\\n                end: stream.end\\r\\n              });\\r\\n            }\\r\\n          }\\r\\n          if (foundMissingData) {\\r\\n            nodesToRevisit.push(currentNode);\\r\\n          }\\r\\n        }\\r\\n        addChildren(currentNode, nodesToVisit);\\r\\n      }\\r\\n      if (pendingRequests.length) {\\r\\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\\r\\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\\r\\n            var node = nodesToRevisit[_i2];\\r\\n            if ((0, _primitives.isRef)(node)) {\\r\\n              _this3.refSet.remove(node);\\r\\n            }\\r\\n          }\\r\\n          _this3._walk(nodesToRevisit);\\r\\n        }, this.capability.reject);\\r\\n        return;\\r\\n      }\\r\\n      this.refSet = null;\\r\\n      this.capability.resolve();\\r\\n    }\\r\\n  };\\r\\n  return ObjectLoader;\\r\\n}();\\r\\nexports.Catalog = Catalog;\\r\\nexports.ObjectLoader = ObjectLoader;\\r\\nexports.XRef = XRef;\\r\\nexports.FileSpec = FileSpec;\\r\\n\\r\\n/***/ }),\\r\\n/* 80 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.JpxImage = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _arithmetic_decoder = __w_pdfjs_require__(81);\\r\\n\\r\\nvar JpxError = function JpxErrorClosure() {\\r\\n  function JpxError(msg) {\\r\\n    this.message = 'JPX error: ' + msg;\\r\\n  }\\r\\n  JpxError.prototype = new Error();\\r\\n  JpxError.prototype.name = 'JpxError';\\r\\n  JpxError.constructor = JpxError;\\r\\n  return JpxError;\\r\\n}();\\r\\nvar JpxImage = function JpxImageClosure() {\\r\\n  var SubbandsGainLog2 = {\\r\\n    'LL': 0,\\r\\n    'LH': 1,\\r\\n    'HL': 1,\\r\\n    'HH': 2\\r\\n  };\\r\\n  function JpxImage() {\\r\\n    this.failOnCorruptedImage = false;\\r\\n  }\\r\\n  JpxImage.prototype = {\\r\\n    parse: function JpxImage_parse(data) {\\r\\n      var head = (0, _util.readUint16)(data, 0);\\r\\n      if (head === 0xFF4F) {\\r\\n        this.parseCodestream(data, 0, data.length);\\r\\n        return;\\r\\n      }\\r\\n      var position = 0,\\r\\n          length = data.length;\\r\\n      while (position < length) {\\r\\n        var headerSize = 8;\\r\\n        var lbox = (0, _util.readUint32)(data, position);\\r\\n        var tbox = (0, _util.readUint32)(data, position + 4);\\r\\n        position += headerSize;\\r\\n        if (lbox === 1) {\\r\\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\\r\\n          position += 8;\\r\\n          headerSize += 8;\\r\\n        }\\r\\n        if (lbox === 0) {\\r\\n          lbox = length - position + headerSize;\\r\\n        }\\r\\n        if (lbox < headerSize) {\\r\\n          throw new JpxError('Invalid box field size');\\r\\n        }\\r\\n        var dataLength = lbox - headerSize;\\r\\n        var jumpDataLength = true;\\r\\n        switch (tbox) {\\r\\n          case 0x6A703268:\\r\\n            jumpDataLength = false;\\r\\n            break;\\r\\n          case 0x636F6C72:\\r\\n            var method = data[position];\\r\\n            if (method === 1) {\\r\\n              var colorspace = (0, _util.readUint32)(data, position + 3);\\r\\n              switch (colorspace) {\\r\\n                case 16:\\r\\n                case 17:\\r\\n                case 18:\\r\\n                  break;\\r\\n                default:\\r\\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\\r\\n                  break;\\r\\n              }\\r\\n            } else if (method === 2) {\\r\\n              (0, _util.info)('ICC profile not supported');\\r\\n            }\\r\\n            break;\\r\\n          case 0x6A703263:\\r\\n            this.parseCodestream(data, position, position + dataLength);\\r\\n            break;\\r\\n          case 0x6A502020:\\r\\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\\r\\n              (0, _util.warn)('Invalid JP2 signature');\\r\\n            }\\r\\n            break;\\r\\n          case 0x6A501A1A:\\r\\n          case 0x66747970:\\r\\n          case 0x72726571:\\r\\n          case 0x72657320:\\r\\n          case 0x69686472:\\r\\n            break;\\r\\n          default:\\r\\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\\r\\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\\r\\n            break;\\r\\n        }\\r\\n        if (jumpDataLength) {\\r\\n          position += dataLength;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\\r\\n      var newByte = stream.getByte();\\r\\n      while (newByte >= 0) {\\r\\n        var oldByte = newByte;\\r\\n        newByte = stream.getByte();\\r\\n        var code = oldByte << 8 | newByte;\\r\\n        if (code === 0xFF51) {\\r\\n          stream.skip(4);\\r\\n          var Xsiz = stream.getInt32() >>> 0;\\r\\n          var Ysiz = stream.getInt32() >>> 0;\\r\\n          var XOsiz = stream.getInt32() >>> 0;\\r\\n          var YOsiz = stream.getInt32() >>> 0;\\r\\n          stream.skip(16);\\r\\n          var Csiz = stream.getUint16();\\r\\n          this.width = Xsiz - XOsiz;\\r\\n          this.height = Ysiz - YOsiz;\\r\\n          this.componentsCount = Csiz;\\r\\n          this.bitsPerComponent = 8;\\r\\n          return;\\r\\n        }\\r\\n      }\\r\\n      throw new JpxError('No size marker found in JPX stream');\\r\\n    },\\r\\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\\r\\n      var context = {};\\r\\n      var doNotRecover = false;\\r\\n      try {\\r\\n        var position = start;\\r\\n        while (position + 1 < end) {\\r\\n          var code = (0, _util.readUint16)(data, position);\\r\\n          position += 2;\\r\\n          var length = 0,\\r\\n              j,\\r\\n              sqcd,\\r\\n              spqcds,\\r\\n              spqcdSize,\\r\\n              scalarExpounded,\\r\\n              tile;\\r\\n          switch (code) {\\r\\n            case 0xFF4F:\\r\\n              context.mainHeader = true;\\r\\n              break;\\r\\n            case 0xFFD9:\\r\\n              break;\\r\\n            case 0xFF51:\\r\\n              length = (0, _util.readUint16)(data, position);\\r\\n              var siz = {};\\r\\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\\r\\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\\r\\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\\r\\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\\r\\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\\r\\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\\r\\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\\r\\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\\r\\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\\r\\n              siz.Csiz = componentsCount;\\r\\n              var components = [];\\r\\n              j = position + 38;\\r\\n              for (var i = 0; i < componentsCount; i++) {\\r\\n                var component = {\\r\\n                  precision: (data[j] & 0x7F) + 1,\\r\\n                  isSigned: !!(data[j] & 0x80),\\r\\n                  XRsiz: data[j + 1],\\r\\n                  YRsiz: data[j + 1]\\r\\n                };\\r\\n                calculateComponentDimensions(component, siz);\\r\\n                components.push(component);\\r\\n              }\\r\\n              context.SIZ = siz;\\r\\n              context.components = components;\\r\\n              calculateTileGrids(context, components);\\r\\n              context.QCC = [];\\r\\n              context.COC = [];\\r\\n              break;\\r\\n            case 0xFF5C:\\r\\n              length = (0, _util.readUint16)(data, position);\\r\\n              var qcd = {};\\r\\n              j = position + 2;\\r\\n              sqcd = data[j++];\\r\\n              switch (sqcd & 0x1F) {\\r\\n                case 0:\\r\\n                  spqcdSize = 8;\\r\\n                  scalarExpounded = true;\\r\\n                  break;\\r\\n                case 1:\\r\\n                  spqcdSize = 16;\\r\\n                  scalarExpounded = false;\\r\\n                  break;\\r\\n                case 2:\\r\\n                  spqcdSize = 16;\\r\\n                  scalarExpounded = true;\\r\\n                  break;\\r\\n                default:\\r\\n                  throw new Error(\";a.a+=\"'Invalid SQcd value ' + sqcd);\\r\\n              }\\r\\n              qcd.noQuantization = spqcdSize === 8;\\r\\n              qcd.scalarExpounded = scalarExpounded;\\r\\n              qcd.guardBits = sqcd >> 5;\\r\\n              spqcds = [];\\r\\n              while (j < length + position) {\\r\\n                var spqcd = {};\\r\\n                if (spqcdSize === 8) {\\r\\n                  spqcd.epsilon = data[j++] >> 3;\\r\\n                  spqcd.mu = 0;\\r\\n                } else {\\r\\n                  spqcd.epsilon = data[j] >> 3;\\r\\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\r\\n                  j += 2;\\r\\n                }\\r\\n                spqcds.push(spqcd);\\r\\n              }\\r\\n              qcd.SPqcds = spqcds;\\r\\n              if (context.mainHeader) {\\r\\n                context.QCD = qcd;\\r\\n              } else {\\r\\n                context.currentTile.QCD = qcd;\\r\\n                context.currentTile.QCC = [];\\r\\n              }\\r\\n              break;\\r\\n            case 0xFF5D:\\r\\n              length = (0, _util.readUint16)(data, position);\\r\\n              var qcc = {};\\r\\n              j = position + 2;\\r\\n              var cqcc;\\r\\n              if (context.SIZ.Csiz < 257) {\\r\\n                cqcc = data[j++];\\r\\n              } else {\\r\\n                cqcc = (0, _util.readUint16)(data, j);\\r\\n                j += 2;\\r\\n              }\\r\\n              sqcd = data[j++];\\r\\n              switch (sqcd & 0x1F) {\\r\\n                case 0:\\r\\n                  spqcdSize = 8;\\r\\n                  scalarExpounded = true;\\r\\n                  break;\\r\\n                case 1:\\r\\n                  spqcdSize = 16;\\r\\n                  scalarExpounded = false;\\r\\n                  break;\\r\\n                case 2:\\r\\n                  spqcdSize = 16;\\r\\n                  scalarExpounded = true;\\r\\n                  break;\\r\\n                default:\\r\\n                  throw new Error('Invalid SQcd value ' + sqcd);\\r\\n              }\\r\\n              qcc.noQuantization = spqcdSize === 8;\\r\\n              qcc.scalarExpounded = scalarExpounded;\\r\\n              qcc.guardBits = sqcd >> 5;\\r\\n              spqcds = [];\\r\\n              while (j < length + position) {\\r\\n                spqcd = {};\\r\\n                if (spqcdSize === 8) {\\r\\n                  spqcd.epsilon = data[j++] >> 3;\\r\\n                  spqcd.mu = 0;\\r\\n                } else {\\r\\n                  spqcd.epsilon = data[j] >> 3;\\r\\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\\r\\n                  j += 2;\\r\\n                }\\r\\n                spqcds.push(spqcd);\\r\\n              }\\r\\n              qcc.SPqcds = spqcds;\\r\\n              if (context.mainHeader) {\\r\\n                context.QCC[cqcc] = qcc;\\r\\n              } else {\\r\\n                context.currentTile.QCC[cqcc] = qcc;\\r\\n              }\\r\\n              break;\\r\\n            case 0xFF52:\\r\\n              length = (0, _util.readUint16)(data, position);\\r\\n              var cod = {};\\r\\n              j = position + 2;\\r\\n              var scod = data[j++];\\r\\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\\r\\n              cod.sopMarkerUsed = !!(scod & 2);\\r\\n              cod.ephMarkerUsed = !!(scod & 4);\\r\\n              cod.progressionOrder = data[j++];\\r\\n              cod.layersCount = (0, _util.readUint16)(data, j);\\r\\n              j += 2;\\r\\n              cod.multipleComponentTransform = data[j++];\\r\\n              cod.decompositionLevelsCount = data[j++];\\r\\n              cod.xcb = (data[j++] & 0xF) + 2;\\r\\n              cod.ycb = (data[j++] & 0xF) + 2;\\r\\n              var blockStyle = data[j++];\\r\\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\\r\\n              cod.resetContextProbabilities = !!(blockStyle & 2);\\r\\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\\r\\n              cod.verticalyStripe = !!(blockStyle & 8);\\r\\n              cod.predictableTermination = !!(blockStyle & 16);\\r\\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\\r\\n              cod.reversibleTransformation = data[j++];\\r\\n              if (cod.entropyCoderWithCustomPrecincts) {\\r\\n                var precinctsSizes = [];\\r\\n                while (j < length + position) {\\r\\n                  var precinctsSize = data[j++];\\r\\n                  precinctsSizes.push({\\r\\n                    PPx: precinctsSize & 0xF,\\r\\n                    PPy: precinctsSize >> 4\\r\\n                  });\\r\\n                }\\r\\n                cod.precinctsSizes = precinctsSizes;\\r\\n              }\\r\\n              var unsupported = [];\\r\\n              if (cod.selectiveArithmeticCodingBypass) {\\r\\n                unsupported.push('selectiveArithmeticCodingBypass');\\r\\n              }\\r\\n              if (cod.resetContextProbabilities) {\\r\\n                unsupported.push('resetContextProbabilities');\\r\\n              }\\r\\n              if (cod.terminationOnEachCodingPass) {\\r\\n                unsupported.push('terminationOnEachCodingPass');\\r\\n              }\\r\\n              if (cod.verticalyStripe) {\\r\\n                unsupported.push('verticalyStripe');\\r\\n              }\\r\\n              if (cod.predictableTermination) {\\r\\n                unsupported.push('predictableTermination');\\r\\n              }\\r\\n              if (unsupported.length > 0) {\\r\\n                doNotRecover = true;\\r\\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\\r\\n              }\\r\\n              if (context.mainHeader) {\\r\\n                context.COD = cod;\\r\\n              } else {\\r\\n                context.currentTile.COD = cod;\\r\\n                context.currentTile.COC = [];\\r\\n              }\\r\\n              break;\\r\\n            case 0xFF90:\\r\\n              length = (0, _util.readUint16)(data, position);\\r\\n              tile = {};\\r\\n              tile.index = (0, _util.readUint16)(data, position + 2);\\r\\n              tile.length = (0, _util.readUint32)(data, position + 4);\\r\\n              tile.dataEnd = tile.length + position - 2;\\r\\n              tile.partIndex = data[position + 8];\\r\\n              tile.partsCount = data[position + 9];\\r\\n              context.mainHeader = false;\\r\\n              if (tile.partIndex === 0) {\\r\\n                tile.COD = context.COD;\\r\\n                tile.COC = context.COC.slice(0);\\r\\n                tile.QCD = context.QCD;\\r\\n                tile.QCC = context.QCC.slice(0);\\r\\n              }\\r\\n              context.currentTile = tile;\\r\\n              break;\\r\\n            case 0xFF93:\\r\\n              tile = context.currentTile;\\r\\n              if (tile.partIndex === 0) {\\r\\n                initializeTile(context, tile.index);\\r\\n                buildPackets(context);\\r\\n              }\\r\\n              length = tile.dataEnd - position;\\r\\n              parseTilePackets(context, data, position, length);\\r\\n              break;\\r\\n            case 0xFF55:\\r\\n            case 0xFF57:\\r\\n            case 0xFF58:\\r\\n            case 0xFF64:\\r\\n              length = (0, _util.readUint16)(data, position);\\r\\n              break;\\r\\n            case 0xFF53:\\r\\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\\r\\n            default:\\r\\n              throw new Error('Unknown codestream code: ' + code.toString(16));\\r\\n          }\\r\\n          position += length;\\r\\n        }\\r\\n      } catch (e) {\\r\\n        if (doNotRecover || this.failOnCorruptedImage) {\\r\\n          throw new JpxError(e.message);\\r\\n        } else {\\r\\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\\r\\n        }\\r\\n      }\\r\\n      this.tiles = transformComponents(context);\\r\\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\\r\\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\\r\\n      this.componentsCount = context.SIZ.Csiz;\\r\\n    }\\r\\n  };\\r\\n  function calculateComponentDimensions(component, siz) {\\r\\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\\r\\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\\r\\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\\r\\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\\r\\n    component.width = component.x1 - component.x0;\\r\\n    component.height = component.y1 - component.y0;\\r\\n  }\\r\\n  function calculateTileGrids(context, components) {\\r\\n    var siz = context.SIZ;\\r\\n    var tile,\\r\\n        tiles = [];\\r\\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\\r\\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\\r\\n    for (var q = 0; q < numYtiles; q++) {\\r\\n      for (var p = 0; p < numXtiles; p++) {\\r\\n        tile = {};\\r\\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\\r\\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\\r\\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\\r\\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\\r\\n        tile.width = tile.tx1 - tile.tx0;\\r\\n        tile.height = tile.ty1 - tile.ty0;\\r\\n        tile.components = [];\\r\\n        tiles.push(tile);\\r\\n      }\\r\\n    }\\r\\n    context.tiles = tiles;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\\r\\n      var component = components[i];\\r\\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\\r\\n        var tileComponent = {};\\r\\n        tile = tiles[j];\\r\\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\\r\\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\\r\\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\\r\\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\\r\\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\\r\\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\\r\\n        tile.components[i] = tileComponent;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function getBlocksDimensions(context, component, r) {\\r\\n    var codOrCoc = component.codingStyleParameters;\\r\\n    var result = {};\\r\\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\\r\\n      result.PPx = 15;\\r\\n      result.PPy = 15;\\r\\n    } else {\\r\\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\\r\\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\\r\\n    }\\r\\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\\r\\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\\r\\n    return result;\\r\\n  }\\r\\n  function buildPrecincts(context, resolution, dimensions) {\\r\\n    var precinctWidth = 1 << dimensions.PPx;\\r\\n    var precinctHeight = 1 << dimensions.PPy;\\r\\n    var isZeroRes = resolution.resLevel === 0;\\r\\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\\r\\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\\r\\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\\r\\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\\r\\n    var numprecincts = numprecinctswide * numprecinctshigh;\\r\\n    resolution.precinctParameters = {\\r\\n      precinctWidth: precinctWidth,\\r\\n      precinctHeight: precinctHeight,\\r\\n      numprecinctswide: numprecinctswide,\\r\\n      numprecinctshigh: numprecinctshigh,\\r\\n      numprecincts: numprecincts,\\r\\n      precinctWidthInSubband: precinctWidthInSubband,\\r\\n      precinctHeightInSubband: precinctHeightInSubband\\r\\n    };\\r\\n  }\\r\\n  function buildCodeblocks(context, subband, dimensions) {\\r\\n    var xcb_ = dimensions.xcb_;\\r\\n    var ycb_ = dimensions.ycb_;\\r\\n    var codeblockWidth = 1 << xcb_;\\r\\n    var codeblockHeight = 1 << ycb_;\\r\\n    var cbx0 = subband.tbx0 >> xcb_;\\r\\n    var cby0 = subband.tby0 >> ycb_;\\r\\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\\r\\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\\r\\n    var precinctParameters = subband.resolution.precinctParameters;\\r\\n    var codeblocks = [];\\r\\n    var precincts = [];\\r\\n    var i, j, codeblock, precinctNumber;\\r\\n    for (j = cby0; j < cby1; j++) {\\r\\n      for (i = cbx0; i < cbx1; i++) {\\r\\n        codeblock = {\\r\\n          cbx: i,\\r\\n          cby: j,\\r\\n          tbx0: codeblockWidth * i,\\r\\n          tby0: codeblockHeight * j,\\r\\n          tbx1: codeblockWidth * (i + 1),\\r\\n          tby1: codeblockHeight * (j + 1)\\r\\n        };\\r\\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\\r\\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\\r\\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\\r\\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\\r\\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\\r\\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\\r\\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\\r\\n        codeblock.precinctNumber = precinctNumber;\\r\\n        codeblock.subbandType = subband.type;\\r\\n        codeblock.Lblock = 3;\\r\\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\\r\\n          continue;\\r\\n        }\\r\\n        codeblocks.push(codeblock);\\r\\n        var precinct = precincts[precinctNumber];\\r\\n        if (precinct !== undefined) {\\r\\n          if (i < precinct.cbxMin) {\\r\\n            precinct.cbxMin = i;\\r\\n          } else if (i > precinct.cbxMax) {\\r\\n            precinct.cbxMax = i;\\r\\n          }\\r\\n          if (j < precinct.cbyMin) {\\r\\n            precinct.cbxMin = j;\\r\\n          } else if (j > precinct.cbyMax) {\\r\\n            precinct.cbyMax = j;\\r\\n          }\\r\\n        } else {\\r\\n          precincts[precinctNumber] = precinct = {\\r\\n            cbxMin: i,\\r\\n            cbyMin: j,\\r\\n            cbxMax: i,\\r\\n            cbyMax: j\\r\\n          };\\r\\n        }\\r\\n        codeblock.precinct = precinct;\\r\\n      }\\r\\n    }\\r\\n    subband.codeblockParameters = {\\r\\n      codeblockWidth: xcb_,\\r\\n      codeblockHeight: ycb_,\\r\\n      numcodeblockwide: cbx1 - cbx0 + 1,\\r\\n      numcodeblockhigh: cby1 - cby0 + 1\\r\\n    };\\r\\n    subband.codeblocks = codeblocks;\\r\\n    subband.precincts = precincts;\\r\\n  }\\r\\n  function createPacket(resolution, precinctNumber, layerNumber) {\\r\\n    var precinctCodeblocks = [];\\r\\n    var subbands = resolution.subbands;\\r\\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\\r\\n      var subband = subbands[i];\\r\\n      var codeblocks = subband.codeblocks;\\r\\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\\r\\n        var codeblock = codeblocks[j];\\r\\n        if (codeblock.precinctNumber !== precinctNumber) {\\r\\n          continue;\\r\\n        }\\r\\n        precinctCodeblocks.push(codeblock);\\r\\n      }\\r\\n    }\\r\\n    return {\\r\\n      layerNumber: layerNumber,\\r\\n      codeblocks: precinctCodeblocks\\r\\n    };\\r\\n  }\\r\\n  function LayerResolutionComponentPositionIterator(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var maxDecompositionLevelsCount = 0;\\r\\n    for (var q = 0; q < componentsCount; q++) {\\r\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\\r\\n    }\\r\\n    var l = 0,\\r\\n        r = 0,\\r\\n        i = 0,\\r\\n        k = 0;\\r\\n    this.nextPacket = function JpxImage_nextPacket() {\\r\\n      for (; l < layersCount; l++) {\\r\\n        for (; r <= maxDecompositionLevelsCount; r++) {\\r\\n          for (; i < componentsCount; i++) {\\r\\n            var component = tile.components[i];\\r\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\r\\n              continue;\\r\\n            }\\r\\n            var resolution = component.resolutions[r];\\r\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\r\\n            for (; k < numprecincts;) {\\r\\n              var packet = createPacket(resolution, k, l);\\r\\n              k++;\\r\\n              return packet;\\r\\n            }\\r\\n            k = 0;\\r\\n          }\\r\\n          i = 0;\\r\\n        }\\r\\n        r = 0;\\r\\n      }\\r\\n      throw new JpxError('Out of packets');\\r\\n    };\\r\\n  }\\r\\n  function ResolutionLayerComponentPositionIterator(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var maxDecompositionLevelsCount = 0;\\r\\n    for (var q = 0; q < componentsCount; q++) {\\r\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].\";a.a+=\"codingStyleParameters.decompositionLevelsCount);\\r\\n    }\\r\\n    var r = 0,\\r\\n        l = 0,\\r\\n        i = 0,\\r\\n        k = 0;\\r\\n    this.nextPacket = function JpxImage_nextPacket() {\\r\\n      for (; r <= maxDecompositionLevelsCount; r++) {\\r\\n        for (; l < layersCount; l++) {\\r\\n          for (; i < componentsCount; i++) {\\r\\n            var component = tile.components[i];\\r\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\r\\n              continue;\\r\\n            }\\r\\n            var resolution = component.resolutions[r];\\r\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\r\\n            for (; k < numprecincts;) {\\r\\n              var packet = createPacket(resolution, k, l);\\r\\n              k++;\\r\\n              return packet;\\r\\n            }\\r\\n            k = 0;\\r\\n          }\\r\\n          i = 0;\\r\\n        }\\r\\n        l = 0;\\r\\n      }\\r\\n      throw new JpxError('Out of packets');\\r\\n    };\\r\\n  }\\r\\n  function ResolutionPositionComponentLayerIterator(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var l, r, c, p;\\r\\n    var maxDecompositionLevelsCount = 0;\\r\\n    for (c = 0; c < componentsCount; c++) {\\r\\n      var component = tile.components[c];\\r\\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\\r\\n    }\\r\\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\\r\\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\\r\\n      var maxNumPrecincts = 0;\\r\\n      for (c = 0; c < componentsCount; ++c) {\\r\\n        var resolutions = tile.components[c].resolutions;\\r\\n        if (r < resolutions.length) {\\r\\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\\r\\n        }\\r\\n      }\\r\\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\\r\\n    }\\r\\n    l = 0;\\r\\n    r = 0;\\r\\n    c = 0;\\r\\n    p = 0;\\r\\n    this.nextPacket = function JpxImage_nextPacket() {\\r\\n      for (; r <= maxDecompositionLevelsCount; r++) {\\r\\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\\r\\n          for (; c < componentsCount; c++) {\\r\\n            var component = tile.components[c];\\r\\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\\r\\n              continue;\\r\\n            }\\r\\n            var resolution = component.resolutions[r];\\r\\n            var numprecincts = resolution.precinctParameters.numprecincts;\\r\\n            if (p >= numprecincts) {\\r\\n              continue;\\r\\n            }\\r\\n            for (; l < layersCount;) {\\r\\n              var packet = createPacket(resolution, p, l);\\r\\n              l++;\\r\\n              return packet;\\r\\n            }\\r\\n            l = 0;\\r\\n          }\\r\\n          c = 0;\\r\\n        }\\r\\n        p = 0;\\r\\n      }\\r\\n      throw new JpxError('Out of packets');\\r\\n    };\\r\\n  }\\r\\n  function PositionComponentResolutionLayerIterator(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\\r\\n    var precinctsIterationSizes = precinctsSizes;\\r\\n    var l = 0,\\r\\n        r = 0,\\r\\n        c = 0,\\r\\n        px = 0,\\r\\n        py = 0;\\r\\n    this.nextPacket = function JpxImage_nextPacket() {\\r\\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\r\\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\\r\\n          for (; c < componentsCount; c++) {\\r\\n            var component = tile.components[c];\\r\\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\r\\n            for (; r <= decompositionLevelsCount; r++) {\\r\\n              var resolution = component.resolutions[r];\\r\\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\\r\\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\r\\n              if (k === null) {\\r\\n                continue;\\r\\n              }\\r\\n              for (; l < layersCount;) {\\r\\n                var packet = createPacket(resolution, k, l);\\r\\n                l++;\\r\\n                return packet;\\r\\n              }\\r\\n              l = 0;\\r\\n            }\\r\\n            r = 0;\\r\\n          }\\r\\n          c = 0;\\r\\n        }\\r\\n        px = 0;\\r\\n      }\\r\\n      throw new JpxError('Out of packets');\\r\\n    };\\r\\n  }\\r\\n  function ComponentPositionResolutionLayerIterator(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\\r\\n    var l = 0,\\r\\n        r = 0,\\r\\n        c = 0,\\r\\n        px = 0,\\r\\n        py = 0;\\r\\n    this.nextPacket = function JpxImage_nextPacket() {\\r\\n      for (; c < componentsCount; ++c) {\\r\\n        var component = tile.components[c];\\r\\n        var precinctsIterationSizes = precinctsSizes.components[c];\\r\\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\r\\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\\r\\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\\r\\n            for (; r <= decompositionLevelsCount; r++) {\\r\\n              var resolution = component.resolutions[r];\\r\\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\\r\\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\\r\\n              if (k === null) {\\r\\n                continue;\\r\\n              }\\r\\n              for (; l < layersCount;) {\\r\\n                var packet = createPacket(resolution, k, l);\\r\\n                l++;\\r\\n                return packet;\\r\\n              }\\r\\n              l = 0;\\r\\n            }\\r\\n            r = 0;\\r\\n          }\\r\\n          px = 0;\\r\\n        }\\r\\n        py = 0;\\r\\n      }\\r\\n      throw new JpxError('Out of packets');\\r\\n    };\\r\\n  }\\r\\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\\r\\n    var posX = pxIndex * precinctIterationSizes.minWidth;\\r\\n    var posY = pyIndex * precinctIterationSizes.minHeight;\\r\\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\\r\\n      return null;\\r\\n    }\\r\\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\\r\\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\\r\\n  }\\r\\n  function getPrecinctSizesInImageScale(tile) {\\r\\n    var componentsCount = tile.components.length;\\r\\n    var minWidth = Number.MAX_VALUE;\\r\\n    var minHeight = Number.MAX_VALUE;\\r\\n    var maxNumWide = 0;\\r\\n    var maxNumHigh = 0;\\r\\n    var sizePerComponent = new Array(componentsCount);\\r\\n    for (var c = 0; c < componentsCount; c++) {\\r\\n      var component = tile.components[c];\\r\\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\r\\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\\r\\n      var minWidthCurrentComponent = Number.MAX_VALUE;\\r\\n      var minHeightCurrentComponent = Number.MAX_VALUE;\\r\\n      var maxNumWideCurrentComponent = 0;\\r\\n      var maxNumHighCurrentComponent = 0;\\r\\n      var scale = 1;\\r\\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\\r\\n        var resolution = component.resolutions[r];\\r\\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\\r\\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\\r\\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\\r\\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\\r\\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\\r\\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\\r\\n        sizePerResolution[r] = {\\r\\n          width: widthCurrentResolution,\\r\\n          height: heightCurrentResolution\\r\\n        };\\r\\n        scale <<= 1;\\r\\n      }\\r\\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\\r\\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\\r\\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\\r\\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\\r\\n      sizePerComponent[c] = {\\r\\n        resolutions: sizePerResolution,\\r\\n        minWidth: minWidthCurrentComponent,\\r\\n        minHeight: minHeightCurrentComponent,\\r\\n        maxNumWide: maxNumWideCurrentComponent,\\r\\n        maxNumHigh: maxNumHighCurrentComponent\\r\\n      };\\r\\n    }\\r\\n    return {\\r\\n      components: sizePerComponent,\\r\\n      minWidth: minWidth,\\r\\n      minHeight: minHeight,\\r\\n      maxNumWide: maxNumWide,\\r\\n      maxNumHigh: maxNumHigh\\r\\n    };\\r\\n  }\\r\\n  function buildPackets(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var componentsCount = siz.Csiz;\\r\\n    for (var c = 0; c < componentsCount; c++) {\\r\\n      var component = tile.components[c];\\r\\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\\r\\n      var resolutions = [];\\r\\n      var subbands = [];\\r\\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\\r\\n        var blocksDimensions = getBlocksDimensions(context, component, r);\\r\\n        var resolution = {};\\r\\n        var scale = 1 << decompositionLevelsCount - r;\\r\\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\\r\\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\\r\\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\\r\\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\\r\\n        resolution.resLevel = r;\\r\\n        buildPrecincts(context, resolution, blocksDimensions);\\r\\n        resolutions.push(resolution);\\r\\n        var subband;\\r\\n        if (r === 0) {\\r\\n          subband = {};\\r\\n          subband.type = 'LL';\\r\\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\\r\\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\\r\\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\\r\\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\\r\\n          subband.resolution = resolution;\\r\\n          buildCodeblocks(context, subband, blocksDimensions);\\r\\n          subbands.push(subband);\\r\\n          resolution.subbands = [subband];\\r\\n        } else {\\r\\n          var bscale = 1 << decompositionLevelsCount - r + 1;\\r\\n          var resolutionSubbands = [];\\r\\n          subband = {};\\r\\n          subband.type = 'HL';\\r\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\r\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\\r\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\r\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\\r\\n          subband.resolution = resolution;\\r\\n          buildCodeblocks(context, subband, blocksDimensions);\\r\\n          subbands.push(subband);\\r\\n          resolutionSubbands.push(subband);\\r\\n          subband = {};\\r\\n          subband.type = 'LH';\\r\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\\r\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\r\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\\r\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\r\\n          subband.resolution = resolution;\\r\\n          buildCodeblocks(context, subband, blocksDimensions);\\r\\n          subbands.push(subband);\\r\\n          resolutionSubbands.push(subband);\\r\\n          subband = {};\\r\\n          subband.type = 'HH';\\r\\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\\r\\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\\r\\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\\r\\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\\r\\n          subband.resolution = resolution;\\r\\n          buildCodeblocks(context, subband, blocksDimensions);\\r\\n          subbands.push(subband);\\r\\n          resolutionSubbands.push(subband);\\r\\n          resolution.subbands = resolutionSubbands;\\r\\n        }\\r\\n      }\\r\\n      component.resolutions = resolutions;\\r\\n      component.subbands = subbands;\\r\\n    }\\r\\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\\r\\n    switch (progressionOrder) {\\r\\n      case 0:\\r\\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\\r\\n        break;\\r\\n      case 1:\\r\\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\\r\\n        break;\\r\\n      case 2:\\r\\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\\r\\n        break;\\r\\n      case 3:\\r\\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\\r\\n        break;\\r\\n      case 4:\\r\\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\\r\\n        break;\\r\\n      default:\\r\\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\\r\\n    }\\r\\n  }\\r\\n  function parseTilePackets(context, data, offset, dataLength) {\\r\\n    var position = 0;\\r\\n    var buffer,\\r\\n        bufferSize = 0,\\r\\n        skipNextBit = false;\\r\\n    function readBits(count) {\\r\\n      while (bufferSize < count) {\\r\\n        var b = data[offset + position];\\r\\n        position++;\\r\\n        if (skipNextBit) {\\r\\n          buffer = buffer << 7 | b;\\r\\n          bufferSize += 7;\\r\\n          skipNextBit = false;\\r\\n        } else {\\r\\n          buffer = buffer << 8 | b;\\r\\n          bufferSize += 8;\\r\\n        }\\r\\n        if (b === 0xFF) {\\r\\n          skipNextBit = true;\\r\\n        }\\r\\n      }\\r\\n      bufferSize -= count;\\r\\n      return buffer >>> bufferSize & (1 << count) - 1;\\r\\n    }\\r\\n    function skipMarkerIfEqual(value) {\\r\\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\\r\\n        skipBytes(1);\\r\\n        return true;\\r\\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\\r\\n        skipBytes(2);\\r\\n        return true;\\r\\n      }\\r\\n      return false;\\r\\n    }\\r\\n    function skipBytes(count) {\\r\\n      position += count;\\r\\n    }\\r\\n    function alignToByte() {\\r\\n      bufferSize = 0;\\r\\n      if (skipNextBit) {\\r\\n        position++;\\r\\n        skipNextBit = false;\\r\\n      }\\r\\n    }\\r\\n    function readCodingpasses() {\\r\\n      if (readBits(1) === 0) {\\r\\n        return 1;\\r\\n      }\\r\\n      if (readBits(1) === 0) {\\r\\n        return 2;\\r\\n      }\\r\\n      var value = readBits(2);\\r\\n      if (value < 3) {\\r\\n        return value + 3;\\r\\n      }\\r\\n      value = readBits(5);\\r\\n      if (value < 31) {\\r\\n        return value + 6;\\r\\n      }\\r\\n      value = readBits(7);\\r\\n      return value + 37;\\r\\n    }\\r\\n    var tileIndex = context.currentTile.index;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\\r\\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\\r\\n    var packetsIterator = tile.packetsIterator;\\r\\n    while (position < dataLength) {\\r\\n      alignToByte();\\r\\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\\r\\n        skipBytes(4);\\r\\n      }\\r\\n      var packet = packetsIterator.nextPacket();\\r\\n      if (!readBits(1)) {\\r\\n        continue;\\r\\n      }\\r\\n      var layerNumber = packet.layerNumber;\\r\\n      var queue = [],\\r\\n          codeblock;\\r\\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\\r\\n        codeblock = packet.codeblocks[i];\\r\\n        var precinct = codeblock.precinct;\\r\\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\\r\\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\\r\\n        var codeblockIncluded = false;\\r\\n        var firstTimeInclusion = false;\\r\\n        var valueReady;\\r\\n        if (codeblock['included'] !== undefined) {\\r\\n          codeblockIncluded = !!readBits(1);\\r\\n        } else {\\r\\n          precinct = codeblock.precinct;\\r\\n          var inclusionTree, zeroBitPlanesTree;\\r\\n          if (precinct['inclusionTree'] !== undefined) {\\r\\n            inclusionTree = precinct.inclusionTree;\\r\\n          } else {\\r\\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\\r\\n            var height = precinct.cbyMax - precinct.cbyMi\";a.a+=\"n + 1;\\r\\n            inclusionTree = new InclusionTree(width, height, layerNumber);\\r\\n            zeroBitPlanesTree = new TagTree(width, height);\\r\\n            precinct.inclusionTree = inclusionTree;\\r\\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\\r\\n          }\\r\\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\\r\\n            while (true) {\\r\\n              if (readBits(1)) {\\r\\n                valueReady = !inclusionTree.nextLevel();\\r\\n                if (valueReady) {\\r\\n                  codeblock.included = true;\\r\\n                  codeblockIncluded = firstTimeInclusion = true;\\r\\n                  break;\\r\\n                }\\r\\n              } else {\\r\\n                inclusionTree.incrementValue(layerNumber);\\r\\n                break;\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        if (!codeblockIncluded) {\\r\\n          continue;\\r\\n        }\\r\\n        if (firstTimeInclusion) {\\r\\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\\r\\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\\r\\n          while (true) {\\r\\n            if (readBits(1)) {\\r\\n              valueReady = !zeroBitPlanesTree.nextLevel();\\r\\n              if (valueReady) {\\r\\n                break;\\r\\n              }\\r\\n            } else {\\r\\n              zeroBitPlanesTree.incrementValue();\\r\\n            }\\r\\n          }\\r\\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\\r\\n        }\\r\\n        var codingpasses = readCodingpasses();\\r\\n        while (readBits(1)) {\\r\\n          codeblock.Lblock++;\\r\\n        }\\r\\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\\r\\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\\r\\n        var codedDataLength = readBits(bits);\\r\\n        queue.push({\\r\\n          codeblock: codeblock,\\r\\n          codingpasses: codingpasses,\\r\\n          dataLength: codedDataLength\\r\\n        });\\r\\n      }\\r\\n      alignToByte();\\r\\n      if (ephMarkerUsed) {\\r\\n        skipMarkerIfEqual(0x92);\\r\\n      }\\r\\n      while (queue.length > 0) {\\r\\n        var packetItem = queue.shift();\\r\\n        codeblock = packetItem.codeblock;\\r\\n        if (codeblock['data'] === undefined) {\\r\\n          codeblock.data = [];\\r\\n        }\\r\\n        codeblock.data.push({\\r\\n          data: data,\\r\\n          start: offset + position,\\r\\n          end: offset + position + packetItem.dataLength,\\r\\n          codingpasses: packetItem.codingpasses\\r\\n        });\\r\\n        position += packetItem.dataLength;\\r\\n      }\\r\\n    }\\r\\n    return position;\\r\\n  }\\r\\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\\r\\n    var x0 = subband.tbx0;\\r\\n    var y0 = subband.tby0;\\r\\n    var width = subband.tbx1 - subband.tbx0;\\r\\n    var codeblocks = subband.codeblocks;\\r\\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\\r\\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\\r\\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\\r\\n      var codeblock = codeblocks[i];\\r\\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\\r\\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\\r\\n      if (blockWidth === 0 || blockHeight === 0) {\\r\\n        continue;\\r\\n      }\\r\\n      if (codeblock['data'] === undefined) {\\r\\n        continue;\\r\\n      }\\r\\n      var bitModel, currentCodingpassType;\\r\\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\\r\\n      currentCodingpassType = 2;\\r\\n      var data = codeblock.data,\\r\\n          totalLength = 0,\\r\\n          codingpasses = 0;\\r\\n      var j, jj, dataItem;\\r\\n      for (j = 0, jj = data.length; j < jj; j++) {\\r\\n        dataItem = data[j];\\r\\n        totalLength += dataItem.end - dataItem.start;\\r\\n        codingpasses += dataItem.codingpasses;\\r\\n      }\\r\\n      var encodedData = new Uint8Array(totalLength);\\r\\n      var position = 0;\\r\\n      for (j = 0, jj = data.length; j < jj; j++) {\\r\\n        dataItem = data[j];\\r\\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\\r\\n        encodedData.set(chunk, position);\\r\\n        position += chunk.length;\\r\\n      }\\r\\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\\r\\n      bitModel.setDecoder(decoder);\\r\\n      for (j = 0; j < codingpasses; j++) {\\r\\n        switch (currentCodingpassType) {\\r\\n          case 0:\\r\\n            bitModel.runSignificancePropagationPass();\\r\\n            break;\\r\\n          case 1:\\r\\n            bitModel.runMagnitudeRefinementPass();\\r\\n            break;\\r\\n          case 2:\\r\\n            bitModel.runCleanupPass();\\r\\n            if (segmentationSymbolUsed) {\\r\\n              bitModel.checkSegmentationSymbol();\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\\r\\n      }\\r\\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\\r\\n      var sign = bitModel.coefficentsSign;\\r\\n      var magnitude = bitModel.coefficentsMagnitude;\\r\\n      var bitsDecoded = bitModel.bitsDecoded;\\r\\n      var magnitudeCorrection = reversible ? 0 : 0.5;\\r\\n      var k, n, nb;\\r\\n      position = 0;\\r\\n      var interleave = subband.type !== 'LL';\\r\\n      for (j = 0; j < blockHeight; j++) {\\r\\n        var row = offset / width | 0;\\r\\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\\r\\n        for (k = 0; k < blockWidth; k++) {\\r\\n          n = magnitude[position];\\r\\n          if (n !== 0) {\\r\\n            n = (n + magnitudeCorrection) * delta;\\r\\n            if (sign[position] !== 0) {\\r\\n              n = -n;\\r\\n            }\\r\\n            nb = bitsDecoded[position];\\r\\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\\r\\n            if (reversible && nb >= mb) {\\r\\n              coefficients[pos] = n;\\r\\n            } else {\\r\\n              coefficients[pos] = n * (1 << mb - nb);\\r\\n            }\\r\\n          }\\r\\n          offset++;\\r\\n          position++;\\r\\n        }\\r\\n        offset += width - blockWidth;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function transformTile(context, tile, c) {\\r\\n    var component = tile.components[c];\\r\\n    var codingStyleParameters = component.codingStyleParameters;\\r\\n    var quantizationParameters = component.quantizationParameters;\\r\\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\\r\\n    var spqcds = quantizationParameters.SPqcds;\\r\\n    var scalarExpounded = quantizationParameters.scalarExpounded;\\r\\n    var guardBits = quantizationParameters.guardBits;\\r\\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\\r\\n    var precision = context.components[c].precision;\\r\\n    var reversible = codingStyleParameters.reversibleTransformation;\\r\\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\\r\\n    var subbandCoefficients = [];\\r\\n    var b = 0;\\r\\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\\r\\n      var resolution = component.resolutions[i];\\r\\n      var width = resolution.trx1 - resolution.trx0;\\r\\n      var height = resolution.try1 - resolution.try0;\\r\\n      var coefficients = new Float32Array(width * height);\\r\\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\\r\\n        var mu, epsilon;\\r\\n        if (!scalarExpounded) {\\r\\n          mu = spqcds[0].mu;\\r\\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\\r\\n        } else {\\r\\n          mu = spqcds[b].mu;\\r\\n          epsilon = spqcds[b].epsilon;\\r\\n          b++;\\r\\n        }\\r\\n        var subband = resolution.subbands[j];\\r\\n        var gainLog2 = SubbandsGainLog2[subband.type];\\r\\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\\r\\n        var mb = guardBits + epsilon - 1;\\r\\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\\r\\n      }\\r\\n      subbandCoefficients.push({\\r\\n        width: width,\\r\\n        height: height,\\r\\n        items: coefficients\\r\\n      });\\r\\n    }\\r\\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\\r\\n    return {\\r\\n      left: component.tcx0,\\r\\n      top: component.tcy0,\\r\\n      width: result.width,\\r\\n      height: result.height,\\r\\n      items: result.items\\r\\n    };\\r\\n  }\\r\\n  function transformComponents(context) {\\r\\n    var siz = context.SIZ;\\r\\n    var components = context.components;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var resultImages = [];\\r\\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\\r\\n      var tile = context.tiles[i];\\r\\n      var transformedTiles = [];\\r\\n      var c;\\r\\n      for (c = 0; c < componentsCount; c++) {\\r\\n        transformedTiles[c] = transformTile(context, tile, c);\\r\\n      }\\r\\n      var tile0 = transformedTiles[0];\\r\\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\\r\\n      var result = {\\r\\n        left: tile0.left,\\r\\n        top: tile0.top,\\r\\n        width: tile0.width,\\r\\n        height: tile0.height,\\r\\n        items: out\\r\\n      };\\r\\n      var shift, offset;\\r\\n      var pos = 0,\\r\\n          j,\\r\\n          jj,\\r\\n          y0,\\r\\n          y1,\\r\\n          y2;\\r\\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\\r\\n        var fourComponents = componentsCount === 4;\\r\\n        var y0items = transformedTiles[0].items;\\r\\n        var y1items = transformedTiles[1].items;\\r\\n        var y2items = transformedTiles[2].items;\\r\\n        var y3items = fourComponents ? transformedTiles[3].items : null;\\r\\n        shift = components[0].precision - 8;\\r\\n        offset = (128 << shift) + 0.5;\\r\\n        var component0 = tile.components[0];\\r\\n        var alpha01 = componentsCount - 3;\\r\\n        jj = y0items.length;\\r\\n        if (!component0.codingStyleParameters.reversibleTransformation) {\\r\\n          for (j = 0; j < jj; j++, pos += alpha01) {\\r\\n            y0 = y0items[j] + offset;\\r\\n            y1 = y1items[j];\\r\\n            y2 = y2items[j];\\r\\n            out[pos++] = y0 + 1.402 * y2 >> shift;\\r\\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\\r\\n            out[pos++] = y0 + 1.772 * y1 >> shift;\\r\\n          }\\r\\n        } else {\\r\\n          for (j = 0; j < jj; j++, pos += alpha01) {\\r\\n            y0 = y0items[j] + offset;\\r\\n            y1 = y1items[j];\\r\\n            y2 = y2items[j];\\r\\n            var g = y0 - (y2 + y1 >> 2);\\r\\n            out[pos++] = g + y2 >> shift;\\r\\n            out[pos++] = g >> shift;\\r\\n            out[pos++] = g + y1 >> shift;\\r\\n          }\\r\\n        }\\r\\n        if (fourComponents) {\\r\\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\\r\\n            out[pos] = y3items[j] + offset >> shift;\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        for (c = 0; c < componentsCount; c++) {\\r\\n          var items = transformedTiles[c].items;\\r\\n          shift = components[c].precision - 8;\\r\\n          offset = (128 << shift) + 0.5;\\r\\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\\r\\n            out[pos] = items[j] + offset >> shift;\\r\\n            pos += componentsCount;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      resultImages.push(result);\\r\\n    }\\r\\n    return resultImages;\\r\\n  }\\r\\n  function initializeTile(context, tileIndex) {\\r\\n    var siz = context.SIZ;\\r\\n    var componentsCount = siz.Csiz;\\r\\n    var tile = context.tiles[tileIndex];\\r\\n    for (var c = 0; c < componentsCount; c++) {\\r\\n      var component = tile.components[c];\\r\\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\\r\\n      component.quantizationParameters = qcdOrQcc;\\r\\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\\r\\n      component.codingStyleParameters = codOrCoc;\\r\\n    }\\r\\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\\r\\n  }\\r\\n  var TagTree = function TagTreeClosure() {\\r\\n    function TagTree(width, height) {\\r\\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\r\\n      this.levels = [];\\r\\n      for (var i = 0; i < levelsLength; i++) {\\r\\n        var level = {\\r\\n          width: width,\\r\\n          height: height,\\r\\n          items: []\\r\\n        };\\r\\n        this.levels.push(level);\\r\\n        width = Math.ceil(width / 2);\\r\\n        height = Math.ceil(height / 2);\\r\\n      }\\r\\n    }\\r\\n    TagTree.prototype = {\\r\\n      reset: function TagTree_reset(i, j) {\\r\\n        var currentLevel = 0,\\r\\n            value = 0,\\r\\n            level;\\r\\n        while (currentLevel < this.levels.length) {\\r\\n          level = this.levels[currentLevel];\\r\\n          var index = i + j * level.width;\\r\\n          if (level.items[index] !== undefined) {\\r\\n            value = level.items[index];\\r\\n            break;\\r\\n          }\\r\\n          level.index = index;\\r\\n          i >>= 1;\\r\\n          j >>= 1;\\r\\n          currentLevel++;\\r\\n        }\\r\\n        currentLevel--;\\r\\n        level = this.levels[currentLevel];\\r\\n        level.items[level.index] = value;\\r\\n        this.currentLevel = currentLevel;\\r\\n        delete this.value;\\r\\n      },\\r\\n      incrementValue: function TagTree_incrementValue() {\\r\\n        var level = this.levels[this.currentLevel];\\r\\n        level.items[level.index]++;\\r\\n      },\\r\\n      nextLevel: function TagTree_nextLevel() {\\r\\n        var currentLevel = this.currentLevel;\\r\\n        var level = this.levels[currentLevel];\\r\\n        var value = level.items[level.index];\\r\\n        currentLevel--;\\r\\n        if (currentLevel < 0) {\\r\\n          this.value = value;\\r\\n          return false;\\r\\n        }\\r\\n        this.currentLevel = currentLevel;\\r\\n        level = this.levels[currentLevel];\\r\\n        level.items[level.index] = value;\\r\\n        return true;\\r\\n      }\\r\\n    };\\r\\n    return TagTree;\\r\\n  }();\\r\\n  var InclusionTree = function InclusionTreeClosure() {\\r\\n    function InclusionTree(width, height, defaultValue) {\\r\\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\\r\\n      this.levels = [];\\r\\n      for (var i = 0; i < levelsLength; i++) {\\r\\n        var items = new Uint8Array(width * height);\\r\\n        for (var j = 0, jj = items.length; j < jj; j++) {\\r\\n          items[j] = defaultValue;\\r\\n        }\\r\\n        var level = {\\r\\n          width: width,\\r\\n          height: height,\\r\\n          items: items\\r\\n        };\\r\\n        this.levels.push(level);\\r\\n        width = Math.ceil(width / 2);\\r\\n        height = Math.ceil(height / 2);\\r\\n      }\\r\\n    }\\r\\n    InclusionTree.prototype = {\\r\\n      reset: function InclusionTree_reset(i, j, stopValue) {\\r\\n        var currentLevel = 0;\\r\\n        while (currentLevel < this.levels.length) {\\r\\n          var level = this.levels[currentLevel];\\r\\n          var index = i + j * level.width;\\r\\n          level.index = index;\\r\\n          var value = level.items[index];\\r\\n          if (value === 0xFF) {\\r\\n            break;\\r\\n          }\\r\\n          if (value > stopValue) {\\r\\n            this.currentLevel = currentLevel;\\r\\n            this.propagateValues();\\r\\n            return false;\\r\\n          }\\r\\n          i >>= 1;\\r\\n          j >>= 1;\\r\\n          currentLevel++;\\r\\n        }\\r\\n        this.currentLevel = currentLevel - 1;\\r\\n        return true;\\r\\n      },\\r\\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\\r\\n        var level = this.levels[this.currentLevel];\\r\\n        level.items[level.index] = stopValue + 1;\\r\\n        this.propagateValues();\\r\\n      },\\r\\n      propagateValues: function InclusionTree_propagateValues() {\\r\\n        var levelIndex = this.currentLevel;\\r\\n        var level = this.levels[levelIndex];\\r\\n        var currentValue = level.items[level.index];\\r\\n        while (--levelIndex >= 0) {\\r\\n          level = this.levels[levelIndex];\\r\\n          level.items[level.index] = currentValue;\\r\\n        }\\r\\n      },\\r\\n      nextLevel: function InclusionTree_nextLevel() {\\r\\n        var currentLevel = this.currentLevel;\\r\\n        var level = this.levels[currentLevel];\\r\\n        var value = level.items[level.index];\\r\\n        level.items[level.index] = 0xFF;\\r\\n        currentLevel--;\\r\\n        if (currentLevel < 0) {\\r\\n          return false;\\r\\n        }\\r\\n        this.currentLevel = currentLevel;\\r\\n        level = this.levels[currentLevel];\\r\\n        level.items[level.index] = value;\\r\\n        return true;\\r\\n      }\\r\\n    };\\r\\n    return InclusionTree;\\r\\n  }();\\r\\n  var BitModel = function BitModelClosure() {\\r\\n    var UNIFORM_CONTEXT = 17;\\r\\n    var RUNLENGTH_CONTEXT = 18;\\r\\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7,\";a.a+=\" 8, 0, 4, 7, 8]);\\r\\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\\r\\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\\r\\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\\r\\n      this.width = width;\\r\\n      this.height = height;\\r\\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\\r\\n      var coefficientCount = width * height;\\r\\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\\r\\n      this.coefficentsSign = new Uint8Array(coefficientCount);\\r\\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\\r\\n      this.processingFlags = new Uint8Array(coefficientCount);\\r\\n      var bitsDecoded = new Uint8Array(coefficientCount);\\r\\n      if (zeroBitPlanes !== 0) {\\r\\n        for (var i = 0; i < coefficientCount; i++) {\\r\\n          bitsDecoded[i] = zeroBitPlanes;\\r\\n        }\\r\\n      }\\r\\n      this.bitsDecoded = bitsDecoded;\\r\\n      this.reset();\\r\\n    }\\r\\n    BitModel.prototype = {\\r\\n      setDecoder: function BitModel_setDecoder(decoder) {\\r\\n        this.decoder = decoder;\\r\\n      },\\r\\n      reset: function BitModel_reset() {\\r\\n        this.contexts = new Int8Array(19);\\r\\n        this.contexts[0] = 4 << 1 | 0;\\r\\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\\r\\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\\r\\n      },\\r\\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\\r\\n        var neighborsSignificance = this.neighborsSignificance;\\r\\n        var width = this.width,\\r\\n            height = this.height;\\r\\n        var left = column > 0;\\r\\n        var right = column + 1 < width;\\r\\n        var i;\\r\\n        if (row > 0) {\\r\\n          i = index - width;\\r\\n          if (left) {\\r\\n            neighborsSignificance[i - 1] += 0x10;\\r\\n          }\\r\\n          if (right) {\\r\\n            neighborsSignificance[i + 1] += 0x10;\\r\\n          }\\r\\n          neighborsSignificance[i] += 0x04;\\r\\n        }\\r\\n        if (row + 1 < height) {\\r\\n          i = index + width;\\r\\n          if (left) {\\r\\n            neighborsSignificance[i - 1] += 0x10;\\r\\n          }\\r\\n          if (right) {\\r\\n            neighborsSignificance[i + 1] += 0x10;\\r\\n          }\\r\\n          neighborsSignificance[i] += 0x04;\\r\\n        }\\r\\n        if (left) {\\r\\n          neighborsSignificance[index - 1] += 0x01;\\r\\n        }\\r\\n        if (right) {\\r\\n          neighborsSignificance[index + 1] += 0x01;\\r\\n        }\\r\\n        neighborsSignificance[index] |= 0x80;\\r\\n      },\\r\\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\\r\\n        var decoder = this.decoder;\\r\\n        var width = this.width,\\r\\n            height = this.height;\\r\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\r\\n        var coefficentsSign = this.coefficentsSign;\\r\\n        var neighborsSignificance = this.neighborsSignificance;\\r\\n        var processingFlags = this.processingFlags;\\r\\n        var contexts = this.contexts;\\r\\n        var labels = this.contextLabelTable;\\r\\n        var bitsDecoded = this.bitsDecoded;\\r\\n        var processedInverseMask = ~1;\\r\\n        var processedMask = 1;\\r\\n        var firstMagnitudeBitMask = 2;\\r\\n        for (var i0 = 0; i0 < height; i0 += 4) {\\r\\n          for (var j = 0; j < width; j++) {\\r\\n            var index = i0 * width + j;\\r\\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\\r\\n              var i = i0 + i1;\\r\\n              if (i >= height) {\\r\\n                break;\\r\\n              }\\r\\n              processingFlags[index] &= processedInverseMask;\\r\\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\\r\\n                continue;\\r\\n              }\\r\\n              var contextLabel = labels[neighborsSignificance[index]];\\r\\n              var decision = decoder.readBit(contexts, contextLabel);\\r\\n              if (decision) {\\r\\n                var sign = this.decodeSignBit(i, j, index);\\r\\n                coefficentsSign[index] = sign;\\r\\n                coefficentsMagnitude[index] = 1;\\r\\n                this.setNeighborsSignificance(i, j, index);\\r\\n                processingFlags[index] |= firstMagnitudeBitMask;\\r\\n              }\\r\\n              bitsDecoded[index]++;\\r\\n              processingFlags[index] |= processedMask;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\\r\\n        var width = this.width,\\r\\n            height = this.height;\\r\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\r\\n        var coefficentsSign = this.coefficentsSign;\\r\\n        var contribution, sign0, sign1, significance1;\\r\\n        var contextLabel, decoded;\\r\\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\\r\\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\\r\\n          sign1 = coefficentsSign[index + 1];\\r\\n          if (significance1) {\\r\\n            sign0 = coefficentsSign[index - 1];\\r\\n            contribution = 1 - sign1 - sign0;\\r\\n          } else {\\r\\n            contribution = 1 - sign1 - sign1;\\r\\n          }\\r\\n        } else if (significance1) {\\r\\n          sign0 = coefficentsSign[index - 1];\\r\\n          contribution = 1 - sign0 - sign0;\\r\\n        } else {\\r\\n          contribution = 0;\\r\\n        }\\r\\n        var horizontalContribution = 3 * contribution;\\r\\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\\r\\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\\r\\n          sign1 = coefficentsSign[index + width];\\r\\n          if (significance1) {\\r\\n            sign0 = coefficentsSign[index - width];\\r\\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\\r\\n          } else {\\r\\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\\r\\n          }\\r\\n        } else if (significance1) {\\r\\n          sign0 = coefficentsSign[index - width];\\r\\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\\r\\n        } else {\\r\\n          contribution = horizontalContribution;\\r\\n        }\\r\\n        if (contribution >= 0) {\\r\\n          contextLabel = 9 + contribution;\\r\\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\\r\\n        } else {\\r\\n          contextLabel = 9 - contribution;\\r\\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\\r\\n        }\\r\\n        return decoded;\\r\\n      },\\r\\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\\r\\n        var decoder = this.decoder;\\r\\n        var width = this.width,\\r\\n            height = this.height;\\r\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\r\\n        var neighborsSignificance = this.neighborsSignificance;\\r\\n        var contexts = this.contexts;\\r\\n        var bitsDecoded = this.bitsDecoded;\\r\\n        var processingFlags = this.processingFlags;\\r\\n        var processedMask = 1;\\r\\n        var firstMagnitudeBitMask = 2;\\r\\n        var length = width * height;\\r\\n        var width4 = width * 4;\\r\\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\\r\\n          indexNext = Math.min(length, index0 + width4);\\r\\n          for (var j = 0; j < width; j++) {\\r\\n            for (var index = index0 + j; index < indexNext; index += width) {\\r\\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\r\\n                continue;\\r\\n              }\\r\\n              var contextLabel = 16;\\r\\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\\r\\n                processingFlags[index] ^= firstMagnitudeBitMask;\\r\\n                var significance = neighborsSignificance[index] & 127;\\r\\n                contextLabel = significance === 0 ? 15 : 14;\\r\\n              }\\r\\n              var bit = decoder.readBit(contexts, contextLabel);\\r\\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\\r\\n              bitsDecoded[index]++;\\r\\n              processingFlags[index] |= processedMask;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      runCleanupPass: function BitModel_runCleanupPass() {\\r\\n        var decoder = this.decoder;\\r\\n        var width = this.width,\\r\\n            height = this.height;\\r\\n        var neighborsSignificance = this.neighborsSignificance;\\r\\n        var coefficentsMagnitude = this.coefficentsMagnitude;\\r\\n        var coefficentsSign = this.coefficentsSign;\\r\\n        var contexts = this.contexts;\\r\\n        var labels = this.contextLabelTable;\\r\\n        var bitsDecoded = this.bitsDecoded;\\r\\n        var processingFlags = this.processingFlags;\\r\\n        var processedMask = 1;\\r\\n        var firstMagnitudeBitMask = 2;\\r\\n        var oneRowDown = width;\\r\\n        var twoRowsDown = width * 2;\\r\\n        var threeRowsDown = width * 3;\\r\\n        var iNext;\\r\\n        for (var i0 = 0; i0 < height; i0 = iNext) {\\r\\n          iNext = Math.min(i0 + 4, height);\\r\\n          var indexBase = i0 * width;\\r\\n          var checkAllEmpty = i0 + 3 < height;\\r\\n          for (var j = 0; j < width; j++) {\\r\\n            var index0 = indexBase + j;\\r\\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\\r\\n            var i1 = 0,\\r\\n                index = index0;\\r\\n            var i = i0,\\r\\n                sign;\\r\\n            if (allEmpty) {\\r\\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\\r\\n              if (!hasSignificantCoefficent) {\\r\\n                bitsDecoded[index0]++;\\r\\n                bitsDecoded[index0 + oneRowDown]++;\\r\\n                bitsDecoded[index0 + twoRowsDown]++;\\r\\n                bitsDecoded[index0 + threeRowsDown]++;\\r\\n                continue;\\r\\n              }\\r\\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\r\\n              if (i1 !== 0) {\\r\\n                i = i0 + i1;\\r\\n                index += i1 * width;\\r\\n              }\\r\\n              sign = this.decodeSignBit(i, j, index);\\r\\n              coefficentsSign[index] = sign;\\r\\n              coefficentsMagnitude[index] = 1;\\r\\n              this.setNeighborsSignificance(i, j, index);\\r\\n              processingFlags[index] |= firstMagnitudeBitMask;\\r\\n              index = index0;\\r\\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\\r\\n                bitsDecoded[index]++;\\r\\n              }\\r\\n              i1++;\\r\\n            }\\r\\n            for (i = i0 + i1; i < iNext; i++, index += width) {\\r\\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\\r\\n                continue;\\r\\n              }\\r\\n              var contextLabel = labels[neighborsSignificance[index]];\\r\\n              var decision = decoder.readBit(contexts, contextLabel);\\r\\n              if (decision === 1) {\\r\\n                sign = this.decodeSignBit(i, j, index);\\r\\n                coefficentsSign[index] = sign;\\r\\n                coefficentsMagnitude[index] = 1;\\r\\n                this.setNeighborsSignificance(i, j, index);\\r\\n                processingFlags[index] |= firstMagnitudeBitMask;\\r\\n              }\\r\\n              bitsDecoded[index]++;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\\r\\n        var decoder = this.decoder;\\r\\n        var contexts = this.contexts;\\r\\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\\r\\n        if (symbol !== 0xA) {\\r\\n          throw new JpxError('Invalid segmentation symbol');\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    return BitModel;\\r\\n  }();\\r\\n  var Transform = function TransformClosure() {\\r\\n    function Transform() {}\\r\\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\\r\\n      var ll = subbands[0];\\r\\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\\r\\n        ll = this.iterate(ll, subbands[i], u0, v0);\\r\\n      }\\r\\n      return ll;\\r\\n    };\\r\\n    Transform.prototype.extend = function extend(buffer, offset, size) {\\r\\n      var i1 = offset - 1,\\r\\n          j1 = offset + 1;\\r\\n      var i2 = offset + size - 2,\\r\\n          j2 = offset + size;\\r\\n      buffer[i1--] = buffer[j1++];\\r\\n      buffer[j2++] = buffer[i2--];\\r\\n      buffer[i1--] = buffer[j1++];\\r\\n      buffer[j2++] = buffer[i2--];\\r\\n      buffer[i1--] = buffer[j1++];\\r\\n      buffer[j2++] = buffer[i2--];\\r\\n      buffer[i1] = buffer[j1];\\r\\n      buffer[j2] = buffer[i2];\\r\\n    };\\r\\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\\r\\n      var llWidth = ll.width,\\r\\n          llHeight = ll.height,\\r\\n          llItems = ll.items;\\r\\n      var width = hl_lh_hh.width;\\r\\n      var height = hl_lh_hh.height;\\r\\n      var items = hl_lh_hh.items;\\r\\n      var i, j, k, l, u, v;\\r\\n      for (k = 0, i = 0; i < llHeight; i++) {\\r\\n        l = i * 2 * width;\\r\\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\\r\\n          items[l] = llItems[k];\\r\\n        }\\r\\n      }\\r\\n      llItems = ll.items = null;\\r\\n      var bufferPadding = 4;\\r\\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\\r\\n      if (width === 1) {\\r\\n        if ((u0 & 1) !== 0) {\\r\\n          for (v = 0, k = 0; v < height; v++, k += width) {\\r\\n            items[k] *= 0.5;\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        for (v = 0, k = 0; v < height; v++, k += width) {\\r\\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\\r\\n          this.extend(rowBuffer, bufferPadding, width);\\r\\n          this.filter(rowBuffer, bufferPadding, width);\\r\\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\\r\\n        }\\r\\n      }\\r\\n      var numBuffers = 16;\\r\\n      var colBuffers = [];\\r\\n      for (i = 0; i < numBuffers; i++) {\\r\\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\\r\\n      }\\r\\n      var b,\\r\\n          currentBuffer = 0;\\r\\n      ll = bufferPadding + height;\\r\\n      if (height === 1) {\\r\\n        if ((v0 & 1) !== 0) {\\r\\n          for (u = 0; u < width; u++) {\\r\\n            items[u] *= 0.5;\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        for (u = 0; u < width; u++) {\\r\\n          if (currentBuffer === 0) {\\r\\n            numBuffers = Math.min(width - u, numBuffers);\\r\\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\\r\\n              for (b = 0; b < numBuffers; b++) {\\r\\n                colBuffers[b][l] = items[k + b];\\r\\n              }\\r\\n            }\\r\\n            currentBuffer = numBuffers;\\r\\n          }\\r\\n          currentBuffer--;\\r\\n          var buffer = colBuffers[currentBuffer];\\r\\n          this.extend(buffer, bufferPadding, height);\\r\\n          this.filter(buffer, bufferPadding, height);\\r\\n          if (currentBuffer === 0) {\\r\\n            k = u - numBuffers + 1;\\r\\n            for (l = bufferPadding; l < ll; k += width, l++) {\\r\\n              for (b = 0; b < numBuffers; b++) {\\r\\n                items[k + b] = colBuffers[b][l];\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return {\\r\\n        width: width,\\r\\n        height: height,\\r\\n        items: items\\r\\n      };\\r\\n    };\\r\\n    return Transform;\\r\\n  }();\\r\\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\\r\\n    function IrreversibleTransform() {\\r\\n      Transform.call(this);\\r\\n    }\\r\\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\\r\\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\\r\\n      var len = length >> 1;\\r\\n      offset = offset | 0;\\r\\n      var j, n, current, next;\\r\\n      var alpha = -1.586134342059924;\\r\\n      var beta = -0.052980118572961;\\r\\n      var gamma = 0.882911075530934;\\r\\n      var delta = 0.443506852\";a.a+='043971;\\r\\n      var K = 1.230174104914001;\\r\\n      var K_ = 1 / K;\\r\\n      j = offset - 3;\\r\\n      for (n = len + 4; n--; j += 2) {\\r\\n        x[j] *= K_;\\r\\n      }\\r\\n      j = offset - 2;\\r\\n      current = delta * x[j - 1];\\r\\n      for (n = len + 3; n--; j += 2) {\\r\\n        next = delta * x[j + 1];\\r\\n        x[j] = K * x[j] - current - next;\\r\\n        if (n--) {\\r\\n          j += 2;\\r\\n          current = delta * x[j + 1];\\r\\n          x[j] = K * x[j] - current - next;\\r\\n        } else {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      j = offset - 1;\\r\\n      current = gamma * x[j - 1];\\r\\n      for (n = len + 2; n--; j += 2) {\\r\\n        next = gamma * x[j + 1];\\r\\n        x[j] -= current + next;\\r\\n        if (n--) {\\r\\n          j += 2;\\r\\n          current = gamma * x[j + 1];\\r\\n          x[j] -= current + next;\\r\\n        } else {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      j = offset;\\r\\n      current = beta * x[j - 1];\\r\\n      for (n = len + 1; n--; j += 2) {\\r\\n        next = beta * x[j + 1];\\r\\n        x[j] -= current + next;\\r\\n        if (n--) {\\r\\n          j += 2;\\r\\n          current = beta * x[j + 1];\\r\\n          x[j] -= current + next;\\r\\n        } else {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      if (len !== 0) {\\r\\n        j = offset + 1;\\r\\n        current = alpha * x[j - 1];\\r\\n        for (n = len; n--; j += 2) {\\r\\n          next = alpha * x[j + 1];\\r\\n          x[j] -= current + next;\\r\\n          if (n--) {\\r\\n            j += 2;\\r\\n            current = alpha * x[j + 1];\\r\\n            x[j] -= current + next;\\r\\n          } else {\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n    return IrreversibleTransform;\\r\\n  }();\\r\\n  var ReversibleTransform = function ReversibleTransformClosure() {\\r\\n    function ReversibleTransform() {\\r\\n      Transform.call(this);\\r\\n    }\\r\\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\\r\\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\\r\\n      var len = length >> 1;\\r\\n      offset = offset | 0;\\r\\n      var j, n;\\r\\n      for (j = offset, n = len + 1; n--; j += 2) {\\r\\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\\r\\n      }\\r\\n      for (j = offset + 1, n = len; n--; j += 2) {\\r\\n        x[j] += x[j - 1] + x[j + 1] >> 1;\\r\\n      }\\r\\n    };\\r\\n    return ReversibleTransform;\\r\\n  }();\\r\\n  return JpxImage;\\r\\n}();\\r\\nexports.JpxImage = JpxImage;\\r\\n\\r\\n/***/ }),\\r\\n/* 81 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\"use strict\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \"__esModule\", {\\r\\n  value: true\\r\\n});\\r\\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\\r\\n  var QeTable = [{\\r\\n    qe: 0x5601,\\r\\n    nmps: 1,\\r\\n    nlps: 1,\\r\\n    switchFlag: 1\\r\\n  }, {\\r\\n    qe: 0x3401,\\r\\n    nmps: 2,\\r\\n    nlps: 6,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1801,\\r\\n    nmps: 3,\\r\\n    nlps: 9,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0AC1,\\r\\n    nmps: 4,\\r\\n    nlps: 12,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0521,\\r\\n    nmps: 5,\\r\\n    nlps: 29,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0221,\\r\\n    nmps: 38,\\r\\n    nlps: 33,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x5601,\\r\\n    nmps: 7,\\r\\n    nlps: 6,\\r\\n    switchFlag: 1\\r\\n  }, {\\r\\n    qe: 0x5401,\\r\\n    nmps: 8,\\r\\n    nlps: 14,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x4801,\\r\\n    nmps: 9,\\r\\n    nlps: 14,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x3801,\\r\\n    nmps: 10,\\r\\n    nlps: 14,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x3001,\\r\\n    nmps: 11,\\r\\n    nlps: 17,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x2401,\\r\\n    nmps: 12,\\r\\n    nlps: 18,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1C01,\\r\\n    nmps: 13,\\r\\n    nlps: 20,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1601,\\r\\n    nmps: 29,\\r\\n    nlps: 21,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x5601,\\r\\n    nmps: 15,\\r\\n    nlps: 14,\\r\\n    switchFlag: 1\\r\\n  }, {\\r\\n    qe: 0x5401,\\r\\n    nmps: 16,\\r\\n    nlps: 14,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x5101,\\r\\n    nmps: 17,\\r\\n    nlps: 15,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x4801,\\r\\n    nmps: 18,\\r\\n    nlps: 16,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x3801,\\r\\n    nmps: 19,\\r\\n    nlps: 17,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x3401,\\r\\n    nmps: 20,\\r\\n    nlps: 18,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x3001,\\r\\n    nmps: 21,\\r\\n    nlps: 19,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x2801,\\r\\n    nmps: 22,\\r\\n    nlps: 19,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x2401,\\r\\n    nmps: 23,\\r\\n    nlps: 20,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x2201,\\r\\n    nmps: 24,\\r\\n    nlps: 21,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1C01,\\r\\n    nmps: 25,\\r\\n    nlps: 22,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1801,\\r\\n    nmps: 26,\\r\\n    nlps: 23,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1601,\\r\\n    nmps: 27,\\r\\n    nlps: 24,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1401,\\r\\n    nmps: 28,\\r\\n    nlps: 25,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1201,\\r\\n    nmps: 29,\\r\\n    nlps: 26,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x1101,\\r\\n    nmps: 30,\\r\\n    nlps: 27,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0AC1,\\r\\n    nmps: 31,\\r\\n    nlps: 28,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x09C1,\\r\\n    nmps: 32,\\r\\n    nlps: 29,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x08A1,\\r\\n    nmps: 33,\\r\\n    nlps: 30,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0521,\\r\\n    nmps: 34,\\r\\n    nlps: 31,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0441,\\r\\n    nmps: 35,\\r\\n    nlps: 32,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x02A1,\\r\\n    nmps: 36,\\r\\n    nlps: 33,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0221,\\r\\n    nmps: 37,\\r\\n    nlps: 34,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0141,\\r\\n    nmps: 38,\\r\\n    nlps: 35,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0111,\\r\\n    nmps: 39,\\r\\n    nlps: 36,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0085,\\r\\n    nmps: 40,\\r\\n    nlps: 37,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0049,\\r\\n    nmps: 41,\\r\\n    nlps: 38,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0025,\\r\\n    nmps: 42,\\r\\n    nlps: 39,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0015,\\r\\n    nmps: 43,\\r\\n    nlps: 40,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0009,\\r\\n    nmps: 44,\\r\\n    nlps: 41,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0005,\\r\\n    nmps: 45,\\r\\n    nlps: 42,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x0001,\\r\\n    nmps: 45,\\r\\n    nlps: 43,\\r\\n    switchFlag: 0\\r\\n  }, {\\r\\n    qe: 0x5601,\\r\\n    nmps: 46,\\r\\n    nlps: 46,\\r\\n    switchFlag: 0\\r\\n  }];\\r\\n  function ArithmeticDecoder(data, start, end) {\\r\\n    this.data = data;\\r\\n    this.bp = start;\\r\\n    this.dataEnd = end;\\r\\n    this.chigh = data[start];\\r\\n    this.clow = 0;\\r\\n    this.byteIn();\\r\\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\\r\\n    this.clow = this.clow << 7 & 0xFFFF;\\r\\n    this.ct -= 7;\\r\\n    this.a = 0x8000;\\r\\n  }\\r\\n  ArithmeticDecoder.prototype = {\\r\\n    byteIn: function ArithmeticDecoder_byteIn() {\\r\\n      var data = this.data;\\r\\n      var bp = this.bp;\\r\\n      if (data[bp] === 0xFF) {\\r\\n        var b1 = data[bp + 1];\\r\\n        if (b1 > 0x8F) {\\r\\n          this.clow += 0xFF00;\\r\\n          this.ct = 8;\\r\\n        } else {\\r\\n          bp++;\\r\\n          this.clow += data[bp] << 9;\\r\\n          this.ct = 7;\\r\\n          this.bp = bp;\\r\\n        }\\r\\n      } else {\\r\\n        bp++;\\r\\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\\r\\n        this.ct = 8;\\r\\n        this.bp = bp;\\r\\n      }\\r\\n      if (this.clow > 0xFFFF) {\\r\\n        this.chigh += this.clow >> 16;\\r\\n        this.clow &= 0xFFFF;\\r\\n      }\\r\\n    },\\r\\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\\r\\n      var cx_index = contexts[pos] >> 1,\\r\\n          cx_mps = contexts[pos] & 1;\\r\\n      var qeTableIcx = QeTable[cx_index];\\r\\n      var qeIcx = qeTableIcx.qe;\\r\\n      var d;\\r\\n      var a = this.a - qeIcx;\\r\\n      if (this.chigh < qeIcx) {\\r\\n        if (a < qeIcx) {\\r\\n          a = qeIcx;\\r\\n          d = cx_mps;\\r\\n          cx_index = qeTableIcx.nmps;\\r\\n        } else {\\r\\n          a = qeIcx;\\r\\n          d = 1 ^ cx_mps;\\r\\n          if (qeTableIcx.switchFlag === 1) {\\r\\n            cx_mps = d;\\r\\n          }\\r\\n          cx_index = qeTableIcx.nlps;\\r\\n        }\\r\\n      } else {\\r\\n        this.chigh -= qeIcx;\\r\\n        if ((a & 0x8000) !== 0) {\\r\\n          this.a = a;\\r\\n          return cx_mps;\\r\\n        }\\r\\n        if (a < qeIcx) {\\r\\n          d = 1 ^ cx_mps;\\r\\n          if (qeTableIcx.switchFlag === 1) {\\r\\n            cx_mps = d;\\r\\n          }\\r\\n          cx_index = qeTableIcx.nlps;\\r\\n        } else {\\r\\n          d = cx_mps;\\r\\n          cx_index = qeTableIcx.nmps;\\r\\n        }\\r\\n      }\\r\\n      do {\\r\\n        if (this.ct === 0) {\\r\\n          this.byteIn();\\r\\n        }\\r\\n        a <<= 1;\\r\\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\\r\\n        this.clow = this.clow << 1 & 0xFFFF;\\r\\n        this.ct--;\\r\\n      } while ((a & 0x8000) === 0);\\r\\n      this.a = a;\\r\\n      contexts[pos] = cx_index << 1 | cx_mps;\\r\\n      return d;\\r\\n    }\\r\\n  };\\r\\n  return ArithmeticDecoder;\\r\\n}();\\r\\nexports.ArithmeticDecoder = ArithmeticDecoder;\\r\\n\\r\\n/***/ }),\\r\\n/* 82 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\"use strict\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \"__esModule\", {\\r\\n  value: true\\r\\n});\\r\\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar ARCFourCipher = function ARCFourCipherClosure() {\\r\\n  function ARCFourCipher(key) {\\r\\n    this.a = 0;\\r\\n    this.b = 0;\\r\\n    var s = new Uint8Array(256);\\r\\n    var i,\\r\\n        j = 0,\\r\\n        tmp,\\r\\n        keyLength = key.length;\\r\\n    for (i = 0; i < 256; ++i) {\\r\\n      s[i] = i;\\r\\n    }\\r\\n    for (i = 0; i < 256; ++i) {\\r\\n      tmp = s[i];\\r\\n      j = j + tmp + key[i % keyLength] & 0xFF;\\r\\n      s[i] = s[j];\\r\\n      s[j] = tmp;\\r\\n    }\\r\\n    this.s = s;\\r\\n  }\\r\\n  ARCFourCipher.prototype = {\\r\\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\\r\\n      var i,\\r\\n          n = data.length,\\r\\n          tmp,\\r\\n          tmp2;\\r\\n      var a = this.a,\\r\\n          b = this.b,\\r\\n          s = this.s;\\r\\n      var output = new Uint8Array(n);\\r\\n      for (i = 0; i < n; ++i) {\\r\\n        a = a + 1 & 0xFF;\\r\\n        tmp = s[a];\\r\\n        b = b + tmp & 0xFF;\\r\\n        tmp2 = s[b];\\r\\n        s[a] = tmp2;\\r\\n        s[b] = tmp;\\r\\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\\r\\n      }\\r\\n      this.a = a;\\r\\n      this.b = b;\\r\\n      return output;\\r\\n    }\\r\\n  };\\r\\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\\r\\n  return ARCFourCipher;\\r\\n}();\\r\\nvar calculateMD5 = function calculateMD5Closure() {\\r\\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\\r\\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\\r\\n  function hash(data, offset, length) {\\r\\n    var h0 = 1732584193,\\r\\n        h1 = -271733879,\\r\\n        h2 = -1732584194,\\r\\n        h3 = 271733878;\\r\\n    var paddedLength = length + 72 & ~63;\\r\\n    var padded = new Uint8Array(paddedLength);\\r\\n    var i, j, n;\\r\\n    for (i = 0; i < length; ++i) {\\r\\n      padded[i] = data[offset++];\\r\\n    }\\r\\n    padded[i++] = 0x80;\\r\\n    n = paddedLength - 8;\\r\\n    while (i < n) {\\r\\n      padded[i++] = 0;\\r\\n    }\\r\\n    padded[i++] = length << 3 & 0xFF;\\r\\n    padded[i++] = length >> 5 & 0xFF;\\r\\n    padded[i++] = length >> 13 & 0xFF;\\r\\n    padded[i++] = length >> 21 & 0xFF;\\r\\n    padded[i++] = length >>> 29 & 0xFF;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    var w = new Int32Array(16);\\r\\n    for (i = 0; i < paddedLength;) {\\r\\n      for (j = 0; j < 16; ++j, i += 4) {\\r\\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\\r\\n      }\\r\\n      var a = h0,\\r\\n          b = h1,\\r\\n          c = h2,\\r\\n          d = h3,\\r\\n          f,\\r\\n          g;\\r\\n      for (j = 0; j < 64; ++j) {\\r\\n        if (j < 16) {\\r\\n          f = b & c | ~b & d;\\r\\n          g = j;\\r\\n        } else if (j < 32) {\\r\\n          f = d & b | ~d & c;\\r\\n          g = 5 * j + 1 & 15;\\r\\n        } else if (j < 48) {\\r\\n          f = b ^ c ^ d;\\r\\n          g = 3 * j + 5 & 15;\\r\\n        } else {\\r\\n          f = c ^ (b | ~d);\\r\\n          g = 7 * j & 15;\\r\\n        }\\r\\n        var tmp = d,\\r\\n            rotateArg = a + f + k[j] + w[g] | 0,\\r\\n            rotate = r[j];\\r\\n        d = c;\\r\\n        c = b;\\r\\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\\r\\n        a = tmp;\\r\\n      }\\r\\n      h0 = h0 + a | 0;\\r\\n      h1 = h1 + b | 0;\\r\\n      h2 = h2 + c | 0;\\r\\n      h3 = h3 + d | 0;\\r\\n    }\\r\\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\\r\\n  }\\r\\n  return hash;\\r\\n}();\\r\\nvar Word64 = function Word64Closure() {\\r\\n  function Word64(highInteger, lowInteger) {\\r\\n    this.high = highInteger | 0;\\r\\n    this.low = lowInteger | 0;\\r\\n  }\\r\\n  Word64.prototype = {\\r\\n    and: function Word64_and(word) {\\r\\n      this.high &= word.high;\\r\\n      this.low &= word.low;\\r\\n    },\\r\\n    xor: function Word64_xor(word) {\\r\\n      this.high ^= word.high;\\r\\n      this.low ^= word.low;\\r\\n    },\\r\\n    or: function Word64_or(word) {\\r\\n      this.high |= word.high;\\r\\n      this.low |= word.low;\\r\\n    },\\r\\n    shiftRight: function Word64_shiftRight(places) {\\r\\n      if (places >= 32) {\\r\\n        this.low = this.high >>> places - 32 | 0;\\r\\n        this.high = 0;\\r\\n      } else {\\r\\n        this.low = this.low >>> places | this.high << 32 - places;\\r\\n        this.high = this.high >>> places | 0;\\r\\n      }\\r\\n    },\\r\\n    shiftLeft: function Word64_shiftLeft(places) {\\r\\n      if (places >= 32) {\\r\\n        this.high = this.low << places - 32;\\r\\n        this.low = 0;\\r\\n      } else {\\r\\n        this.high = this.high << places | this.low >>> 32 - places;\\r\\n        this.low = this.low << places;\\r\\n      }\\r\\n    },\\r\\n    rotateRight: function Word64_rotateRight(places) {\\r\\n      var low, high;\\r\\n      if (places & 32) {\\r\\n        high = this.low;\\r\\n        low = this.high;\\r\\n      } else {\\r\\n        low = this.low;\\r\\n        high = this.high;\\r\\n      }\\r\\n      places &= 31;\\r\\n      this.low = low >>> places | high << 32 - places;\\r\\n      this.high = high >>> places | low << 32 - places;\\r\\n    },\\r\\n    not: function Word64_not() {\\r\\n      this.high = ~this.high;\\r\\n      this.low = ~this.low;\\r\\n    },\\r\\n    add: function Word64_add(word) {\\r\\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\\r\\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\\r\\n      if (lowAdd > 0xFFFFFFFF) {\\r\\n        highAdd += 1;\\r\\n      }\\r\\n      this.low = lowAdd | 0;\\r\\n      this.high = highAdd | 0;\\r\\n    },\\r\\n    copyTo: function Word64_copyTo(bytes, offset) {\\r\\n      bytes[offset] = this.high >>> 24 & 0xFF;\\r\\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\\r\\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\\r\\n      bytes[offset + 3] = this.high & 0xFF;\\r\\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\\r\\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\\r\\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\\r\\n      bytes[offset + 7] = this.low & 0xFF;\\r\\n    },\\r\\n    assign: function Word64_assign(word) {\\r\\n      this.high = word.high;\\r\\n      this.low = word.low;\\r\\n    }\\r\\n  };\\r\\n  return Word64;\\r\\n}();\\r\\nvar calculateSHA256 = function calculateSHA256Closure() {\\r\\n  function rotr(x, n) {\\r\\n    return x >>> n | x << 32 - n;\\r\\n  }\\r\\n  function ch(x, y, z) {\\r\\n    return x & y ^ ~x & z;\\r\\n  }\\r\\n  function maj(x, y, z) {\\r\\n    return x & y ^ x & z ^ y & z;\\r\\n  }\\r\\n  function sigma(x) {\\r\\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\\r\\n  }\\r\\n  function sigmaPrime(x) {\\r\\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\\r\\n  }\\r\\n  function littleSigma(x) {\\r\\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\\r\\n  }\\r\\n  function littleSigmaPrime(x) {\\r\\n    return rotr';a.a+='(x, 17) ^ rotr(x, 19) ^ x >>> 10;\\r\\n  }\\r\\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\\r\\n  function hash(data, offset, length) {\\r\\n    var h0 = 0x6a09e667,\\r\\n        h1 = 0xbb67ae85,\\r\\n        h2 = 0x3c6ef372,\\r\\n        h3 = 0xa54ff53a,\\r\\n        h4 = 0x510e527f,\\r\\n        h5 = 0x9b05688c,\\r\\n        h6 = 0x1f83d9ab,\\r\\n        h7 = 0x5be0cd19;\\r\\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\\r\\n    var padded = new Uint8Array(paddedLength);\\r\\n    var i, j, n;\\r\\n    for (i = 0; i < length; ++i) {\\r\\n      padded[i] = data[offset++];\\r\\n    }\\r\\n    padded[i++] = 0x80;\\r\\n    n = paddedLength - 8;\\r\\n    while (i < n) {\\r\\n      padded[i++] = 0;\\r\\n    }\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = length >>> 29 & 0xFF;\\r\\n    padded[i++] = length >> 21 & 0xFF;\\r\\n    padded[i++] = length >> 13 & 0xFF;\\r\\n    padded[i++] = length >> 5 & 0xFF;\\r\\n    padded[i++] = length << 3 & 0xFF;\\r\\n    var w = new Uint32Array(64);\\r\\n    for (i = 0; i < paddedLength;) {\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\r\\n        i += 4;\\r\\n      }\\r\\n      for (j = 16; j < 64; ++j) {\\r\\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\\r\\n      }\\r\\n      var a = h0,\\r\\n          b = h1,\\r\\n          c = h2,\\r\\n          d = h3,\\r\\n          e = h4,\\r\\n          f = h5,\\r\\n          g = h6,\\r\\n          h = h7,\\r\\n          t1,\\r\\n          t2;\\r\\n      for (j = 0; j < 64; ++j) {\\r\\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\\r\\n        t2 = sigma(a) + maj(a, b, c);\\r\\n        h = g;\\r\\n        g = f;\\r\\n        f = e;\\r\\n        e = d + t1 | 0;\\r\\n        d = c;\\r\\n        c = b;\\r\\n        b = a;\\r\\n        a = t1 + t2 | 0;\\r\\n      }\\r\\n      h0 = h0 + a | 0;\\r\\n      h1 = h1 + b | 0;\\r\\n      h2 = h2 + c | 0;\\r\\n      h3 = h3 + d | 0;\\r\\n      h4 = h4 + e | 0;\\r\\n      h5 = h5 + f | 0;\\r\\n      h6 = h6 + g | 0;\\r\\n      h7 = h7 + h | 0;\\r\\n    }\\r\\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\\r\\n  }\\r\\n  return hash;\\r\\n}();\\r\\nvar calculateSHA512 = function calculateSHA512Closure() {\\r\\n  function ch(result, x, y, z, tmp) {\\r\\n    result.assign(x);\\r\\n    result.and(y);\\r\\n    tmp.assign(x);\\r\\n    tmp.not();\\r\\n    tmp.and(z);\\r\\n    result.xor(tmp);\\r\\n  }\\r\\n  function maj(result, x, y, z, tmp) {\\r\\n    result.assign(x);\\r\\n    result.and(y);\\r\\n    tmp.assign(x);\\r\\n    tmp.and(z);\\r\\n    result.xor(tmp);\\r\\n    tmp.assign(y);\\r\\n    tmp.and(z);\\r\\n    result.xor(tmp);\\r\\n  }\\r\\n  function sigma(result, x, tmp) {\\r\\n    result.assign(x);\\r\\n    result.rotateRight(28);\\r\\n    tmp.assign(x);\\r\\n    tmp.rotateRight(34);\\r\\n    result.xor(tmp);\\r\\n    tmp.assign(x);\\r\\n    tmp.rotateRight(39);\\r\\n    result.xor(tmp);\\r\\n  }\\r\\n  function sigmaPrime(result, x, tmp) {\\r\\n    result.assign(x);\\r\\n    result.rotateRight(14);\\r\\n    tmp.assign(x);\\r\\n    tmp.rotateRight(18);\\r\\n    result.xor(tmp);\\r\\n    tmp.assign(x);\\r\\n    tmp.rotateRight(41);\\r\\n    result.xor(tmp);\\r\\n  }\\r\\n  function littleSigma(result, x, tmp) {\\r\\n    result.assign(x);\\r\\n    result.rotateRight(1);\\r\\n    tmp.assign(x);\\r\\n    tmp.rotateRight(8);\\r\\n    result.xor(tmp);\\r\\n    tmp.assign(x);\\r\\n    tmp.shiftRight(7);\\r\\n    result.xor(tmp);\\r\\n  }\\r\\n  function littleSigmaPrime(result, x, tmp) {\\r\\n    result.assign(x);\\r\\n    result.rotateRight(19);\\r\\n    tmp.assign(x);\\r\\n    tmp.rotateRight(61);\\r\\n    result.xor(tmp);\\r\\n    tmp.assign(x);\\r\\n    tmp.shiftRight(6);\\r\\n    result.xor(tmp);\\r\\n  }\\r\\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\\r\\n  function hash(data, offset, length, mode384) {\\r\\n    mode384 = !!mode384;\\r\\n    var h0, h1, h2, h3, h4, h5, h6, h7;\\r\\n    if (!mode384) {\\r\\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\\r\\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\\r\\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\\r\\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\\r\\n      h4 = new Word64(0x510e527f, 0xade682d1);\\r\\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\\r\\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\\r\\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\\r\\n    } else {\\r\\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\\r\\n      h1 = new Word64(0x629a292a, 0x367cd507);\\r\\n      h2 = new Word64(0x9159015a, 0x3070dd17);\\r\\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\\r\\n      h4 = new Word64(0x67332667, 0xffc00b31);\\r\\n      h5 = new Word64(0x8eb44a87, 0x68581511);\\r\\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\\r\\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\\r\\n    }\\r\\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\\r\\n    var padded = new Uint8Array(paddedLength);\\r\\n    var i, j, n;\\r\\n    for (i = 0; i < length; ++i) {\\r\\n      padded[i] = data[offset++];\\r\\n    }\\r\\n    padded[i++] = 0x80;\\r\\n    n = paddedLength - 16;\\r\\n    while (i < n) {\\r\\n      padded[i++] = 0;\\r\\n    }\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = 0;\\r\\n    padded[i++] = length >>> 29 & 0xFF;\\r\\n    padded[i++] = length >> 21 & 0xFF;\\r\\n    padded[i++] = length >> 13 & 0xFF;\\r\\n    padded[i++] = length >> 5 & 0xFF;\\r\\n    padded[i++] = length << 3 & 0xFF;\\r\\n    var w = new Array(80);\\r\\n    for (i = 0; i < 80; i++) {\\r\\n      w[i] = new Word64(0, 0);\\r\\n    }\\r\\n    var a = new Word64(0, 0),\\r\\n        b = new Word64(0, 0),\\r\\n        c = new Word64(0, 0);\\r\\n    var d = new Word64(0, 0),\\r\\n        e = new Word64(0, 0),\\r\\n        f = new Word64(0, 0);\\r\\n    var g = new Word64(0, 0),\\r\\n        h = new Word64(0, 0);\\r\\n    var t1 = new Word64(0, 0),\\r\\n        t2 = new Word64(0, 0);\\r\\n    var tmp1 = new Word64(0, 0),\\r\\n        tmp2 = new Word64(0, 0),\\r\\n        tmp3;\\r\\n    for (i = 0; i < paddedLength;) {\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\\r\\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\\r\\n        i += 8;\\r\\n      }\\r\\n      for (j = 16; j < 80; ++j) {\\r\\n        tmp3 = w[j];\\r\\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\\r\\n        tmp3.add(w[j - 7]);\\r\\n        littleSigma(tmp1, w[j - 15], tmp2);\\r\\n        tmp3.add(tmp1);\\r\\n        tmp3.add(w[j - 16]);\\r\\n      }\\r\\n      a.assign(h0);\\r\\n      b.assign(h1);\\r\\n      c.assign(h2);\\r\\n      d.assign(h3);\\r\\n      e.assign(h4);\\r\\n      f.assign(h5);\\r\\n      g.assign(h6);\\r\\n      h.assign(h7);\\r\\n      for (j = 0; j < 80; ++j) {\\r\\n        t1.assign(h);\\r\\n        sigmaPrime(tmp1, e, tmp2);\\r\\n        t1.add(tmp1);\\r\\n        ch(tmp1, e, f, g, tmp2);\\r\\n        t1.add(tmp1);\\r\\n        t1.add(k[j]);\\r\\n        t1.add(w[j]);\\r\\n        sigma(t2, a, tmp2);\\r\\n        maj(tmp1, a, b, c, tmp2);\\r\\n        t2.add(tmp1);\\r\\n        tmp3 = h;\\r\\n        h = g;\\r\\n        g = f;\\r\\n        f = e;\\r\\n        d.add(t1);\\r\\n        e = d;\\r\\n        d = c;\\r\\n        c = b;\\r\\n        b = a;\\r\\n        tmp3.assign(t1);\\r\\n        tmp3.add(t2);\\r\\n        a = tmp3;\\r\\n      }\\r\\n      h0.add(a);\\r\\n      h1.add(b);\\r\\n      h2.add(c);\\r\\n      h3.add(d);\\r\\n      h4.add(e);\\r\\n      h5.add(f);\\r\\n      h6.add(g);\\r\\n      h7.add(h);\\r\\n    }\\r\\n    var result;\\r\\n    if (!mode384) {\\r\\n      result = new Uint8Array(64);\\r\\n      h0.copyTo(result, 0);\\r\\n      h1.copyTo(result, 8);\\r\\n      h2.copyTo(result, 16);\\r\\n      h3.copyTo(result, 24);\\r\\n      h4.copyTo(result, 32);\\r\\n      h5.copyTo(result, 40);\\r\\n      h6.copyTo(result, 48);\\r\\n      h7.copyTo(result, 56);\\r\\n    } else {\\r\\n      result = new Uint8Array(48);\\r\\n      h0.copyTo(result, 0);\\r\\n      h1.copyTo(result, 8);\\r\\n      h2.copyTo(result, 16);\\r\\n      h3.copyTo(result, 24);\\r\\n      h4.copyTo(result, 32);\\r\\n      h5.copyTo(result, 40);\\r\\n    }\\r\\n    return result;\\r\\n  }\\r\\n  return hash;\\r\\n}();\\r\\nvar calculateSHA384 = function calculateSHA384Closure() {\\r\\n  function hash(data, offset, length) {\\r\\n    return calculateSHA512(data, offset, length, true);\\r\\n  }\\r\\n  return hash;\\r\\n}();\\r\\nvar NullCipher = function NullCipherClosure() {\\r\\n  function NullCipher() {}\\r\\n  NullCipher.prototype = {\\r\\n    decryptBlock: function NullCipher_decryptBlock(data) {\\r\\n      return data;\\r\\n    }\\r\\n  };\\r\\n  return NullCipher;\\r\\n}();\\r\\nvar AES128Cipher = function AES128CipherClosure() {\\r\\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\\r\\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\r\\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0x';a.a+='fe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\r\\n  var mixCol = new Uint8Array(256);\\r\\n  for (var i = 0; i < 256; i++) {\\r\\n    if (i < 128) {\\r\\n      mixCol[i] = i << 1;\\r\\n    } else {\\r\\n      mixCol[i] = i << 1 ^ 0x1b;\\r\\n    }\\r\\n  }\\r\\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\r\\n  function expandKey128(cipherKey) {\\r\\n    var b = 176,\\r\\n        result = new Uint8Array(b);\\r\\n    result.set(cipherKey);\\r\\n    for (var j = 16, i = 1; j < b; ++i) {\\r\\n      var t1 = result[j - 3],\\r\\n          t2 = result[j - 2],\\r\\n          t3 = result[j - 1],\\r\\n          t4 = result[j - 4];\\r\\n      t1 = s[t1];\\r\\n      t2 = s[t2];\\r\\n      t3 = s[t3];\\r\\n      t4 = s[t4];\\r\\n      t1 = t1 ^ rcon[i];\\r\\n      for (var n = 0; n < 4; ++n) {\\r\\n        result[j] = t1 ^= result[j - 16];\\r\\n        j++;\\r\\n        result[j] = t2 ^= result[j - 16];\\r\\n        j++;\\r\\n        result[j] = t3 ^= result[j - 16];\\r\\n        j++;\\r\\n        result[j] = t4 ^= result[j - 16];\\r\\n        j++;\\r\\n      }\\r\\n    }\\r\\n    return result;\\r\\n  }\\r\\n  function decrypt128(input, key) {\\r\\n    var state = new Uint8Array(16);\\r\\n    state.set(input);\\r\\n    var i, j, k;\\r\\n    var t, u, v;\\r\\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\\r\\n      state[j] ^= key[k];\\r\\n    }\\r\\n    for (i = 9; i >= 1; --i) {\\r\\n      t = state[13];\\r\\n      state[13] = state[9];\\r\\n      state[9] = state[5];\\r\\n      state[5] = state[1];\\r\\n      state[1] = t;\\r\\n      t = state[14];\\r\\n      u = state[10];\\r\\n      state[14] = state[6];\\r\\n      state[10] = state[2];\\r\\n      state[6] = t;\\r\\n      state[2] = u;\\r\\n      t = state[15];\\r\\n      u = state[11];\\r\\n      v = state[7];\\r\\n      state[15] = state[3];\\r\\n      state[11] = t;\\r\\n      state[7] = u;\\r\\n      state[3] = v;\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        state[j] = inv_s[state[j]];\\r\\n      }\\r\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\r\\n        state[j] ^= key[k];\\r\\n      }\\r\\n      for (j = 0; j < 16; j += 4) {\\r\\n        var s0 = mix[state[j]],\\r\\n            s1 = mix[state[j + 1]],\\r\\n            s2 = mix[state[j + 2]],\\r\\n            s3 = mix[state[j + 3]];\\r\\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\r\\n        state[j] = t >>> 24 & 0xFF;\\r\\n        state[j + 1] = t >> 16 & 0xFF;\\r\\n        state[j + 2] = t >> 8 & 0xFF;\\r\\n        state[j + 3] = t & 0xFF;\\r\\n      }\\r\\n    }\\r\\n    t = state[13];\\r\\n    state[13] = state[9];\\r\\n    state[9] = state[5];\\r\\n    state[5] = state[1];\\r\\n    state[1] = t;\\r\\n    t = state[14];\\r\\n    u = state[10];\\r\\n    state[14] = state[6];\\r\\n    state[10] = state[2];\\r\\n    state[6] = t;\\r\\n    state[2] = u;\\r\\n    t = state[15];\\r\\n    u = state[11];\\r\\n    v = state[7];\\r\\n    state[15] = state[3];\\r\\n    state[11] = t;\\r\\n    state[7] = u;\\r\\n    state[3] = v;\\r\\n    for (j = 0; j < 16; ++j) {\\r\\n      state[j] = inv_s[state[j]];\\r\\n      state[j] ^= key[j];\\r\\n    }\\r\\n    return state;\\r\\n  }\\r\\n  function encrypt128(input, key) {\\r\\n    var t, u, v, k;\\r\\n    var state = new Uint8Array(16);\\r\\n    state.set(input);\\r\\n    for (j = 0; j < 16; ++j) {\\r\\n      state[j] ^= key[j];\\r\\n    }\\r\\n    for (i = 1; i < 10; i++) {\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        state[j] = s[state[j]];\\r\\n      }\\r\\n      v = state[1];\\r\\n      state[1] = state[5];\\r\\n      state[5] = state[9];\\r\\n      state[9] = state[13];\\r\\n      state[13] = v;\\r\\n      v = state[2];\\r\\n      u = state[6];\\r\\n      state[2] = state[10];\\r\\n      state[6] = state[14];\\r\\n      state[10] = v;\\r\\n      state[14] = u;\\r\\n      v = state[3];\\r\\n      u = state[7];\\r\\n      t = state[11];\\r\\n      state[3] = state[15];\\r\\n      state[7] = v;\\r\\n      state[11] = u;\\r\\n      state[15] = t;\\r\\n      for (var j = 0; j < 16; j += 4) {\\r\\n        var s0 = state[j + 0],\\r\\n            s1 = state[j + 1];\\r\\n        var s2 = state[j + 2],\\r\\n            s3 = state[j + 3];\\r\\n        t = s0 ^ s1 ^ s2 ^ s3;\\r\\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\\r\\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\\r\\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\\r\\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\\r\\n      }\\r\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\r\\n        state[j] ^= key[k];\\r\\n      }\\r\\n    }\\r\\n    for (j = 0; j < 16; ++j) {\\r\\n      state[j] = s[state[j]];\\r\\n    }\\r\\n    v = state[1];\\r\\n    state[1] = state[5];\\r\\n    state[5] = state[9];\\r\\n    state[9] = state[13];\\r\\n    state[13] = v;\\r\\n    v = state[2];\\r\\n    u = state[6];\\r\\n    state[2] = state[10];\\r\\n    state[6] = state[14];\\r\\n    state[10] = v;\\r\\n    state[14] = u;\\r\\n    v = state[3];\\r\\n    u = state[7];\\r\\n    t = state[11];\\r\\n    state[3] = state[15];\\r\\n    state[7] = v;\\r\\n    state[11] = u;\\r\\n    state[15] = t;\\r\\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\\r\\n      state[j] ^= key[k];\\r\\n    }\\r\\n    return state;\\r\\n  }\\r\\n  function AES128Cipher(key) {\\r\\n    this.key = expandKey128(key);\\r\\n    this.buffer = new Uint8Array(16);\\r\\n    this.bufferPosition = 0;\\r\\n  }\\r\\n  function decryptBlock2(data, finalize) {\\r\\n    var i,\\r\\n        j,\\r\\n        ii,\\r\\n        sourceLength = data.length,\\r\\n        buffer = this.buffer,\\r\\n        bufferLength = this.bufferPosition,\\r\\n        result = [],\\r\\n        iv = this.iv;\\r\\n    for (i = 0; i < sourceLength; ++i) {\\r\\n      buffer[bufferLength] = data[i];\\r\\n      ++bufferLength;\\r\\n      if (bufferLength < 16) {\\r\\n        continue;\\r\\n      }\\r\\n      var plain = decrypt128(buffer, this.key);\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        plain[j] ^= iv[j];\\r\\n      }\\r\\n      iv = buffer;\\r\\n      result.push(plain);\\r\\n      buffer = new Uint8Array(16);\\r\\n      bufferLength = 0;\\r\\n    }\\r\\n    this.buffer = buffer;\\r\\n    this.bufferLength = bufferLength;\\r\\n    this.iv = iv;\\r\\n    if (result.length === 0) {\\r\\n      return new Uint8Array([]);\\r\\n    }\\r\\n    var outputLength = 16 * result.length;\\r\\n    if (finalize) {\\r\\n      var lastBlock = result[result.length - 1];\\r\\n      var psLen = lastBlock[15];\\r\\n      if (psLen <= 16) {\\r\\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\\r\\n          if (lastBlock[i] !== psLen) {\\r\\n            psLen = 0;\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        outputLength -= psLen;\\r\\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\r\\n      }\\r\\n    }\\r\\n    var output = new Uint8Array(outputLength);\\r\\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\r\\n      output.set(result[i], j);\\r\\n    }\\r\\n    return output;\\r\\n  }\\r\\n  AES128Cipher.prototype = {\\r\\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\\r\\n      var i,\\r\\n          sourceLength = data.length;\\r\\n      var buffer = this.buffer,\\r\\n          bufferLength = this.bufferPosition;\\r\\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\r\\n        buffer[bufferLength] = data[i];\\r\\n      }\\r\\n      if (bufferLength < 16) {\\r\\n        this.bufferLength = bufferLength;\\r\\n        return new Uint8Array([]);\\r\\n      }\\r\\n      this.iv = buffer;\\r\\n      this.buffer = new Uint8Array(16);\\r\\n      this.bufferLength = 0;\\r\\n      this.decryptBlock = decryptBlock2;\\r\\n      return this.decryptBlock(data.subarray(16), finalize);\\r\\n    },\\r\\n    encrypt: function AES128Cipher_encrypt(data, iv) {\\r\\n      var i,\\r\\n          j,\\r\\n          ii,\\r\\n          sourceLength = data.length,\\r\\n          buffer = this.buffer,\\r\\n          bufferLength = this.bufferPosition,\\r\\n          result = [];\\r\\n      if (!iv) {\\r\\n        iv = new Uint8Array(16);\\r\\n      }\\r\\n      for (i = 0; i < sourceLength; ++i) {\\r\\n        buffer[bufferLength] = data[i];\\r\\n        ++bufferLength;\\r\\n        if (bufferLength < 16) {\\r\\n          continue;\\r\\n        }\\r\\n        for (j = 0; j < 16; ++j) {\\r\\n          buffer[j] ^= iv[j];\\r\\n        }\\r\\n        var cipher = encrypt128(buffer, this.key);\\r\\n        iv = cipher;\\r\\n        result.push(cipher);\\r\\n        buffer = new Uint8Array(16);\\r\\n        bufferLength = 0;\\r\\n      }\\r\\n      this.buffer = buffer;\\r\\n      this.bufferLength = bufferLength;\\r\\n      this.iv = iv;\\r\\n      if (result.length === 0) {\\r\\n        return new Uint8Array([]);\\r\\n      }\\r\\n      var outputLength = 16 * result.length;\\r\\n      var output = new Uint8Array(outputLength);\\r\\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\r\\n        output.set(result[i], j);\\r\\n      }\\r\\n      return output;\\r\\n    }\\r\\n  };\\r\\n  return AES128Cipher;\\r\\n}();\\r\\nvar AES256Cipher = function AES256CipherClosure() {\\r\\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\\r\\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\\r\\n  var mixCol = new Uint8Array(256);\\r\\n  for (var i = 0; i < 256; i++) {\\r\\n    if (i < 128) {\\r\\n      mixCol[i] = i << 1;\\r\\n    } else {\\r\\n      mixCol[i] = i << 1 ^ 0x1b;\\r\\n    }\\r\\n  }\\r\\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e';a.a+='1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\\r\\n  function expandKey256(cipherKey) {\\r\\n    var b = 240,\\r\\n        result = new Uint8Array(b);\\r\\n    var r = 1;\\r\\n    result.set(cipherKey);\\r\\n    for (var j = 32, i = 1; j < b; ++i) {\\r\\n      if (j % 32 === 16) {\\r\\n        t1 = s[t1];\\r\\n        t2 = s[t2];\\r\\n        t3 = s[t3];\\r\\n        t4 = s[t4];\\r\\n      } else if (j % 32 === 0) {\\r\\n        var t1 = result[j - 3],\\r\\n            t2 = result[j - 2],\\r\\n            t3 = result[j - 1],\\r\\n            t4 = result[j - 4];\\r\\n        t1 = s[t1];\\r\\n        t2 = s[t2];\\r\\n        t3 = s[t3];\\r\\n        t4 = s[t4];\\r\\n        t1 = t1 ^ r;\\r\\n        if ((r <<= 1) >= 256) {\\r\\n          r = (r ^ 0x1b) & 0xFF;\\r\\n        }\\r\\n      }\\r\\n      for (var n = 0; n < 4; ++n) {\\r\\n        result[j] = t1 ^= result[j - 32];\\r\\n        j++;\\r\\n        result[j] = t2 ^= result[j - 32];\\r\\n        j++;\\r\\n        result[j] = t3 ^= result[j - 32];\\r\\n        j++;\\r\\n        result[j] = t4 ^= result[j - 32];\\r\\n        j++;\\r\\n      }\\r\\n    }\\r\\n    return result;\\r\\n  }\\r\\n  function decrypt256(input, key) {\\r\\n    var state = new Uint8Array(16);\\r\\n    state.set(input);\\r\\n    var i, j, k;\\r\\n    var t, u, v;\\r\\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\\r\\n      state[j] ^= key[k];\\r\\n    }\\r\\n    for (i = 13; i >= 1; --i) {\\r\\n      t = state[13];\\r\\n      state[13] = state[9];\\r\\n      state[9] = state[5];\\r\\n      state[5] = state[1];\\r\\n      state[1] = t;\\r\\n      t = state[14];\\r\\n      u = state[10];\\r\\n      state[14] = state[6];\\r\\n      state[10] = state[2];\\r\\n      state[6] = t;\\r\\n      state[2] = u;\\r\\n      t = state[15];\\r\\n      u = state[11];\\r\\n      v = state[7];\\r\\n      state[15] = state[3];\\r\\n      state[11] = t;\\r\\n      state[7] = u;\\r\\n      state[3] = v;\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        state[j] = inv_s[state[j]];\\r\\n      }\\r\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\r\\n        state[j] ^= key[k];\\r\\n      }\\r\\n      for (j = 0; j < 16; j += 4) {\\r\\n        var s0 = mix[state[j]],\\r\\n            s1 = mix[state[j + 1]],\\r\\n            s2 = mix[state[j + 2]],\\r\\n            s3 = mix[state[j + 3]];\\r\\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\\r\\n        state[j] = t >>> 24 & 0xFF;\\r\\n        state[j + 1] = t >> 16 & 0xFF;\\r\\n        state[j + 2] = t >> 8 & 0xFF;\\r\\n        state[j + 3] = t & 0xFF;\\r\\n      }\\r\\n    }\\r\\n    t = state[13];\\r\\n    state[13] = state[9];\\r\\n    state[9] = state[5];\\r\\n    state[5] = state[1];\\r\\n    state[1] = t;\\r\\n    t = state[14];\\r\\n    u = state[10];\\r\\n    state[14] = state[6];\\r\\n    state[10] = state[2];\\r\\n    state[6] = t;\\r\\n    state[2] = u;\\r\\n    t = state[15];\\r\\n    u = state[11];\\r\\n    v = state[7];\\r\\n    state[15] = state[3];\\r\\n    state[11] = t;\\r\\n    state[7] = u;\\r\\n    state[3] = v;\\r\\n    for (j = 0; j < 16; ++j) {\\r\\n      state[j] = inv_s[state[j]];\\r\\n      state[j] ^= key[j];\\r\\n    }\\r\\n    return state;\\r\\n  }\\r\\n  function encrypt256(input, key) {\\r\\n    var t, u, v, k;\\r\\n    var state = new Uint8Array(16);\\r\\n    state.set(input);\\r\\n    for (j = 0; j < 16; ++j) {\\r\\n      state[j] ^= key[j];\\r\\n    }\\r\\n    for (i = 1; i < 14; i++) {\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        state[j] = s[state[j]];\\r\\n      }\\r\\n      v = state[1];\\r\\n      state[1] = state[5];\\r\\n      state[5] = state[9];\\r\\n      state[9] = state[13];\\r\\n      state[13] = v;\\r\\n      v = state[2];\\r\\n      u = state[6];\\r\\n      state[2] = state[10];\\r\\n      state[6] = state[14];\\r\\n      state[10] = v;\\r\\n      state[14] = u;\\r\\n      v = state[3];\\r\\n      u = state[7];\\r\\n      t = state[11];\\r\\n      state[3] = state[15];\\r\\n      state[7] = v;\\r\\n      state[11] = u;\\r\\n      state[15] = t;\\r\\n      for (var j = 0; j < 16; j += 4) {\\r\\n        var s0 = state[j + 0],\\r\\n            s1 = state[j + 1];\\r\\n        var s2 = state[j + 2],\\r\\n            s3 = state[j + 3];\\r\\n        t = s0 ^ s1 ^ s2 ^ s3;\\r\\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\\r\\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\\r\\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\\r\\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\\r\\n      }\\r\\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\\r\\n        state[j] ^= key[k];\\r\\n      }\\r\\n    }\\r\\n    for (j = 0; j < 16; ++j) {\\r\\n      state[j] = s[state[j]];\\r\\n    }\\r\\n    v = state[1];\\r\\n    state[1] = state[5];\\r\\n    state[5] = state[9];\\r\\n    state[9] = state[13];\\r\\n    state[13] = v;\\r\\n    v = state[2];\\r\\n    u = state[6];\\r\\n    state[2] = state[10];\\r\\n    state[6] = state[14];\\r\\n    state[10] = v;\\r\\n    state[14] = u;\\r\\n    v = state[3];\\r\\n    u = state[7];\\r\\n    t = state[11];\\r\\n    state[3] = state[15];\\r\\n    state[7] = v;\\r\\n    state[11] = u;\\r\\n    state[15] = t;\\r\\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\\r\\n      state[j] ^= key[k];\\r\\n    }\\r\\n    return state;\\r\\n  }\\r\\n  function AES256Cipher(key) {\\r\\n    this.key = expandKey256(key);\\r\\n    this.buffer = new Uint8Array(16);\\r\\n    this.bufferPosition = 0;\\r\\n  }\\r\\n  function decryptBlock2(data, finalize) {\\r\\n    var i,\\r\\n        j,\\r\\n        ii,\\r\\n        sourceLength = data.length,\\r\\n        buffer = this.buffer,\\r\\n        bufferLength = this.bufferPosition,\\r\\n        result = [],\\r\\n        iv = this.iv;\\r\\n    for (i = 0; i < sourceLength; ++i) {\\r\\n      buffer[bufferLength] = data[i];\\r\\n      ++bufferLength;\\r\\n      if (bufferLength < 16) {\\r\\n        continue;\\r\\n      }\\r\\n      var plain = decrypt256(buffer, this.key);\\r\\n      for (j = 0; j < 16; ++j) {\\r\\n        plain[j] ^= iv[j];\\r\\n      }\\r\\n      iv = buffer;\\r\\n      result.push(plain);\\r\\n      buffer = new Uint8Array(16);\\r\\n      bufferLength = 0;\\r\\n    }\\r\\n    this.buffer = buffer;\\r\\n    this.bufferLength = bufferLength;\\r\\n    this.iv = iv;\\r\\n    if (result.length === 0) {\\r\\n      return new Uint8Array([]);\\r\\n    }\\r\\n    var outputLength = 16 * result.length;\\r\\n    if (finalize) {\\r\\n      var lastBlock = result[result.length - 1];\\r\\n      var psLen = lastBlock[15];\\r\\n      if (psLen <= 16) {\\r\\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\\r\\n          if (lastBlock[i] !== psLen) {\\r\\n            psLen = 0;\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        outputLength -= psLen;\\r\\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\\r\\n      }\\r\\n    }\\r\\n    var output = new Uint8Array(outputLength);\\r\\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\r\\n      output.set(result[i], j);\\r\\n    }\\r\\n    return output;\\r\\n  }\\r\\n  AES256Cipher.prototype = {\\r\\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\\r\\n      var i,\\r\\n          sourceLength = data.length;\\r\\n      var buffer = this.buffer,\\r\\n          bufferLength = this.bufferPosition;\\r\\n      if (iv) {\\r\\n        this.iv = iv;\\r\\n      } else {\\r\\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\\r\\n          buffer[bufferLength] = data[i];\\r\\n        }\\r\\n        if (bufferLength < 16) {\\r\\n          this.bufferLength = bufferLength;\\r\\n          return new Uint8Array([]);\\r\\n        }\\r\\n        this.iv = buffer;\\r\\n        data = data.subarray(16);\\r\\n      }\\r\\n      this.buffer = new Uint8Array(16);\\r\\n      this.bufferLength = 0;\\r\\n      this.decryptBlock = decryptBlock2;\\r\\n      return this.decryptBlock(data, finalize);\\r\\n    },\\r\\n    encrypt: function AES256Cipher_encrypt(data, iv) {\\r\\n      var i,\\r\\n          j,\\r\\n          ii,\\r\\n          sourceLength = data.length,\\r\\n          buffer = this.buffer,\\r\\n          bufferLength = this.bufferPosition,\\r\\n          result = [];\\r\\n      if (!iv) {\\r\\n        iv = new Uint8Array(16);\\r\\n      }\\r\\n      for (i = 0; i < sourceLength; ++i) {\\r\\n        buffer[bufferLength] = data[i];\\r\\n        ++bufferLength;\\r\\n        if (bufferLength < 16) {\\r\\n          continue;\\r\\n        }\\r\\n        for (j = 0; j < 16; ++j) {\\r\\n          buffer[j] ^= iv[j];\\r\\n        }\\r\\n        var cipher = encrypt256(buffer, this.key);\\r\\n        this.iv = cipher;\\r\\n        result.push(cipher);\\r\\n        buffer = new Uint8Array(16);\\r\\n        bufferLength = 0;\\r\\n      }\\r\\n      this.buffer = buffer;\\r\\n      this.bufferLength = bufferLength;\\r\\n      this.iv = iv;\\r\\n      if (result.length === 0) {\\r\\n        return new Uint8Array([]);\\r\\n      }\\r\\n      var outputLength = 16 * result.length;\\r\\n      var output = new Uint8Array(outputLength);\\r\\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\\r\\n        output.set(result[i], j);\\r\\n      }\\r\\n      return output;\\r\\n    }\\r\\n  };\\r\\n  return AES256Cipher;\\r\\n}();\\r\\nvar PDF17 = function PDF17Closure() {\\r\\n  function compareByteArrays(array1, array2) {\\r\\n    if (array1.length !== array2.length) {\\r\\n      return false;\\r\\n    }\\r\\n    for (var i = 0; i < array1.length; i++) {\\r\\n      if (array1[i] !== array2[i]) {\\r\\n        return false;\\r\\n      }\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function PDF17() {}\\r\\n  PDF17.prototype = {\\r\\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\r\\n      var hashData = new Uint8Array(password.length + 56);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(ownerValidationSalt, password.length);\\r\\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\\r\\n      var result = calculateSHA256(hashData, 0, hashData.length);\\r\\n      return compareByteArrays(result, ownerPassword);\\r\\n    },\\r\\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\\r\\n      var hashData = new Uint8Array(password.length + 8);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(userValidationSalt, password.length);\\r\\n      var result = calculateSHA256(hashData, 0, hashData.length);\\r\\n      return compareByteArrays(result, userPassword);\\r\\n    },\\r\\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\r\\n      var hashData = new Uint8Array(password.length + 56);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(ownerKeySalt, password.length);\\r\\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\\r\\n      var key = calculateSHA256(hashData, 0, hashData.length);\\r\\n      var cipher = new AES256Cipher(key);\\r\\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\r\\n    },\\r\\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\\r\\n      var hashData = new Uint8Array(password.length + 8);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(userKeySalt, password.length);\\r\\n      var key = calculateSHA256(hashData, 0, hashData.length);\\r\\n      var cipher = new AES256Cipher(key);\\r\\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\r\\n    }\\r\\n  };\\r\\n  return PDF17;\\r\\n}();\\r\\nvar PDF20 = function PDF20Closure() {\\r\\n  function concatArrays(array1, array2) {\\r\\n    var t = new Uint8Array(array1.length + array2.length);\\r\\n    t.set(array1, 0);\\r\\n    t.set(array2, array1.length);\\r\\n    return t;\\r\\n  }\\r\\n  function calculatePDF20Hash(password, input, userBytes) {\\r\\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\\r\\n    var e = [0];\\r\\n    var i = 0;\\r\\n    while (i < 64 || e[e.length - 1] > i - 32) {\\r\\n      var arrayLength = password.length + k.length + userBytes.length;\\r\\n      var k1 = new Uint8Array(arrayLength * 64);\\r\\n      var array = concatArrays(password, k);\\r\\n      array = concatArrays(array, userBytes);\\r\\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\\r\\n        k1.set(array, pos);\\r\\n      }\\r\\n      var cipher = new AES128Cipher(k.subarray(0, 16));\\r\\n      e = cipher.encrypt(k1, k.subarray(16, 32));\\r\\n      var remainder = 0;\\r\\n      for (var z = 0; z < 16; z++) {\\r\\n        remainder *= 256 % 3;\\r\\n        remainder %= 3;\\r\\n        remainder += (e[z] >>> 0) % 3;\\r\\n        remainder %= 3;\\r\\n      }\\r\\n      if (remainder === 0) {\\r\\n        k = calculateSHA256(e, 0, e.length);\\r\\n      } else if (remainder === 1) {\\r\\n        k = calculateSHA384(e, 0, e.length);\\r\\n      } else if (remainder === 2) {\\r\\n        k = calculateSHA512(e, 0, e.length);\\r\\n      }\\r\\n      i++;\\r\\n    }\\r\\n    return k.subarray(0, 32);\\r\\n  }\\r\\n  function PDF20() {}\\r\\n  function compareByteArrays(array1, array2) {\\r\\n    if (array1.length !== array2.length) {\\r\\n      return false;\\r\\n    }\\r\\n    for (var i = 0; i < array1.length; i++) {\\r\\n      if (array1[i] !== array2[i]) {\\r\\n        return false;\\r\\n      }\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  PDF20.prototype = {\\r\\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\\r\\n      return calculatePDF20Hash(password, concatBytes, userBytes);\\r\\n    },\\r\\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\\r\\n      var hashData = new Uint8Array(password.length + 56);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(ownerValidationSalt, password.length);\\r\\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\\r\\n      var result = calculatePDF20Hash(password, hashData, userBytes);\\r\\n      return compareByteArrays(result, ownerPassword);\\r\\n    },\\r\\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\\r\\n      var hashData = new Uint8Array(password.length + 8);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(userValidationSalt, password.length);\\r\\n      var result = calculatePDF20Hash(password, hashData, []);\\r\\n      return compareByteArrays(result, userPassword);\\r\\n    },\\r\\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\\r\\n      var hashData = new Uint8Array(password.length + 56);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(ownerKeySalt, password.length);\\r\\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\\r\\n      var key = calculatePDF20Hash(password, hashData, userBytes);\\r\\n      var cipher = new AES256Cipher(key);\\r\\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\\r\\n    },\\r\\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\\r\\n      var hashData = new Uint8Array(password.length + 8);\\r\\n      hashData.set(password, 0);\\r\\n      hashData.set(userKeySalt, password.length);\\r\\n      var key = calculatePDF20Hash(password, hashData, []);\\r\\n      var cipher = new AES256Cipher(key);\\r\\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\\r\\n    }\\r\\n  };\\r\\n  return PDF20;\\r\\n}();\\r\\nvar CipherTransform = function CipherTransformClosure() {\\r\\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\\r\\n    this.StringCipherConstructor = stringCipherConstructor;\\r\\n    this.StreamCipherConstructor = streamCipherConstructor;\\r\\n  }\\r\\n  CipherTransform.prototype = {\\r\\n    createStream: function CipherTransform_createStream(stream, length) {\\r\\n      var cipher = new this.StreamCipherConstructor();\\r\\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\\r\\n        return cipher.decryptBlock(data, finalize);\\r\\n      });\\r\\n    },\\r\\n    decryptString: function CipherTransform_decryptString(s) {\\r\\n      var cipher = new this.StringCipherConstructor();\\r\\n      var data = (0, _util.stringToBytes)(s);\\r\\n      data = cipher.decryptBlock(data, true);\\r\\n      return (0, _util.bytesToString)(data);\\r\\n    }\\r\\n  };\\r\\n  return CipherTransform;\\r\\n}();\\r\\nvar CipherTransformFactory = function Ciphe';a.a+=\"rTransformFactoryClosure() {\\r\\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\\r\\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\\r\\n    if (password) {\\r\\n      var passwordLength = Math.min(127, password.length);\\r\\n      password = password.subarray(0, passwordLength);\\r\\n    } else {\\r\\n      password = [];\\r\\n    }\\r\\n    var pdfAlgorithm;\\r\\n    if (revision === 6) {\\r\\n      pdfAlgorithm = new PDF20();\\r\\n    } else {\\r\\n      pdfAlgorithm = new PDF17();\\r\\n    }\\r\\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\\r\\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\\r\\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\\r\\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\\r\\n    }\\r\\n    return null;\\r\\n  }\\r\\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\\r\\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\\r\\n    var hashData = new Uint8Array(hashDataSize),\\r\\n        i = 0,\\r\\n        j,\\r\\n        n;\\r\\n    if (password) {\\r\\n      n = Math.min(32, password.length);\\r\\n      for (; i < n; ++i) {\\r\\n        hashData[i] = password[i];\\r\\n      }\\r\\n    }\\r\\n    j = 0;\\r\\n    while (i < 32) {\\r\\n      hashData[i++] = defaultPasswordBytes[j++];\\r\\n    }\\r\\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\\r\\n      hashData[i++] = ownerPassword[j];\\r\\n    }\\r\\n    hashData[i++] = flags & 0xFF;\\r\\n    hashData[i++] = flags >> 8 & 0xFF;\\r\\n    hashData[i++] = flags >> 16 & 0xFF;\\r\\n    hashData[i++] = flags >>> 24 & 0xFF;\\r\\n    for (j = 0, n = fileId.length; j < n; ++j) {\\r\\n      hashData[i++] = fileId[j];\\r\\n    }\\r\\n    if (revision >= 4 && !encryptMetadata) {\\r\\n      hashData[i++] = 0xFF;\\r\\n      hashData[i++] = 0xFF;\\r\\n      hashData[i++] = 0xFF;\\r\\n      hashData[i++] = 0xFF;\\r\\n    }\\r\\n    var hash = calculateMD5(hashData, 0, i);\\r\\n    var keyLengthInBytes = keyLength >> 3;\\r\\n    if (revision >= 3) {\\r\\n      for (j = 0; j < 50; ++j) {\\r\\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\\r\\n      }\\r\\n    }\\r\\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\\r\\n    var cipher, checkData;\\r\\n    if (revision >= 3) {\\r\\n      for (i = 0; i < 32; ++i) {\\r\\n        hashData[i] = defaultPasswordBytes[i];\\r\\n      }\\r\\n      for (j = 0, n = fileId.length; j < n; ++j) {\\r\\n        hashData[i++] = fileId[j];\\r\\n      }\\r\\n      cipher = new ARCFourCipher(encryptionKey);\\r\\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\\r\\n      n = encryptionKey.length;\\r\\n      var derivedKey = new Uint8Array(n),\\r\\n          k;\\r\\n      for (j = 1; j <= 19; ++j) {\\r\\n        for (k = 0; k < n; ++k) {\\r\\n          derivedKey[k] = encryptionKey[k] ^ j;\\r\\n        }\\r\\n        cipher = new ARCFourCipher(derivedKey);\\r\\n        checkData = cipher.encryptBlock(checkData);\\r\\n      }\\r\\n      for (j = 0, n = checkData.length; j < n; ++j) {\\r\\n        if (userPassword[j] !== checkData[j]) {\\r\\n          return null;\\r\\n        }\\r\\n      }\\r\\n    } else {\\r\\n      cipher = new ARCFourCipher(encryptionKey);\\r\\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\\r\\n      for (j = 0, n = checkData.length; j < n; ++j) {\\r\\n        if (userPassword[j] !== checkData[j]) {\\r\\n          return null;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    return encryptionKey;\\r\\n  }\\r\\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\\r\\n    var hashData = new Uint8Array(32),\\r\\n        i = 0,\\r\\n        j,\\r\\n        n;\\r\\n    n = Math.min(32, password.length);\\r\\n    for (; i < n; ++i) {\\r\\n      hashData[i] = password[i];\\r\\n    }\\r\\n    j = 0;\\r\\n    while (i < 32) {\\r\\n      hashData[i++] = defaultPasswordBytes[j++];\\r\\n    }\\r\\n    var hash = calculateMD5(hashData, 0, i);\\r\\n    var keyLengthInBytes = keyLength >> 3;\\r\\n    if (revision >= 3) {\\r\\n      for (j = 0; j < 50; ++j) {\\r\\n        hash = calculateMD5(hash, 0, hash.length);\\r\\n      }\\r\\n    }\\r\\n    var cipher, userPassword;\\r\\n    if (revision >= 3) {\\r\\n      userPassword = ownerPassword;\\r\\n      var derivedKey = new Uint8Array(keyLengthInBytes),\\r\\n          k;\\r\\n      for (j = 19; j >= 0; j--) {\\r\\n        for (k = 0; k < keyLengthInBytes; ++k) {\\r\\n          derivedKey[k] = hash[k] ^ j;\\r\\n        }\\r\\n        cipher = new ARCFourCipher(derivedKey);\\r\\n        userPassword = cipher.encryptBlock(userPassword);\\r\\n      }\\r\\n    } else {\\r\\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\\r\\n      userPassword = cipher.encryptBlock(ownerPassword);\\r\\n    }\\r\\n    return userPassword;\\r\\n  }\\r\\n  var identityName = _primitives.Name.get('Identity');\\r\\n  function CipherTransformFactory(dict, fileId, password) {\\r\\n    var filter = dict.get('Filter');\\r\\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\\r\\n      throw new _util.FormatError('unknown encryption method');\\r\\n    }\\r\\n    this.dict = dict;\\r\\n    var algorithm = dict.get('V');\\r\\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\\r\\n      throw new _util.FormatError('unsupported encryption algorithm');\\r\\n    }\\r\\n    this.algorithm = algorithm;\\r\\n    var keyLength = dict.get('Length');\\r\\n    if (!keyLength) {\\r\\n      if (algorithm <= 3) {\\r\\n        keyLength = 40;\\r\\n      } else {\\r\\n        var cfDict = dict.get('CF');\\r\\n        var streamCryptoName = dict.get('StmF');\\r\\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\\r\\n          cfDict.suppressEncryption = true;\\r\\n          var handlerDict = cfDict.get(streamCryptoName.name);\\r\\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\\r\\n          if (keyLength < 40) {\\r\\n            keyLength <<= 3;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\\r\\n      throw new _util.FormatError('invalid key length');\\r\\n    }\\r\\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\\r\\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\\r\\n    var flags = dict.get('P');\\r\\n    var revision = dict.get('R');\\r\\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\\r\\n    this.encryptMetadata = encryptMetadata;\\r\\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\\r\\n    var passwordBytes;\\r\\n    if (password) {\\r\\n      if (revision === 6) {\\r\\n        try {\\r\\n          password = (0, _util.utf8StringToString)(password);\\r\\n        } catch (ex) {\\r\\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\\r\\n        }\\r\\n      }\\r\\n      passwordBytes = (0, _util.stringToBytes)(password);\\r\\n    }\\r\\n    var encryptionKey;\\r\\n    if (algorithm !== 5) {\\r\\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\r\\n    } else {\\r\\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\\r\\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\\r\\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\\r\\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\\r\\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\\r\\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\\r\\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\\r\\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\\r\\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\\r\\n    }\\r\\n    if (!encryptionKey && !password) {\\r\\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\\r\\n    } else if (!encryptionKey && password) {\\r\\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\\r\\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\\r\\n    }\\r\\n    if (!encryptionKey) {\\r\\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\\r\\n    }\\r\\n    this.encryptionKey = encryptionKey;\\r\\n    if (algorithm >= 4) {\\r\\n      var cf = dict.get('CF');\\r\\n      if ((0, _primitives.isDict)(cf)) {\\r\\n        cf.suppressEncryption = true;\\r\\n      }\\r\\n      this.cf = cf;\\r\\n      this.stmf = dict.get('StmF') || identityName;\\r\\n      this.strf = dict.get('StrF') || identityName;\\r\\n      this.eff = dict.get('EFF') || this.stmf;\\r\\n    }\\r\\n  }\\r\\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\\r\\n    var key = new Uint8Array(encryptionKey.length + 9),\\r\\n        i,\\r\\n        n;\\r\\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\\r\\n      key[i] = encryptionKey[i];\\r\\n    }\\r\\n    key[i++] = num & 0xFF;\\r\\n    key[i++] = num >> 8 & 0xFF;\\r\\n    key[i++] = num >> 16 & 0xFF;\\r\\n    key[i++] = gen & 0xFF;\\r\\n    key[i++] = gen >> 8 & 0xFF;\\r\\n    if (isAes) {\\r\\n      key[i++] = 0x73;\\r\\n      key[i++] = 0x41;\\r\\n      key[i++] = 0x6C;\\r\\n      key[i++] = 0x54;\\r\\n    }\\r\\n    var hash = calculateMD5(key, 0, i);\\r\\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\\r\\n  }\\r\\n  function buildCipherConstructor(cf, name, num, gen, key) {\\r\\n    if (!(0, _primitives.isName)(name)) {\\r\\n      throw new _util.FormatError('Invalid crypt filter name.');\\r\\n    }\\r\\n    var cryptFilter = cf.get(name.name);\\r\\n    var cfm;\\r\\n    if (cryptFilter !== null && cryptFilter !== undefined) {\\r\\n      cfm = cryptFilter.get('CFM');\\r\\n    }\\r\\n    if (!cfm || cfm.name === 'None') {\\r\\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\\r\\n        return new NullCipher();\\r\\n      };\\r\\n    }\\r\\n    if (cfm.name === 'V2') {\\r\\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\\r\\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\\r\\n      };\\r\\n    }\\r\\n    if (cfm.name === 'AESV2') {\\r\\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\\r\\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\\r\\n      };\\r\\n    }\\r\\n    if (cfm.name === 'AESV3') {\\r\\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\\r\\n        return new AES256Cipher(key);\\r\\n      };\\r\\n    }\\r\\n    throw new _util.FormatError('Unknown crypto method');\\r\\n  }\\r\\n  CipherTransformFactory.prototype = {\\r\\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\\r\\n      if (this.algorithm === 4 || this.algorithm === 5) {\\r\\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\\r\\n      }\\r\\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\\r\\n      var cipherConstructor = function buildCipherCipherConstructor() {\\r\\n        return new ARCFourCipher(key);\\r\\n      };\\r\\n      return new CipherTransform(cipherConstructor, cipherConstructor);\\r\\n    }\\r\\n  };\\r\\n  return CipherTransformFactory;\\r\\n}();\\r\\nexports.AES128Cipher = AES128Cipher;\\r\\nexports.AES256Cipher = AES256Cipher;\\r\\nexports.ARCFourCipher = ARCFourCipher;\\r\\nexports.CipherTransformFactory = CipherTransformFactory;\\r\\nexports.PDF17 = PDF17;\\r\\nexports.PDF20 = PDF20;\\r\\nexports.calculateMD5 = calculateMD5;\\r\\nexports.calculateSHA256 = calculateSHA256;\\r\\nexports.calculateSHA384 = calculateSHA384;\\r\\nexports.calculateSHA512 = calculateSHA512;\\r\\n\\r\\n/***/ }),\\r\\n/* 83 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PartialEvaluator = exports.OperatorList = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _cmap = __w_pdfjs_require__(148);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _fonts = __w_pdfjs_require__(149);\\r\\n\\r\\nvar _encodings = __w_pdfjs_require__(30);\\r\\n\\r\\nvar _unicode = __w_pdfjs_require__(86);\\r\\n\\r\\nvar _standard_fonts = __w_pdfjs_require__(85);\\r\\n\\r\\nvar _pattern = __w_pdfjs_require__(153);\\r\\n\\r\\nvar _parser = __w_pdfjs_require__(36);\\r\\n\\r\\nvar _bidi = __w_pdfjs_require__(154);\\r\\n\\r\\nvar _colorspace = __w_pdfjs_require__(29);\\r\\n\\r\\nvar _glyphlist = __w_pdfjs_require__(49);\\r\\n\\r\\nvar _metrics = __w_pdfjs_require__(155);\\r\\n\\r\\nvar _function = __w_pdfjs_require__(87);\\r\\n\\r\\nvar _murmurhash = __w_pdfjs_require__(157);\\r\\n\\r\\nvar _image = __w_pdfjs_require__(158);\\r\\n\\r\\nvar PartialEvaluator = function PartialEvaluatorClosure() {\\r\\n  var DefaultPartialEvaluatorOptions = {\\r\\n    forceDataSchema: false,\\r\\n    maxImageSize: -1,\\r\\n    disableFontFace: false,\\r\\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\\r\\n    ignoreErrors: false,\\r\\n    isEvalSupported: true\\r\\n  };\\r\\n  function NativeImageDecoder(_ref) {\\r\\n    var xref = _ref.xref,\\r\\n        resources = _ref.resources,\\r\\n        handler = _ref.handler,\\r\\n        _ref$forceDataSchema = _ref.forceDataSchema,\\r\\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\\r\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\r\\n\\r\\n    this.xref = xref;\\r\\n    this.resources = resources;\\r\\n    this.handler = handler;\\r\\n    this.forceDataSchema = forceDataSchema;\\r\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\r\\n  }\\r\\n  NativeImageDecoder.prototype = {\\r\\n    canDecode: function canDecode(image) {\\r\\n      return image instanceof _stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\\r\\n    },\\r\\n    decode: function decode(image) {\\r\\n      var dict = image.dict;\\r\\n      var colorSpace = dict.get('ColorSpace', 'CS');\\r\\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\\r\\n      var numComps = colorSpace.numComps;\\r\\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\\r\\n      return decodePromise.then(function (message) {\\r\\n        var data = message.data;\\r\\n        return new _stream.Stream(data, 0, data.length, image.dict);\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\\r\\n    var dict = image.dict;\\r\\n    if (dict.has('DecodeParms') || dict.has('DP')) {\\r\\n      return false;\\r\\n    }\\r\\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\r\\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\r\\n  };\\r\\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\\r\\n    var dict = image.dict;\\r\\n    if (dict.has('DecodeParms') || dict.has('DP')) {\\r\\n      return false;\\r\\n    }\\r\\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\\r\\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\\r\\n  };\\r\\n  function PartialEvaluator(_ref2) {\\r\\n    var _this = this;\\r\\n\\r\\n    var pdfManager = _ref2.pdfManager,\\r\\n        xref = _ref2.xref,\\r\\n        handler = _ref2.handler,\\r\\n        pageIndex = _ref2.pageIndex,\\r\\n        idFactory = _ref2.idFactory,\\r\\n        fontCache = _ref2.fontCache,\\r\\n        builtInCMapCache = _ref2.builtInCMapCache,\\r\\n        _ref2$options = _ref2.options,\\r\\n        options = _ref2$options === undefined ? null : _ref2$options,\\r\\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\\r\\n\\r\\n    this.pdfManager = pdfManager;\\r\\n    this.xref = xref;\\r\\n    this.handler = handler;\\r\\n    this.pageIndex = pageIndex;\\r\\n    this.idFactory = idFactory;\\r\\n    this.fontCache = fontCache;\\r\\n    this.builtInCMapCache = builtInCMapCache;\\r\\n    this.options = options || DefaultPartialEvaluatorOptions;\\r\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\r\\n    this.fetchBuiltInCMap = function (name) {\\r\\n      var cachedCMap = _this.builtInCMapCache[name];\\r\\n      if (cachedCMap) {\\r\\n        return Promise.resolve(cachedCMap);\\r\\n      }\\r\\n      return _this.handler.sendWithPromise('FetchBui\";a.a+=\"ltInCMap', { name: name }).then(function (data) {\\r\\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\\r\\n          _this.builtInCMapCache[name] = data;\\r\\n        }\\r\\n        return data;\\r\\n      });\\r\\n    };\\r\\n  }\\r\\n  var TIME_SLOT_DURATION_MS = 20;\\r\\n  var CHECK_TIME_EVERY = 100;\\r\\n  function TimeSlotManager() {\\r\\n    this.reset();\\r\\n  }\\r\\n  TimeSlotManager.prototype = {\\r\\n    check: function TimeSlotManager_check() {\\r\\n      if (++this.checked < CHECK_TIME_EVERY) {\\r\\n        return false;\\r\\n      }\\r\\n      this.checked = 0;\\r\\n      return this.endTime <= Date.now();\\r\\n    },\\r\\n    reset: function TimeSlotManager_reset() {\\r\\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\\r\\n      this.checked = 0;\\r\\n    }\\r\\n  };\\r\\n  function normalizeBlendMode(value) {\\r\\n    if (!(0, _primitives.isName)(value)) {\\r\\n      return 'source-over';\\r\\n    }\\r\\n    switch (value.name) {\\r\\n      case 'Normal':\\r\\n      case 'Compatible':\\r\\n        return 'source-over';\\r\\n      case 'Multiply':\\r\\n        return 'multiply';\\r\\n      case 'Screen':\\r\\n        return 'screen';\\r\\n      case 'Overlay':\\r\\n        return 'overlay';\\r\\n      case 'Darken':\\r\\n        return 'darken';\\r\\n      case 'Lighten':\\r\\n        return 'lighten';\\r\\n      case 'ColorDodge':\\r\\n        return 'color-dodge';\\r\\n      case 'ColorBurn':\\r\\n        return 'color-burn';\\r\\n      case 'HardLight':\\r\\n        return 'hard-light';\\r\\n      case 'SoftLight':\\r\\n        return 'soft-light';\\r\\n      case 'Difference':\\r\\n        return 'difference';\\r\\n      case 'Exclusion':\\r\\n        return 'exclusion';\\r\\n      case 'Hue':\\r\\n        return 'hue';\\r\\n      case 'Saturation':\\r\\n        return 'saturation';\\r\\n      case 'Color':\\r\\n        return 'color';\\r\\n      case 'Luminosity':\\r\\n        return 'luminosity';\\r\\n    }\\r\\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\\r\\n    return 'source-over';\\r\\n  }\\r\\n  var deferred = Promise.resolve();\\r\\n  var TILING_PATTERN = 1,\\r\\n      SHADING_PATTERN = 2;\\r\\n  PartialEvaluator.prototype = {\\r\\n    clone: function clone() {\\r\\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\\r\\n\\r\\n      var newEvaluator = Object.create(this);\\r\\n      newEvaluator.options = newOptions;\\r\\n      return newEvaluator;\\r\\n    },\\r\\n\\r\\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\\r\\n      if (!(0, _primitives.isDict)(resources)) {\\r\\n        return false;\\r\\n      }\\r\\n      var processed = Object.create(null);\\r\\n      if (resources.objId) {\\r\\n        processed[resources.objId] = true;\\r\\n      }\\r\\n      var nodes = [resources],\\r\\n          xref = this.xref;\\r\\n      while (nodes.length) {\\r\\n        var key, i, ii;\\r\\n        var node = nodes.shift();\\r\\n        var graphicStates = node.get('ExtGState');\\r\\n        if ((0, _primitives.isDict)(graphicStates)) {\\r\\n          var graphicStatesKeys = graphicStates.getKeys();\\r\\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\\r\\n            key = graphicStatesKeys[i];\\r\\n            var graphicState = graphicStates.get(key);\\r\\n            var bm = graphicState.get('BM');\\r\\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\\r\\n              return true;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        var xObjects = node.get('XObject');\\r\\n        if (!(0, _primitives.isDict)(xObjects)) {\\r\\n          continue;\\r\\n        }\\r\\n        var xObjectsKeys = xObjects.getKeys();\\r\\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\\r\\n          key = xObjectsKeys[i];\\r\\n          var xObject = xObjects.getRaw(key);\\r\\n          if ((0, _primitives.isRef)(xObject)) {\\r\\n            if (processed[xObject.toString()]) {\\r\\n              continue;\\r\\n            }\\r\\n            xObject = xref.fetch(xObject);\\r\\n          }\\r\\n          if (!(0, _primitives.isStream)(xObject)) {\\r\\n            continue;\\r\\n          }\\r\\n          if (xObject.dict.objId) {\\r\\n            if (processed[xObject.dict.objId]) {\\r\\n              continue;\\r\\n            }\\r\\n            processed[xObject.dict.objId] = true;\\r\\n          }\\r\\n          var xResources = xObject.dict.get('Resources');\\r\\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\\r\\n            nodes.push(xResources);\\r\\n            if (xResources.objId) {\\r\\n              processed[xResources.objId] = true;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return false;\\r\\n    },\\r\\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\\r\\n      var dict = xobj.dict;\\r\\n      var matrix = dict.getArray('Matrix');\\r\\n      var bbox = dict.getArray('BBox');\\r\\n      var group = dict.get('Group');\\r\\n      if (group) {\\r\\n        var groupOptions = {\\r\\n          matrix: matrix,\\r\\n          bbox: bbox,\\r\\n          smask: smask,\\r\\n          isolated: false,\\r\\n          knockout: false\\r\\n        };\\r\\n        var groupSubtype = group.get('S');\\r\\n        var colorSpace = null;\\r\\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\\r\\n          groupOptions.isolated = group.get('I') || false;\\r\\n          groupOptions.knockout = group.get('K') || false;\\r\\n          if (group.has('CS')) {\\r\\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\\r\\n          }\\r\\n        }\\r\\n        if (smask && smask.backdrop) {\\r\\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\\r\\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\\r\\n        }\\r\\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\\r\\n      }\\r\\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\\r\\n      return this.getOperatorList({\\r\\n        stream: xobj,\\r\\n        task: task,\\r\\n        resources: dict.get('Resources') || resources,\\r\\n        operatorList: operatorList,\\r\\n        initialState: initialState\\r\\n      }).then(function () {\\r\\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\\r\\n        if (group) {\\r\\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      var dict = image.dict;\\r\\n      var w = dict.get('Width', 'W');\\r\\n      var h = dict.get('Height', 'H');\\r\\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\\r\\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\\r\\n        return;\\r\\n      }\\r\\n      var maxImageSize = this.options.maxImageSize;\\r\\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\\r\\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\\r\\n        return;\\r\\n      }\\r\\n      var imageMask = dict.get('ImageMask', 'IM') || false;\\r\\n      var imgData, args;\\r\\n      if (imageMask) {\\r\\n        var width = dict.get('Width', 'W');\\r\\n        var height = dict.get('Height', 'H');\\r\\n        var bitStrideLength = width + 7 >> 3;\\r\\n        var imgArray = image.getBytes(bitStrideLength * height);\\r\\n        var decode = dict.getArray('Decode', 'D');\\r\\n        imgData = _image.PDFImage.createMask({\\r\\n          imgArray: imgArray,\\r\\n          width: width,\\r\\n          height: height,\\r\\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\\r\\n          inverseDecode: !!decode && decode[0] > 0\\r\\n        });\\r\\n        imgData.cached = true;\\r\\n        args = [imgData];\\r\\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\\r\\n        if (cacheKey) {\\r\\n          imageCache[cacheKey] = {\\r\\n            fn: _util.OPS.paintImageMaskXObject,\\r\\n            args: args\\r\\n          };\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n      var softMask = dict.get('SMask', 'SM') || false;\\r\\n      var mask = dict.get('Mask') || false;\\r\\n      var SMALL_IMAGE_DIMENSIONS = 200;\\r\\n      if (inline && !softMask && !mask && !(image instanceof _stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\\r\\n        var imageObj = new _image.PDFImage({\\r\\n          xref: this.xref,\\r\\n          res: resources,\\r\\n          image: image,\\r\\n          pdfFunctionFactory: this.pdfFunctionFactory\\r\\n        });\\r\\n        imgData = imageObj.createImageData(true);\\r\\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\\r\\n        return;\\r\\n      }\\r\\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\\r\\n      var objId = 'img_' + this.idFactory.createObjId();\\r\\n      operatorList.addDependency(objId);\\r\\n      args = [objId, w, h];\\r\\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\\r\\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\\r\\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\\r\\n        if (cacheKey) {\\r\\n          imageCache[cacheKey] = {\\r\\n            fn: _util.OPS.paintJpegXObject,\\r\\n            args: args\\r\\n          };\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n      var nativeImageDecoder = null;\\r\\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _stream.JpegStream || mask instanceof _stream.JpegStream || softMask instanceof _stream.JpegStream)) {\\r\\n        nativeImageDecoder = new NativeImageDecoder({\\r\\n          xref: this.xref,\\r\\n          resources: resources,\\r\\n          handler: this.handler,\\r\\n          forceDataSchema: this.options.forceDataSchema,\\r\\n          pdfFunctionFactory: this.pdfFunctionFactory\\r\\n        });\\r\\n      }\\r\\n      _image.PDFImage.buildImage({\\r\\n        handler: this.handler,\\r\\n        xref: this.xref,\\r\\n        res: resources,\\r\\n        image: image,\\r\\n        nativeDecoder: nativeImageDecoder,\\r\\n        pdfFunctionFactory: this.pdfFunctionFactory\\r\\n      }).then(function (imageObj) {\\r\\n        var imgData = imageObj.createImageData(false);\\r\\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\\r\\n      }).catch(function (reason) {\\r\\n        (0, _util.warn)('Unable to decode image: ' + reason);\\r\\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\\r\\n      });\\r\\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\\r\\n      if (cacheKey) {\\r\\n        imageCache[cacheKey] = {\\r\\n          fn: _util.OPS.paintImageXObject,\\r\\n          args: args\\r\\n        };\\r\\n      }\\r\\n    },\\r\\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\\r\\n      var smaskContent = smask.get('G');\\r\\n      var smaskOptions = {\\r\\n        subtype: smask.get('S').name,\\r\\n        backdrop: smask.get('BC')\\r\\n      };\\r\\n      var transferObj = smask.get('TR');\\r\\n      if ((0, _function.isPDFFunction)(transferObj)) {\\r\\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\\r\\n        var transferMap = new Uint8Array(256);\\r\\n        var tmp = new Float32Array(1);\\r\\n        for (var i = 0; i < 256; i++) {\\r\\n          tmp[0] = i / 255;\\r\\n          transferFn(tmp, 0, tmp, 0);\\r\\n          transferMap[i] = tmp[0] * 255 | 0;\\r\\n        }\\r\\n        smaskOptions.transferMap = transferMap;\\r\\n      }\\r\\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\\r\\n    },\\r\\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\\r\\n      var _this3 = this;\\r\\n\\r\\n      var tilingOpList = new OperatorList();\\r\\n      var resourcesArray = [patternDict.get('Resources'), resources];\\r\\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\\r\\n      return this.getOperatorList({\\r\\n        stream: pattern,\\r\\n        task: task,\\r\\n        resources: patternResources,\\r\\n        operatorList: tilingOpList\\r\\n      }).then(function () {\\r\\n        return (0, _pattern.getTilingPatternIR)({\\r\\n          fnArray: tilingOpList.fnArray,\\r\\n          argsArray: tilingOpList.argsArray\\r\\n        }, patternDict, args);\\r\\n      }).then(function (tilingPatternIR) {\\r\\n        operatorList.addDependencies(tilingOpList.dependencies);\\r\\n        operatorList.addOp(fn, tilingPatternIR);\\r\\n      }, function (reason) {\\r\\n        if (_this3.options.ignoreErrors) {\\r\\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\r\\n          (0, _util.warn)('handleTilingType - ignoring pattern: \\\"' + reason + '\\\".');\\r\\n          return;\\r\\n        }\\r\\n        throw reason;\\r\\n      });\\r\\n    },\\r\\n\\r\\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\\r\\n      var _this4 = this;\\r\\n\\r\\n      var fontName;\\r\\n      if (fontArgs) {\\r\\n        fontArgs = fontArgs.slice();\\r\\n        fontName = fontArgs[0].name;\\r\\n      }\\r\\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\\r\\n        if (!translated.font.isType3Font) {\\r\\n          return translated;\\r\\n        }\\r\\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\\r\\n          return translated;\\r\\n        }).catch(function (reason) {\\r\\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\\r\\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\\r\\n        });\\r\\n      }).then(function (translated) {\\r\\n        state.font = translated.font;\\r\\n        translated.send(_this4.handler);\\r\\n        return translated.loadedName;\\r\\n      });\\r\\n    },\\r\\n    handleText: function PartialEvaluator_handleText(chars, state) {\\r\\n      var _this5 = this;\\r\\n\\r\\n      var font = state.font;\\r\\n      var glyphs = font.charsToGlyphs(chars);\\r\\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\\r\\n      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\\r\\n        var buildPath = function buildPath(fontChar) {\\r\\n          if (!font.renderer.hasBuiltPath(fontChar)) {\\r\\n            var path = font.renderer.getPathJs(fontChar);\\r\\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\\r\\n          }\\r\\n        };\\r\\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\\r\\n          var glyph = glyphs[i];\\r\\n          buildPath(glyph.fontChar);\\r\\n          var accent = glyph.accent;\\r\\n          if (accent && accent.fontChar) {\\r\\n            buildPath(accent.fontChar);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return glyphs;\\r\\n    },\\r\\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\\r\\n      var _this6 = this;\\r\\n\\r\\n      var gStateObj = [];\\r\\n      var gStateKeys = gState.getKeys();\\r\\n      var promise = Promise.resolve();\\r\\n\\r\\n      var _loop = function _loop() {\\r\\n        var key = gStateKeys[i];\\r\\n        var value = gState.get(key);\\r\\n        switch (key) {\\r\\n          case 'Type':\\r\\n            break;\\r\\n          case 'LW':\\r\\n          case 'LC':\\r\\n          case 'LJ':\\r\\n          case 'ML':\\r\\n          case 'D':\\r\\n          case 'RI':\\r\\n          case 'FL':\\r\\n          case 'CA':\\r\\n          case 'ca':\\r\\n            gStateObj.push([key, value]);\\r\\n            break;\\r\\n          case 'Font':\\r\\n            promise = promise.then(function () {\\r\\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\\r\\n                operatorList.addDependency(loadedName);\\r\\n                gStateObj.push([key, [loadedName, value[1]]]);\\r\\n              });\\r\\n            });\\r\\n            break;\\r\\n          case 'BM':\\r\\n            gStateObj.push([key, normalizeBlendMode(value)]);\\r\\n            break;\\r\\n          case 'SMask':\\r\\n            if ((0, _primitives.isName)(value, 'None')) {\\r\\n              gStateObj.push([key, false]);\\r\\n              break;\\r\\n            }\\r\\n            if ((0, _primitives.isDict)(value)) {\\r\\n              promise = promise.then(function () {\\r\\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\\r\\n              });\\r\\n              gStateObj.push([key, true]);\\r\\n            } else {\\r\\n              (0, _util.warn)('Unsupported SMask type');\\r\\n            }\\r\\n            break;\\r\\n          case 'OP':\\r\\n          case 'op':\\r\\n          case 'OPM':\\r\\n          case 'BG':\\r\\n          case 'BG2':\\r\\n          case 'UCR':\\r\\n          ca\";a.a+=\"se 'UCR2':\\r\\n          case 'TR':\\r\\n          case 'TR2':\\r\\n          case 'HT':\\r\\n          case 'SM':\\r\\n          case 'SA':\\r\\n          case 'AIS':\\r\\n          case 'TK':\\r\\n            (0, _util.info)('graphic state operator ' + key);\\r\\n            break;\\r\\n          default:\\r\\n            (0, _util.info)('Unknown graphic state operator ' + key);\\r\\n            break;\\r\\n        }\\r\\n      };\\r\\n\\r\\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\\r\\n        _loop();\\r\\n      }\\r\\n      return promise.then(function () {\\r\\n        if (gStateObj.length > 0) {\\r\\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\\r\\n      var _this7 = this;\\r\\n\\r\\n      function errorFont() {\\r\\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\\r\\n      }\\r\\n      var fontRef,\\r\\n          xref = this.xref;\\r\\n      if (font) {\\r\\n        if (!(0, _primitives.isRef)(font)) {\\r\\n          throw new Error('The \\\"font\\\" object should be a reference.');\\r\\n        }\\r\\n        fontRef = font;\\r\\n      } else {\\r\\n        var fontRes = resources.get('Font');\\r\\n        if (fontRes) {\\r\\n          fontRef = fontRes.getRaw(fontName);\\r\\n        } else {\\r\\n          (0, _util.warn)('fontRes not available');\\r\\n          return errorFont();\\r\\n        }\\r\\n      }\\r\\n      if (!fontRef) {\\r\\n        (0, _util.warn)('fontRef not available');\\r\\n        return errorFont();\\r\\n      }\\r\\n      if (this.fontCache.has(fontRef)) {\\r\\n        return this.fontCache.get(fontRef);\\r\\n      }\\r\\n      font = xref.fetchIfRef(fontRef);\\r\\n      if (!(0, _primitives.isDict)(font)) {\\r\\n        return errorFont();\\r\\n      }\\r\\n      if (font.translated) {\\r\\n        return font.translated;\\r\\n      }\\r\\n      var fontCapability = (0, _util.createPromiseCapability)();\\r\\n      var preEvaluatedFont = this.preEvaluateFont(font);\\r\\n      var descriptor = preEvaluatedFont.descriptor;\\r\\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\\r\\n          fontID;\\r\\n      if (fontRefIsRef) {\\r\\n        fontID = fontRef.toString();\\r\\n      }\\r\\n      if ((0, _primitives.isDict)(descriptor)) {\\r\\n        if (!descriptor.fontAliases) {\\r\\n          descriptor.fontAliases = Object.create(null);\\r\\n        }\\r\\n        var fontAliases = descriptor.fontAliases;\\r\\n        var hash = preEvaluatedFont.hash;\\r\\n        if (fontAliases[hash]) {\\r\\n          var aliasFontRef = fontAliases[hash].aliasRef;\\r\\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\\r\\n            this.fontCache.putAlias(fontRef, aliasFontRef);\\r\\n            return this.fontCache.get(fontRef);\\r\\n          }\\r\\n        } else {\\r\\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\\r\\n        }\\r\\n        if (fontRefIsRef) {\\r\\n          fontAliases[hash].aliasRef = fontRef;\\r\\n        }\\r\\n        fontID = fontAliases[hash].fontID;\\r\\n      }\\r\\n      if (fontRefIsRef) {\\r\\n        this.fontCache.put(fontRef, fontCapability.promise);\\r\\n      } else {\\r\\n        if (!fontID) {\\r\\n          fontID = this.idFactory.createObjId();\\r\\n        }\\r\\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\\r\\n      }\\r\\n      (0, _util.assert)(fontID, 'The \\\"fontID\\\" must be defined.');\\r\\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\\r\\n      font.translated = fontCapability.promise;\\r\\n      var translatedPromise;\\r\\n      try {\\r\\n        translatedPromise = this.translateFont(preEvaluatedFont);\\r\\n      } catch (e) {\\r\\n        translatedPromise = Promise.reject(e);\\r\\n      }\\r\\n      translatedPromise.then(function (translatedFont) {\\r\\n        if (translatedFont.fontType !== undefined) {\\r\\n          var xrefFontStats = xref.stats.fontTypes;\\r\\n          xrefFontStats[translatedFont.fontType] = true;\\r\\n        }\\r\\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\\r\\n      }).catch(function (reason) {\\r\\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\\r\\n        try {\\r\\n          var descriptor = preEvaluatedFont.descriptor;\\r\\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\\r\\n          var subtype = fontFile3 && fontFile3.get('Subtype');\\r\\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\\r\\n          var xrefFontStats = xref.stats.fontTypes;\\r\\n          xrefFontStats[fontType] = true;\\r\\n        } catch (ex) {}\\r\\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\\r\\n      });\\r\\n      return fontCapability.promise;\\r\\n    },\\r\\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\\r\\n      var lastIndex = operatorList.length - 1;\\r\\n      if (!args) {\\r\\n        args = [];\\r\\n      }\\r\\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\\r\\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\\r\\n      } else {\\r\\n        var opArgs = operatorList.argsArray[lastIndex];\\r\\n        opArgs[0].push(fn);\\r\\n        Array.prototype.push.apply(opArgs[1], args);\\r\\n      }\\r\\n    },\\r\\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\\r\\n      var patternName = args[args.length - 1];\\r\\n      var pattern;\\r\\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\\r\\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\\r\\n        var typeNum = dict.get('PatternType');\\r\\n        if (typeNum === TILING_PATTERN) {\\r\\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\\r\\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\\r\\n        } else if (typeNum === SHADING_PATTERN) {\\r\\n          var shading = dict.get('Shading');\\r\\n          var matrix = dict.getArray('Matrix');\\r\\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\\r\\n          operatorList.addOp(fn, pattern.getIR());\\r\\n          return Promise.resolve();\\r\\n        }\\r\\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\\r\\n      }\\r\\n      operatorList.addOp(fn, args);\\r\\n      return Promise.resolve();\\r\\n    },\\r\\n    getOperatorList: function getOperatorList(_ref3) {\\r\\n      var _this8 = this;\\r\\n\\r\\n      var stream = _ref3.stream,\\r\\n          task = _ref3.task,\\r\\n          resources = _ref3.resources,\\r\\n          operatorList = _ref3.operatorList,\\r\\n          _ref3$initialState = _ref3.initialState,\\r\\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\\r\\n\\r\\n      resources = resources || _primitives.Dict.empty;\\r\\n      initialState = initialState || new EvalState();\\r\\n      if (!operatorList) {\\r\\n        throw new Error('getOperatorList: missing \\\"operatorList\\\" parameter');\\r\\n      }\\r\\n      var self = this;\\r\\n      var xref = this.xref;\\r\\n      var imageCache = Object.create(null);\\r\\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\\r\\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\\r\\n      var stateManager = new StateManager(initialState);\\r\\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\r\\n      var timeSlotManager = new TimeSlotManager();\\r\\n      function closePendingRestoreOPS(argument) {\\r\\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\\r\\n          operatorList.addOp(_util.OPS.restore, []);\\r\\n        }\\r\\n      }\\r\\n      return new Promise(function promiseBody(resolve, reject) {\\r\\n        var next = function next(promise) {\\r\\n          promise.then(function () {\\r\\n            try {\\r\\n              promiseBody(resolve, reject);\\r\\n            } catch (ex) {\\r\\n              reject(ex);\\r\\n            }\\r\\n          }, reject);\\r\\n        };\\r\\n        task.ensureNotTerminated();\\r\\n        timeSlotManager.reset();\\r\\n        var stop,\\r\\n            operation = {},\\r\\n            i,\\r\\n            ii,\\r\\n            cs;\\r\\n        while (!(stop = timeSlotManager.check())) {\\r\\n          operation.args = null;\\r\\n          if (!preprocessor.read(operation)) {\\r\\n            break;\\r\\n          }\\r\\n          var args = operation.args;\\r\\n          var fn = operation.fn;\\r\\n          switch (fn | 0) {\\r\\n            case _util.OPS.paintXObject:\\r\\n              var name = args[0].name;\\r\\n              if (name && imageCache[name] !== undefined) {\\r\\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\\r\\n                args = null;\\r\\n                continue;\\r\\n              }\\r\\n              next(new Promise(function (resolveXObject, rejectXObject) {\\r\\n                if (!name) {\\r\\n                  throw new _util.FormatError('XObject must be referred to by name.');\\r\\n                }\\r\\n                var xobj = xobjs.get(name);\\r\\n                if (!xobj) {\\r\\n                  operatorList.addOp(fn, args);\\r\\n                  resolveXObject();\\r\\n                  return;\\r\\n                }\\r\\n                if (!(0, _primitives.isStream)(xobj)) {\\r\\n                  throw new _util.FormatError('XObject should be a stream');\\r\\n                }\\r\\n                var type = xobj.dict.get('Subtype');\\r\\n                if (!(0, _primitives.isName)(type)) {\\r\\n                  throw new _util.FormatError('XObject should have a Name subtype');\\r\\n                }\\r\\n                if (type.name === 'Form') {\\r\\n                  stateManager.save();\\r\\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\\r\\n                    stateManager.restore();\\r\\n                    resolveXObject();\\r\\n                  }, rejectXObject);\\r\\n                  return;\\r\\n                } else if (type.name === 'Image') {\\r\\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\\r\\n                } else if (type.name === 'PS') {\\r\\n                  (0, _util.info)('Ignored XObject subtype PS');\\r\\n                } else {\\r\\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\\r\\n                }\\r\\n                resolveXObject();\\r\\n              }).catch(function (reason) {\\r\\n                if (self.options.ignoreErrors) {\\r\\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\r\\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \\\"' + reason + '\\\".');\\r\\n                  return;\\r\\n                }\\r\\n                throw reason;\\r\\n              }));\\r\\n              return;\\r\\n            case _util.OPS.setFont:\\r\\n              var fontSize = args[1];\\r\\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\\r\\n                operatorList.addDependency(loadedName);\\r\\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\\r\\n              }));\\r\\n              return;\\r\\n            case _util.OPS.endInlineImage:\\r\\n              var cacheKey = args[0].cacheKey;\\r\\n              if (cacheKey) {\\r\\n                var cacheEntry = imageCache[cacheKey];\\r\\n                if (cacheEntry !== undefined) {\\r\\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\\r\\n                  args = null;\\r\\n                  continue;\\r\\n                }\\r\\n              }\\r\\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\\r\\n              args = null;\\r\\n              continue;\\r\\n            case _util.OPS.showText:\\r\\n              args[0] = self.handleText(args[0], stateManager.state);\\r\\n              break;\\r\\n            case _util.OPS.showSpacedText:\\r\\n              var arr = args[0];\\r\\n              var combinedGlyphs = [];\\r\\n              var arrLength = arr.length;\\r\\n              var state = stateManager.state;\\r\\n              for (i = 0; i < arrLength; ++i) {\\r\\n                var arrItem = arr[i];\\r\\n                if ((0, _util.isString)(arrItem)) {\\r\\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\\r\\n                } else if ((0, _util.isNum)(arrItem)) {\\r\\n                  combinedGlyphs.push(arrItem);\\r\\n                }\\r\\n              }\\r\\n              args[0] = combinedGlyphs;\\r\\n              fn = _util.OPS.showText;\\r\\n              break;\\r\\n            case _util.OPS.nextLineShowText:\\r\\n              operatorList.addOp(_util.OPS.nextLine);\\r\\n              args[0] = self.handleText(args[0], stateManager.state);\\r\\n              fn = _util.OPS.showText;\\r\\n              break;\\r\\n            case _util.OPS.nextLineSetSpacingShowText:\\r\\n              operatorList.addOp(_util.OPS.nextLine);\\r\\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\\r\\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\\r\\n              args[0] = self.handleText(args[0], stateManager.state);\\r\\n              fn = _util.OPS.showText;\\r\\n              break;\\r\\n            case _util.OPS.setTextRenderingMode:\\r\\n              stateManager.state.textRenderingMode = args[0];\\r\\n              break;\\r\\n            case _util.OPS.setFillColorSpace:\\r\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\r\\n              continue;\\r\\n            case _util.OPS.setStrokeColorSpace:\\r\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\\r\\n              continue;\\r\\n            case _util.OPS.setFillColor:\\r\\n              cs = stateManager.state.fillColorSpace;\\r\\n              args = cs.getRgb(args, 0);\\r\\n              fn = _util.OPS.setFillRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setStrokeColor:\\r\\n              cs = stateManager.state.strokeColorSpace;\\r\\n              args = cs.getRgb(args, 0);\\r\\n              fn = _util.OPS.setStrokeRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setFillGray:\\r\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\r\\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\r\\n              fn = _util.OPS.setFillRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setStrokeGray:\\r\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\r\\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\\r\\n              fn = _util.OPS.setStrokeRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setFillCMYKColor:\\r\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\r\\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\r\\n              fn = _util.OPS.setFillRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setStrokeCMYKColor:\\r\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\\r\\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\\r\\n              fn = _util.OPS.setStrokeRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setFillRGBColor:\\r\\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\\r\\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\r\\n              break;\\r\\n            case _util.OPS.setStrokeRGBColor:\\r\\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\\r\\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\\r\\n              break;\\r\\n            case _util.OPS.setFillColorN:\\r\\n              cs = stateManager.state.fillColorSpace;\\r\\n              if (cs.name === 'Pattern') {\\r\\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\\r\\n                return;\\r\\n              }\\r\\n              args = cs.getRgb(args, 0);\\r\\n              fn = _util.OPS.setFillRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.setStrokeColorN:\\r\\n              cs = stateManager.state.strokeColorSpace;\\r\\n              if (cs.name === 'Pattern') {\\r\\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\\r\\n                return;\\r\\n              }\\r\\n              args = cs.getRgb(args, 0);\\r\\n           \";a.a+=\"   fn = _util.OPS.setStrokeRGBColor;\\r\\n              break;\\r\\n            case _util.OPS.shadingFill:\\r\\n              var shadingRes = resources.get('Shading');\\r\\n              if (!shadingRes) {\\r\\n                throw new _util.FormatError('No shading resource found');\\r\\n              }\\r\\n              var shading = shadingRes.get(args[0].name);\\r\\n              if (!shading) {\\r\\n                throw new _util.FormatError('No shading object found');\\r\\n              }\\r\\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\\r\\n              var patternIR = shadingFill.getIR();\\r\\n              args = [patternIR];\\r\\n              fn = _util.OPS.shadingFill;\\r\\n              break;\\r\\n            case _util.OPS.setGState:\\r\\n              var dictName = args[0];\\r\\n              var extGState = resources.get('ExtGState');\\r\\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\\r\\n                break;\\r\\n              }\\r\\n              var gState = extGState.get(dictName.name);\\r\\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\\r\\n              return;\\r\\n            case _util.OPS.moveTo:\\r\\n            case _util.OPS.lineTo:\\r\\n            case _util.OPS.curveTo:\\r\\n            case _util.OPS.curveTo2:\\r\\n            case _util.OPS.curveTo3:\\r\\n            case _util.OPS.closePath:\\r\\n              self.buildPath(operatorList, fn, args);\\r\\n              continue;\\r\\n            case _util.OPS.rectangle:\\r\\n              self.buildPath(operatorList, fn, args);\\r\\n              continue;\\r\\n            case _util.OPS.markPoint:\\r\\n            case _util.OPS.markPointProps:\\r\\n            case _util.OPS.beginMarkedContent:\\r\\n            case _util.OPS.beginMarkedContentProps:\\r\\n            case _util.OPS.endMarkedContent:\\r\\n            case _util.OPS.beginCompat:\\r\\n            case _util.OPS.endCompat:\\r\\n              continue;\\r\\n            default:\\r\\n              if (args !== null) {\\r\\n                for (i = 0, ii = args.length; i < ii; i++) {\\r\\n                  if (args[i] instanceof _primitives.Dict) {\\r\\n                    break;\\r\\n                  }\\r\\n                }\\r\\n                if (i < ii) {\\r\\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\\r\\n                  continue;\\r\\n                }\\r\\n              }\\r\\n          }\\r\\n          operatorList.addOp(fn, args);\\r\\n        }\\r\\n        if (stop) {\\r\\n          next(deferred);\\r\\n          return;\\r\\n        }\\r\\n        closePendingRestoreOPS();\\r\\n        resolve();\\r\\n      }).catch(function (reason) {\\r\\n        if (_this8.options.ignoreErrors) {\\r\\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\r\\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\\r\\n          closePendingRestoreOPS();\\r\\n          return;\\r\\n        }\\r\\n        throw reason;\\r\\n      });\\r\\n    },\\r\\n    getTextContent: function getTextContent(_ref4) {\\r\\n      var _this9 = this;\\r\\n\\r\\n      var stream = _ref4.stream,\\r\\n          task = _ref4.task,\\r\\n          resources = _ref4.resources,\\r\\n          _ref4$stateManager = _ref4.stateManager,\\r\\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\\r\\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\\r\\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\\r\\n          _ref4$combineTextItem = _ref4.combineTextItems,\\r\\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\\r\\n          sink = _ref4.sink,\\r\\n          _ref4$seenStyles = _ref4.seenStyles,\\r\\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\\r\\n\\r\\n      resources = resources || _primitives.Dict.empty;\\r\\n      stateManager = stateManager || new StateManager(new TextState());\\r\\n      var WhitespaceRegexp = /\\\\s/g;\\r\\n      var textContent = {\\r\\n        items: [],\\r\\n        styles: Object.create(null)\\r\\n      };\\r\\n      var textContentItem = {\\r\\n        initialized: false,\\r\\n        str: [],\\r\\n        width: 0,\\r\\n        height: 0,\\r\\n        vertical: false,\\r\\n        lastAdvanceWidth: 0,\\r\\n        lastAdvanceHeight: 0,\\r\\n        textAdvanceScale: 0,\\r\\n        spaceWidth: 0,\\r\\n        fakeSpaceMin: Infinity,\\r\\n        fakeMultiSpaceMin: Infinity,\\r\\n        fakeMultiSpaceMax: -0,\\r\\n        textRunBreakAllowed: false,\\r\\n        transform: null,\\r\\n        fontName: null\\r\\n      };\\r\\n      var SPACE_FACTOR = 0.3;\\r\\n      var MULTI_SPACE_FACTOR = 1.5;\\r\\n      var MULTI_SPACE_FACTOR_MAX = 4;\\r\\n      var self = this;\\r\\n      var xref = this.xref;\\r\\n      var xobjs = null;\\r\\n      var skipEmptyXObjs = Object.create(null);\\r\\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\\r\\n      var textState;\\r\\n      function ensureTextContentItem() {\\r\\n        if (textContentItem.initialized) {\\r\\n          return textContentItem;\\r\\n        }\\r\\n        var font = textState.font;\\r\\n        if (!(font.loadedName in seenStyles)) {\\r\\n          seenStyles[font.loadedName] = true;\\r\\n          textContent.styles[font.loadedName] = {\\r\\n            fontFamily: font.fallbackName,\\r\\n            ascent: font.ascent,\\r\\n            descent: font.descent,\\r\\n            vertical: font.vertical\\r\\n          };\\r\\n        }\\r\\n        textContentItem.fontName = font.loadedName;\\r\\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\\r\\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\\r\\n          var glyphHeight = font.bbox[3] - font.bbox[1];\\r\\n          if (glyphHeight > 0) {\\r\\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\\r\\n            tsm[3] *= glyphHeight;\\r\\n          }\\r\\n        }\\r\\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\\r\\n        textContentItem.transform = trm;\\r\\n        if (!font.vertical) {\\r\\n          textContentItem.width = 0;\\r\\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\\r\\n          textContentItem.vertical = false;\\r\\n        } else {\\r\\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\\r\\n          textContentItem.height = 0;\\r\\n          textContentItem.vertical = true;\\r\\n        }\\r\\n        var a = textState.textLineMatrix[0];\\r\\n        var b = textState.textLineMatrix[1];\\r\\n        var scaleLineX = Math.sqrt(a * a + b * b);\\r\\n        a = textState.ctm[0];\\r\\n        b = textState.ctm[1];\\r\\n        var scaleCtmX = Math.sqrt(a * a + b * b);\\r\\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\\r\\n        textContentItem.lastAdvanceWidth = 0;\\r\\n        textContentItem.lastAdvanceHeight = 0;\\r\\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\\r\\n        if (spaceWidth) {\\r\\n          textContentItem.spaceWidth = spaceWidth;\\r\\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\\r\\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\\r\\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\\r\\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\\r\\n        } else {\\r\\n          textContentItem.spaceWidth = 0;\\r\\n          textContentItem.fakeSpaceMin = Infinity;\\r\\n          textContentItem.fakeMultiSpaceMin = Infinity;\\r\\n          textContentItem.fakeMultiSpaceMax = 0;\\r\\n          textContentItem.textRunBreakAllowed = false;\\r\\n        }\\r\\n        textContentItem.initialized = true;\\r\\n        return textContentItem;\\r\\n      }\\r\\n      function replaceWhitespace(str) {\\r\\n        var i = 0,\\r\\n            ii = str.length,\\r\\n            code;\\r\\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\\r\\n          i++;\\r\\n        }\\r\\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\\r\\n      }\\r\\n      function runBidiTransform(textChunk) {\\r\\n        var str = textChunk.str.join('');\\r\\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\\r\\n        return {\\r\\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\\r\\n          dir: bidiResult.dir,\\r\\n          width: textChunk.width,\\r\\n          height: textChunk.height,\\r\\n          transform: textChunk.transform,\\r\\n          fontName: textChunk.fontName\\r\\n        };\\r\\n      }\\r\\n      function handleSetFont(fontName, fontRef) {\\r\\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\\r\\n          textState.font = translated.font;\\r\\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\r\\n        });\\r\\n      }\\r\\n      function buildTextContentItem(chars) {\\r\\n        var font = textState.font;\\r\\n        var textChunk = ensureTextContentItem();\\r\\n        var width = 0;\\r\\n        var height = 0;\\r\\n        var glyphs = font.charsToGlyphs(chars);\\r\\n        for (var i = 0; i < glyphs.length; i++) {\\r\\n          var glyph = glyphs[i];\\r\\n          var glyphWidth = null;\\r\\n          if (font.vertical && glyph.vmetric) {\\r\\n            glyphWidth = glyph.vmetric[0];\\r\\n          } else {\\r\\n            glyphWidth = glyph.width;\\r\\n          }\\r\\n          var glyphUnicode = glyph.unicode;\\r\\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\\r\\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\\r\\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\\r\\n          }\\r\\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\\r\\n          var charSpacing = textState.charSpacing;\\r\\n          if (glyph.isSpace) {\\r\\n            var wordSpacing = textState.wordSpacing;\\r\\n            charSpacing += wordSpacing;\\r\\n            if (wordSpacing > 0) {\\r\\n              addFakeSpaces(wordSpacing, textChunk.str);\\r\\n            }\\r\\n          }\\r\\n          var tx = 0;\\r\\n          var ty = 0;\\r\\n          if (!font.vertical) {\\r\\n            var w0 = glyphWidth * textState.fontMatrix[0];\\r\\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\\r\\n            width += tx;\\r\\n          } else {\\r\\n            var w1 = glyphWidth * textState.fontMatrix[0];\\r\\n            ty = w1 * textState.fontSize + charSpacing;\\r\\n            height += ty;\\r\\n          }\\r\\n          textState.translateTextMatrix(tx, ty);\\r\\n          textChunk.str.push(glyphUnicode);\\r\\n        }\\r\\n        if (!font.vertical) {\\r\\n          textChunk.lastAdvanceWidth = width;\\r\\n          textChunk.width += width;\\r\\n        } else {\\r\\n          textChunk.lastAdvanceHeight = height;\\r\\n          textChunk.height += Math.abs(height);\\r\\n        }\\r\\n        return textChunk;\\r\\n      }\\r\\n      function addFakeSpaces(width, strBuf) {\\r\\n        if (width < textContentItem.fakeSpaceMin) {\\r\\n          return;\\r\\n        }\\r\\n        if (width < textContentItem.fakeMultiSpaceMin) {\\r\\n          strBuf.push(' ');\\r\\n          return;\\r\\n        }\\r\\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\\r\\n        while (fakeSpaces-- > 0) {\\r\\n          strBuf.push(' ');\\r\\n        }\\r\\n      }\\r\\n      function flushTextContentItem() {\\r\\n        if (!textContentItem.initialized) {\\r\\n          return;\\r\\n        }\\r\\n        textContentItem.width *= textContentItem.textAdvanceScale;\\r\\n        textContentItem.height *= textContentItem.textAdvanceScale;\\r\\n        textContent.items.push(runBidiTransform(textContentItem));\\r\\n        textContentItem.initialized = false;\\r\\n        textContentItem.str.length = 0;\\r\\n      }\\r\\n      function enqueueChunk() {\\r\\n        var length = textContent.items.length;\\r\\n        if (length > 0) {\\r\\n          sink.enqueue(textContent, length);\\r\\n          textContent.items = [];\\r\\n          textContent.styles = Object.create(null);\\r\\n        }\\r\\n      }\\r\\n      var timeSlotManager = new TimeSlotManager();\\r\\n      return new Promise(function promiseBody(resolve, reject) {\\r\\n        var next = function next(promise) {\\r\\n          enqueueChunk();\\r\\n          Promise.all([promise, sink.ready]).then(function () {\\r\\n            try {\\r\\n              promiseBody(resolve, reject);\\r\\n            } catch (ex) {\\r\\n              reject(ex);\\r\\n            }\\r\\n          }, reject);\\r\\n        };\\r\\n        task.ensureNotTerminated();\\r\\n        timeSlotManager.reset();\\r\\n        var stop,\\r\\n            operation = {},\\r\\n            args = [];\\r\\n        while (!(stop = timeSlotManager.check())) {\\r\\n          args.length = 0;\\r\\n          operation.args = args;\\r\\n          if (!preprocessor.read(operation)) {\\r\\n            break;\\r\\n          }\\r\\n          textState = stateManager.state;\\r\\n          var fn = operation.fn;\\r\\n          args = operation.args;\\r\\n          var advance, diff;\\r\\n          switch (fn | 0) {\\r\\n            case _util.OPS.setFont:\\r\\n              var fontNameArg = args[0].name,\\r\\n                  fontSizeArg = args[1];\\r\\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\\r\\n                break;\\r\\n              }\\r\\n              flushTextContentItem();\\r\\n              textState.fontName = fontNameArg;\\r\\n              textState.fontSize = fontSizeArg;\\r\\n              next(handleSetFont(fontNameArg, null));\\r\\n              return;\\r\\n            case _util.OPS.setTextRise:\\r\\n              flushTextContentItem();\\r\\n              textState.textRise = args[0];\\r\\n              break;\\r\\n            case _util.OPS.setHScale:\\r\\n              flushTextContentItem();\\r\\n              textState.textHScale = args[0] / 100;\\r\\n              break;\\r\\n            case _util.OPS.setLeading:\\r\\n              flushTextContentItem();\\r\\n              textState.leading = args[0];\\r\\n              break;\\r\\n            case _util.OPS.moveText:\\r\\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\\r\\n              advance = args[0] - args[1];\\r\\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\\r\\n                textState.translateTextLineMatrix(args[0], args[1]);\\r\\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\\r\\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\\r\\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\\r\\n                addFakeSpaces(diff, textContentItem.str);\\r\\n                break;\\r\\n              }\\r\\n              flushTextContentItem();\\r\\n              textState.translateTextLineMatrix(args[0], args[1]);\\r\\n              textState.textMatrix = textState.textLineMatrix.slice();\\r\\n              break;\\r\\n            case _util.OPS.setLeadingMoveText:\\r\\n              flushTextContentItem();\\r\\n              textState.leading = -args[1];\\r\\n              textState.translateTextLineMatrix(args[0], args[1]);\\r\\n              textState.textMatrix = textState.textLineMatrix.slice();\\r\\n              break;\\r\\n            case _util.OPS.nextLine:\\r\\n              flushTextContentItem();\\r\\n              textState.carriageReturn();\\r\\n              break;\\r\\n            case _util.OPS.setTextMatrix:\\r\\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\\r\\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\\r\\n                textState.translateTextLineMatrix(advance.width, advance.height);\\r\\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\\r\\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\\r\\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\\r\\n                addFakeSpaces(diff, textContentItem.str);\\r\\n                break;\\r\\n              }\\r\\n              flushTextContentItem();\\r\\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\r\\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\r\\n              break;\\r\\n            case _util.OPS.setCharSpacing:\\r\\n              textState.charSpacing = args[0];\\r\\n              break;\\r\\n            case _util.OPS.setWordSpacing:\\r\\n              textState.wordSpacing = args[0];\\r\\n              break;\\r\\n            case _util.OPS.beginText:\\r\\n    \";a.a+=\"          flushTextContentItem();\\r\\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\\r\\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\r\\n              break;\\r\\n            case _util.OPS.showSpacedText:\\r\\n              var items = args[0];\\r\\n              var offset;\\r\\n              for (var j = 0, jj = items.length; j < jj; j++) {\\r\\n                if (typeof items[j] === 'string') {\\r\\n                  buildTextContentItem(items[j]);\\r\\n                } else if ((0, _util.isNum)(items[j])) {\\r\\n                  ensureTextContentItem();\\r\\n                  advance = items[j] * textState.fontSize / 1000;\\r\\n                  var breakTextRun = false;\\r\\n                  if (textState.font.vertical) {\\r\\n                    offset = advance;\\r\\n                    textState.translateTextMatrix(0, offset);\\r\\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\r\\n                    if (!breakTextRun) {\\r\\n                      textContentItem.height += offset;\\r\\n                    }\\r\\n                  } else {\\r\\n                    advance = -advance;\\r\\n                    offset = advance * textState.textHScale;\\r\\n                    textState.translateTextMatrix(offset, 0);\\r\\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\\r\\n                    if (!breakTextRun) {\\r\\n                      textContentItem.width += offset;\\r\\n                    }\\r\\n                  }\\r\\n                  if (breakTextRun) {\\r\\n                    flushTextContentItem();\\r\\n                  } else if (advance > 0) {\\r\\n                    addFakeSpaces(advance, textContentItem.str);\\r\\n                  }\\r\\n                }\\r\\n              }\\r\\n              break;\\r\\n            case _util.OPS.showText:\\r\\n              buildTextContentItem(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.nextLineShowText:\\r\\n              flushTextContentItem();\\r\\n              textState.carriageReturn();\\r\\n              buildTextContentItem(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.nextLineSetSpacingShowText:\\r\\n              flushTextContentItem();\\r\\n              textState.wordSpacing = args[0];\\r\\n              textState.charSpacing = args[1];\\r\\n              textState.carriageReturn();\\r\\n              buildTextContentItem(args[2]);\\r\\n              break;\\r\\n            case _util.OPS.paintXObject:\\r\\n              flushTextContentItem();\\r\\n              if (!xobjs) {\\r\\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\\r\\n              }\\r\\n              var name = args[0].name;\\r\\n              if (name && skipEmptyXObjs[name] !== undefined) {\\r\\n                break;\\r\\n              }\\r\\n              next(new Promise(function (resolveXObject, rejectXObject) {\\r\\n                if (!name) {\\r\\n                  throw new _util.FormatError('XObject must be referred to by name.');\\r\\n                }\\r\\n                var xobj = xobjs.get(name);\\r\\n                if (!xobj) {\\r\\n                  resolveXObject();\\r\\n                  return;\\r\\n                }\\r\\n                if (!(0, _primitives.isStream)(xobj)) {\\r\\n                  throw new _util.FormatError('XObject should be a stream');\\r\\n                }\\r\\n                var type = xobj.dict.get('Subtype');\\r\\n                if (!(0, _primitives.isName)(type)) {\\r\\n                  throw new _util.FormatError('XObject should have a Name subtype');\\r\\n                }\\r\\n                if (type.name !== 'Form') {\\r\\n                  skipEmptyXObjs[name] = true;\\r\\n                  resolveXObject();\\r\\n                  return;\\r\\n                }\\r\\n                var currentState = stateManager.state.clone();\\r\\n                var xObjStateManager = new StateManager(currentState);\\r\\n                var matrix = xobj.dict.getArray('Matrix');\\r\\n                if (Array.isArray(matrix) && matrix.length === 6) {\\r\\n                  xObjStateManager.transform(matrix);\\r\\n                }\\r\\n                enqueueChunk();\\r\\n                var sinkWrapper = {\\r\\n                  enqueueInvoked: false,\\r\\n                  enqueue: function enqueue(chunk, size) {\\r\\n                    this.enqueueInvoked = true;\\r\\n                    sink.enqueue(chunk, size);\\r\\n                  },\\r\\n\\r\\n                  get desiredSize() {\\r\\n                    return sink.desiredSize;\\r\\n                  },\\r\\n                  get ready() {\\r\\n                    return sink.ready;\\r\\n                  }\\r\\n                };\\r\\n                self.getTextContent({\\r\\n                  stream: xobj,\\r\\n                  task: task,\\r\\n                  resources: xobj.dict.get('Resources') || resources,\\r\\n                  stateManager: xObjStateManager,\\r\\n                  normalizeWhitespace: normalizeWhitespace,\\r\\n                  combineTextItems: combineTextItems,\\r\\n                  sink: sinkWrapper,\\r\\n                  seenStyles: seenStyles\\r\\n                }).then(function () {\\r\\n                  if (!sinkWrapper.enqueueInvoked) {\\r\\n                    skipEmptyXObjs[name] = true;\\r\\n                  }\\r\\n                  resolveXObject();\\r\\n                }, rejectXObject);\\r\\n              }).catch(function (reason) {\\r\\n                if (reason instanceof _util.AbortException) {\\r\\n                  return;\\r\\n                }\\r\\n                if (self.options.ignoreErrors) {\\r\\n                  (0, _util.warn)('getTextContent - ignoring XObject: \\\"' + reason + '\\\".');\\r\\n                  return;\\r\\n                }\\r\\n                throw reason;\\r\\n              }));\\r\\n              return;\\r\\n            case _util.OPS.setGState:\\r\\n              flushTextContentItem();\\r\\n              var dictName = args[0];\\r\\n              var extGState = resources.get('ExtGState');\\r\\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\\r\\n                break;\\r\\n              }\\r\\n              var gState = extGState.get(dictName.name);\\r\\n              if (!(0, _primitives.isDict)(gState)) {\\r\\n                break;\\r\\n              }\\r\\n              var gStateFont = gState.get('Font');\\r\\n              if (gStateFont) {\\r\\n                textState.fontName = null;\\r\\n                textState.fontSize = gStateFont[1];\\r\\n                next(handleSetFont(null, gStateFont[0]));\\r\\n                return;\\r\\n              }\\r\\n              break;\\r\\n          }\\r\\n          if (textContent.items.length >= sink.desiredSize) {\\r\\n            stop = true;\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        if (stop) {\\r\\n          next(deferred);\\r\\n          return;\\r\\n        }\\r\\n        flushTextContentItem();\\r\\n        enqueueChunk();\\r\\n        resolve();\\r\\n      }).catch(function (reason) {\\r\\n        if (reason instanceof _util.AbortException) {\\r\\n          return;\\r\\n        }\\r\\n        if (_this9.options.ignoreErrors) {\\r\\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\\r\\n          flushTextContentItem();\\r\\n          enqueueChunk();\\r\\n          return;\\r\\n        }\\r\\n        throw reason;\\r\\n      });\\r\\n    },\\r\\n\\r\\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\\r\\n      var _this10 = this;\\r\\n\\r\\n      var xref = this.xref;\\r\\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\r\\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\\r\\n      if (properties.composite) {\\r\\n        var cidSystemInfo = dict.get('CIDSystemInfo');\\r\\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\\r\\n          properties.cidSystemInfo = {\\r\\n            registry: cidSystemInfo.get('Registry'),\\r\\n            ordering: cidSystemInfo.get('Ordering'),\\r\\n            supplement: cidSystemInfo.get('Supplement')\\r\\n          };\\r\\n        }\\r\\n        var cidToGidMap = dict.get('CIDToGIDMap');\\r\\n        if ((0, _primitives.isStream)(cidToGidMap)) {\\r\\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\\r\\n        }\\r\\n      }\\r\\n      var differences = [];\\r\\n      var baseEncodingName = null;\\r\\n      var encoding;\\r\\n      if (dict.has('Encoding')) {\\r\\n        encoding = dict.get('Encoding');\\r\\n        if ((0, _primitives.isDict)(encoding)) {\\r\\n          baseEncodingName = encoding.get('BaseEncoding');\\r\\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\\r\\n          if (encoding.has('Differences')) {\\r\\n            var diffEncoding = encoding.get('Differences');\\r\\n            var index = 0;\\r\\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\\r\\n              var data = xref.fetchIfRef(diffEncoding[j]);\\r\\n              if ((0, _util.isNum)(data)) {\\r\\n                index = data;\\r\\n              } else if ((0, _primitives.isName)(data)) {\\r\\n                differences[index++] = data.name;\\r\\n              } else {\\r\\n                throw new _util.FormatError('Invalid entry in \\\\'Differences\\\\' array: ' + data);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        } else if ((0, _primitives.isName)(encoding)) {\\r\\n          baseEncodingName = encoding.name;\\r\\n        } else {\\r\\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\\r\\n        }\\r\\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\\r\\n          baseEncodingName = null;\\r\\n        }\\r\\n      }\\r\\n      if (baseEncodingName) {\\r\\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\\r\\n      } else {\\r\\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\\r\\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\\r\\n        encoding = _encodings.StandardEncoding;\\r\\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\\r\\n          encoding = _encodings.WinAnsiEncoding;\\r\\n        }\\r\\n        if (isSymbolicFont) {\\r\\n          encoding = _encodings.MacRomanEncoding;\\r\\n          if (!properties.file) {\\r\\n            if (/Symbol/i.test(properties.name)) {\\r\\n              encoding = _encodings.SymbolSetEncoding;\\r\\n            } else if (/Dingbats/i.test(properties.name)) {\\r\\n              encoding = _encodings.ZapfDingbatsEncoding;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        properties.defaultEncoding = encoding;\\r\\n      }\\r\\n      properties.differences = differences;\\r\\n      properties.baseEncodingName = baseEncodingName;\\r\\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\\r\\n      properties.dict = dict;\\r\\n      return toUnicodePromise.then(function (toUnicode) {\\r\\n        properties.toUnicode = toUnicode;\\r\\n        return _this10.buildToUnicode(properties);\\r\\n      }).then(function (toUnicode) {\\r\\n        properties.toUnicode = toUnicode;\\r\\n        return properties;\\r\\n      });\\r\\n    },\\r\\n    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\\r\\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\\r\\n      if (properties.hasIncludedToUnicodeMap) {\\r\\n        return Promise.resolve(properties.toUnicode);\\r\\n      }\\r\\n      var toUnicode, charcode, glyphName;\\r\\n      if (!properties.composite) {\\r\\n        toUnicode = [];\\r\\n        var encoding = properties.defaultEncoding.slice();\\r\\n        var baseEncodingName = properties.baseEncodingName;\\r\\n        var differences = properties.differences;\\r\\n        for (charcode in differences) {\\r\\n          glyphName = differences[charcode];\\r\\n          if (glyphName === '.notdef') {\\r\\n            continue;\\r\\n          }\\r\\n          encoding[charcode] = glyphName;\\r\\n        }\\r\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\r\\n        for (charcode in encoding) {\\r\\n          glyphName = encoding[charcode];\\r\\n          if (glyphName === '') {\\r\\n            continue;\\r\\n          } else if (glyphsUnicodeMap[glyphName] === undefined) {\\r\\n            var code = 0;\\r\\n            switch (glyphName[0]) {\\r\\n              case 'G':\\r\\n                if (glyphName.length === 3) {\\r\\n                  code = parseInt(glyphName.substr(1), 16);\\r\\n                }\\r\\n                break;\\r\\n              case 'g':\\r\\n                if (glyphName.length === 5) {\\r\\n                  code = parseInt(glyphName.substr(1), 16);\\r\\n                }\\r\\n                break;\\r\\n              case 'C':\\r\\n              case 'c':\\r\\n                if (glyphName.length >= 3) {\\r\\n                  code = +glyphName.substr(1);\\r\\n                }\\r\\n                break;\\r\\n              default:\\r\\n                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\r\\n                if (unicode !== -1) {\\r\\n                  code = unicode;\\r\\n                }\\r\\n            }\\r\\n            if (code) {\\r\\n              if (baseEncodingName && code === +charcode) {\\r\\n                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\\r\\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\\r\\n                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\r\\n                  continue;\\r\\n                }\\r\\n              }\\r\\n              toUnicode[charcode] = String.fromCharCode(code);\\r\\n            }\\r\\n            continue;\\r\\n          }\\r\\n          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\\r\\n        }\\r\\n        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\\r\\n      }\\r\\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\\r\\n        var registry = properties.cidSystemInfo.registry;\\r\\n        var ordering = properties.cidSystemInfo.ordering;\\r\\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\\r\\n        return _cmap.CMapFactory.create({\\r\\n          encoding: ucs2CMapName,\\r\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\r\\n          useCMap: null\\r\\n        }).then(function (ucs2CMap) {\\r\\n          var cMap = properties.cMap;\\r\\n          toUnicode = [];\\r\\n          cMap.forEach(function (charcode, cid) {\\r\\n            if (cid > 0xffff) {\\r\\n              throw new _util.FormatError('Max size of CID is 65,535');\\r\\n            }\\r\\n            var ucs2 = ucs2CMap.lookup(cid);\\r\\n            if (ucs2) {\\r\\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\\r\\n            }\\r\\n          });\\r\\n          return new _fonts.ToUnicodeMap(toUnicode);\\r\\n        });\\r\\n      }\\r\\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\\r\\n    },\\r\\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\\r\\n      var cmapObj = toUnicode;\\r\\n      if ((0, _primitives.isName)(cmapObj)) {\\r\\n        return _cmap.CMapFactory.create({\\r\\n          encoding: cmapObj,\\r\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\r\\n          useCMap: null\\r\\n        }).then(function (cmap) {\\r\\n          if (cmap instanceof _cmap.IdentityCMap) {\\r\\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\r\\n          }\\r\\n          return new _fonts.ToUnicodeMap(cmap.getMap());\\r\\n        });\\r\\n      } else if ((0, _primitives.isStream)(cmapObj)) {\\r\\n        return _cmap.CMapFactory.create({\\r\\n          encoding: cmapObj,\\r\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\r\\n          useCMap: null\\r\\n        }).then(function (cmap) {\\r\\n          if (cmap instanceof _cmap.IdentityCMap) {\\r\\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\\r\\n          }\\r\\n          var map = new Array(cmap.length);\\r\\n          cmap.forEach(function (charCode, token) {\\r\\n            var str = [];\\r\\n            for (var k = 0; k < token.length; k += 2) {\\r\\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\r\\n              if ((w1 & 0xF800) !== 0xD800) {\\r\\n                str.push(w1);\\r\\n                continue;\\r\\n              }\\r\\n              k += 2;\\r\\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\\r\\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\\r\\n            }\\r\\n            map[charCode] = String.fromCharCode.apply(String, str);\\r\\n          });\\r\\n          return new _fonts.ToUnicodeMap\";a.a+=\"(map);\\r\\n        });\\r\\n      }\\r\\n      return Promise.resolve(null);\\r\\n    },\\r\\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\\r\\n      var glyphsData = cidToGidStream.getBytes();\\r\\n      var result = [];\\r\\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\\r\\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\\r\\n        if (glyphID === 0) {\\r\\n          continue;\\r\\n        }\\r\\n        var code = j >> 1;\\r\\n        result[code] = glyphID;\\r\\n      }\\r\\n      return result;\\r\\n    },\\r\\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\\r\\n      var xref = this.xref;\\r\\n      var glyphsWidths = [];\\r\\n      var defaultWidth = 0;\\r\\n      var glyphsVMetrics = [];\\r\\n      var defaultVMetrics;\\r\\n      var i, ii, j, jj, start, code, widths;\\r\\n      if (properties.composite) {\\r\\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\\r\\n        widths = dict.get('W');\\r\\n        if (widths) {\\r\\n          for (i = 0, ii = widths.length; i < ii; i++) {\\r\\n            start = xref.fetchIfRef(widths[i++]);\\r\\n            code = xref.fetchIfRef(widths[i]);\\r\\n            if (Array.isArray(code)) {\\r\\n              for (j = 0, jj = code.length; j < jj; j++) {\\r\\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\\r\\n              }\\r\\n            } else {\\r\\n              var width = xref.fetchIfRef(widths[++i]);\\r\\n              for (j = start; j <= code; j++) {\\r\\n                glyphsWidths[j] = width;\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        if (properties.vertical) {\\r\\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\\r\\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\\r\\n          vmetrics = dict.get('W2');\\r\\n          if (vmetrics) {\\r\\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\\r\\n              start = xref.fetchIfRef(vmetrics[i++]);\\r\\n              code = xref.fetchIfRef(vmetrics[i]);\\r\\n              if (Array.isArray(code)) {\\r\\n                for (j = 0, jj = code.length; j < jj; j++) {\\r\\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\\r\\n                }\\r\\n              } else {\\r\\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\\r\\n                for (j = start; j <= code; j++) {\\r\\n                  glyphsVMetrics[j] = vmetric;\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        var firstChar = properties.firstChar;\\r\\n        widths = dict.get('Widths');\\r\\n        if (widths) {\\r\\n          j = firstChar;\\r\\n          for (i = 0, ii = widths.length; i < ii; i++) {\\r\\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\\r\\n          }\\r\\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\\r\\n        } else {\\r\\n          var baseFontName = dict.get('BaseFont');\\r\\n          if ((0, _primitives.isName)(baseFontName)) {\\r\\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\\r\\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\\r\\n            defaultWidth = metrics.defaultWidth;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      var isMonospace = true;\\r\\n      var firstWidth = defaultWidth;\\r\\n      for (var glyph in glyphsWidths) {\\r\\n        var glyphWidth = glyphsWidths[glyph];\\r\\n        if (!glyphWidth) {\\r\\n          continue;\\r\\n        }\\r\\n        if (!firstWidth) {\\r\\n          firstWidth = glyphWidth;\\r\\n          continue;\\r\\n        }\\r\\n        if (firstWidth !== glyphWidth) {\\r\\n          isMonospace = false;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      if (isMonospace) {\\r\\n        properties.flags |= _fonts.FontFlags.FixedPitch;\\r\\n      }\\r\\n      properties.defaultWidth = defaultWidth;\\r\\n      properties.widths = glyphsWidths;\\r\\n      properties.defaultVMetrics = defaultVMetrics;\\r\\n      properties.vmetrics = glyphsVMetrics;\\r\\n    },\\r\\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\\r\\n      var fontNameWoStyle = baseFontName.split('-')[0];\\r\\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\\r\\n    },\\r\\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\\r\\n      var defaultWidth = 0;\\r\\n      var widths = [];\\r\\n      var monospace = false;\\r\\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\\r\\n      var lookupName = stdFontMap[name] || name;\\r\\n      var Metrics = (0, _metrics.getMetrics)();\\r\\n      if (!(lookupName in Metrics)) {\\r\\n        if (this.isSerifFont(name)) {\\r\\n          lookupName = 'Times-Roman';\\r\\n        } else {\\r\\n          lookupName = 'Helvetica';\\r\\n        }\\r\\n      }\\r\\n      var glyphWidths = Metrics[lookupName];\\r\\n      if ((0, _util.isNum)(glyphWidths)) {\\r\\n        defaultWidth = glyphWidths;\\r\\n        monospace = true;\\r\\n      } else {\\r\\n        widths = glyphWidths();\\r\\n      }\\r\\n      return {\\r\\n        defaultWidth: defaultWidth,\\r\\n        monospace: monospace,\\r\\n        widths: widths\\r\\n      };\\r\\n    },\\r\\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\\r\\n      var widths = Object.create(null);\\r\\n      var differences = properties.differences;\\r\\n      var encoding = properties.defaultEncoding;\\r\\n      for (var charCode = 0; charCode < 256; charCode++) {\\r\\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\\r\\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\\r\\n          continue;\\r\\n        }\\r\\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\\r\\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\\r\\n          continue;\\r\\n        }\\r\\n      }\\r\\n      return widths;\\r\\n    },\\r\\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\\r\\n      var baseDict = dict;\\r\\n      var type = dict.get('Subtype');\\r\\n      if (!(0, _primitives.isName)(type)) {\\r\\n        throw new _util.FormatError('invalid font Subtype');\\r\\n      }\\r\\n      var composite = false;\\r\\n      var uint8array;\\r\\n      if (type.name === 'Type0') {\\r\\n        var df = dict.get('DescendantFonts');\\r\\n        if (!df) {\\r\\n          throw new _util.FormatError('Descendant fonts are not specified');\\r\\n        }\\r\\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\\r\\n        type = dict.get('Subtype');\\r\\n        if (!(0, _primitives.isName)(type)) {\\r\\n          throw new _util.FormatError('invalid font Subtype');\\r\\n        }\\r\\n        composite = true;\\r\\n      }\\r\\n      var descriptor = dict.get('FontDescriptor');\\r\\n      if (descriptor) {\\r\\n        var hash = new _murmurhash.MurmurHash3_64();\\r\\n        var encoding = baseDict.getRaw('Encoding');\\r\\n        if ((0, _primitives.isName)(encoding)) {\\r\\n          hash.update(encoding.name);\\r\\n        } else if ((0, _primitives.isRef)(encoding)) {\\r\\n          hash.update(encoding.toString());\\r\\n        } else if ((0, _primitives.isDict)(encoding)) {\\r\\n          var keys = encoding.getKeys();\\r\\n          for (var i = 0, ii = keys.length; i < ii; i++) {\\r\\n            var entry = encoding.getRaw(keys[i]);\\r\\n            if ((0, _primitives.isName)(entry)) {\\r\\n              hash.update(entry.name);\\r\\n            } else if ((0, _primitives.isRef)(entry)) {\\r\\n              hash.update(entry.toString());\\r\\n            } else if (Array.isArray(entry)) {\\r\\n              var diffLength = entry.length,\\r\\n                  diffBuf = new Array(diffLength);\\r\\n              for (var j = 0; j < diffLength; j++) {\\r\\n                var diffEntry = entry[j];\\r\\n                if ((0, _primitives.isName)(diffEntry)) {\\r\\n                  diffBuf[j] = diffEntry.name;\\r\\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\\r\\n                  diffBuf[j] = diffEntry.toString();\\r\\n                }\\r\\n              }\\r\\n              hash.update(diffBuf.join());\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\\r\\n        if ((0, _primitives.isStream)(toUnicode)) {\\r\\n          var stream = toUnicode.str || toUnicode;\\r\\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\\r\\n          hash.update(uint8array);\\r\\n        } else if ((0, _primitives.isName)(toUnicode)) {\\r\\n          hash.update(toUnicode.name);\\r\\n        }\\r\\n        var widths = dict.get('Widths') || baseDict.get('Widths');\\r\\n        if (widths) {\\r\\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\\r\\n          hash.update(uint8array);\\r\\n        }\\r\\n      }\\r\\n      return {\\r\\n        descriptor: descriptor,\\r\\n        dict: dict,\\r\\n        baseDict: baseDict,\\r\\n        composite: composite,\\r\\n        type: type.name,\\r\\n        hash: hash ? hash.hexdigest() : ''\\r\\n      };\\r\\n    },\\r\\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\\r\\n      var _this11 = this;\\r\\n\\r\\n      var baseDict = preEvaluatedFont.baseDict;\\r\\n      var dict = preEvaluatedFont.dict;\\r\\n      var composite = preEvaluatedFont.composite;\\r\\n      var descriptor = preEvaluatedFont.descriptor;\\r\\n      var type = preEvaluatedFont.type;\\r\\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\\r\\n      var properties;\\r\\n      if (!descriptor) {\\r\\n        if (type === 'Type3') {\\r\\n          descriptor = new _primitives.Dict(null);\\r\\n          descriptor.set('FontName', _primitives.Name.get(type));\\r\\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\\r\\n        } else {\\r\\n          var baseFontName = dict.get('BaseFont');\\r\\n          if (!(0, _primitives.isName)(baseFontName)) {\\r\\n            throw new _util.FormatError('Base font is not specified');\\r\\n          }\\r\\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\\r\\n          var metrics = this.getBaseFontMetrics(baseFontName);\\r\\n          var fontNameWoStyle = baseFontName.split('-')[0];\\r\\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\\r\\n          properties = {\\r\\n            type: type,\\r\\n            name: baseFontName,\\r\\n            widths: metrics.widths,\\r\\n            defaultWidth: metrics.defaultWidth,\\r\\n            flags: flags,\\r\\n            firstChar: 0,\\r\\n            lastChar: maxCharIndex\\r\\n          };\\r\\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\\r\\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\\r\\n            return new _fonts.Font(baseFontName, null, properties);\\r\\n          });\\r\\n        }\\r\\n      }\\r\\n      var firstChar = dict.get('FirstChar') || 0;\\r\\n      var lastChar = dict.get('LastChar') || maxCharIndex;\\r\\n      var fontName = descriptor.get('FontName');\\r\\n      var baseFont = dict.get('BaseFont');\\r\\n      if ((0, _util.isString)(fontName)) {\\r\\n        fontName = _primitives.Name.get(fontName);\\r\\n      }\\r\\n      if ((0, _util.isString)(baseFont)) {\\r\\n        baseFont = _primitives.Name.get(baseFont);\\r\\n      }\\r\\n      if (type !== 'Type3') {\\r\\n        var fontNameStr = fontName && fontName.name;\\r\\n        var baseFontStr = baseFont && baseFont.name;\\r\\n        if (fontNameStr !== baseFontStr) {\\r\\n          (0, _util.info)('The FontDescriptor\\\\'s FontName is \\\"' + fontNameStr + '\\\" but should be the same as the Font\\\\'s BaseFont \\\"' + baseFontStr + '\\\"');\\r\\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\\r\\n            fontName = baseFont;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      fontName = fontName || baseFont;\\r\\n      if (!(0, _primitives.isName)(fontName)) {\\r\\n        throw new _util.FormatError('invalid font name');\\r\\n      }\\r\\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\\r\\n      if (fontFile) {\\r\\n        if (fontFile.dict) {\\r\\n          var subtype = fontFile.dict.get('Subtype');\\r\\n          if (subtype) {\\r\\n            subtype = subtype.name;\\r\\n          }\\r\\n          var length1 = fontFile.dict.get('Length1');\\r\\n          var length2 = fontFile.dict.get('Length2');\\r\\n          var length3 = fontFile.dict.get('Length3');\\r\\n        }\\r\\n      }\\r\\n      properties = {\\r\\n        type: type,\\r\\n        name: fontName.name,\\r\\n        subtype: subtype,\\r\\n        file: fontFile,\\r\\n        length1: length1,\\r\\n        length2: length2,\\r\\n        length3: length3,\\r\\n        loadedName: baseDict.loadedName,\\r\\n        composite: composite,\\r\\n        wideChars: composite,\\r\\n        fixedPitch: false,\\r\\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\\r\\n        firstChar: firstChar || 0,\\r\\n        lastChar: lastChar || maxCharIndex,\\r\\n        bbox: descriptor.getArray('FontBBox'),\\r\\n        ascent: descriptor.get('Ascent'),\\r\\n        descent: descriptor.get('Descent'),\\r\\n        xHeight: descriptor.get('XHeight'),\\r\\n        capHeight: descriptor.get('CapHeight'),\\r\\n        flags: descriptor.get('Flags'),\\r\\n        italicAngle: descriptor.get('ItalicAngle'),\\r\\n        isType3Font: false\\r\\n      };\\r\\n      var cMapPromise;\\r\\n      if (composite) {\\r\\n        var cidEncoding = baseDict.get('Encoding');\\r\\n        if ((0, _primitives.isName)(cidEncoding)) {\\r\\n          properties.cidEncoding = cidEncoding.name;\\r\\n        }\\r\\n        cMapPromise = _cmap.CMapFactory.create({\\r\\n          encoding: cidEncoding,\\r\\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\\r\\n          useCMap: null\\r\\n        }).then(function (cMap) {\\r\\n          properties.cMap = cMap;\\r\\n          properties.vertical = properties.cMap.vertical;\\r\\n        });\\r\\n      } else {\\r\\n        cMapPromise = Promise.resolve(undefined);\\r\\n      }\\r\\n      return cMapPromise.then(function () {\\r\\n        return _this11.extractDataStructures(dict, baseDict, properties);\\r\\n      }).then(function (properties) {\\r\\n        _this11.extractWidths(dict, descriptor, properties);\\r\\n        if (type === 'Type3') {\\r\\n          properties.isType3Font = true;\\r\\n        }\\r\\n        return new _fonts.Font(fontName.name, fontFile, properties);\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n  return PartialEvaluator;\\r\\n}();\\r\\nvar TranslatedFont = function TranslatedFontClosure() {\\r\\n  function TranslatedFont(loadedName, font, dict) {\\r\\n    this.loadedName = loadedName;\\r\\n    this.font = font;\\r\\n    this.dict = dict;\\r\\n    this.type3Loaded = null;\\r\\n    this.sent = false;\\r\\n  }\\r\\n  TranslatedFont.prototype = {\\r\\n    send: function send(handler) {\\r\\n      if (this.sent) {\\r\\n        return;\\r\\n      }\\r\\n      var fontData = this.font.exportData();\\r\\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\\r\\n      this.sent = true;\\r\\n    },\\r\\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\\r\\n      if (!this.font.isType3Font) {\\r\\n        throw new Error('Must be a Type3 font.');\\r\\n      }\\r\\n      if (this.type3Loaded) {\\r\\n        return this.type3Loaded;\\r\\n      }\\r\\n      var type3Options = Object.create(evaluator.options);\\r\\n      type3Options.ignoreErrors = false;\\r\\n      var type3Evaluator = evaluator.clone(type3Options);\\r\\n      var translatedFont = this.font;\\r\\n      var loadCharProcsPromise = Promise.resolve();\\r\\n      var charProcs = this.dict.get('CharProcs');\\r\\n      var fontResources = this.dict.get('Resources') || resources;\\r\\n      var charProcKeys = charProcs.getKeys();\\r\\n      var charProcOperatorList = Object.create(null);\\r\\n\\r\\n      var _loop2 = function _loop2() {\\r\\n        var key = charProcKeys[i];\\r\\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\\r\\n          var glyphStream = charProcs.get(key);\\r\\n          var operatorList = new OperatorList();\\r\\n          return type3Evaluator.getOperatorList({\\r\\n            stream: glyphStream,\\r\\n            task: task,\\r\\n            resources: fontResources,\\r\\n            operatorList: operatorList\\r\\n          }).then(function () {\\r\\n            charProcOperatorList[key] = operatorList.getIR();\\r\\n            parentOperatorList.addDependencies(operatorList.dependencies);\\r\\n          }).catch(function (reason) {\\r\\n            (0, _util.warn)('Type3 font resource \\\"' + key + '\\\" is not available.');\\r\\n            var operatorList = new OperatorList();\\r\\n            charProcOperatorList[key] = operatorList.getIR();\\r\\n          });\\r\\n        });\\r\\n      };\\r\\n\\r\\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\\r\\n\";a.a+=\"        _loop2();\\r\\n      }\\r\\n      this.type3Loaded = loadCharProcsPromise.then(function () {\\r\\n        translatedFont.charProcOperatorList = charProcOperatorList;\\r\\n      });\\r\\n      return this.type3Loaded;\\r\\n    }\\r\\n  };\\r\\n  return TranslatedFont;\\r\\n}();\\r\\nvar OperatorList = function OperatorListClosure() {\\r\\n  var CHUNK_SIZE = 1000;\\r\\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\\r\\n  function getTransfers(queue) {\\r\\n    var transfers = [];\\r\\n    var fnArray = queue.fnArray,\\r\\n        argsArray = queue.argsArray;\\r\\n    for (var i = 0, ii = queue.length; i < ii; i++) {\\r\\n      switch (fnArray[i]) {\\r\\n        case _util.OPS.paintInlineImageXObject:\\r\\n        case _util.OPS.paintInlineImageXObjectGroup:\\r\\n        case _util.OPS.paintImageMaskXObject:\\r\\n          var arg = argsArray[i][0];\\r\\n          if (!arg.cached) {\\r\\n            transfers.push(arg.data.buffer);\\r\\n          }\\r\\n          break;\\r\\n      }\\r\\n    }\\r\\n    return transfers;\\r\\n  }\\r\\n  function OperatorList(intent, messageHandler, pageIndex) {\\r\\n    this.messageHandler = messageHandler;\\r\\n    this.fnArray = [];\\r\\n    this.argsArray = [];\\r\\n    this.dependencies = Object.create(null);\\r\\n    this._totalLength = 0;\\r\\n    this.pageIndex = pageIndex;\\r\\n    this.intent = intent;\\r\\n  }\\r\\n  OperatorList.prototype = {\\r\\n    get length() {\\r\\n      return this.argsArray.length;\\r\\n    },\\r\\n    get totalLength() {\\r\\n      return this._totalLength + this.length;\\r\\n    },\\r\\n    addOp: function addOp(fn, args) {\\r\\n      this.fnArray.push(fn);\\r\\n      this.argsArray.push(args);\\r\\n      if (this.messageHandler) {\\r\\n        if (this.fnArray.length >= CHUNK_SIZE) {\\r\\n          this.flush();\\r\\n        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\\r\\n          this.flush();\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    addDependency: function addDependency(dependency) {\\r\\n      if (dependency in this.dependencies) {\\r\\n        return;\\r\\n      }\\r\\n      this.dependencies[dependency] = true;\\r\\n      this.addOp(_util.OPS.dependency, [dependency]);\\r\\n    },\\r\\n    addDependencies: function addDependencies(dependencies) {\\r\\n      for (var key in dependencies) {\\r\\n        this.addDependency(key);\\r\\n      }\\r\\n    },\\r\\n    addOpList: function addOpList(opList) {\\r\\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\\r\\n      for (var i = 0, ii = opList.length; i < ii; i++) {\\r\\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\\r\\n      }\\r\\n    },\\r\\n    getIR: function getIR() {\\r\\n      return {\\r\\n        fnArray: this.fnArray,\\r\\n        argsArray: this.argsArray,\\r\\n        length: this.length\\r\\n      };\\r\\n    },\\r\\n    flush: function flush(lastChunk) {\\r\\n      if (this.intent !== 'oplist') {\\r\\n        new QueueOptimizer().optimize(this);\\r\\n      }\\r\\n      var transfers = getTransfers(this);\\r\\n      var length = this.length;\\r\\n      this._totalLength += length;\\r\\n      this.messageHandler.send('RenderPageChunk', {\\r\\n        operatorList: {\\r\\n          fnArray: this.fnArray,\\r\\n          argsArray: this.argsArray,\\r\\n          lastChunk: lastChunk,\\r\\n          length: length\\r\\n        },\\r\\n        pageIndex: this.pageIndex,\\r\\n        intent: this.intent\\r\\n      }, transfers);\\r\\n      this.dependencies = Object.create(null);\\r\\n      this.fnArray.length = 0;\\r\\n      this.argsArray.length = 0;\\r\\n    }\\r\\n  };\\r\\n  return OperatorList;\\r\\n}();\\r\\nvar StateManager = function StateManagerClosure() {\\r\\n  function StateManager(initialState) {\\r\\n    this.state = initialState;\\r\\n    this.stateStack = [];\\r\\n  }\\r\\n  StateManager.prototype = {\\r\\n    save: function save() {\\r\\n      var old = this.state;\\r\\n      this.stateStack.push(this.state);\\r\\n      this.state = old.clone();\\r\\n    },\\r\\n    restore: function restore() {\\r\\n      var prev = this.stateStack.pop();\\r\\n      if (prev) {\\r\\n        this.state = prev;\\r\\n      }\\r\\n    },\\r\\n    transform: function transform(args) {\\r\\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\\r\\n    }\\r\\n  };\\r\\n  return StateManager;\\r\\n}();\\r\\nvar TextState = function TextStateClosure() {\\r\\n  function TextState() {\\r\\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\r\\n    this.fontName = null;\\r\\n    this.fontSize = 0;\\r\\n    this.font = null;\\r\\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\\r\\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\\r\\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\\r\\n    this.charSpacing = 0;\\r\\n    this.wordSpacing = 0;\\r\\n    this.leading = 0;\\r\\n    this.textHScale = 1;\\r\\n    this.textRise = 0;\\r\\n  }\\r\\n  TextState.prototype = {\\r\\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\r\\n      var m = this.textMatrix;\\r\\n      m[0] = a;\\r\\n      m[1] = b;\\r\\n      m[2] = c;\\r\\n      m[3] = d;\\r\\n      m[4] = e;\\r\\n      m[5] = f;\\r\\n    },\\r\\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\\r\\n      var m = this.textLineMatrix;\\r\\n      m[0] = a;\\r\\n      m[1] = b;\\r\\n      m[2] = c;\\r\\n      m[3] = d;\\r\\n      m[4] = e;\\r\\n      m[5] = f;\\r\\n    },\\r\\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\\r\\n      var m = this.textMatrix;\\r\\n      m[4] = m[0] * x + m[2] * y + m[4];\\r\\n      m[5] = m[1] * x + m[3] * y + m[5];\\r\\n    },\\r\\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\\r\\n      var m = this.textLineMatrix;\\r\\n      m[4] = m[0] * x + m[2] * y + m[4];\\r\\n      m[5] = m[1] * x + m[3] * y + m[5];\\r\\n    },\\r\\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\\r\\n      var font = this.font;\\r\\n      if (!font) {\\r\\n        return null;\\r\\n      }\\r\\n      var m = this.textLineMatrix;\\r\\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\\r\\n        return null;\\r\\n      }\\r\\n      var txDiff = e - m[4],\\r\\n          tyDiff = f - m[5];\\r\\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\\r\\n        return null;\\r\\n      }\\r\\n      var tx,\\r\\n          ty,\\r\\n          denominator = a * d - b * c;\\r\\n      if (font.vertical) {\\r\\n        tx = -tyDiff * c / denominator;\\r\\n        ty = tyDiff * a / denominator;\\r\\n      } else {\\r\\n        tx = txDiff * d / denominator;\\r\\n        ty = -txDiff * b / denominator;\\r\\n      }\\r\\n      return {\\r\\n        width: tx,\\r\\n        height: ty,\\r\\n        value: font.vertical ? ty : tx\\r\\n      };\\r\\n    },\\r\\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\\r\\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\\r\\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\\r\\n    },\\r\\n    carriageReturn: function TextState_carriageReturn() {\\r\\n      this.translateTextLineMatrix(0, -this.leading);\\r\\n      this.textMatrix = this.textLineMatrix.slice();\\r\\n    },\\r\\n    clone: function TextState_clone() {\\r\\n      var clone = Object.create(this);\\r\\n      clone.textMatrix = this.textMatrix.slice();\\r\\n      clone.textLineMatrix = this.textLineMatrix.slice();\\r\\n      clone.fontMatrix = this.fontMatrix.slice();\\r\\n      return clone;\\r\\n    }\\r\\n  };\\r\\n  return TextState;\\r\\n}();\\r\\nvar EvalState = function EvalStateClosure() {\\r\\n  function EvalState() {\\r\\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\\r\\n    this.font = null;\\r\\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\\r\\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\\r\\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\\r\\n  }\\r\\n  EvalState.prototype = {\\r\\n    clone: function CanvasExtraState_clone() {\\r\\n      return Object.create(this);\\r\\n    }\\r\\n  };\\r\\n  return EvalState;\\r\\n}();\\r\\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\\r\\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['w'] = {\\r\\n      id: _util.OPS.setLineWidth,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['J'] = {\\r\\n      id: _util.OPS.setLineCap,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['j'] = {\\r\\n      id: _util.OPS.setLineJoin,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['M'] = {\\r\\n      id: _util.OPS.setMiterLimit,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['d'] = {\\r\\n      id: _util.OPS.setDash,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['ri'] = {\\r\\n      id: _util.OPS.setRenderingIntent,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['i'] = {\\r\\n      id: _util.OPS.setFlatness,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['gs'] = {\\r\\n      id: _util.OPS.setGState,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['q'] = {\\r\\n      id: _util.OPS.save,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Q'] = {\\r\\n      id: _util.OPS.restore,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['cm'] = {\\r\\n      id: _util.OPS.transform,\\r\\n      numArgs: 6,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['m'] = {\\r\\n      id: _util.OPS.moveTo,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['l'] = {\\r\\n      id: _util.OPS.lineTo,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['c'] = {\\r\\n      id: _util.OPS.curveTo,\\r\\n      numArgs: 6,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['v'] = {\\r\\n      id: _util.OPS.curveTo2,\\r\\n      numArgs: 4,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['y'] = {\\r\\n      id: _util.OPS.curveTo3,\\r\\n      numArgs: 4,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['h'] = {\\r\\n      id: _util.OPS.closePath,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['re'] = {\\r\\n      id: _util.OPS.rectangle,\\r\\n      numArgs: 4,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['S'] = {\\r\\n      id: _util.OPS.stroke,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['s'] = {\\r\\n      id: _util.OPS.closeStroke,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['f'] = {\\r\\n      id: _util.OPS.fill,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['F'] = {\\r\\n      id: _util.OPS.fill,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['f*'] = {\\r\\n      id: _util.OPS.eoFill,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['B'] = {\\r\\n      id: _util.OPS.fillStroke,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['B*'] = {\\r\\n      id: _util.OPS.eoFillStroke,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['b'] = {\\r\\n      id: _util.OPS.closeFillStroke,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['b*'] = {\\r\\n      id: _util.OPS.closeEOFillStroke,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['n'] = {\\r\\n      id: _util.OPS.endPath,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['W'] = {\\r\\n      id: _util.OPS.clip,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['W*'] = {\\r\\n      id: _util.OPS.eoClip,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['BT'] = {\\r\\n      id: _util.OPS.beginText,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['ET'] = {\\r\\n      id: _util.OPS.endText,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tc'] = {\\r\\n      id: _util.OPS.setCharSpacing,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tw'] = {\\r\\n      id: _util.OPS.setWordSpacing,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tz'] = {\\r\\n      id: _util.OPS.setHScale,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['TL'] = {\\r\\n      id: _util.OPS.setLeading,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tf'] = {\\r\\n      id: _util.OPS.setFont,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tr'] = {\\r\\n      id: _util.OPS.setTextRenderingMode,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Ts'] = {\\r\\n      id: _util.OPS.setTextRise,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Td'] = {\\r\\n      id: _util.OPS.moveText,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['TD'] = {\\r\\n      id: _util.OPS.setLeadingMoveText,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tm'] = {\\r\\n      id: _util.OPS.setTextMatrix,\\r\\n      numArgs: 6,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['T*'] = {\\r\\n      id: _util.OPS.nextLine,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Tj'] = {\\r\\n      id: _util.OPS.showText,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['TJ'] = {\\r\\n      id: _util.OPS.showSpacedText,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['\\\\''] = {\\r\\n      id: _util.OPS.nextLineShowText,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['\\\"'] = {\\r\\n      id: _util.OPS.nextLineSetSpacingShowText,\\r\\n      numArgs: 3,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['d0'] = {\\r\\n      id: _util.OPS.setCharWidth,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['d1'] = {\\r\\n      id: _util.OPS.setCharWidthAndBounds,\\r\\n      numArgs: 6,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['CS'] = {\\r\\n      id: _util.OPS.setStrokeColorSpace,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['cs'] = {\\r\\n      id: _util.OPS.setFillColorSpace,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['SC'] = {\\r\\n      id: _util.OPS.setStrokeColor,\\r\\n      numArgs: 4,\\r\\n      variableArgs: true\\r\\n    };\\r\\n    t['SCN'] = {\\r\\n      id: _util.OPS.setStrokeColorN,\\r\\n      numArgs: 33,\\r\\n      variableArgs: true\\r\\n    };\\r\\n    t['sc'] = {\\r\\n      id: _util.OPS.setFillColor,\\r\\n      numArgs: 4,\\r\\n      variableArgs: true\\r\\n    };\\r\\n    t['scn'] = {\\r\\n      id: _util.OPS.setFillColorN,\\r\\n      numArgs: 33,\\r\\n      variableArgs: true\\r\\n    };\\r\\n    t['G'] = {\\r\\n      id: _util.OPS.setStrokeGray,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['g'] = {\\r\\n      id: _util.OPS.setFillGray,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['RG'] = {\\r\\n      id: _util.OPS.setStrokeRGBColor,\\r\\n      numArgs: 3,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['rg'] = {\\r\\n      id: _util.OPS.setFillRGBColor,\\r\\n      numArgs: 3,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['K'] = {\\r\\n      id: _util.OPS.setStrokeCMYKColor,\\r\\n      numArgs: 4,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['k'] = {\\r\\n      id: _util.OPS.setFillCMYKColor,\\r\\n      numArgs: 4,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['sh'] = {\\r\\n      id: _util.OPS.shadingFill,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['BI'] = {\\r\\n      id: _util.OPS.beginInlineImage,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['ID'] = {\\r\\n      id: _util.OPS.beginImageData,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['EI'] = {\\r\\n      id: _util.OPS.endInlineImage,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['Do'] = {\\r\\n      id: _util.OPS.paintXObject,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['MP'] = {\\r\\n      id: _util.OPS.markPoint,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['DP'] = {\\r\\n      id: _util.OPS.markPointProps,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['BMC'] = {\\r\\n      id: _util.OPS.beginMarkedContent,\\r\\n      numArgs: 1,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['BDC'] = {\\r\\n      id: _util.OPS.beginMarkedContentProps,\\r\\n      numArgs: 2,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['EMC'] = {\\r\\n      id: _util.OPS.endMarkedContent,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['BX'] = {\\r\\n      id: _util.OPS.beginCompat,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['EX'] = {\\r\\n      id: _util.OPS.endCompat,\\r\\n      numArgs: 0,\\r\\n      variableArgs: false\\r\\n    };\\r\\n    t['BM'] = null;\\r\\n    t['BD'] = null;\\r\\n    t['true'] = null;\\r\\n    t['fa'] = null;\\r\\n    t['fal'] = null;\\r\\n    t['fals'] = null;\\r\\n    t['false'] = null;\\r\\n    t['nu'] = null;\\r\\n    t['nul'] = null;\\r\\n    t['null'] = null;\\r\\n  });\\r\\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\\r\\n    this.opMap = getOPMap();\\r\\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\\r\\n    this.stateManager = stateManager;\\r\\n    this.nonProcessedArgs = [];\\r\\n  }\\r\\n  EvaluatorPreprocessor.prototype = {\\r\\n    get savedStatesDepth() {\\r\\n      return this.stateManager.stateStack.length;\\r\\n    },\\r\\n    read: function EvaluatorPreprocessor_read(operation) {\\r\\n      var args = operation.args;\\r\\n      while (true) {\\r\\n        var obj = this.parser.getObj();\\r\\n        if ((0, _primitives.isCmd)(obj)) {\\r\\n          var cmd = obj.cmd;\\r\\n          var opSpec = this.opMap[cmd];\\r\\n          if (!opSpec) {\\r\\n            (0, _util.warn)('Unknown command \\\"' + cmd + '\\\"');\\r\\n            continue;\\r\\n          }\\r\\n          var fn = opSpec.id;\\r\\n          var numArgs = opSpec.numArgs;\\r\\n          var argsLength = args !== null ? args.length : 0;\\r\\n     \";a.a+=\"     if (!opSpec.variableArgs) {\\r\\n            if (argsLength !== numArgs) {\\r\\n              var nonProcessedArgs = this.nonProcessedArgs;\\r\\n              while (argsLength > numArgs) {\\r\\n                nonProcessedArgs.push(args.shift());\\r\\n                argsLength--;\\r\\n              }\\r\\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\\r\\n                if (args === null) {\\r\\n                  args = [];\\r\\n                }\\r\\n                args.unshift(nonProcessedArgs.pop());\\r\\n                argsLength++;\\r\\n              }\\r\\n            }\\r\\n            if (argsLength < numArgs) {\\r\\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\\r\\n              if (args !== null) {\\r\\n                args.length = 0;\\r\\n              }\\r\\n              continue;\\r\\n            }\\r\\n          } else if (argsLength > numArgs) {\\r\\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\\r\\n          }\\r\\n          this.preprocessCommand(fn, args);\\r\\n          operation.fn = fn;\\r\\n          operation.args = args;\\r\\n          return true;\\r\\n        }\\r\\n        if ((0, _primitives.isEOF)(obj)) {\\r\\n          return false;\\r\\n        }\\r\\n        if (obj !== null) {\\r\\n          if (args === null) {\\r\\n            args = [];\\r\\n          }\\r\\n          args.push(obj);\\r\\n          if (args.length > 33) {\\r\\n            throw new _util.FormatError('Too many arguments');\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\\r\\n      switch (fn | 0) {\\r\\n        case _util.OPS.save:\\r\\n          this.stateManager.save();\\r\\n          break;\\r\\n        case _util.OPS.restore:\\r\\n          this.stateManager.restore();\\r\\n          break;\\r\\n        case _util.OPS.transform:\\r\\n          this.stateManager.transform(args);\\r\\n          break;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return EvaluatorPreprocessor;\\r\\n}();\\r\\nvar QueueOptimizer = function QueueOptimizerClosure() {\\r\\n  function addState(parentState, pattern, fn) {\\r\\n    var state = parentState;\\r\\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\\r\\n      var item = pattern[i];\\r\\n      state = state[item] || (state[item] = []);\\r\\n    }\\r\\n    state[pattern[pattern.length - 1]] = fn;\\r\\n  }\\r\\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\\r\\n    var iFirstPIMXO = iFirstSave + 2;\\r\\n    for (var i = 0; i < count; i++) {\\r\\n      var arg = argsArray[iFirstPIMXO + 4 * i];\\r\\n      var imageMask = arg.length === 1 && arg[0];\\r\\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\\r\\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\\r\\n        continue;\\r\\n      }\\r\\n      break;\\r\\n    }\\r\\n    return count - i;\\r\\n  }\\r\\n  var InitialState = [];\\r\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], function foundInlineImageGroup(context) {\\r\\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\\r\\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\\r\\n    var MAX_WIDTH = 1000;\\r\\n    var IMAGE_PADDING = 1;\\r\\n    var fnArray = context.fnArray,\\r\\n        argsArray = context.argsArray;\\r\\n    var curr = context.iCurr;\\r\\n    var iFirstSave = curr - 3;\\r\\n    var iFirstTransform = curr - 2;\\r\\n    var iFirstPIIXO = curr - 1;\\r\\n    var i = iFirstSave + 4;\\r\\n    var ii = fnArray.length;\\r\\n    while (i + 3 < ii) {\\r\\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintInlineImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\\r\\n        break;\\r\\n      }\\r\\n      i += 4;\\r\\n    }\\r\\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\\r\\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\\r\\n      return i;\\r\\n    }\\r\\n    var maxX = 0;\\r\\n    var map = [],\\r\\n        maxLineHeight = 0;\\r\\n    var currentX = IMAGE_PADDING,\\r\\n        currentY = IMAGE_PADDING;\\r\\n    var q;\\r\\n    for (q = 0; q < count; q++) {\\r\\n      var transform = argsArray[iFirstTransform + (q << 2)];\\r\\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\\r\\n      if (currentX + img.width > MAX_WIDTH) {\\r\\n        maxX = Math.max(maxX, currentX);\\r\\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\\r\\n        currentX = 0;\\r\\n        maxLineHeight = 0;\\r\\n      }\\r\\n      map.push({\\r\\n        transform: transform,\\r\\n        x: currentX,\\r\\n        y: currentY,\\r\\n        w: img.width,\\r\\n        h: img.height\\r\\n      });\\r\\n      currentX += img.width + 2 * IMAGE_PADDING;\\r\\n      maxLineHeight = Math.max(maxLineHeight, img.height);\\r\\n    }\\r\\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\\r\\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\\r\\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\\r\\n    var imgRowSize = imgWidth << 2;\\r\\n    for (q = 0; q < count; q++) {\\r\\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\\r\\n      var rowSize = map[q].w << 2;\\r\\n      var dataOffset = 0;\\r\\n      var offset = map[q].x + map[q].y * imgWidth << 2;\\r\\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\\r\\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\\r\\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\\r\\n        dataOffset += rowSize;\\r\\n        offset += imgRowSize;\\r\\n      }\\r\\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\\r\\n      while (offset >= 0) {\\r\\n        data[offset - 4] = data[offset];\\r\\n        data[offset - 3] = data[offset + 1];\\r\\n        data[offset - 2] = data[offset + 2];\\r\\n        data[offset - 1] = data[offset + 3];\\r\\n        data[offset + rowSize] = data[offset + rowSize - 4];\\r\\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\\r\\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\\r\\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\\r\\n        offset -= imgRowSize;\\r\\n      }\\r\\n    }\\r\\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\\r\\n    argsArray.splice(iFirstSave, count * 4, [{\\r\\n      width: imgWidth,\\r\\n      height: imgHeight,\\r\\n      kind: _util.ImageKind.RGBA_32BPP,\\r\\n      data: imgData\\r\\n    }, map]);\\r\\n    return iFirstSave + 1;\\r\\n  });\\r\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], function foundImageMaskGroup(context) {\\r\\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\\r\\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\\r\\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\\r\\n    var fnArray = context.fnArray,\\r\\n        argsArray = context.argsArray;\\r\\n    var curr = context.iCurr;\\r\\n    var iFirstSave = curr - 3;\\r\\n    var iFirstTransform = curr - 2;\\r\\n    var iFirstPIMXO = curr - 1;\\r\\n    var i = iFirstSave + 4;\\r\\n    var ii = fnArray.length;\\r\\n    while (i + 3 < ii) {\\r\\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageMaskXObject || fnArray[i + 3] !== _util.OPS.restore) {\\r\\n        break;\\r\\n      }\\r\\n      i += 4;\\r\\n    }\\r\\n    var count = (i - iFirstSave) / 4;\\r\\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\\r\\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\\r\\n      return i;\\r\\n    }\\r\\n    var q;\\r\\n    var isSameImage = false;\\r\\n    var iTransform, transformArgs;\\r\\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\\r\\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\\r\\n      isSameImage = true;\\r\\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\\r\\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\\r\\n      iTransform = iFirstTransform + 4;\\r\\n      var iPIMXO = iFirstPIMXO + 4;\\r\\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\\r\\n        transformArgs = argsArray[iTransform];\\r\\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\\r\\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\\r\\n            isSameImage = false;\\r\\n          } else {\\r\\n            count = q;\\r\\n          }\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    if (isSameImage) {\\r\\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\\r\\n      var positions = new Float32Array(count * 2);\\r\\n      iTransform = iFirstTransform;\\r\\n      for (q = 0; q < count; q++, iTransform += 4) {\\r\\n        transformArgs = argsArray[iTransform];\\r\\n        positions[q << 1] = transformArgs[4];\\r\\n        positions[(q << 1) + 1] = transformArgs[5];\\r\\n      }\\r\\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\\r\\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\\r\\n    } else {\\r\\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\\r\\n      var images = [];\\r\\n      for (q = 0; q < count; q++) {\\r\\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\\r\\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\\r\\n        images.push({\\r\\n          data: maskParams.data,\\r\\n          width: maskParams.width,\\r\\n          height: maskParams.height,\\r\\n          transform: transformArgs\\r\\n        });\\r\\n      }\\r\\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\\r\\n      argsArray.splice(iFirstSave, count * 4, [images]);\\r\\n    }\\r\\n    return iFirstSave + 1;\\r\\n  });\\r\\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\\r\\n    var MIN_IMAGES_IN_BLOCK = 3;\\r\\n    var MAX_IMAGES_IN_BLOCK = 1000;\\r\\n    var fnArray = context.fnArray,\\r\\n        argsArray = context.argsArray;\\r\\n    var curr = context.iCurr;\\r\\n    var iFirstSave = curr - 3;\\r\\n    var iFirstTransform = curr - 2;\\r\\n    var iFirstPIXO = curr - 1;\\r\\n    var iFirstRestore = curr;\\r\\n    if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\\r\\n      return iFirstRestore + 1;\\r\\n    }\\r\\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\\r\\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\\r\\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\\r\\n    var i = iFirstSave + 4;\\r\\n    var ii = fnArray.length;\\r\\n    while (i + 3 < ii) {\\r\\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\\r\\n        break;\\r\\n      }\\r\\n      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\\r\\n        break;\\r\\n      }\\r\\n      if (argsArray[i + 2][0] !== firstPIXOArg0) {\\r\\n        break;\\r\\n      }\\r\\n      i += 4;\\r\\n    }\\r\\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\\r\\n    if (count < MIN_IMAGES_IN_BLOCK) {\\r\\n      return i;\\r\\n    }\\r\\n    var positions = new Float32Array(count * 2);\\r\\n    var iTransform = iFirstTransform;\\r\\n    for (var q = 0; q < count; q++, iTransform += 4) {\\r\\n      var transformArgs = argsArray[iTransform];\\r\\n      positions[q << 1] = transformArgs[4];\\r\\n      positions[(q << 1) + 1] = transformArgs[5];\\r\\n    }\\r\\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\\r\\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\\r\\n    argsArray.splice(iFirstSave, count * 4, args);\\r\\n    return iFirstSave + 1;\\r\\n  });\\r\\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], function (context) {\\r\\n    var MIN_CHARS_IN_BLOCK = 3;\\r\\n    var MAX_CHARS_IN_BLOCK = 1000;\\r\\n    var fnArray = context.fnArray,\\r\\n        argsArray = context.argsArray;\\r\\n    var curr = context.iCurr;\\r\\n    var iFirstBeginText = curr - 4;\\r\\n    var iFirstSetFont = curr - 3;\\r\\n    var iFirstSetTextMatrix = curr - 2;\\r\\n    var iFirstShowText = curr - 1;\\r\\n    var iFirstEndText = curr;\\r\\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\\r\\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\\r\\n    var i = iFirstBeginText + 5;\\r\\n    var ii = fnArray.length;\\r\\n    while (i + 4 < ii) {\\r\\n      if (fnArray[i] !== _util.OPS.beginText || fnArray[i + 1] !== _util.OPS.setFont || fnArray[i + 2] !== _util.OPS.setTextMatrix || fnArray[i + 3] !== _util.OPS.showText || fnArray[i + 4] !== _util.OPS.endText) {\\r\\n        break;\\r\\n      }\\r\\n      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\\r\\n        break;\\r\\n      }\\r\\n      i += 5;\\r\\n    }\\r\\n    var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\\r\\n    if (count < MIN_CHARS_IN_BLOCK) {\\r\\n      return i;\\r\\n    }\\r\\n    var iFirst = iFirstBeginText;\\r\\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\\r\\n      count++;\\r\\n      iFirst -= 5;\\r\\n    }\\r\\n    var iEndText = iFirst + 4;\\r\\n    for (var q = 1; q < count; q++) {\\r\\n      fnArray.splice(iEndText, 3);\\r\\n      argsArray.splice(iEndText, 3);\\r\\n      iEndText += 2;\\r\\n    }\\r\\n    return iEndText + 1;\\r\\n  });\\r\\n  function QueueOptimizer() {}\\r\\n  QueueOptimizer.prototype = {\\r\\n    optimize: function QueueOptimizer_optimize(queue) {\\r\\n      var fnArray = queue.fnArray,\\r\\n          argsArray = queue.argsArray;\\r\\n      var context = {\\r\\n        iCurr: 0,\\r\\n        fnArray: fnArray,\\r\\n        argsArray: argsArray\\r\\n      };\\r\\n      var state;\\r\\n      var i = 0,\\r\\n          ii = fnArray.length;\\r\\n      while (i < ii) {\\r\\n        state = (state || InitialState)[fnArray[i]];\\r\\n        if (typeof state === 'function') {\\r\\n          context.iCurr = i;\\r\\n          i = state(context);\\r\\n          state = undefined;\\r\\n          ii = context.fnArray.length;\\r\\n        } else {\\r\\n          i++;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return QueueOptimizer;\\r\\n}();\\r\\nexports.OperatorList = OperatorList;\\r\\nexports.PartialEvaluator = PartialEvaluator;\\r\\n\\r\\n/***/ }),\\r\\n/* 84 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _charsets = __w_pdfjs_require__(150);\\r\\n\\r\\nvar _encodings = __w_pdfjs_require__(30);\\r\\n\\r\\nvar MAX_SUBR_NESTING = 10;\\r\\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', '\";a.a+=\"Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\\r\\nvar CFFParser = function CFFParserClosure() {\\r\\n  var CharstringValidationData = [null, {\\r\\n    id: 'hstem',\\r\\n    min: 2,\\r\\n    stackClearing: true,\\r\\n    stem: true\\r\\n  }, null, {\\r\\n    id: 'vstem',\\r\\n    min: 2,\\r\\n    stackClearing: true,\\r\\n    stem: true\\r\\n  }, {\\r\\n    id: 'vmoveto',\\r\\n    min: 1,\\r\\n    stackClearing: true\\r\\n  }, {\\r\\n    id: 'rlineto',\\r\\n    min: 2,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'hlineto',\\r\\n    min: 1,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'vlineto',\\r\\n    min: 1,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'rrcurveto',\\r\\n    min: 6,\\r\\n    resetStack: true\\r\\n  }, null, {\\r\\n    id: 'callsubr',\\r\\n    min: 1,\\r\\n    undefStack: true\\r\\n  }, {\\r\\n    id: 'return',\\r\\n    min: 0,\\r\\n    undefStack: true\\r\\n  }, null, null, {\\r\\n    id: 'endchar',\\r\\n    min: 0,\\r\\n    stackClearing: true\\r\\n  }, null, null, null, {\\r\\n    id: 'hstemhm',\\r\\n    min: 2,\\r\\n    stackClearing: true,\\r\\n    stem: true\\r\\n  }, {\\r\\n    id: 'hintmask',\\r\\n    min: 0,\\r\\n    stackClearing: true\\r\\n  }, {\\r\\n    id: 'cntrmask',\\r\\n    min: 0,\\r\\n    stackClearing: true\\r\\n  }, {\\r\\n    id: 'rmoveto',\\r\\n    min: 2,\\r\\n    stackClearing: true\\r\\n  }, {\\r\\n    id: 'hmoveto',\\r\\n    min: 1,\\r\\n    stackClearing: true\\r\\n  }, {\\r\\n    id: 'vstemhm',\\r\\n    min: 2,\\r\\n    stackClearing: true,\\r\\n    stem: true\\r\\n  }, {\\r\\n    id: 'rcurveline',\\r\\n    min: 8,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'rlinecurve',\\r\\n    min: 8,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'vvcurveto',\\r\\n    min: 4,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'hhcurveto',\\r\\n    min: 4,\\r\\n    resetStack: true\\r\\n  }, null, {\\r\\n    id: 'callgsubr',\\r\\n    min: 1,\\r\\n    undefStack: true\\r\\n  }, {\\r\\n    id: 'vhcurveto',\\r\\n    min: 4,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'hvcurveto',\\r\\n    min: 4,\\r\\n    resetStack: true\\r\\n  }];\\r\\n  var CharstringValidationData12 = [null, null, null, {\\r\\n    id: 'and',\\r\\n    min: 2,\\r\\n    stackDelta: -1\\r\\n  }, {\\r\\n    id: 'or',\\r\\n    min: 2,\\r\\n    stackDelta: -1\\r\\n  }, {\\r\\n    id: 'not',\\r\\n    min: 1,\\r\\n    stackDelta: 0\\r\\n  }, null, null, null, {\\r\\n    id: 'abs',\\r\\n    min: 1,\\r\\n    stackDelta: 0\\r\\n  }, {\\r\\n    id: 'add',\\r\\n    min: 2,\\r\\n    stackDelta: -1,\\r\\n    stackFn: function stack_div(stack, index) {\\r\\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\\r\\n    }\\r\\n  }, {\\r\\n    id: 'sub',\\r\\n    min: 2,\\r\\n    stackDelta: -1,\\r\\n    stackFn: function stack_div(stack, index) {\\r\\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\\r\\n    }\\r\\n  }, {\\r\\n    id: 'div',\\r\\n    min: 2,\\r\\n    stackDelta: -1,\\r\\n    stackFn: function stack_div(stack, index) {\\r\\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\\r\\n    }\\r\\n  }, null, {\\r\\n    id: 'neg',\\r\\n    min: 1,\\r\\n    stackDelta: 0,\\r\\n    stackFn: function stack_div(stack, index) {\\r\\n      stack[index - 1] = -stack[index - 1];\\r\\n    }\\r\\n  }, {\\r\\n    id: 'eq',\\r\\n    min: 2,\\r\\n    stackDelta: -1\\r\\n  }, null, null, {\\r\\n    id: 'drop',\\r\\n    min: 1,\\r\\n    stackDelta: -1\\r\\n  }, null, {\\r\\n    id: 'put',\\r\\n    min: 2,\\r\\n    stackDelta: -2\\r\\n  }, {\\r\\n    id: 'get',\\r\\n    min: 1,\\r\\n    stackDelta: 0\\r\\n  }, {\\r\\n    id: 'ifelse',\\r\\n    min: 4,\\r\\n    stackDelta: -3\\r\\n  }, {\\r\\n    id: 'random',\\r\\n    min: 0,\\r\\n    stackDelta: 1\\r\\n  }, {\\r\\n    id: 'mul',\\r\\n    min: 2,\\r\\n    stackDelta: -1,\\r\\n    stackFn: function stack_div(stack, index) {\\r\\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\\r\\n    }\\r\\n  }, null, {\\r\\n    id: 'sqrt',\\r\\n    min: 1,\\r\\n    stackDelta: 0\\r\\n  }, {\\r\\n    id: 'dup',\\r\\n    min: 1,\\r\\n    stackDelta: 1\\r\\n  }, {\\r\\n    id: 'exch',\\r\\n    min: 2,\\r\\n    stackDelta: 0\\r\\n  }, {\\r\\n    id: 'index',\\r\\n    min: 2,\\r\\n    stackDelta: 0\\r\\n  }, {\\r\\n    id: 'roll',\\r\\n    min: 3,\\r\\n    stackDelta: -2\\r\\n  }, null, null, null, {\\r\\n    id: 'hflex',\\r\\n    min: 7,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'flex',\\r\\n    min: 13,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'hflex1',\\r\\n    min: 9,\\r\\n    resetStack: true\\r\\n  }, {\\r\\n    id: 'flex1',\\r\\n    min: 11,\\r\\n    resetStack: true\\r\\n  }];\\r\\n  function CFFParser(file, properties, seacAnalysisEnabled) {\\r\\n    this.bytes = file.getBytes();\\r\\n    this.properties = properties;\\r\\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\r\\n  }\\r\\n  CFFParser.prototype = {\\r\\n    parse: function CFFParser_parse() {\\r\\n      var properties = this.properties;\\r\\n      var cff = new CFF();\\r\\n      this.cff = cff;\\r\\n      var header = this.parseHeader();\\r\\n      var nameIndex = this.parseIndex(header.endPos);\\r\\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\\r\\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\\r\\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\\r\\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\\r\\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\\r\\n      cff.header = header.obj;\\r\\n      cff.names = this.parseNameIndex(nameIndex.obj);\\r\\n      cff.strings = this.parseStringIndex(stringIndex.obj);\\r\\n      cff.topDict = topDict;\\r\\n      cff.globalSubrIndex = globalSubrIndex.obj;\\r\\n      this.parsePrivateDict(cff.topDict);\\r\\n      cff.isCIDFont = topDict.hasName('ROS');\\r\\n      var charStringOffset = topDict.getByName('CharStrings');\\r\\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\\r\\n      var fontMatrix = topDict.getByName('FontMatrix');\\r\\n      if (fontMatrix) {\\r\\n        properties.fontMatrix = fontMatrix;\\r\\n      }\\r\\n      var fontBBox = topDict.getByName('FontBBox');\\r\\n      if (fontBBox) {\\r\\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\r\\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\r\\n        properties.ascentScaled = true;\\r\\n      }\\r\\n      var charset, encoding;\\r\\n      if (cff.isCIDFont) {\\r\\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\\r\\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\\r\\n          var dictRaw = fdArrayIndex.get(i);\\r\\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\\r\\n          this.parsePrivateDict(fontDict);\\r\\n          cff.fdArray.push(fontDict);\\r\\n        }\\r\\n        encoding = null;\\r\\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\\r\\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\\r\\n      } else {\\r\\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\\r\\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\\r\\n      }\\r\\n      cff.charset = charset;\\r\\n      cff.encoding = encoding;\\r\\n      var charStringsAndSeacs = this.parseCharStrings({\\r\\n        charStrings: charStringIndex,\\r\\n        localSubrIndex: topDict.privateDict.subrsIndex,\\r\\n        globalSubrIndex: globalSubrIndex.obj,\\r\\n        fdSelect: cff.fdSelect,\\r\\n        fdArray: cff.fdArray,\\r\\n        privateDict: topDict.privateDict\\r\\n      });\\r\\n      cff.charStrings = charStringsAndSeacs.charStrings;\\r\\n      cff.seacs = charStringsAndSeacs.seacs;\\r\\n      cff.widths = charStringsAndSeacs.widths;\\r\\n      return cff;\\r\\n    },\\r\\n    parseHeader: function CFFParser_parseHeader() {\\r\\n      var bytes = this.bytes;\\r\\n      var bytesLength = bytes.length;\\r\\n      var offset = 0;\\r\\n      while (offset < bytesLength && bytes[offset] !== 1) {\\r\\n        ++offset;\\r\\n      }\\r\\n      if (offset >= bytesLength) {\\r\\n        throw new _util.FormatError('Invalid CFF header');\\r\\n      }\\r\\n      if (offset !== 0) {\\r\\n        (0, _util.info)('cff data is shifted');\\r\\n        bytes = bytes.subarray(offset);\\r\\n        this.bytes = bytes;\\r\\n      }\\r\\n      var major = bytes[0];\\r\\n      var minor = bytes[1];\\r\\n      var hdrSize = bytes[2];\\r\\n      var offSize = bytes[3];\\r\\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\\r\\n      return {\\r\\n        obj: header,\\r\\n        endPos: hdrSize\\r\\n      };\\r\\n    },\\r\\n    parseDict: function CFFParser_parseDict(dict) {\\r\\n      var pos = 0;\\r\\n      function parseOperand() {\\r\\n        var value = dict[pos++];\\r\\n        if (value === 30) {\\r\\n          return parseFloatOperand();\\r\\n        } else if (value === 28) {\\r\\n          value = dict[pos++];\\r\\n          value = (value << 24 | dict[pos++] << 16) >> 16;\\r\\n          return value;\\r\\n        } else if (value === 29) {\\r\\n          value = dict[pos++];\\r\\n          value = value << 8 | dict[pos++];\\r\\n          value = value << 8 | dict[pos++];\\r\\n          value = value << 8 | dict[pos++];\\r\\n          return value;\\r\\n        } else if (value >= 32 && value <= 246) {\\r\\n          return value - 139;\\r\\n        } else if (value >= 247 && value <= 250) {\\r\\n          return (value - 247) * 256 + dict[pos++] + 108;\\r\\n        } else if (value >= 251 && value <= 254) {\\r\\n          return -((value - 251) * 256) - dict[pos++] - 108;\\r\\n        }\\r\\n        (0, _util.warn)('CFFParser_parseDict: \\\"' + value + '\\\" is a reserved command.');\\r\\n        return NaN;\\r\\n      }\\r\\n      function parseFloatOperand() {\\r\\n        var str = '';\\r\\n        var eof = 15;\\r\\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\\r\\n        var length = dict.length;\\r\\n        while (pos < length) {\\r\\n          var b = dict[pos++];\\r\\n          var b1 = b >> 4;\\r\\n          var b2 = b & 15;\\r\\n          if (b1 === eof) {\\r\\n            break;\\r\\n          }\\r\\n          str += lookup[b1];\\r\\n          if (b2 === eof) {\\r\\n            break;\\r\\n          }\\r\\n          str += lookup[b2];\\r\\n        }\\r\\n        return parseFloat(str);\\r\\n      }\\r\\n      var operands = [];\\r\\n      var entries = [];\\r\\n      pos = 0;\\r\\n      var end = dict.length;\\r\\n      while (pos < end) {\\r\\n        var b = dict[pos];\\r\\n        if (b <= 21) {\\r\\n          if (b === 12) {\\r\\n            b = b << 8 | dict[++pos];\\r\\n          }\\r\\n          entries.push([b, operands]);\\r\\n          operands = [];\\r\\n          ++pos;\\r\\n        } else {\\r\\n          operands.push(parseOperand());\\r\\n        }\\r\\n      }\\r\\n      return entries;\\r\\n    },\\r\\n    parseIndex: function CFFParser_parseIndex(pos) {\\r\\n      var cffIndex = new CFFIndex();\\r\\n      var bytes = this.bytes;\\r\\n      var count = bytes[pos++] << 8 | bytes[pos++];\\r\\n      var offsets = [];\\r\\n      var end = pos;\\r\\n      var i, ii;\\r\\n      if (count !== 0) {\\r\\n        var offsetSize = bytes[pos++];\\r\\n        var startPos = pos + (count + 1) * offsetSize - 1;\\r\\n        for (i = 0, ii = count + 1; i < ii; ++i) {\\r\\n          var offset = 0;\\r\\n          for (var j = 0; j < offsetSize; ++j) {\\r\\n            offset <<= 8;\\r\\n            offset += bytes[pos++];\\r\\n          }\\r\\n          offsets.push(startPos + offset);\\r\\n        }\\r\\n        end = offsets[count];\\r\\n      }\\r\\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\\r\\n        var offsetStart = offsets[i];\\r\\n        var offsetEnd = offsets[i + 1];\\r\\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\\r\\n      }\\r\\n      return {\\r\\n        obj: cffIndex,\\r\\n        endPos: end\\r\\n      };\\r\\n    },\\r\\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\\r\\n      var names = [];\\r\\n      for (var i = 0, ii = index.count; i < ii; ++i) {\\r\\n        var name = index.get(i);\\r\\n        names.push((0, _util.bytesToString)(name));\\r\\n      }\\r\\n      return names;\\r\\n    },\\r\\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\\r\\n      var strings = new CFFStrings();\\r\\n      for (var i = 0, ii = index.count; i < ii; ++i) {\\r\\n        var data = index.get(i);\\r\\n        strings.add((0, _util.bytesToString)(data));\\r\\n      }\\r\\n      return strings;\\r\\n    },\\r\\n    createDict: function CFFParser_createDict(Type, dict, strings) {\\r\\n      var cffDict = new Type(strings);\\r\\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\\r\\n        var pair = dict[i];\\r\\n        var key = pair[0];\\r\\n        var value = pair[1];\\r\\n        cffDict.setByKey(key, value);\\r\\n      }\\r\\n      return cffDict;\\r\\n    },\\r\\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\\r\\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\\r\\n        return false;\\r\\n      }\\r\\n      var stackSize = state.stackSize;\\r\\n      var stack = state.stack;\\r\\n      var length = data.length;\\r\\n      for (var j = 0; j < length;) {\\r\\n        var value = data[j++];\\r\\n        var validationCommand = null;\\r\\n        if (value === 12) {\\r\\n          var q = data[j++];\\r\\n          if (q === 0) {\\r\\n            data[j - 2] = 139;\\r\\n            data[j - 1] = 22;\\r\\n            stackSize = 0;\\r\\n          } else {\\r\\n            validationCommand = CharstringValidationData12[q];\\r\\n          }\\r\\n        } else if (value === 28) {\\r\\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\\r\\n          j += 2;\\r\\n          stackSize++;\\r\\n        } else if (value === 14) {\\r\\n          if (stackSize >= 4) {\\r\\n            stackSize -= 4;\\r\\n            if (this.seacAnalysisEnabled) {\\r\\n              state.seac = stack.slice(stackSize, stackSize + 4);\\r\\n              return false;\\r\\n            }\\r\\n          }\\r\\n          validationCommand = CharstringValidationData[value];\\r\\n        } else if (value >= 32 && value <= 246) {\\r\\n          stack[stackSize] = value - 139;\\r\\n          stackSize++;\\r\\n        } else if (value >= 247 && value <= 254) {\\r\\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\\r\\n          j++;\\r\\n          stackSize++;\\r\\n        } else if (value === 255) {\\r\\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\\r\\n          j += 4;\\r\\n          stackSize++;\\r\\n        } else if (value === 19 || value === 20) {\\r\\n          state.hints += stackSize >> 1;\\r\\n          j += state.hints + 7 >> 3;\\r\\n        \";a.a+=\"  stackSize %= 2;\\r\\n          validationCommand = CharstringValidationData[value];\\r\\n        } else if (value === 10 || value === 29) {\\r\\n          var subrsIndex;\\r\\n          if (value === 10) {\\r\\n            subrsIndex = localSubrIndex;\\r\\n          } else {\\r\\n            subrsIndex = globalSubrIndex;\\r\\n          }\\r\\n          if (!subrsIndex) {\\r\\n            validationCommand = CharstringValidationData[value];\\r\\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\\r\\n            return false;\\r\\n          }\\r\\n          var bias = 32768;\\r\\n          if (subrsIndex.count < 1240) {\\r\\n            bias = 107;\\r\\n          } else if (subrsIndex.count < 33900) {\\r\\n            bias = 1131;\\r\\n          }\\r\\n          var subrNumber = stack[--stackSize] + bias;\\r\\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\\r\\n            validationCommand = CharstringValidationData[value];\\r\\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\\r\\n            return false;\\r\\n          }\\r\\n          state.stackSize = stackSize;\\r\\n          state.callDepth++;\\r\\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\\r\\n          if (!valid) {\\r\\n            return false;\\r\\n          }\\r\\n          state.callDepth--;\\r\\n          stackSize = state.stackSize;\\r\\n          continue;\\r\\n        } else if (value === 11) {\\r\\n          state.stackSize = stackSize;\\r\\n          return true;\\r\\n        } else {\\r\\n          validationCommand = CharstringValidationData[value];\\r\\n        }\\r\\n        if (validationCommand) {\\r\\n          if (validationCommand.stem) {\\r\\n            state.hints += stackSize >> 1;\\r\\n          }\\r\\n          if ('min' in validationCommand) {\\r\\n            if (!state.undefStack && stackSize < validationCommand.min) {\\r\\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\\r\\n              return false;\\r\\n            }\\r\\n          }\\r\\n          if (state.firstStackClearing && validationCommand.stackClearing) {\\r\\n            state.firstStackClearing = false;\\r\\n            stackSize -= validationCommand.min;\\r\\n            if (stackSize >= 2 && validationCommand.stem) {\\r\\n              stackSize %= 2;\\r\\n            } else if (stackSize > 1) {\\r\\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\\r\\n            }\\r\\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\\r\\n              state.width = stack[stackSize - 1];\\r\\n            }\\r\\n          }\\r\\n          if ('stackDelta' in validationCommand) {\\r\\n            if ('stackFn' in validationCommand) {\\r\\n              validationCommand.stackFn(stack, stackSize);\\r\\n            }\\r\\n            stackSize += validationCommand.stackDelta;\\r\\n          } else if (validationCommand.stackClearing) {\\r\\n            stackSize = 0;\\r\\n          } else if (validationCommand.resetStack) {\\r\\n            stackSize = 0;\\r\\n            state.undefStack = false;\\r\\n          } else if (validationCommand.undefStack) {\\r\\n            stackSize = 0;\\r\\n            state.undefStack = true;\\r\\n            state.firstStackClearing = false;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      state.stackSize = stackSize;\\r\\n      return true;\\r\\n    },\\r\\n    parseCharStrings: function parseCharStrings(_ref) {\\r\\n      var charStrings = _ref.charStrings,\\r\\n          localSubrIndex = _ref.localSubrIndex,\\r\\n          globalSubrIndex = _ref.globalSubrIndex,\\r\\n          fdSelect = _ref.fdSelect,\\r\\n          fdArray = _ref.fdArray,\\r\\n          privateDict = _ref.privateDict;\\r\\n\\r\\n      var seacs = [];\\r\\n      var widths = [];\\r\\n      var count = charStrings.count;\\r\\n      for (var i = 0; i < count; i++) {\\r\\n        var charstring = charStrings.get(i);\\r\\n        var state = {\\r\\n          callDepth: 0,\\r\\n          stackSize: 0,\\r\\n          stack: [],\\r\\n          undefStack: true,\\r\\n          hints: 0,\\r\\n          firstStackClearing: true,\\r\\n          seac: null,\\r\\n          width: null\\r\\n        };\\r\\n        var valid = true;\\r\\n        var localSubrToUse = null;\\r\\n        var privateDictToUse = privateDict;\\r\\n        if (fdSelect && fdArray.length) {\\r\\n          var fdIndex = fdSelect.getFDIndex(i);\\r\\n          if (fdIndex === -1) {\\r\\n            (0, _util.warn)('Glyph index is not in fd select.');\\r\\n            valid = false;\\r\\n          }\\r\\n          if (fdIndex >= fdArray.length) {\\r\\n            (0, _util.warn)('Invalid fd index for glyph index.');\\r\\n            valid = false;\\r\\n          }\\r\\n          if (valid) {\\r\\n            privateDictToUse = fdArray[fdIndex].privateDict;\\r\\n            localSubrToUse = privateDictToUse.subrsIndex;\\r\\n          }\\r\\n        } else if (localSubrIndex) {\\r\\n          localSubrToUse = localSubrIndex;\\r\\n        }\\r\\n        if (valid) {\\r\\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\\r\\n        }\\r\\n        if (state.width !== null) {\\r\\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\\r\\n          widths[i] = nominalWidth + state.width;\\r\\n        } else {\\r\\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\\r\\n          widths[i] = defaultWidth;\\r\\n        }\\r\\n        if (state.seac !== null) {\\r\\n          seacs[i] = state.seac;\\r\\n        }\\r\\n        if (!valid) {\\r\\n          charStrings.set(i, new Uint8Array([14]));\\r\\n        }\\r\\n      }\\r\\n      return {\\r\\n        charStrings: charStrings,\\r\\n        seacs: seacs,\\r\\n        widths: widths\\r\\n      };\\r\\n    },\\r\\n\\r\\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\\r\\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\\r\\n      parentDict.setByKey(18, [0, 0]);\\r\\n      parentDict.privateDict = privateDict;\\r\\n    },\\r\\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\\r\\n      if (!parentDict.hasName('Private')) {\\r\\n        this.emptyPrivateDictionary(parentDict);\\r\\n        return;\\r\\n      }\\r\\n      var privateOffset = parentDict.getByName('Private');\\r\\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\\r\\n        parentDict.removeByName('Private');\\r\\n        return;\\r\\n      }\\r\\n      var size = privateOffset[0];\\r\\n      var offset = privateOffset[1];\\r\\n      if (size === 0 || offset >= this.bytes.length) {\\r\\n        this.emptyPrivateDictionary(parentDict);\\r\\n        return;\\r\\n      }\\r\\n      var privateDictEnd = offset + size;\\r\\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\\r\\n      var dict = this.parseDict(dictData);\\r\\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\\r\\n      parentDict.privateDict = privateDict;\\r\\n      if (!privateDict.getByName('Subrs')) {\\r\\n        return;\\r\\n      }\\r\\n      var subrsOffset = privateDict.getByName('Subrs');\\r\\n      var relativeOffset = offset + subrsOffset;\\r\\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\\r\\n        this.emptyPrivateDictionary(parentDict);\\r\\n        return;\\r\\n      }\\r\\n      var subrsIndex = this.parseIndex(relativeOffset);\\r\\n      privateDict.subrsIndex = subrsIndex.obj;\\r\\n    },\\r\\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\\r\\n      if (pos === 0) {\\r\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\\r\\n      } else if (pos === 1) {\\r\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\\r\\n      } else if (pos === 2) {\\r\\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\\r\\n      }\\r\\n      var bytes = this.bytes;\\r\\n      var start = pos;\\r\\n      var format = bytes[pos++];\\r\\n      var charset = ['.notdef'];\\r\\n      var id, count, i;\\r\\n      length -= 1;\\r\\n      switch (format) {\\r\\n        case 0:\\r\\n          for (i = 0; i < length; i++) {\\r\\n            id = bytes[pos++] << 8 | bytes[pos++];\\r\\n            charset.push(cid ? id : strings.get(id));\\r\\n          }\\r\\n          break;\\r\\n        case 1:\\r\\n          while (charset.length <= length) {\\r\\n            id = bytes[pos++] << 8 | bytes[pos++];\\r\\n            count = bytes[pos++];\\r\\n            for (i = 0; i <= count; i++) {\\r\\n              charset.push(cid ? id++ : strings.get(id++));\\r\\n            }\\r\\n          }\\r\\n          break;\\r\\n        case 2:\\r\\n          while (charset.length <= length) {\\r\\n            id = bytes[pos++] << 8 | bytes[pos++];\\r\\n            count = bytes[pos++] << 8 | bytes[pos++];\\r\\n            for (i = 0; i <= count; i++) {\\r\\n              charset.push(cid ? id++ : strings.get(id++));\\r\\n            }\\r\\n          }\\r\\n          break;\\r\\n        default:\\r\\n          throw new _util.FormatError('Unknown charset format');\\r\\n      }\\r\\n      var end = pos;\\r\\n      var raw = bytes.subarray(start, end);\\r\\n      return new CFFCharset(false, format, charset, raw);\\r\\n    },\\r\\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\\r\\n      var encoding = Object.create(null);\\r\\n      var bytes = this.bytes;\\r\\n      var predefined = false;\\r\\n      var format, i, ii;\\r\\n      var raw = null;\\r\\n      function readSupplement() {\\r\\n        var supplementsCount = bytes[pos++];\\r\\n        for (i = 0; i < supplementsCount; i++) {\\r\\n          var code = bytes[pos++];\\r\\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\\r\\n          encoding[code] = charset.indexOf(strings.get(sid));\\r\\n        }\\r\\n      }\\r\\n      if (pos === 0 || pos === 1) {\\r\\n        predefined = true;\\r\\n        format = pos;\\r\\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\\r\\n        for (i = 0, ii = charset.length; i < ii; i++) {\\r\\n          var index = baseEncoding.indexOf(charset[i]);\\r\\n          if (index !== -1) {\\r\\n            encoding[index] = i;\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        var dataStart = pos;\\r\\n        format = bytes[pos++];\\r\\n        switch (format & 0x7f) {\\r\\n          case 0:\\r\\n            var glyphsCount = bytes[pos++];\\r\\n            for (i = 1; i <= glyphsCount; i++) {\\r\\n              encoding[bytes[pos++]] = i;\\r\\n            }\\r\\n            break;\\r\\n          case 1:\\r\\n            var rangesCount = bytes[pos++];\\r\\n            var gid = 1;\\r\\n            for (i = 0; i < rangesCount; i++) {\\r\\n              var start = bytes[pos++];\\r\\n              var left = bytes[pos++];\\r\\n              for (var j = start; j <= start + left; j++) {\\r\\n                encoding[j] = gid++;\\r\\n              }\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\\r\\n        }\\r\\n        var dataEnd = pos;\\r\\n        if (format & 0x80) {\\r\\n          bytes[dataStart] &= 0x7f;\\r\\n          readSupplement();\\r\\n        }\\r\\n        raw = bytes.subarray(dataStart, dataEnd);\\r\\n      }\\r\\n      format = format & 0x7f;\\r\\n      return new CFFEncoding(predefined, format, encoding, raw);\\r\\n    },\\r\\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\\r\\n      var start = pos;\\r\\n      var bytes = this.bytes;\\r\\n      var format = bytes[pos++];\\r\\n      var fdSelect = [],\\r\\n          rawBytes;\\r\\n      var i,\\r\\n          invalidFirstGID = false;\\r\\n      switch (format) {\\r\\n        case 0:\\r\\n          for (i = 0; i < length; ++i) {\\r\\n            var id = bytes[pos++];\\r\\n            fdSelect.push(id);\\r\\n          }\\r\\n          rawBytes = bytes.subarray(start, pos);\\r\\n          break;\\r\\n        case 3:\\r\\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\\r\\n          for (i = 0; i < rangesCount; ++i) {\\r\\n            var first = bytes[pos++] << 8 | bytes[pos++];\\r\\n            if (i === 0 && first !== 0) {\\r\\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\\r\\n              invalidFirstGID = true;\\r\\n              first = 0;\\r\\n            }\\r\\n            var fdIndex = bytes[pos++];\\r\\n            var next = bytes[pos] << 8 | bytes[pos + 1];\\r\\n            for (var j = first; j < next; ++j) {\\r\\n              fdSelect.push(fdIndex);\\r\\n            }\\r\\n          }\\r\\n          pos += 2;\\r\\n          rawBytes = bytes.subarray(start, pos);\\r\\n          if (invalidFirstGID) {\\r\\n            rawBytes[3] = rawBytes[4] = 0;\\r\\n          }\\r\\n          break;\\r\\n        default:\\r\\n          throw new _util.FormatError('parseFDSelect: Unknown format \\\"' + format + '\\\".');\\r\\n      }\\r\\n      if (fdSelect.length !== length) {\\r\\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\\r\\n      }\\r\\n      return new CFFFDSelect(fdSelect, rawBytes);\\r\\n    }\\r\\n  };\\r\\n  return CFFParser;\\r\\n}();\\r\\nvar CFF = function CFFClosure() {\\r\\n  function CFF() {\\r\\n    this.header = null;\\r\\n    this.names = [];\\r\\n    this.topDict = null;\\r\\n    this.strings = new CFFStrings();\\r\\n    this.globalSubrIndex = null;\\r\\n    this.encoding = null;\\r\\n    this.charset = null;\\r\\n    this.charStrings = null;\\r\\n    this.fdArray = [];\\r\\n    this.fdSelect = null;\\r\\n    this.isCIDFont = false;\\r\\n  }\\r\\n  return CFF;\\r\\n}();\\r\\nvar CFFHeader = function CFFHeaderClosure() {\\r\\n  function CFFHeader(major, minor, hdrSize, offSize) {\\r\\n    this.major = major;\\r\\n    this.minor = minor;\\r\\n    this.hdrSize = hdrSize;\\r\\n    this.offSize = offSize;\\r\\n  }\\r\\n  return CFFHeader;\\r\\n}();\\r\\nvar CFFStrings = function CFFStringsClosure() {\\r\\n  function CFFStrings() {\\r\\n    this.strings = [];\\r\\n  }\\r\\n  CFFStrings.prototype = {\\r\\n    get: function CFFStrings_get(index) {\\r\\n      if (index >= 0 && index <= 390) {\\r\\n        return CFFStandardStrings[index];\\r\\n      }\\r\\n      if (index - 391 <= this.strings.length) {\\r\\n        return this.strings[index - 391];\\r\\n      }\\r\\n      return CFFStandardStrings[0];\\r\\n    },\\r\\n    add: function CFFStrings_add(value) {\\r\\n      this.strings.push(value);\\r\\n    },\\r\\n    get count() {\\r\\n      return this.strings.length;\\r\\n    }\\r\\n  };\\r\\n  return CFFStrings;\\r\\n}();\\r\\nvar CFFIndex = function CFFIndexClosure() {\\r\\n  function CFFIndex() {\\r\\n    this.objects = [];\\r\\n    this.length = 0;\\r\\n  }\\r\\n  CFFIndex.prototype = {\\r\\n    add: function CFFIndex_add(data) {\\r\\n      this.length += data.length;\\r\\n      this.objects.push(data);\\r\\n    },\\r\\n    set: function CFFIndex_set(index, data) {\\r\\n      this.length += data.length - this.objects[index].length;\\r\\n      this.objects[index] = data;\\r\\n    },\\r\\n    get: function CFFIndex_get(index) {\\r\\n      return this.objects[index];\\r\\n    },\\r\\n    get count() {\\r\\n      return this.objects.length;\\r\\n    }\\r\\n  };\\r\\n  return CFFIndex;\\r\\n}();\\r\\nvar CFFDict = function CFFDictClosure() {\\r\\n  function CFFDict(tables, strings) {\\r\\n    this.keyToNameMap = tables.keyToNameMap;\\r\\n    this.nameToKeyMap = tables.nameToKeyMap;\\r\\n    this.defaults = tables.defaults;\\r\\n    this.types = tables.types;\\r\\n    this.opcodes = tables.opcodes;\\r\\n    this.order = tables.order;\\r\\n    this.strings = strings;\\r\\n    this.values = Object.create(null);\\r\\n  }\\r\\n  CFFDict.prototype = {\\r\\n    setByKey: function CFFDict_setByKey(key, value) {\\r\\n      if (!(key in this.keyToNameMap)) {\\r\\n        return false;\\r\\n      }\\r\\n      var valueLength = value.length;\\r\\n      if (valueLength === 0) {\\r\\n        return true;\\r\\n      }\\r\\n      for (var i = 0; i < valueLength; i++) {\\r\\n        if (isNaN(value[i])) {\\r\\n          (0, _util.warn)('Invalid CFFDict value: \\\"' + value + '\\\" for key \\\"' + key + '\\\".');\\r\\n          return true;\\r\\n        }\\r\\n      }\\r\\n      var type = this.types[key];\\r\\n      if (type === 'num' || type === 'sid' || type === 'offset') {\\r\\n        value = value[0];\\r\\n      }\\r\\n      this.values[key] = value;\\r\\n      return true;\\r\\n    },\\r\\n    setByName: function CFFDict_setByName(name, value) {\\r\\n      if (!(name in this.nameToKeyMap)) {\\r\\n        throw new _util.FormatError('Invalid dictionary name \\\"' + name + '\\\"');\\r\\n      }\\r\\n      this.values[this.nameToKeyMap[name]] = value;\\r\\n    },\\r\\n    hasName: function CFFDict_hasName(name) {\\r\\n      return this.nameToKeyMap[name] in this.values;\\r\\n    },\\r\\n    getByName: function CFFDict_getByName(name) {\\r\\n      if (!(name in this.nameToKeyMap)) {\\r\\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\\\"');\\r\\n      }\\r\\n      var key = this.nameToKeyMap[name];\\r\\n      if (!(key in this.values)) {\\r\\n        return this.defaults[key];\\r\\n      }\\r\\n      return this.values[key];\\r\\n    },\\r\\n    removeByName: function CFFDict_removeByName(name) {\\r\\n      delete this.values[this.nameToKeyMap[name]];\\r\\n    }\\r\\n  };\\r\\n  CFFDict.createTables = function CFFDict_createTables(layout) {\\r\\n    var tables = {\\r\\n      keyToNameMap: {},\\r\\n      nameToKeyMap: {},\\r\\n      defaults: {},\\r\\n      types: {},\\r\\n      opcodes\";a.a+=\": {},\\r\\n      order: []\\r\\n    };\\r\\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\\r\\n      var entry = layout[i];\\r\\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\\r\\n      tables.keyToNameMap[key] = entry[1];\\r\\n      tables.nameToKeyMap[entry[1]] = key;\\r\\n      tables.types[key] = entry[2];\\r\\n      tables.defaults[key] = entry[3];\\r\\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\\r\\n      tables.order.push(key);\\r\\n    }\\r\\n    return tables;\\r\\n  };\\r\\n  return CFFDict;\\r\\n}();\\r\\nvar CFFTopDict = function CFFTopDictClosure() {\\r\\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\\r\\n  var tables = null;\\r\\n  function CFFTopDict(strings) {\\r\\n    if (tables === null) {\\r\\n      tables = CFFDict.createTables(layout);\\r\\n    }\\r\\n    CFFDict.call(this, tables, strings);\\r\\n    this.privateDict = null;\\r\\n  }\\r\\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\\r\\n  return CFFTopDict;\\r\\n}();\\r\\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\\r\\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\\r\\n  var tables = null;\\r\\n  function CFFPrivateDict(strings) {\\r\\n    if (tables === null) {\\r\\n      tables = CFFDict.createTables(layout);\\r\\n    }\\r\\n    CFFDict.call(this, tables, strings);\\r\\n    this.subrsIndex = null;\\r\\n  }\\r\\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\\r\\n  return CFFPrivateDict;\\r\\n}();\\r\\nvar CFFCharsetPredefinedTypes = {\\r\\n  ISO_ADOBE: 0,\\r\\n  EXPERT: 1,\\r\\n  EXPERT_SUBSET: 2\\r\\n};\\r\\nvar CFFCharset = function CFFCharsetClosure() {\\r\\n  function CFFCharset(predefined, format, charset, raw) {\\r\\n    this.predefined = predefined;\\r\\n    this.format = format;\\r\\n    this.charset = charset;\\r\\n    this.raw = raw;\\r\\n  }\\r\\n  return CFFCharset;\\r\\n}();\\r\\nvar CFFEncoding = function CFFEncodingClosure() {\\r\\n  function CFFEncoding(predefined, format, encoding, raw) {\\r\\n    this.predefined = predefined;\\r\\n    this.format = format;\\r\\n    this.encoding = encoding;\\r\\n    this.raw = raw;\\r\\n  }\\r\\n  return CFFEncoding;\\r\\n}();\\r\\nvar CFFFDSelect = function CFFFDSelectClosure() {\\r\\n  function CFFFDSelect(fdSelect, raw) {\\r\\n    this.fdSelect = fdSelect;\\r\\n    this.raw = raw;\\r\\n  }\\r\\n  CFFFDSelect.prototype = {\\r\\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\\r\\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\\r\\n        return -1;\\r\\n      }\\r\\n      return this.fdSelect[glyphIndex];\\r\\n    }\\r\\n  };\\r\\n  return CFFFDSelect;\\r\\n}();\\r\\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\\r\\n  function CFFOffsetTracker() {\\r\\n    this.offsets = Object.create(null);\\r\\n  }\\r\\n  CFFOffsetTracker.prototype = {\\r\\n    isTracking: function CFFOffsetTracker_isTracking(key) {\\r\\n      return key in this.offsets;\\r\\n    },\\r\\n    track: function CFFOffsetTracker_track(key, location) {\\r\\n      if (key in this.offsets) {\\r\\n        throw new _util.FormatError('Already tracking location of ' + key);\\r\\n      }\\r\\n      this.offsets[key] = location;\\r\\n    },\\r\\n    offset: function CFFOffsetTracker_offset(value) {\\r\\n      for (var key in this.offsets) {\\r\\n        this.offsets[key] += value;\\r\\n      }\\r\\n    },\\r\\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\\r\\n      if (!(key in this.offsets)) {\\r\\n        throw new _util.FormatError('Not tracking location of ' + key);\\r\\n      }\\r\\n      var data = output.data;\\r\\n      var dataOffset = this.offsets[key];\\r\\n      var size = 5;\\r\\n      for (var i = 0, ii = values.length; i < ii; ++i) {\\r\\n        var offset0 = i * size + dataOffset;\\r\\n        var offset1 = offset0 + 1;\\r\\n        var offset2 = offset0 + 2;\\r\\n        var offset3 = offset0 + 3;\\r\\n        var offset4 = offset0 + 4;\\r\\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\\r\\n          throw new _util.FormatError('writing to an offset that is not empty');\\r\\n        }\\r\\n        var value = values[i];\\r\\n        data[offset0] = 0x1d;\\r\\n        data[offset1] = value >> 24 & 0xFF;\\r\\n        data[offset2] = value >> 16 & 0xFF;\\r\\n        data[offset3] = value >> 8 & 0xFF;\\r\\n        data[offset4] = value & 0xFF;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return CFFOffsetTracker;\\r\\n}();\\r\\nvar CFFCompiler = function CFFCompilerClosure() {\\r\\n  function CFFCompiler(cff) {\\r\\n    this.cff = cff;\\r\\n  }\\r\\n  CFFCompiler.prototype = {\\r\\n    compile: function CFFCompiler_compile() {\\r\\n      var cff = this.cff;\\r\\n      var output = {\\r\\n        data: [],\\r\\n        length: 0,\\r\\n        add: function CFFCompiler_add(data) {\\r\\n          this.data = this.data.concat(data);\\r\\n          this.length = this.data.length;\\r\\n        }\\r\\n      };\\r\\n      var header = this.compileHeader(cff.header);\\r\\n      output.add(header);\\r\\n      var nameIndex = this.compileNameIndex(cff.names);\\r\\n      output.add(nameIndex);\\r\\n      if (cff.isCIDFont) {\\r\\n        if (cff.topDict.hasName('FontMatrix')) {\\r\\n          var base = cff.topDict.getByName('FontMatrix');\\r\\n          cff.topDict.removeByName('FontMatrix');\\r\\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\\r\\n            var subDict = cff.fdArray[i];\\r\\n            var matrix = base.slice(0);\\r\\n            if (subDict.hasName('FontMatrix')) {\\r\\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\\r\\n            }\\r\\n            subDict.setByName('FontMatrix', matrix);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\\r\\n      output.add(compiled.output);\\r\\n      var topDictTracker = compiled.trackers[0];\\r\\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\\r\\n      output.add(stringIndex);\\r\\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\\r\\n      output.add(globalSubrIndex);\\r\\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\\r\\n        if (cff.encoding.predefined) {\\r\\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\\r\\n        } else {\\r\\n          var encoding = this.compileEncoding(cff.encoding);\\r\\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\\r\\n          output.add(encoding);\\r\\n        }\\r\\n      }\\r\\n      if (cff.charset && cff.topDict.hasName('charset')) {\\r\\n        if (cff.charset.predefined) {\\r\\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\\r\\n        } else {\\r\\n          var charset = this.compileCharset(cff.charset);\\r\\n          topDictTracker.setEntryLocation('charset', [output.length], output);\\r\\n          output.add(charset);\\r\\n        }\\r\\n      }\\r\\n      var charStrings = this.compileCharStrings(cff.charStrings);\\r\\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\\r\\n      output.add(charStrings);\\r\\n      if (cff.isCIDFont) {\\r\\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\\r\\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\\r\\n        output.add(fdSelect);\\r\\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\\r\\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\\r\\n        output.add(compiled.output);\\r\\n        var fontDictTrackers = compiled.trackers;\\r\\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\\r\\n      }\\r\\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\\r\\n      output.add([0]);\\r\\n      return output.data;\\r\\n    },\\r\\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\\r\\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\\r\\n        return this.encodeInteger(value);\\r\\n      }\\r\\n      return this.encodeFloat(value);\\r\\n    },\\r\\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\\r\\n      var value = num.toString();\\r\\n      var m = /\\\\.(\\\\d*?)(?:9{5,20}|0{5,20})\\\\d{0,2}(?:e(.+)|$)/.exec(value);\\r\\n      if (m) {\\r\\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\\r\\n        value = (Math.round(num * epsilon) / epsilon).toString();\\r\\n      }\\r\\n      var nibbles = '';\\r\\n      var i, ii;\\r\\n      for (i = 0, ii = value.length; i < ii; ++i) {\\r\\n        var a = value[i];\\r\\n        if (a === 'e') {\\r\\n          nibbles += value[++i] === '-' ? 'c' : 'b';\\r\\n        } else if (a === '.') {\\r\\n          nibbles += 'a';\\r\\n        } else if (a === '-') {\\r\\n          nibbles += 'e';\\r\\n        } else {\\r\\n          nibbles += a;\\r\\n        }\\r\\n      }\\r\\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\\r\\n      var out = [30];\\r\\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\\r\\n        out.push(parseInt(nibbles.substr(i, 2), 16));\\r\\n      }\\r\\n      return out;\\r\\n    },\\r\\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\\r\\n      var code;\\r\\n      if (value >= -107 && value <= 107) {\\r\\n        code = [value + 139];\\r\\n      } else if (value >= 108 && value <= 1131) {\\r\\n        value = value - 108;\\r\\n        code = [(value >> 8) + 247, value & 0xFF];\\r\\n      } else if (value >= -1131 && value <= -108) {\\r\\n        value = -value - 108;\\r\\n        code = [(value >> 8) + 251, value & 0xFF];\\r\\n      } else if (value >= -32768 && value <= 32767) {\\r\\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\\r\\n      } else {\\r\\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\\r\\n      }\\r\\n      return code;\\r\\n    },\\r\\n    compileHeader: function CFFCompiler_compileHeader(header) {\\r\\n      return [header.major, header.minor, header.hdrSize, header.offSize];\\r\\n    },\\r\\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\\r\\n      var nameIndex = new CFFIndex();\\r\\n      for (var i = 0, ii = names.length; i < ii; ++i) {\\r\\n        var name = names[i];\\r\\n        var length = Math.min(name.length, 127);\\r\\n        var sanitizedName = new Array(length);\\r\\n        for (var j = 0; j < length; j++) {\\r\\n          var char = name[j];\\r\\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\\r\\n            char = '_';\\r\\n          }\\r\\n          sanitizedName[j] = char;\\r\\n        }\\r\\n        sanitizedName = sanitizedName.join('');\\r\\n        if (sanitizedName === '') {\\r\\n          sanitizedName = 'Bad_Font_Name';\\r\\n        }\\r\\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\\r\\n      }\\r\\n      return this.compileIndex(nameIndex);\\r\\n    },\\r\\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\\r\\n      var fontDictTrackers = [];\\r\\n      var fdArrayIndex = new CFFIndex();\\r\\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\\r\\n        var fontDict = dicts[i];\\r\\n        if (removeCidKeys) {\\r\\n          fontDict.removeByName('CIDFontVersion');\\r\\n          fontDict.removeByName('CIDFontRevision');\\r\\n          fontDict.removeByName('CIDFontType');\\r\\n          fontDict.removeByName('CIDCount');\\r\\n          fontDict.removeByName('UIDBase');\\r\\n        }\\r\\n        var fontDictTracker = new CFFOffsetTracker();\\r\\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\\r\\n        fontDictTrackers.push(fontDictTracker);\\r\\n        fdArrayIndex.add(fontDictData);\\r\\n        fontDictTracker.offset(length);\\r\\n      }\\r\\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\\r\\n      return {\\r\\n        trackers: fontDictTrackers,\\r\\n        output: fdArrayIndex\\r\\n      };\\r\\n    },\\r\\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\\r\\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\\r\\n        var fontDict = dicts[i];\\r\\n        var privateDict = fontDict.privateDict;\\r\\n        if (!privateDict || !fontDict.hasName('Private')) {\\r\\n          throw new _util.FormatError('There must be a private dictionary.');\\r\\n        }\\r\\n        var privateDictTracker = new CFFOffsetTracker();\\r\\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\\r\\n        var outputLength = output.length;\\r\\n        privateDictTracker.offset(outputLength);\\r\\n        if (!privateDictData.length) {\\r\\n          outputLength = 0;\\r\\n        }\\r\\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\\r\\n        output.add(privateDictData);\\r\\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\\r\\n          var subrs = this.compileIndex(privateDict.subrsIndex);\\r\\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\\r\\n          output.add(subrs);\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\\r\\n      var out = [];\\r\\n      var order = dict.order;\\r\\n      for (var i = 0; i < order.length; ++i) {\\r\\n        var key = order[i];\\r\\n        if (!(key in dict.values)) {\\r\\n          continue;\\r\\n        }\\r\\n        var values = dict.values[key];\\r\\n        var types = dict.types[key];\\r\\n        if (!Array.isArray(types)) {\\r\\n          types = [types];\\r\\n        }\\r\\n        if (!Array.isArray(values)) {\\r\\n          values = [values];\\r\\n        }\\r\\n        if (values.length === 0) {\\r\\n          continue;\\r\\n        }\\r\\n        for (var j = 0, jj = types.length; j < jj; ++j) {\\r\\n          var type = types[j];\\r\\n          var value = values[j];\\r\\n          switch (type) {\\r\\n            case 'num':\\r\\n            case 'sid':\\r\\n              out = out.concat(this.encodeNumber(value));\\r\\n              break;\\r\\n            case 'offset':\\r\\n              var name = dict.keyToNameMap[key];\\r\\n              if (!offsetTracker.isTracking(name)) {\\r\\n                offsetTracker.track(name, out.length);\\r\\n              }\\r\\n              out = out.concat([0x1d, 0, 0, 0, 0]);\\r\\n              break;\\r\\n            case 'array':\\r\\n            case 'delta':\\r\\n              out = out.concat(this.encodeNumber(value));\\r\\n              for (var k = 1, kk = values.length; k < kk; ++k) {\\r\\n                out = out.concat(this.encodeNumber(values[k]));\\r\\n              }\\r\\n              break;\\r\\n            default:\\r\\n              throw new _util.FormatError('Unknown data type of ' + type);\\r\\n          }\\r\\n        }\\r\\n        out = out.concat(dict.opcodes[key]);\\r\\n      }\\r\\n      return out;\\r\\n    },\\r\\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\\r\\n      var stringIndex = new CFFIndex();\\r\\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\\r\\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\\r\\n      }\\r\\n      return this.compileIndex(stringIndex);\\r\\n    },\\r\\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\\r\\n      var globalSubrIndex = this.cff.globalSubrIndex;\\r\\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\\r\\n  \";a.a+=\"  },\\r\\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\\r\\n      return this.compileIndex(charStrings);\\r\\n    },\\r\\n    compileCharset: function CFFCompiler_compileCharset(charset) {\\r\\n      return this.compileTypedArray(charset.raw);\\r\\n    },\\r\\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\\r\\n      return this.compileTypedArray(encoding.raw);\\r\\n    },\\r\\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\\r\\n      return this.compileTypedArray(fdSelect);\\r\\n    },\\r\\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\\r\\n      var out = [];\\r\\n      for (var i = 0, ii = data.length; i < ii; ++i) {\\r\\n        out[i] = data[i];\\r\\n      }\\r\\n      return out;\\r\\n    },\\r\\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\\r\\n      trackers = trackers || [];\\r\\n      var objects = index.objects;\\r\\n      var count = objects.length;\\r\\n      if (count === 0) {\\r\\n        return [0, 0, 0];\\r\\n      }\\r\\n      var data = [count >> 8 & 0xFF, count & 0xff];\\r\\n      var lastOffset = 1,\\r\\n          i;\\r\\n      for (i = 0; i < count; ++i) {\\r\\n        lastOffset += objects[i].length;\\r\\n      }\\r\\n      var offsetSize;\\r\\n      if (lastOffset < 0x100) {\\r\\n        offsetSize = 1;\\r\\n      } else if (lastOffset < 0x10000) {\\r\\n        offsetSize = 2;\\r\\n      } else if (lastOffset < 0x1000000) {\\r\\n        offsetSize = 3;\\r\\n      } else {\\r\\n        offsetSize = 4;\\r\\n      }\\r\\n      data.push(offsetSize);\\r\\n      var relativeOffset = 1;\\r\\n      for (i = 0; i < count + 1; i++) {\\r\\n        if (offsetSize === 1) {\\r\\n          data.push(relativeOffset & 0xFF);\\r\\n        } else if (offsetSize === 2) {\\r\\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\r\\n        } else if (offsetSize === 3) {\\r\\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\r\\n        } else {\\r\\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\\r\\n        }\\r\\n        if (objects[i]) {\\r\\n          relativeOffset += objects[i].length;\\r\\n        }\\r\\n      }\\r\\n      for (i = 0; i < count; i++) {\\r\\n        if (trackers[i]) {\\r\\n          trackers[i].offset(data.length);\\r\\n        }\\r\\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\\r\\n          data.push(objects[i][j]);\\r\\n        }\\r\\n      }\\r\\n      return data;\\r\\n    }\\r\\n  };\\r\\n  return CFFCompiler;\\r\\n}();\\r\\nexports.CFFStandardStrings = CFFStandardStrings;\\r\\nexports.CFFParser = CFFParser;\\r\\nexports.CFF = CFF;\\r\\nexports.CFFHeader = CFFHeader;\\r\\nexports.CFFStrings = CFFStrings;\\r\\nexports.CFFIndex = CFFIndex;\\r\\nexports.CFFCharset = CFFCharset;\\r\\nexports.CFFTopDict = CFFTopDict;\\r\\nexports.CFFPrivateDict = CFFPrivateDict;\\r\\nexports.CFFCompiler = CFFCompiler;\\r\\n\\r\\n/***/ }),\\r\\n/* 85 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t['ArialNarrow'] = 'Helvetica';\\r\\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\\r\\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\\r\\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\\r\\n  t['ArialBlack'] = 'Helvetica';\\r\\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\\r\\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\\r\\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\\r\\n  t['Arial-Black'] = 'Helvetica';\\r\\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\\r\\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\\r\\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\\r\\n  t['Arial'] = 'Helvetica';\\r\\n  t['Arial-Bold'] = 'Helvetica-Bold';\\r\\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\\r\\n  t['Arial-Italic'] = 'Helvetica-Oblique';\\r\\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\\r\\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\\r\\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\\r\\n  t['ArialMT'] = 'Helvetica';\\r\\n  t['Courier-Bold'] = 'Courier-Bold';\\r\\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\\r\\n  t['Courier-Italic'] = 'Courier-Oblique';\\r\\n  t['CourierNew'] = 'Courier';\\r\\n  t['CourierNew-Bold'] = 'Courier-Bold';\\r\\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\\r\\n  t['CourierNew-Italic'] = 'Courier-Oblique';\\r\\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\\r\\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\\r\\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\\r\\n  t['CourierNewPSMT'] = 'Courier';\\r\\n  t['Helvetica'] = 'Helvetica';\\r\\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\\r\\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\\r\\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\\r\\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\\r\\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\\r\\n  t['SegoeUISymbol'] = 'Helvetica';\\r\\n  t['Symbol-Bold'] = 'Symbol';\\r\\n  t['Symbol-BoldItalic'] = 'Symbol';\\r\\n  t['Symbol-Italic'] = 'Symbol';\\r\\n  t['TimesNewRoman'] = 'Times-Roman';\\r\\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\\r\\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\\r\\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\\r\\n  t['TimesNewRomanPS'] = 'Times-Roman';\\r\\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\\r\\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\\r\\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\\r\\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\\r\\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\\r\\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\\r\\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\\r\\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\\r\\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\\r\\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\\r\\n});\\r\\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t['CenturyGothic'] = 'Helvetica';\\r\\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\\r\\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\\r\\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\\r\\n  t['ComicSansMS'] = 'Comic Sans MS';\\r\\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\\r\\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\\r\\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\\r\\n  t['LucidaConsole'] = 'Courier';\\r\\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\\r\\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\\r\\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\\r\\n  t['MS-Gothic'] = 'MS Gothic';\\r\\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\\r\\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\\r\\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\\r\\n  t['MS-Mincho'] = 'MS Mincho';\\r\\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\\r\\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\\r\\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\\r\\n  t['MS-PGothic'] = 'MS PGothic';\\r\\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\\r\\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\\r\\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\\r\\n  t['MS-PMincho'] = 'MS PMincho';\\r\\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\\r\\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\\r\\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\\r\\n  t['NuptialScript'] = 'Times-Italic';\\r\\n  t['Wingdings'] = 'ZapfDingbats';\\r\\n});\\r\\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t['Adobe Jenson'] = true;\\r\\n  t['Adobe Text'] = true;\\r\\n  t['Albertus'] = true;\\r\\n  t['Aldus'] = true;\\r\\n  t['Alexandria'] = true;\\r\\n  t['Algerian'] = true;\\r\\n  t['American Typewriter'] = true;\\r\\n  t['Antiqua'] = true;\\r\\n  t['Apex'] = true;\\r\\n  t['Arno'] = true;\\r\\n  t['Aster'] = true;\\r\\n  t['Aurora'] = true;\\r\\n  t['Baskerville'] = true;\\r\\n  t['Bell'] = true;\\r\\n  t['Bembo'] = true;\\r\\n  t['Bembo Schoolbook'] = true;\\r\\n  t['Benguiat'] = true;\\r\\n  t['Berkeley Old Style'] = true;\\r\\n  t['Bernhard Modern'] = true;\\r\\n  t['Berthold City'] = true;\\r\\n  t['Bodoni'] = true;\\r\\n  t['Bauer Bodoni'] = true;\\r\\n  t['Book Antiqua'] = true;\\r\\n  t['Bookman'] = true;\\r\\n  t['Bordeaux Roman'] = true;\\r\\n  t['Californian FB'] = true;\\r\\n  t['Calisto'] = true;\\r\\n  t['Calvert'] = true;\\r\\n  t['Capitals'] = true;\\r\\n  t['Cambria'] = true;\\r\\n  t['Cartier'] = true;\\r\\n  t['Caslon'] = true;\\r\\n  t['Catull'] = true;\\r\\n  t['Centaur'] = true;\\r\\n  t['Century Old Style'] = true;\\r\\n  t['Century Schoolbook'] = true;\\r\\n  t['Chaparral'] = true;\\r\\n  t['Charis SIL'] = true;\\r\\n  t['Cheltenham'] = true;\\r\\n  t['Cholla Slab'] = true;\\r\\n  t['Clarendon'] = true;\\r\\n  t['Clearface'] = true;\\r\\n  t['Cochin'] = true;\\r\\n  t['Colonna'] = true;\\r\\n  t['Computer Modern'] = true;\\r\\n  t['Concrete Roman'] = true;\\r\\n  t['Constantia'] = true;\\r\\n  t['Cooper Black'] = true;\\r\\n  t['Corona'] = true;\\r\\n  t['Ecotype'] = true;\\r\\n  t['Egyptienne'] = true;\\r\\n  t['Elephant'] = true;\\r\\n  t['Excelsior'] = true;\\r\\n  t['Fairfield'] = true;\\r\\n  t['FF Scala'] = true;\\r\\n  t['Folkard'] = true;\\r\\n  t['Footlight'] = true;\\r\\n  t['FreeSerif'] = true;\\r\\n  t['Friz Quadrata'] = true;\\r\\n  t['Garamond'] = true;\\r\\n  t['Gentium'] = true;\\r\\n  t['Georgia'] = true;\\r\\n  t['Gloucester'] = true;\\r\\n  t['Goudy Old Style'] = true;\\r\\n  t['Goudy Schoolbook'] = true;\\r\\n  t['Goudy Pro Font'] = true;\\r\\n  t['Granjon'] = true;\\r\\n  t['Guardian Egyptian'] = true;\\r\\n  t['Heather'] = true;\\r\\n  t['Hercules'] = true;\\r\\n  t['High Tower Text'] = true;\\r\\n  t['Hiroshige'] = true;\\r\\n  t['Hoefler Text'] = true;\\r\\n  t['Humana Serif'] = true;\\r\\n  t['Imprint'] = true;\\r\\n  t['Ionic No. 5'] = true;\\r\\n  t['Janson'] = true;\\r\\n  t['Joanna'] = true;\\r\\n  t['Korinna'] = true;\\r\\n  t['Lexicon'] = true;\\r\\n  t['Liberation Serif'] = true;\\r\\n  t['Linux Libertine'] = true;\\r\\n  t['Literaturnaya'] = true;\\r\\n  t['Lucida'] = true;\\r\\n  t['Lucida Bright'] = true;\\r\\n  t['Melior'] = true;\\r\\n  t['Memphis'] = true;\\r\\n  t['Miller'] = true;\\r\\n  t['Minion'] = true;\\r\\n  t['Modern'] = true;\\r\\n  t['Mona Lisa'] = true;\\r\\n  t['Mrs Eaves'] = true;\\r\\n  t['MS Serif'] = true;\\r\\n  t['Museo Slab'] = true;\\r\\n  t['New York'] = true;\\r\\n  t['Nimbus Roman'] = true;\\r\\n  t['NPS Rawlinson Roadway'] = true;\\r\\n  t['NuptialScript'] = true;\\r\\n  t['Palatino'] = true;\\r\\n  t['Perpetua'] = true;\\r\\n  t['Plantin'] = true;\\r\\n  t['Plantin Schoolbook'] = true;\\r\\n  t['Playbill'] = true;\\r\\n  t['Poor Richard'] = true;\\r\\n  t['Rawlinson Roadway'] = true;\\r\\n  t['Renault'] = true;\\r\\n  t['Requiem'] = true;\\r\\n  t['Rockwell'] = true;\\r\\n  t['Roman'] = true;\\r\\n  t['Rotis Serif'] = true;\\r\\n  t['Sabon'] = true;\\r\\n  t['Scala'] = true;\\r\\n  t['Seagull'] = true;\\r\\n  t['Sistina'] = true;\\r\\n  t['Souvenir'] = true;\\r\\n  t['STIX'] = true;\\r\\n  t['Stone Informal'] = true;\\r\\n  t['Stone Serif'] = true;\\r\\n  t['Sylfaen'] = true;\\r\\n  t['Times'] = true;\\r\\n  t['Trajan'] = true;\\r\\n  t['Trinit\\uFFFD'] = true;\\r\\n  t['Trump Mediaeval'] = true;\\r\\n  t['Utopia'] = true;\\r\\n  t['Vale Type'] = true;\\r\\n  t['Bitstream Vera'] = true;\\r\\n  t['Vera Serif'] = true;\\r\\n  t['Versailles'] = true;\\r\\n  t['Wanted'] = true;\\r\\n  t['Weiss'] = true;\\r\\n  t['Wide Latin'] = true;\\r\\n  t['Windsor'] = true;\\r\\n  t['XITS'] = true;\\r\\n});\\r\\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t['Dingbats'] = true;\\r\\n  t['Symbol'] = true;\\r\\n  t['ZapfDingbats'] = true;\\r\\n});\\r\\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t[2] = 10;\\r\\n  t[3] = 32;\\r\\n  t[4] = 33;\\r\\n  t[5] = 34;\\r\\n  t[6] = 35;\\r\\n  t[7] = 36;\\r\\n  t[8] = 37;\\r\\n  t[9] = 38;\\r\\n  t[10] = 39;\\r\\n  t[11] = 40;\\r\\n  t[12] = 41;\\r\\n  t[13] = 42;\\r\\n  t[14] = 43;\\r\\n  t[15] = 44;\\r\\n  t[16] = 45;\\r\\n  t[17] = 46;\\r\\n  t[18] = 47;\\r\\n  t[19] = 48;\\r\\n  t[20] = 49;\\r\\n  t[21] = 50;\\r\\n  t[22] = 51;\\r\\n  t[23] = 52;\\r\\n  t[24] = 53;\\r\\n  t[25] = 54;\\r\\n  t[26] = 55;\\r\\n  t[27] = 56;\\r\\n  t[28] = 57;\\r\\n  t[29] = 58;\\r\\n  t[30] = 894;\\r\\n  t[31] = 60;\\r\\n  t[32] = 61;\\r\\n  t[33] = 62;\\r\\n  t[34] = 63;\\r\\n  t[35] = 64;\\r\\n  t[36] = 65;\\r\\n  t[37] = 66;\\r\\n  t[38] = 67;\\r\\n  t[39] = 68;\\r\\n  t[40] = 69;\\r\\n  t[41] = 70;\\r\\n  t[42] = 71;\\r\\n  t[43] = 72;\\r\\n  t[44] = 73;\\r\\n  t[45] = 74;\\r\\n  t[46] = 75;\\r\\n  t[47] = 76;\\r\\n  t[48] = 77;\\r\\n  t[49] = 78;\\r\\n  t[50] = 79;\\r\\n  t[51] = 80;\\r\\n  t[52] = 81;\\r\\n  t[53] = 82;\\r\\n  t[54] = 83;\\r\\n  t[55] = 84;\\r\\n  t[56] = 85;\\r\\n  t[57] = 86;\\r\\n  t[58] = 87;\\r\\n  t[59] = 88;\\r\\n  t[60] = 89;\\r\\n  t[61] = 90;\\r\\n  t[62] = 91;\\r\\n  t[63] = 92;\\r\\n  t[64] = 93;\\r\\n  t[65] = 94;\\r\\n  t[66] = 95;\\r\\n  t[67] = 96;\\r\\n  t[68] = 97;\\r\\n  t[69] = 98;\\r\\n  t[70] = 99;\\r\\n  t[71] = 100;\\r\\n  t[72] = 101;\\r\\n  t[73] = 102;\\r\\n  t[74] = 103;\\r\\n  t[75] = 104;\\r\\n  t[76] = 105;\\r\\n  t[77] = 106;\\r\\n  t[78] = 107;\\r\\n  t[79] = 108;\\r\\n  t[80] = 109;\\r\\n  t[81] = 110;\\r\\n  t[82] = 111;\\r\\n  t[83] = 112;\\r\\n  t[84] = 113;\\r\\n  t[85] = 114;\\r\\n  t[86] = 115;\\r\\n  t[87] = 116;\\r\\n  t[88] = 117;\\r\\n  t[89] = 118;\\r\\n  t[90] = 119;\\r\\n  t[91] = 120;\\r\\n  t[92] = 121;\\r\\n  t[93] = 122;\\r\\n  t[94] = 123;\\r\\n  t[95] = 124;\\r\\n  t[96] = 125;\\r\\n  t[97] = 126;\\r\\n  t[98] = 196;\\r\\n  t[99] = 197;\\r\\n  t[100] = 199;\\r\\n  t[101] = 201;\\r\\n  t[102] = 209;\\r\\n  t[103] = 214;\\r\\n  t[104] = 220;\\r\\n  t[105] = 225;\\r\\n  t[106] = 224;\\r\\n  t[107] = 226;\\r\\n  t[108] = 228;\\r\\n  t[109] = 227;\\r\\n  t[110] = 229;\\r\\n  t[111] = 231;\\r\\n  t[112] = 233;\\r\\n  t[113] = 232;\\r\\n  t[114] = 234;\\r\\n  t[115] = 235;\\r\\n  t[116] = 237;\\r\\n  t[117] = 236;\\r\\n  t[118] = 238;\\r\\n  t[119] = 239;\\r\\n  t[120] = 241;\\r\\n  t[121] = 243;\\r\\n  t[122] = 242;\\r\\n  t[123] = 244;\\r\\n  t[124] = 246;\\r\\n  t[125] = 245;\\r\\n  t[126] = 250;\\r\\n  t[127] = 249;\\r\\n  t[128] = 251;\\r\\n  t[129] = 252;\\r\\n  t[130] = 8224;\\r\\n  t[131] = 176;\\r\\n  t[132] = 162;\\r\\n  t[133] = 163;\\r\\n  t[134] = 167;\\r\\n  t[135] = 8226;\\r\\n  t[136] = 182;\\r\\n  t[137] = 223;\\r\\n  t[138] = 174;\\r\\n  t[139] = 169;\\r\\n  t[140] = 8482;\\r\\n  t[141] = 180;\\r\\n  t[142] = 168;\\r\\n  t[143] = 8800;\\r\\n  t[144] = 198;\\r\\n  t[145] = 216;\\r\\n  t[146] = 8734;\\r\\n  t[147] = 177;\\r\\n  t[148] = 8804;\\r\\n  t[149] = 8805;\\r\\n  t[150] = 165;\\r\\n  t[151] = 181;\\r\\n  t[152] = 8706;\\r\\n  t[153] = 8721;\\r\\n  t[154] = 8719;\\r\\n  t[156] = 8747;\\r\\n  t[157] = 170;\\r\\n  t[158] = 186;\\r\\n  t[159] = 8486;\\r\\n  t[160] = 230;\\r\\n  t[161] = 248;\\r\\n  t[162] = 191;\\r\\n  t[163] = 161;\\r\\n  t[164] = 172;\\r\\n  t[165] = 8730;\\r\\n  t[166] = 402;\\r\\n  t[167] = 8776;\\r\\n  t[168] = 8710;\\r\\n  t[169] = 171;\\r\\n  t[170] = 187;\\r\\n  t[171] = 8230;\\r\\n  t[210] = 218;\\r\\n  t[223] = 711;\\r\\n  t[224] = 321;\\r\\n  t[225] = 322;\\r\\n  t[227] = 353;\\r\\n  t[229] = 382;\\r\\n  t[234] = 253;\\r\\n  t[252] = 263;\\r\\n  t[253] = 268;\\r\\n  t[254] = 269;\\r\\n  t[258] = 258;\\r\\n  t[260] = 260;\\r\\n  t[261] = 261;\\r\\n  t[265] = 280;\\r\\n  t[266] = 281;\\r\\n  t[268] = 283;\\r\\n  t[269] = 313;\\r\\n  t[275] = 323;\\r\\n  t[276] = 324;\\r\\n  t[278] = 328;\\r\\n  t[284] = 345;\\r\\n  t[285] = 346;\\r\\n  t[286] = 347;\\r\\n  t[292] = 367;\\r\\n  t[295] = 377;\\r\\n  t[296] = 378;\\r\\n  t[298] = 380;\\r\\n  t[305] = 963;\\r\\n  t[306] = 964;\\r\\n  t[307] = 966;\\r\\n  t[308] = 8215;\\r\\n  t[309] = 8252;\\r\\n  t[310] = 8319;\\r\\n  t[311] = 8359;\\r\\n  t[312] = 8592;\\r\\n  t[313] = 8593;\\r\\n  t[337] = 9552;\\r\\n  t[493] = 1039;\\r\\n  t[494] = 1040;\\r\\n  t[705] = 1524;\\r\\n  t[706] = 8362;\\r\\n  t[710] = 64288;\\r\\n  t[711] = 64298;\\r\\n  t[759] = 1617;\\r\\n  t[761] = 1776;\\r\\n  t[763] = 1778;\\r\\n  t[775] = 1652;\\r\\n  t[777] = 1764;\\r\\n  t[778] = 1780;\\r\\n  t[779] = 1781;\\r\\n  t[780] = 1782;\\r\\n  t[782] = 771;\\r\\n  t[783] = 64726;\\r\\n  t[786] = 8363;\\r\\n  t[788] = 8532;\\r\\n  t[790] = 768;\\r\\n  t[791] = 769;\\r\\n  t[792] = 768;\\r\\n  t[795] = 803;\\r\\n  t[797] = 64336;\\r\\n  t[798] = 64337;\\r\\n  t[799] = 64342;\\r\\n  t[800] = 64343;\\r\\n  t[801] = 64344;\\r\\n  t[802] = 64345;\\r\\n  t[803] = 64362;\\r\\n  t[804] = 64363;\\r\\n  t[805] = 64364;\\r\\n  t[2424] = 7821;\\r\\n  t[2425] = 7822;\\r\\n  t[2426] = 7823;\\r\\n  t[2427] = 7824;\\r\\n  t[2428] = 7825;\\r\\n  t[2429] = 7826;\\r\\n  t[2430] = 7827;\\r\\n  t[2433] = 7682;\\r\\n  t[2678] = 8045;\\r\\n  t[2679] = 8046;\\r\\n  t[2830] = 1552;\\r\\n  t[2838] = 686;\\r\\n  t[2840] = 751;\\r\\n  t[2842] = 753;\\r\\n  t[2843] = 754;\\r\\n  t[2844] = 755;\\r\\n  t[2846] = 757;\\r\\n  t[2856] = 767;\\r\\n  t[2857] = 848;\\r\\n  t[2858] = 849;\\r\\n  t[2862] = 853;\\r\\n  t[2863] = 854;\\r\\n  t[2864] = 855;\\r\\n  t[2865] = 861;\\r\\n  t[2866] = 862;\\r\\n  t[2906] = 7460;\\r\\n  t[2908] = 7462;\\r\\n  t[2909] = 7463;\\r\\n  t[2910] = 7464;\\r\\n  t[2912] = 7466;\\r\\n  t[2913] = 7467;\\r\\n  t[2914] = 7468;\\r\\n  t[2916] = 7470;\\r\\n  t[2917] = 7471;\\r\\n  t[2918] = 7472;\\r\\n  t[2920] = 7474;\\r\\n  t[2921] = 7475;\\r\\n  t[2922] = 7476;\\r\\n  t[2924] = 7478;\\r\\n  t[2925] = 7479;\\r\\n  t[2926] = 7480;\\r\\n  t[2928] = 7482;\\r\\n  t[2929] = 7483;\\r\\n  t[2930] = 7484;\\r\\n  t[2932] = 7486;\\r\\n  t[2933] = 7487;\\r\\n  t[2934] = 7488;\\r\\n  t[2936] = 7490;\\r\\n  t[2937] = 7491;\\r\\n  t[2938] = 7492;\\r\\n  t[2940] = 7494;\\r\\n  t[2941] = 7495;\\r\\n  t[2942] = 7496;\\r\\n  t[2944] = 7498;\\r\\n  t[2946] = 7500;\\r\\n  t[2948] = 7502;\\r\\n  t[2950] = 7504;\\r\\n  t[2951] = 7505;\\r\\n  t[2952] = 7506;\\r\\n  t[2954] = 7508;\\r\\n  t[2955] = 7509;\\r\\n  t[2956] = 7510;\\r\\n  t[2958] = 7512;\\r\\n  t[2959] = 7513;\\r\\n  t[2960] = 7514;\\r\\n  t[2962] = 7516;\\r\\n  t[2963] = 7517;\\r\\n  t[2964] = 7518;\\r\\n  t[2966] = 7520;\\r\\n  t[2967] = 7521;\\r\\n  t[2968] = 7522;\\r\\n  t[2970] = 7524;\\r\\n  t[2971] = 7525;\\r\\n  t\";a.a+=\"[2972] = 7526;\\r\\n  t[2974] = 7528;\\r\\n  t[2975] = 7529;\\r\\n  t[2976] = 7530;\\r\\n  t[2978] = 1537;\\r\\n  t[2979] = 1538;\\r\\n  t[2980] = 1539;\\r\\n  t[2982] = 1549;\\r\\n  t[2983] = 1551;\\r\\n  t[2984] = 1552;\\r\\n  t[2986] = 1554;\\r\\n  t[2987] = 1555;\\r\\n  t[2988] = 1556;\\r\\n  t[2990] = 1623;\\r\\n  t[2991] = 1624;\\r\\n  t[2995] = 1775;\\r\\n  t[2999] = 1791;\\r\\n  t[3002] = 64290;\\r\\n  t[3003] = 64291;\\r\\n  t[3004] = 64292;\\r\\n  t[3006] = 64294;\\r\\n  t[3007] = 64295;\\r\\n  t[3008] = 64296;\\r\\n  t[3011] = 1900;\\r\\n  t[3014] = 8223;\\r\\n  t[3015] = 8244;\\r\\n  t[3017] = 7532;\\r\\n  t[3018] = 7533;\\r\\n  t[3019] = 7534;\\r\\n  t[3075] = 7590;\\r\\n  t[3076] = 7591;\\r\\n  t[3079] = 7594;\\r\\n  t[3080] = 7595;\\r\\n  t[3083] = 7598;\\r\\n  t[3084] = 7599;\\r\\n  t[3087] = 7602;\\r\\n  t[3088] = 7603;\\r\\n  t[3091] = 7606;\\r\\n  t[3092] = 7607;\\r\\n  t[3095] = 7610;\\r\\n  t[3096] = 7611;\\r\\n  t[3099] = 7614;\\r\\n  t[3100] = 7615;\\r\\n  t[3103] = 7618;\\r\\n  t[3104] = 7619;\\r\\n  t[3107] = 8337;\\r\\n  t[3108] = 8338;\\r\\n  t[3116] = 1884;\\r\\n  t[3119] = 1885;\\r\\n  t[3120] = 1885;\\r\\n  t[3123] = 1886;\\r\\n  t[3124] = 1886;\\r\\n  t[3127] = 1887;\\r\\n  t[3128] = 1887;\\r\\n  t[3131] = 1888;\\r\\n  t[3132] = 1888;\\r\\n  t[3135] = 1889;\\r\\n  t[3136] = 1889;\\r\\n  t[3139] = 1890;\\r\\n  t[3140] = 1890;\\r\\n  t[3143] = 1891;\\r\\n  t[3144] = 1891;\\r\\n  t[3147] = 1892;\\r\\n  t[3148] = 1892;\\r\\n  t[3153] = 580;\\r\\n  t[3154] = 581;\\r\\n  t[3157] = 584;\\r\\n  t[3158] = 585;\\r\\n  t[3161] = 588;\\r\\n  t[3162] = 589;\\r\\n  t[3165] = 891;\\r\\n  t[3166] = 892;\\r\\n  t[3169] = 1274;\\r\\n  t[3170] = 1275;\\r\\n  t[3173] = 1278;\\r\\n  t[3174] = 1279;\\r\\n  t[3181] = 7622;\\r\\n  t[3182] = 7623;\\r\\n  t[3282] = 11799;\\r\\n  t[3316] = 578;\\r\\n  t[3379] = 42785;\\r\\n  t[3393] = 1159;\\r\\n  t[3416] = 8377;\\r\\n});\\r\\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t[227] = 322;\\r\\n  t[264] = 261;\\r\\n  t[291] = 346;\\r\\n});\\r\\nexports.getStdFontMap = getStdFontMap;\\r\\nexports.getNonStdFontMap = getNonStdFontMap;\\r\\nexports.getSerifFonts = getSerifFonts;\\r\\nexports.getSymbolsFonts = getSymbolsFonts;\\r\\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\\r\\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\\r\\n\\r\\n/***/ }),\\r\\n/* 86 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\\r\\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\\r\\n t[63721] = 0x00A9;\\r\\n t[63193] = 0x00A9;\\r\\n t[63720] = 0x00AE;\\r\\n t[63194] = 0x00AE;\\r\\n t[63722] = 0x2122;\\r\\n t[63195] = 0x2122;\\r\\n t[63729] = 0x23A7;\\r\\n t[63730] = 0x23A8;\\r\\n t[63731] = 0x23A9;\\r\\n t[63740] = 0x23AB;\\r\\n t[63741] = 0x23AC;\\r\\n t[63742] = 0x23AD;\\r\\n t[63726] = 0x23A1;\\r\\n t[63727] = 0x23A2;\\r\\n t[63728] = 0x23A3;\\r\\n t[63737] = 0x23A4;\\r\\n t[63738] = 0x23A5;\\r\\n t[63739] = 0x23A6;\\r\\n t[63723] = 0x239B;\\r\\n t[63724] = 0x239C;\\r\\n t[63725] = 0x239D;\\r\\n t[63734] = 0x239E;\\r\\n t[63735] = 0x239F;\\r\\n t[63736] = 0x23A0;\\r\\n});\\r\\nfunction mapSpecialUnicodeValues(code) {\\r\\n if (code >= 0xFFF0 && code <= 0xFFFF) {\\r\\n  return 0;\\r\\n } else if (code >= 0xF600 && code <= 0xF8FF) {\\r\\n  return getSpecialPUASymbols()[code] || code;\\r\\n } else if (code === 0x00AD) {\\r\\n  return 0x002D;\\r\\n }\\r\\n return code;\\r\\n}\\r\\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\\r\\n var unicode = glyphsUnicodeMap[name];\\r\\n if (unicode !== undefined) {\\r\\n  return unicode;\\r\\n }\\r\\n if (!name) {\\r\\n  return -1;\\r\\n }\\r\\n if (name[0] === 'u') {\\r\\n  var nameLen = name.length, hexStr;\\r\\n  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\\r\\n   hexStr = name.substr(3);\\r\\n  } else if (nameLen >= 5 && nameLen <= 7) {\\r\\n   hexStr = name.substr(1);\\r\\n  } else {\\r\\n   return -1;\\r\\n  }\\r\\n  if (hexStr === hexStr.toUpperCase()) {\\r\\n   unicode = parseInt(hexStr, 16);\\r\\n   if (unicode >= 0) {\\r\\n    return unicode;\\r\\n   }\\r\\n  }\\r\\n }\\r\\n return -1;\\r\\n}\\r\\nvar UnicodeRanges = [\\r\\n {\\r\\n  'begin': 0x0000,\\r\\n  'end': 0x007F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0080,\\r\\n  'end': 0x00FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0100,\\r\\n  'end': 0x017F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0180,\\r\\n  'end': 0x024F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0250,\\r\\n  'end': 0x02AF\\r\\n },\\r\\n {\\r\\n  'begin': 0x02B0,\\r\\n  'end': 0x02FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0300,\\r\\n  'end': 0x036F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0370,\\r\\n  'end': 0x03FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2C80,\\r\\n  'end': 0x2CFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0400,\\r\\n  'end': 0x04FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0530,\\r\\n  'end': 0x058F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0590,\\r\\n  'end': 0x05FF\\r\\n },\\r\\n {\\r\\n  'begin': 0xA500,\\r\\n  'end': 0xA63F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0600,\\r\\n  'end': 0x06FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x07C0,\\r\\n  'end': 0x07FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0900,\\r\\n  'end': 0x097F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0980,\\r\\n  'end': 0x09FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0A00,\\r\\n  'end': 0x0A7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0A80,\\r\\n  'end': 0x0AFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0B00,\\r\\n  'end': 0x0B7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0B80,\\r\\n  'end': 0x0BFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0C00,\\r\\n  'end': 0x0C7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0C80,\\r\\n  'end': 0x0CFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0D00,\\r\\n  'end': 0x0D7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0E00,\\r\\n  'end': 0x0E7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0E80,\\r\\n  'end': 0x0EFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x10A0,\\r\\n  'end': 0x10FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1B00,\\r\\n  'end': 0x1B7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1100,\\r\\n  'end': 0x11FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1E00,\\r\\n  'end': 0x1EFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1F00,\\r\\n  'end': 0x1FFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2000,\\r\\n  'end': 0x206F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2070,\\r\\n  'end': 0x209F\\r\\n },\\r\\n {\\r\\n  'begin': 0x20A0,\\r\\n  'end': 0x20CF\\r\\n },\\r\\n {\\r\\n  'begin': 0x20D0,\\r\\n  'end': 0x20FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2100,\\r\\n  'end': 0x214F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2150,\\r\\n  'end': 0x218F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2190,\\r\\n  'end': 0x21FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2200,\\r\\n  'end': 0x22FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2300,\\r\\n  'end': 0x23FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2400,\\r\\n  'end': 0x243F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2440,\\r\\n  'end': 0x245F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2460,\\r\\n  'end': 0x24FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2500,\\r\\n  'end': 0x257F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2580,\\r\\n  'end': 0x259F\\r\\n },\\r\\n {\\r\\n  'begin': 0x25A0,\\r\\n  'end': 0x25FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2600,\\r\\n  'end': 0x26FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2700,\\r\\n  'end': 0x27BF\\r\\n },\\r\\n {\\r\\n  'begin': 0x3000,\\r\\n  'end': 0x303F\\r\\n },\\r\\n {\\r\\n  'begin': 0x3040,\\r\\n  'end': 0x309F\\r\\n },\\r\\n {\\r\\n  'begin': 0x30A0,\\r\\n  'end': 0x30FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x3100,\\r\\n  'end': 0x312F\\r\\n },\\r\\n {\\r\\n  'begin': 0x3130,\\r\\n  'end': 0x318F\\r\\n },\\r\\n {\\r\\n  'begin': 0xA840,\\r\\n  'end': 0xA87F\\r\\n },\\r\\n {\\r\\n  'begin': 0x3200,\\r\\n  'end': 0x32FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x3300,\\r\\n  'end': 0x33FF\\r\\n },\\r\\n {\\r\\n  'begin': 0xAC00,\\r\\n  'end': 0xD7AF\\r\\n },\\r\\n {\\r\\n  'begin': 0xD800,\\r\\n  'end': 0xDFFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x10900,\\r\\n  'end': 0x1091F\\r\\n },\\r\\n {\\r\\n  'begin': 0x4E00,\\r\\n  'end': 0x9FFF\\r\\n },\\r\\n {\\r\\n  'begin': 0xE000,\\r\\n  'end': 0xF8FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x31C0,\\r\\n  'end': 0x31EF\\r\\n },\\r\\n {\\r\\n  'begin': 0xFB00,\\r\\n  'end': 0xFB4F\\r\\n },\\r\\n {\\r\\n  'begin': 0xFB50,\\r\\n  'end': 0xFDFF\\r\\n },\\r\\n {\\r\\n  'begin': 0xFE20,\\r\\n  'end': 0xFE2F\\r\\n },\\r\\n {\\r\\n  'begin': 0xFE10,\\r\\n  'end': 0xFE1F\\r\\n },\\r\\n {\\r\\n  'begin': 0xFE50,\\r\\n  'end': 0xFE6F\\r\\n },\\r\\n {\\r\\n  'begin': 0xFE70,\\r\\n  'end': 0xFEFF\\r\\n },\\r\\n {\\r\\n  'begin': 0xFF00,\\r\\n  'end': 0xFFEF\\r\\n },\\r\\n {\\r\\n  'begin': 0xFFF0,\\r\\n  'end': 0xFFFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0F00,\\r\\n  'end': 0x0FFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0700,\\r\\n  'end': 0x074F\\r\\n },\\r\\n {\\r\\n  'begin': 0x0780,\\r\\n  'end': 0x07BF\\r\\n },\\r\\n {\\r\\n  'begin': 0x0D80,\\r\\n  'end': 0x0DFF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1000,\\r\\n  'end': 0x109F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1200,\\r\\n  'end': 0x137F\\r\\n },\\r\\n {\\r\\n  'begin': 0x13A0,\\r\\n  'end': 0x13FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1400,\\r\\n  'end': 0x167F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1680,\\r\\n  'end': 0x169F\\r\\n },\\r\\n {\\r\\n  'begin': 0x16A0,\\r\\n  'end': 0x16FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1780,\\r\\n  'end': 0x17FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1800,\\r\\n  'end': 0x18AF\\r\\n },\\r\\n {\\r\\n  'begin': 0x2800,\\r\\n  'end': 0x28FF\\r\\n },\\r\\n {\\r\\n  'begin': 0xA000,\\r\\n  'end': 0xA48F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1700,\\r\\n  'end': 0x171F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10300,\\r\\n  'end': 0x1032F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10330,\\r\\n  'end': 0x1034F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10400,\\r\\n  'end': 0x1044F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1D000,\\r\\n  'end': 0x1D0FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1D400,\\r\\n  'end': 0x1D7FF\\r\\n },\\r\\n {\\r\\n  'begin': 0xFF000,\\r\\n  'end': 0xFFFFD\\r\\n },\\r\\n {\\r\\n  'begin': 0xFE00,\\r\\n  'end': 0xFE0F\\r\\n },\\r\\n {\\r\\n  'begin': 0xE0000,\\r\\n  'end': 0xE007F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1900,\\r\\n  'end': 0x194F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1950,\\r\\n  'end': 0x197F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1980,\\r\\n  'end': 0x19DF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1A00,\\r\\n  'end': 0x1A1F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2C00,\\r\\n  'end': 0x2C5F\\r\\n },\\r\\n {\\r\\n  'begin': 0x2D30,\\r\\n  'end': 0x2D7F\\r\\n },\\r\\n {\\r\\n  'begin': 0x4DC0,\\r\\n  'end': 0x4DFF\\r\\n },\\r\\n {\\r\\n  'begin': 0xA800,\\r\\n  'end': 0xA82F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10000,\\r\\n  'end': 0x1007F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10140,\\r\\n  'end': 0x1018F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10380,\\r\\n  'end': 0x1039F\\r\\n },\\r\\n {\\r\\n  'begin': 0x103A0,\\r\\n  'end': 0x103DF\\r\\n },\\r\\n {\\r\\n  'begin': 0x10450,\\r\\n  'end': 0x1047F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10480,\\r\\n  'end': 0x104AF\\r\\n },\\r\\n {\\r\\n  'begin': 0x10800,\\r\\n  'end': 0x1083F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10A00,\\r\\n  'end': 0x10A5F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1D300,\\r\\n  'end': 0x1D35F\\r\\n },\\r\\n {\\r\\n  'begin': 0x12000,\\r\\n  'end': 0x123FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1D360,\\r\\n  'end': 0x1D37F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1B80,\\r\\n  'end': 0x1BBF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1C00,\\r\\n  'end': 0x1C4F\\r\\n },\\r\\n {\\r\\n  'begin': 0x1C50,\\r\\n  'end': 0x1C7F\\r\\n },\\r\\n {\\r\\n  'begin': 0xA880,\\r\\n  'end': 0xA8DF\\r\\n },\\r\\n {\\r\\n  'begin': 0xA900,\\r\\n  'end': 0xA92F\\r\\n },\\r\\n {\\r\\n  'begin': 0xA930,\\r\\n  'end': 0xA95F\\r\\n },\\r\\n {\\r\\n  'begin': 0xAA00,\\r\\n  'end': 0xAA5F\\r\\n },\\r\\n {\\r\\n  'begin': 0x10190,\\r\\n  'end': 0x101CF\\r\\n },\\r\\n {\\r\\n  'begin': 0x101D0,\\r\\n  'end': 0x101FF\\r\\n },\\r\\n {\\r\\n  'begin': 0x102A0,\\r\\n  'end': 0x102DF\\r\\n },\\r\\n {\\r\\n  'begin': 0x1F030,\\r\\n  'end': 0x1F09F\\r\\n }\\r\\n];\\r\\nfunction getUnicodeRangeFor(value) {\\r\\n for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\\r\\n  var range = UnicodeRanges[i];\\r\\n  if (value >= range.begin && value < range.end) {\\r\\n   return i;\\r\\n  }\\r\\n }\\r\\n return -1;\\r\\n}\\r\\nfunction isRTLRangeFor(value) {\\r\\n var range = UnicodeRanges[13];\\r\\n if (value >= range.begin && value < range.end) {\\r\\n  return true;\\r\\n }\\r\\n range = UnicodeRanges[11];\\r\\n if (value >= range.begin && value < range.end) {\\r\\n  return true;\\r\\n }\\r\\n return false;\\r\\n}\\r\\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\\r\\n t['\\\\u00A8'] = '\\\\u0020\\\\u0308';\\r\\n t['\\\\u00AF'] = '\\\\u0020\\\\u0304';\\r\\n t['\\\\u00B4'] = '\\\\u0020\\\\u0301';\\r\\n t['\\\\u00B5'] = '\\\\u03BC';\\r\\n t['\\\\u00B8'] = '\\\\u0020\\\\u0327';\\r\\n t['\\\\u0132'] = '\\\\u0049\\\\u004A';\\r\\n t['\\\\u0133'] = '\\\\u0069\\\\u006A';\\r\\n t['\\\\u013F'] = '\\\\u004C\\\\u00B7';\\r\\n t['\\\\u0140'] = '\\\\u006C\\\\u00B7';\\r\\n t['\\\\u0149'] = '\\\\u02BC\\\\u006E';\\r\\n t['\\\\u017F'] = '\\\\u0073';\\r\\n t['\\\\u01C4'] = '\\\\u0044\\\\u017D';\\r\\n t['\\\\u01C5'] = '\\\\u0044\\\\u017E';\\r\\n t['\\\\u01C6'] = '\\\\u0064\\\\u017E';\\r\\n t['\\\\u01C7'] = '\\\\u004C\\\\u004A';\\r\\n t['\\\\u01C8'] = '\\\\u004C\\\\u006A';\\r\\n t['\\\\u01C9'] = '\\\\u006C\\\\u006A';\\r\\n t['\\\\u01CA'] = '\\\\u004E\\\\u004A';\\r\\n t['\\\\u01CB'] = '\\\\u004E\\\\u006A';\\r\\n t['\\\\u01CC'] = '\\\\u006E\\\\u006A';\\r\\n t['\\\\u01F1'] = '\\\\u0044\\\\u005A';\\r\\n t['\\\\u01F2'] = '\\\\u0044\\\\u007A';\\r\\n t['\\\\u01F3'] = '\\\\u0064\\\\u007A';\\r\\n t['\\\\u02D8'] = '\\\\u0020\\\\u0306';\\r\\n t['\\\\u02D9'] = '\\\\u0020\\\\u0307';\\r\\n t['\\\\u02DA'] = '\\\\u0020\\\\u030A';\\r\\n t['\\\\u02DB'] = '\\\\u0020\\\\u0328';\\r\\n t['\\\\u02DC'] = '\\\\u0020\\\\u0303';\\r\\n t['\\\\u02DD'] = '\\\\u0020\\\\u030B';\\r\\n t['\\\\u037A'] = '\\\\u0020\\\\u0345';\\r\\n t['\\\\u0384'] = '\\\\u0020\\\\u0301';\\r\\n t['\\\\u03D0'] = '\\\\u03B2';\\r\\n t['\\\\u03D1'] = '\\\\u03B8';\\r\\n t['\\\\u03D2'] = '\\\\u03A5';\\r\\n t['\\\\u03D5'] = '\\\\u03C6';\\r\\n t['\\\\u03D6'] = '\\\\u03C0';\\r\\n t['\\\\u03F0'] = '\\\\u03BA';\\r\\n t['\\\\u03F1'] = '\\\\u03C1';\\r\\n t['\\\\u03F2'] = '\\\\u03C2';\\r\\n t['\\\\u03F4'] = '\\\\u0398';\\r\\n t['\\\\u03F5'] = '\\\\u03B5';\\r\\n t['\\\\u03F9'] = '\\\\u03A3';\\r\\n t['\\\\u0587'] = '\\\\u0565\\\\u0582';\\r\\n t['\\\\u0675'] = '\\\\u0627\\\\u0674';\\r\\n t['\\\\u0676'] = '\\\\u0648\\\\u0674';\\r\\n t['\\\\u0677'] = '\\\\u06C7\\\\u0674';\\r\\n t['\\\\u0678'] = '\\\\u064A\\\\u0674';\\r\\n t['\\\\u0E33'] = '\\\\u0E4D\\\\u0E32';\\r\\n t['\\\\u0EB3'] = '\\\\u0ECD\\\\u0EB2';\\r\\n t['\\\\u0EDC'] = '\\\\u0EAB\\\\u0E99';\\r\\n t['\\\\u0EDD'] = '\\\\u0EAB\\\\u0EA1';\\r\\n t['\\\\u0F77'] = '\\\\u0FB2\\\\u0F81';\\r\\n t['\\\\u0F79'] = '\\\\u0FB3\\\\u0F81';\\r\\n t['\\\\u1E9A'] = '\\\\u0061\\\\u02BE';\\r\\n t['\\\\u1FBD'] = '\\\\u0020\\\\u0313';\\r\\n t['\\\\u1FBF'] = '\\\\u0020\\\\u0313';\\r\\n t['\\\\u1FC0'] = '\\\\u0020\\\\u0342';\\r\\n t['\\\\u1FFE'] = '\\\\u0020\\\\u0314';\\r\\n t['\\\\u2002'] = '\\\\u0020';\\r\\n t['\\\\u2003'] = '\\\\u0020';\\r\\n t['\\\\u2004'] = '\\\\u0020';\\r\\n t['\\\\u2005'] = '\\\\u0020';\\r\\n t['\\\\u2006'] = '\\\\u0020';\\r\\n t['\\\\u2008'] = '\\\\u0020';\\r\\n t['\\\\u2009'] = '\\\\u0020';\\r\\n t['\\\\u200A'] = '\\\\u0020';\\r\\n t['\\\\u2017'] = '\\\\u0020\\\\u0333';\\r\\n t['\\\\u2024'] = '\\\\u002E';\\r\\n t['\\\\u2025'] = '\\\\u002E\\\\u002E';\\r\\n t['\\\\u2026'] = '\\\\u002E\\\\u002E\\\\u002E';\\r\\n t['\\\\u2033'] = '\\\\u2032\\\\u2032';\\r\\n t['\\\\u2034'] = '\\\\u2032\\\\u2032\\\\u2032';\\r\\n t['\\\\u2036'] = '\\\\u2035\\\\u2035';\\r\\n t['\\\\u2037'] = '\\\\u2035\\\\u2035\\\\u2035';\\r\\n t['\\\\u203C'] = '\\\\u0021\\\\u0021';\\r\\n t['\\\\u203E'] = '\\\\u0020\\\\u0305';\\r\\n t['\\\\u2047'] = '\\\\u003F\\\\u003F';\\r\\n t['\\\\u2048'] = '\\\\u003F\\\\u0021';\\r\\n t['\\\\u2049'] = '\\\\u0021\\\\u003F';\\r\\n t['\\\\u2057'] = '\\\\u2032\\\\u2032\\\\u2032\\\\u2032';\\r\\n t['\\\\u205F'] = '\\\\u0020';\\r\\n t['\\\\u20A8'] = '\\\\u0052\\\\u0073';\\r\\n t['\\\\u2100'] = '\\\\u0061\\\\u002F\\\\u0063';\\r\\n t['\\\\u2101'] = '\\\\u0061\\\\u002F\\\\u0073';\\r\\n t['\\\\u2103'] = '\\\\u00B0\\\\u0043';\\r\\n t['\\\\u2105'] = '\\\\u0063\\\\u002F\\\\u006F';\\r\\n t['\\\\u2106'] = '\\\\u0063\\\\u002F\\\\u0075';\\r\\n t['\\\\u2107'] = '\\\\u0190';\\r\\n t['\\\\u2109'] = '\\\\u00B0\\\\u0046';\\r\\n t['\\\\u2116'] = '\\\\u004E\\\\u006F';\\r\\n t['\\\\u2121'] = '\\\\u0054\\\\u0045\\\\u004C';\\r\\n t['\\\\u2135'] = '\\\\u05D0';\\r\\n t['\\\\u2136'] = '\\\\u05D1';\\r\\n t['\\\\u2137'] = '\\\\u05D2';\\r\\n t['\\\\u2138'] = '\\\\u05D3';\\r\\n t['\\\\u213B'] = '\\\\u0046\\\\u0041\\\\u0058';\\r\\n t['\\\\u2160'] = '\\\\u0049';\\r\\n t['\\\\u2161'] = '\\\\u0049\\\\u0049';\\r\\n t['\\\\u2162'] = '\\\\u0049\\\\u0049\\\\u0049';\\r\\n t['\\\\u2163'] = '\\\\u0049\\\\u0056';\\r\\n t['\\\\u2164'] = '\\\\u0056';\\r\\n t['\\\\u2165'] = '\\\\u0056\\\\u0049';\\r\\n t['\\\\u2166'] = '\\\\u0056\\\\u0049\\\\u0049';\\r\\n t['\\\\u2167'] = '\\\\u0056\\\\u0049\\\\u0049\\\\u0049';\\r\\n t['\\\\u2168'] = '\\\\u0049\\\\u0058';\\r\\n t['\\\\u2169'] = '\\\\u0058';\\r\\n t['\\\\u216A'] = '\\\\u0058\\\\u0049';\\r\\n t['\\\\u216B'] = '\\\\u0058\\\\u0049\\\\u0049';\\r\\n t['\\\\u216C'] = '\\\\u004C';\\r\\n t['\\\\u216D'] = '\\\\u0043';\\r\\n t['\\\\u216E'] = '\\\\u0044';\\r\\n t['\\\\u216F'] = '\\\\u004D';\\r\\n t['\\\\u2170'] = '\\\\u0069';\\r\\n t['\\\\u2171'] = '\\\\u0069\\\\u0069';\\r\\n t['\\\\u2172'] = '\\\\u0069\\\\u0069\\\\u0069';\\r\\n t['\\\\u2173'] = '\\\\u0069\\\\u0076';\\r\\n t['\\\\u2174'] = '\\\\u0076';\\r\\n t['\\\\u2175'] = '\\\\u0076\\\\u0069';\\r\\n t['\\\\u2176'] = '\\\\u0076\\\\u0069\\\\u0069';\\r\\n t['\\\\u2177'] = '\\\\u0076\\\\u0069\\\\u0069\\\\u0069';\\r\\n t['\\\\u2178'] = '\\\\u0069\\\\u0078';\\r\\n t['\\\\u2179'] = '\\\\u0078';\\r\\n t['\\\\u217A'] = '\\\\u0078\\\\u0069';\\r\\n t['\\\\u217B'] = '\\\\u0078\\\\u0069\\\\u0069';\\r\\n t['\\\\u217C'] = '\\\\u006C';\\r\\n t['\\\\u217D'] = '\\\\u0063';\\r\\n t['\\\\u217E'] = '\\\\u0064';\\r\\n t['\\\\u217F'] = '\\\\u006D';\\r\\n t['\\\\u222C'] = '\\\\u222B\\\\u222B';\\r\\n t['\\\\u222D'] = '\\\\u222B\\\\u222B\\\\u222B';\\r\\n t['\\\\u222F'] = '\\\\u222E\\\\u222E';\\r\\n t['\\\\u2230'] = '\\\\u222E\\\\u222E\\\\u222E';\\r\\n t['\\\\u2474'] = '\\\\u0028\\\\u0031\\\\u0029';\\r\\n t['\\\\u2475'] = '\\\\u0028\\\\u0032\\\\u0029';\\r\\n t['\\\\u2476'] = '\\\\u0028\\\\u0033\\\\u0029';\\r\\n t['\\\\u2477'] = '\\\\u0028\\\\u0034\\\\u0029';\\r\\n t['\\\\u2478'] = '\\\\u0028\\\\u0035\\\\u0029';\\r\\n t['\\\\u2479'] = '\\\\u0028\\\\u0036\\\\u0029';\\r\\n t['\\\\u247A'] = '\\\\u0028\\\\u0037\\\\u0029';\\r\\n t['\\\\u247B'] = '\\\\u0028\\\\u0038\\\\u0029';\\r\\n t['\\\\u247C'] = '\\\\u0028\\\\u0039\\\\u0029';\\r\\n t['\\\\u247D'] = '\\\\u0028\\\\u0031\\\\u0030\\\\u0029';\\r\\n t['\\\\u247E'] = '\\\\u0028\\\\u0031\\\\u0031\\\\u0029';\\r\\n t['\\\\u247F'] = '\\\\u0028\\\\u0031\\\\u0032\\\\u0029';\\r\\n t['\\\\u2480'] = '\\\\u0028\\\\u0031\\\\u0033\\\\u0029';\\r\\n t['\\\\u2481'] = '\\\\u0028\\\\u0031\\\\u0034\\\\u0029';\\r\\n t['\\\\u2482'] = '\\\\u0028\\\\u0031\\\\u0035\\\\u0029';\\r\\n t['\\\\u2483'] = '\\\\u0028\\\\u0031\\\\u0036\\\\u0029';\\r\\n t['\\\\u2484'] = '\\\\u0028\\\\u0031\\\\u0037\\\\u0029';\\r\\n t['\\\\u2485'] = '\\\\u0028\\\\u0031\\\\u0038\\\\u0029';\\r\\n t['\\\\u2486'] = '\\\\u0028\\\\u0031\\\\u0039\\\\u0029';\\r\\n t['\\\\u2487'] = '\\\\u0028\\\\u0032\\\\u0030\\\\u0029';\\r\\n t['\\\\u2488'] = '\\\\u0031\\\\u002E';\\r\\n t['\\\\u2489'] = '\\\\u0032\\\\u002E';\\r\\n t['\\\\u248A'] = '\\\\u0033\\\\u002E';\\r\\n t['\\\\u248B'] = '\\\\u0034\\\\u002E';\\r\\n t['\\\\u248C'] = '\\\\u0035\\\\u002E';\\r\\n t['\\\\u248D'] = '\\\\u0036\\\\u002E';\\r\\n t['\\\\u248E'] = '\\\\u0037\\\\u002E';\\r\\n t['\\\\u248F'] = '\\\\u0038\\\\u002E';\\r\\n t['\\\\u2490'] = '\\\\u0039\\\\u002E';\\r\\n t['\\\\u2491'] = '\\\\u0031\\\\u0030\\\\u002E';\\r\\n t['\\\\u2492'] = '\\\\u0031\\\\u0031\\\\u002E';\\r\\n t['\\\\u2493'] = '\\\\u0031\\\\u0032\\\\u002E';\\r\\n t['\\\\u2494'] = '\\\\u0031\\\\u0033\\\\u002E';\\r\\n t['\\\\u2495'] = '\\\\u0031\\\\u0034\\\\u002E';\\r\\n t['\\\\u2496'] = '\\\\u0031\\\\u0035\\\\u002E';\\r\\n t['\\\\u2497'] = '\\\\u0031\\\\u0036\\\\u002E';\\r\\n t['\\\\u2498'] = '\\\\u0031\\\\u0037\\\\u002E';\\r\\n t['\\\\u2499'] = '\\\\u0031\\\\u0038\\\\u002E';\\r\\n t['\\\\u249A'] = '\\\\u0031\\\\u0039\\\\u002E';\\r\\n t['\\\\u249B'] = '\\\\u0032\\\\u0030\\\\u002E';\\r\\n t['\\\\u249C'] = '\\\\u0028\\\\u0061\\\\u0029';\\r\\n t['\\\\u249D'] = '\\\\u0028\\\\u0062\\\\u0029';\\r\\n t['\\\\u249E'] = '\\\\u0028\\\\u0063\\\\u0029';\\r\\n t['\\\\u249F'] = '\\\\u0028\\\\u0064\\\\u0029';\\r\\n t['\\\\u24A0'] = '\\\\u0028\\\\u0065\\\\u0029';\\r\\n t['\\\\u24A1'] = '\\\\u0028\\\\u0066\\\\u0029';\\r\\n t['\\\\u24A2'] = '\\\\u0028\\\\u0067\\\\u0029';\\r\\n t['\\\\u24A3'] = '\\\\u0028\\\\u0068\\\\u0029';\\r\\n t['\\\\u24A4'] = '\\\\u0028\\\\u0069\\\\u0029';\\r\\n t['\\\\u24A5'] = '\\\\u0028\\\\u006A\\\\u0029';\\r\\n t['\\\\u24A6'] = '\\\\u0028\\\\u006B\\\\u0029';\\r\\n t['\\\\u24A7'] = '\\\\u0028\\\\u006C\\\\u0029';\\r\\n t['\\\\u24A8'] = '\\\\u0028\\\\u006D\\\\u0029';\\r\\n t['\\\\u24A9'] = '\\\\u0028\\\\u006E\\\\u0029';\\r\\n t['\\\\u24AA'] = '\\\\u0028\\\\u006F\\\\u0029';\\r\\n t['\\\\u24AB'] = '\\\\u0028\\\\u0070\\\\u0029';\\r\\n t['\\\\u24AC'] = '\\\\u0028\\\\u0071\\\\u0029';\\r\\n t['\\\\u24AD'] = '\\\\u0028\\\\u0072\\\\u0029';\\r\\n t['\\\\u24AE'] = '\\\\u0028\\\\u0073\\\\u0029';\\r\\n t['\\\\u24AF'] = '\\\\u0028\\\\u0074\\\\u0029';\\r\\n t['\\\\u24B0'] = '\\\\u0028\\\\u0075\\\\u0029';\\r\\n t['\\\\u24B1'] = '\\\\u0028\\\\u0\";a.a+=\"076\\\\u0029';\\r\\n t['\\\\u24B2'] = '\\\\u0028\\\\u0077\\\\u0029';\\r\\n t['\\\\u24B3'] = '\\\\u0028\\\\u0078\\\\u0029';\\r\\n t['\\\\u24B4'] = '\\\\u0028\\\\u0079\\\\u0029';\\r\\n t['\\\\u24B5'] = '\\\\u0028\\\\u007A\\\\u0029';\\r\\n t['\\\\u2A0C'] = '\\\\u222B\\\\u222B\\\\u222B\\\\u222B';\\r\\n t['\\\\u2A74'] = '\\\\u003A\\\\u003A\\\\u003D';\\r\\n t['\\\\u2A75'] = '\\\\u003D\\\\u003D';\\r\\n t['\\\\u2A76'] = '\\\\u003D\\\\u003D\\\\u003D';\\r\\n t['\\\\u2E9F'] = '\\\\u6BCD';\\r\\n t['\\\\u2EF3'] = '\\\\u9F9F';\\r\\n t['\\\\u2F00'] = '\\\\u4E00';\\r\\n t['\\\\u2F01'] = '\\\\u4E28';\\r\\n t['\\\\u2F02'] = '\\\\u4E36';\\r\\n t['\\\\u2F03'] = '\\\\u4E3F';\\r\\n t['\\\\u2F04'] = '\\\\u4E59';\\r\\n t['\\\\u2F05'] = '\\\\u4E85';\\r\\n t['\\\\u2F06'] = '\\\\u4E8C';\\r\\n t['\\\\u2F07'] = '\\\\u4EA0';\\r\\n t['\\\\u2F08'] = '\\\\u4EBA';\\r\\n t['\\\\u2F09'] = '\\\\u513F';\\r\\n t['\\\\u2F0A'] = '\\\\u5165';\\r\\n t['\\\\u2F0B'] = '\\\\u516B';\\r\\n t['\\\\u2F0C'] = '\\\\u5182';\\r\\n t['\\\\u2F0D'] = '\\\\u5196';\\r\\n t['\\\\u2F0E'] = '\\\\u51AB';\\r\\n t['\\\\u2F0F'] = '\\\\u51E0';\\r\\n t['\\\\u2F10'] = '\\\\u51F5';\\r\\n t['\\\\u2F11'] = '\\\\u5200';\\r\\n t['\\\\u2F12'] = '\\\\u529B';\\r\\n t['\\\\u2F13'] = '\\\\u52F9';\\r\\n t['\\\\u2F14'] = '\\\\u5315';\\r\\n t['\\\\u2F15'] = '\\\\u531A';\\r\\n t['\\\\u2F16'] = '\\\\u5338';\\r\\n t['\\\\u2F17'] = '\\\\u5341';\\r\\n t['\\\\u2F18'] = '\\\\u535C';\\r\\n t['\\\\u2F19'] = '\\\\u5369';\\r\\n t['\\\\u2F1A'] = '\\\\u5382';\\r\\n t['\\\\u2F1B'] = '\\\\u53B6';\\r\\n t['\\\\u2F1C'] = '\\\\u53C8';\\r\\n t['\\\\u2F1D'] = '\\\\u53E3';\\r\\n t['\\\\u2F1E'] = '\\\\u56D7';\\r\\n t['\\\\u2F1F'] = '\\\\u571F';\\r\\n t['\\\\u2F20'] = '\\\\u58EB';\\r\\n t['\\\\u2F21'] = '\\\\u5902';\\r\\n t['\\\\u2F22'] = '\\\\u590A';\\r\\n t['\\\\u2F23'] = '\\\\u5915';\\r\\n t['\\\\u2F24'] = '\\\\u5927';\\r\\n t['\\\\u2F25'] = '\\\\u5973';\\r\\n t['\\\\u2F26'] = '\\\\u5B50';\\r\\n t['\\\\u2F27'] = '\\\\u5B80';\\r\\n t['\\\\u2F28'] = '\\\\u5BF8';\\r\\n t['\\\\u2F29'] = '\\\\u5C0F';\\r\\n t['\\\\u2F2A'] = '\\\\u5C22';\\r\\n t['\\\\u2F2B'] = '\\\\u5C38';\\r\\n t['\\\\u2F2C'] = '\\\\u5C6E';\\r\\n t['\\\\u2F2D'] = '\\\\u5C71';\\r\\n t['\\\\u2F2E'] = '\\\\u5DDB';\\r\\n t['\\\\u2F2F'] = '\\\\u5DE5';\\r\\n t['\\\\u2F30'] = '\\\\u5DF1';\\r\\n t['\\\\u2F31'] = '\\\\u5DFE';\\r\\n t['\\\\u2F32'] = '\\\\u5E72';\\r\\n t['\\\\u2F33'] = '\\\\u5E7A';\\r\\n t['\\\\u2F34'] = '\\\\u5E7F';\\r\\n t['\\\\u2F35'] = '\\\\u5EF4';\\r\\n t['\\\\u2F36'] = '\\\\u5EFE';\\r\\n t['\\\\u2F37'] = '\\\\u5F0B';\\r\\n t['\\\\u2F38'] = '\\\\u5F13';\\r\\n t['\\\\u2F39'] = '\\\\u5F50';\\r\\n t['\\\\u2F3A'] = '\\\\u5F61';\\r\\n t['\\\\u2F3B'] = '\\\\u5F73';\\r\\n t['\\\\u2F3C'] = '\\\\u5FC3';\\r\\n t['\\\\u2F3D'] = '\\\\u6208';\\r\\n t['\\\\u2F3E'] = '\\\\u6236';\\r\\n t['\\\\u2F3F'] = '\\\\u624B';\\r\\n t['\\\\u2F40'] = '\\\\u652F';\\r\\n t['\\\\u2F41'] = '\\\\u6534';\\r\\n t['\\\\u2F42'] = '\\\\u6587';\\r\\n t['\\\\u2F43'] = '\\\\u6597';\\r\\n t['\\\\u2F44'] = '\\\\u65A4';\\r\\n t['\\\\u2F45'] = '\\\\u65B9';\\r\\n t['\\\\u2F46'] = '\\\\u65E0';\\r\\n t['\\\\u2F47'] = '\\\\u65E5';\\r\\n t['\\\\u2F48'] = '\\\\u66F0';\\r\\n t['\\\\u2F49'] = '\\\\u6708';\\r\\n t['\\\\u2F4A'] = '\\\\u6728';\\r\\n t['\\\\u2F4B'] = '\\\\u6B20';\\r\\n t['\\\\u2F4C'] = '\\\\u6B62';\\r\\n t['\\\\u2F4D'] = '\\\\u6B79';\\r\\n t['\\\\u2F4E'] = '\\\\u6BB3';\\r\\n t['\\\\u2F4F'] = '\\\\u6BCB';\\r\\n t['\\\\u2F50'] = '\\\\u6BD4';\\r\\n t['\\\\u2F51'] = '\\\\u6BDB';\\r\\n t['\\\\u2F52'] = '\\\\u6C0F';\\r\\n t['\\\\u2F53'] = '\\\\u6C14';\\r\\n t['\\\\u2F54'] = '\\\\u6C34';\\r\\n t['\\\\u2F55'] = '\\\\u706B';\\r\\n t['\\\\u2F56'] = '\\\\u722A';\\r\\n t['\\\\u2F57'] = '\\\\u7236';\\r\\n t['\\\\u2F58'] = '\\\\u723B';\\r\\n t['\\\\u2F59'] = '\\\\u723F';\\r\\n t['\\\\u2F5A'] = '\\\\u7247';\\r\\n t['\\\\u2F5B'] = '\\\\u7259';\\r\\n t['\\\\u2F5C'] = '\\\\u725B';\\r\\n t['\\\\u2F5D'] = '\\\\u72AC';\\r\\n t['\\\\u2F5E'] = '\\\\u7384';\\r\\n t['\\\\u2F5F'] = '\\\\u7389';\\r\\n t['\\\\u2F60'] = '\\\\u74DC';\\r\\n t['\\\\u2F61'] = '\\\\u74E6';\\r\\n t['\\\\u2F62'] = '\\\\u7518';\\r\\n t['\\\\u2F63'] = '\\\\u751F';\\r\\n t['\\\\u2F64'] = '\\\\u7528';\\r\\n t['\\\\u2F65'] = '\\\\u7530';\\r\\n t['\\\\u2F66'] = '\\\\u758B';\\r\\n t['\\\\u2F67'] = '\\\\u7592';\\r\\n t['\\\\u2F68'] = '\\\\u7676';\\r\\n t['\\\\u2F69'] = '\\\\u767D';\\r\\n t['\\\\u2F6A'] = '\\\\u76AE';\\r\\n t['\\\\u2F6B'] = '\\\\u76BF';\\r\\n t['\\\\u2F6C'] = '\\\\u76EE';\\r\\n t['\\\\u2F6D'] = '\\\\u77DB';\\r\\n t['\\\\u2F6E'] = '\\\\u77E2';\\r\\n t['\\\\u2F6F'] = '\\\\u77F3';\\r\\n t['\\\\u2F70'] = '\\\\u793A';\\r\\n t['\\\\u2F71'] = '\\\\u79B8';\\r\\n t['\\\\u2F72'] = '\\\\u79BE';\\r\\n t['\\\\u2F73'] = '\\\\u7A74';\\r\\n t['\\\\u2F74'] = '\\\\u7ACB';\\r\\n t['\\\\u2F75'] = '\\\\u7AF9';\\r\\n t['\\\\u2F76'] = '\\\\u7C73';\\r\\n t['\\\\u2F77'] = '\\\\u7CF8';\\r\\n t['\\\\u2F78'] = '\\\\u7F36';\\r\\n t['\\\\u2F79'] = '\\\\u7F51';\\r\\n t['\\\\u2F7A'] = '\\\\u7F8A';\\r\\n t['\\\\u2F7B'] = '\\\\u7FBD';\\r\\n t['\\\\u2F7C'] = '\\\\u8001';\\r\\n t['\\\\u2F7D'] = '\\\\u800C';\\r\\n t['\\\\u2F7E'] = '\\\\u8012';\\r\\n t['\\\\u2F7F'] = '\\\\u8033';\\r\\n t['\\\\u2F80'] = '\\\\u807F';\\r\\n t['\\\\u2F81'] = '\\\\u8089';\\r\\n t['\\\\u2F82'] = '\\\\u81E3';\\r\\n t['\\\\u2F83'] = '\\\\u81EA';\\r\\n t['\\\\u2F84'] = '\\\\u81F3';\\r\\n t['\\\\u2F85'] = '\\\\u81FC';\\r\\n t['\\\\u2F86'] = '\\\\u820C';\\r\\n t['\\\\u2F87'] = '\\\\u821B';\\r\\n t['\\\\u2F88'] = '\\\\u821F';\\r\\n t['\\\\u2F89'] = '\\\\u826E';\\r\\n t['\\\\u2F8A'] = '\\\\u8272';\\r\\n t['\\\\u2F8B'] = '\\\\u8278';\\r\\n t['\\\\u2F8C'] = '\\\\u864D';\\r\\n t['\\\\u2F8D'] = '\\\\u866B';\\r\\n t['\\\\u2F8E'] = '\\\\u8840';\\r\\n t['\\\\u2F8F'] = '\\\\u884C';\\r\\n t['\\\\u2F90'] = '\\\\u8863';\\r\\n t['\\\\u2F91'] = '\\\\u897E';\\r\\n t['\\\\u2F92'] = '\\\\u898B';\\r\\n t['\\\\u2F93'] = '\\\\u89D2';\\r\\n t['\\\\u2F94'] = '\\\\u8A00';\\r\\n t['\\\\u2F95'] = '\\\\u8C37';\\r\\n t['\\\\u2F96'] = '\\\\u8C46';\\r\\n t['\\\\u2F97'] = '\\\\u8C55';\\r\\n t['\\\\u2F98'] = '\\\\u8C78';\\r\\n t['\\\\u2F99'] = '\\\\u8C9D';\\r\\n t['\\\\u2F9A'] = '\\\\u8D64';\\r\\n t['\\\\u2F9B'] = '\\\\u8D70';\\r\\n t['\\\\u2F9C'] = '\\\\u8DB3';\\r\\n t['\\\\u2F9D'] = '\\\\u8EAB';\\r\\n t['\\\\u2F9E'] = '\\\\u8ECA';\\r\\n t['\\\\u2F9F'] = '\\\\u8F9B';\\r\\n t['\\\\u2FA0'] = '\\\\u8FB0';\\r\\n t['\\\\u2FA1'] = '\\\\u8FB5';\\r\\n t['\\\\u2FA2'] = '\\\\u9091';\\r\\n t['\\\\u2FA3'] = '\\\\u9149';\\r\\n t['\\\\u2FA4'] = '\\\\u91C6';\\r\\n t['\\\\u2FA5'] = '\\\\u91CC';\\r\\n t['\\\\u2FA6'] = '\\\\u91D1';\\r\\n t['\\\\u2FA7'] = '\\\\u9577';\\r\\n t['\\\\u2FA8'] = '\\\\u9580';\\r\\n t['\\\\u2FA9'] = '\\\\u961C';\\r\\n t['\\\\u2FAA'] = '\\\\u96B6';\\r\\n t['\\\\u2FAB'] = '\\\\u96B9';\\r\\n t['\\\\u2FAC'] = '\\\\u96E8';\\r\\n t['\\\\u2FAD'] = '\\\\u9751';\\r\\n t['\\\\u2FAE'] = '\\\\u975E';\\r\\n t['\\\\u2FAF'] = '\\\\u9762';\\r\\n t['\\\\u2FB0'] = '\\\\u9769';\\r\\n t['\\\\u2FB1'] = '\\\\u97CB';\\r\\n t['\\\\u2FB2'] = '\\\\u97ED';\\r\\n t['\\\\u2FB3'] = '\\\\u97F3';\\r\\n t['\\\\u2FB4'] = '\\\\u9801';\\r\\n t['\\\\u2FB5'] = '\\\\u98A8';\\r\\n t['\\\\u2FB6'] = '\\\\u98DB';\\r\\n t['\\\\u2FB7'] = '\\\\u98DF';\\r\\n t['\\\\u2FB8'] = '\\\\u9996';\\r\\n t['\\\\u2FB9'] = '\\\\u9999';\\r\\n t['\\\\u2FBA'] = '\\\\u99AC';\\r\\n t['\\\\u2FBB'] = '\\\\u9AA8';\\r\\n t['\\\\u2FBC'] = '\\\\u9AD8';\\r\\n t['\\\\u2FBD'] = '\\\\u9ADF';\\r\\n t['\\\\u2FBE'] = '\\\\u9B25';\\r\\n t['\\\\u2FBF'] = '\\\\u9B2F';\\r\\n t['\\\\u2FC0'] = '\\\\u9B32';\\r\\n t['\\\\u2FC1'] = '\\\\u9B3C';\\r\\n t['\\\\u2FC2'] = '\\\\u9B5A';\\r\\n t['\\\\u2FC3'] = '\\\\u9CE5';\\r\\n t['\\\\u2FC4'] = '\\\\u9E75';\\r\\n t['\\\\u2FC5'] = '\\\\u9E7F';\\r\\n t['\\\\u2FC6'] = '\\\\u9EA5';\\r\\n t['\\\\u2FC7'] = '\\\\u9EBB';\\r\\n t['\\\\u2FC8'] = '\\\\u9EC3';\\r\\n t['\\\\u2FC9'] = '\\\\u9ECD';\\r\\n t['\\\\u2FCA'] = '\\\\u9ED1';\\r\\n t['\\\\u2FCB'] = '\\\\u9EF9';\\r\\n t['\\\\u2FCC'] = '\\\\u9EFD';\\r\\n t['\\\\u2FCD'] = '\\\\u9F0E';\\r\\n t['\\\\u2FCE'] = '\\\\u9F13';\\r\\n t['\\\\u2FCF'] = '\\\\u9F20';\\r\\n t['\\\\u2FD0'] = '\\\\u9F3B';\\r\\n t['\\\\u2FD1'] = '\\\\u9F4A';\\r\\n t['\\\\u2FD2'] = '\\\\u9F52';\\r\\n t['\\\\u2FD3'] = '\\\\u9F8D';\\r\\n t['\\\\u2FD4'] = '\\\\u9F9C';\\r\\n t['\\\\u2FD5'] = '\\\\u9FA0';\\r\\n t['\\\\u3036'] = '\\\\u3012';\\r\\n t['\\\\u3038'] = '\\\\u5341';\\r\\n t['\\\\u3039'] = '\\\\u5344';\\r\\n t['\\\\u303A'] = '\\\\u5345';\\r\\n t['\\\\u309B'] = '\\\\u0020\\\\u3099';\\r\\n t['\\\\u309C'] = '\\\\u0020\\\\u309A';\\r\\n t['\\\\u3131'] = '\\\\u1100';\\r\\n t['\\\\u3132'] = '\\\\u1101';\\r\\n t['\\\\u3133'] = '\\\\u11AA';\\r\\n t['\\\\u3134'] = '\\\\u1102';\\r\\n t['\\\\u3135'] = '\\\\u11AC';\\r\\n t['\\\\u3136'] = '\\\\u11AD';\\r\\n t['\\\\u3137'] = '\\\\u1103';\\r\\n t['\\\\u3138'] = '\\\\u1104';\\r\\n t['\\\\u3139'] = '\\\\u1105';\\r\\n t['\\\\u313A'] = '\\\\u11B0';\\r\\n t['\\\\u313B'] = '\\\\u11B1';\\r\\n t['\\\\u313C'] = '\\\\u11B2';\\r\\n t['\\\\u313D'] = '\\\\u11B3';\\r\\n t['\\\\u313E'] = '\\\\u11B4';\\r\\n t['\\\\u313F'] = '\\\\u11B5';\\r\\n t['\\\\u3140'] = '\\\\u111A';\\r\\n t['\\\\u3141'] = '\\\\u1106';\\r\\n t['\\\\u3142'] = '\\\\u1107';\\r\\n t['\\\\u3143'] = '\\\\u1108';\\r\\n t['\\\\u3144'] = '\\\\u1121';\\r\\n t['\\\\u3145'] = '\\\\u1109';\\r\\n t['\\\\u3146'] = '\\\\u110A';\\r\\n t['\\\\u3147'] = '\\\\u110B';\\r\\n t['\\\\u3148'] = '\\\\u110C';\\r\\n t['\\\\u3149'] = '\\\\u110D';\\r\\n t['\\\\u314A'] = '\\\\u110E';\\r\\n t['\\\\u314B'] = '\\\\u110F';\\r\\n t['\\\\u314C'] = '\\\\u1110';\\r\\n t['\\\\u314D'] = '\\\\u1111';\\r\\n t['\\\\u314E'] = '\\\\u1112';\\r\\n t['\\\\u314F'] = '\\\\u1161';\\r\\n t['\\\\u3150'] = '\\\\u1162';\\r\\n t['\\\\u3151'] = '\\\\u1163';\\r\\n t['\\\\u3152'] = '\\\\u1164';\\r\\n t['\\\\u3153'] = '\\\\u1165';\\r\\n t['\\\\u3154'] = '\\\\u1166';\\r\\n t['\\\\u3155'] = '\\\\u1167';\\r\\n t['\\\\u3156'] = '\\\\u1168';\\r\\n t['\\\\u3157'] = '\\\\u1169';\\r\\n t['\\\\u3158'] = '\\\\u116A';\\r\\n t['\\\\u3159'] = '\\\\u116B';\\r\\n t['\\\\u315A'] = '\\\\u116C';\\r\\n t['\\\\u315B'] = '\\\\u116D';\\r\\n t['\\\\u315C'] = '\\\\u116E';\\r\\n t['\\\\u315D'] = '\\\\u116F';\\r\\n t['\\\\u315E'] = '\\\\u1170';\\r\\n t['\\\\u315F'] = '\\\\u1171';\\r\\n t['\\\\u3160'] = '\\\\u1172';\\r\\n t['\\\\u3161'] = '\\\\u1173';\\r\\n t['\\\\u3162'] = '\\\\u1174';\\r\\n t['\\\\u3163'] = '\\\\u1175';\\r\\n t['\\\\u3164'] = '\\\\u1160';\\r\\n t['\\\\u3165'] = '\\\\u1114';\\r\\n t['\\\\u3166'] = '\\\\u1115';\\r\\n t['\\\\u3167'] = '\\\\u11C7';\\r\\n t['\\\\u3168'] = '\\\\u11C8';\\r\\n t['\\\\u3169'] = '\\\\u11CC';\\r\\n t['\\\\u316A'] = '\\\\u11CE';\\r\\n t['\\\\u316B'] = '\\\\u11D3';\\r\\n t['\\\\u316C'] = '\\\\u11D7';\\r\\n t['\\\\u316D'] = '\\\\u11D9';\\r\\n t['\\\\u316E'] = '\\\\u111C';\\r\\n t['\\\\u316F'] = '\\\\u11DD';\\r\\n t['\\\\u3170'] = '\\\\u11DF';\\r\\n t['\\\\u3171'] = '\\\\u111D';\\r\\n t['\\\\u3172'] = '\\\\u111E';\\r\\n t['\\\\u3173'] = '\\\\u1120';\\r\\n t['\\\\u3174'] = '\\\\u1122';\\r\\n t['\\\\u3175'] = '\\\\u1123';\\r\\n t['\\\\u3176'] = '\\\\u1127';\\r\\n t['\\\\u3177'] = '\\\\u1129';\\r\\n t['\\\\u3178'] = '\\\\u112B';\\r\\n t['\\\\u3179'] = '\\\\u112C';\\r\\n t['\\\\u317A'] = '\\\\u112D';\\r\\n t['\\\\u317B'] = '\\\\u112E';\\r\\n t['\\\\u317C'] = '\\\\u112F';\\r\\n t['\\\\u317D'] = '\\\\u1132';\\r\\n t['\\\\u317E'] = '\\\\u1136';\\r\\n t['\\\\u317F'] = '\\\\u1140';\\r\\n t['\\\\u3180'] = '\\\\u1147';\\r\\n t['\\\\u3181'] = '\\\\u114C';\\r\\n t['\\\\u3182'] = '\\\\u11F1';\\r\\n t['\\\\u3183'] = '\\\\u11F2';\\r\\n t['\\\\u3184'] = '\\\\u1157';\\r\\n t['\\\\u3185'] = '\\\\u1158';\\r\\n t['\\\\u3186'] = '\\\\u1159';\\r\\n t['\\\\u3187'] = '\\\\u1184';\\r\\n t['\\\\u3188'] = '\\\\u1185';\\r\\n t['\\\\u3189'] = '\\\\u1188';\\r\\n t['\\\\u318A'] = '\\\\u1191';\\r\\n t['\\\\u318B'] = '\\\\u1192';\\r\\n t['\\\\u318C'] = '\\\\u1194';\\r\\n t['\\\\u318D'] = '\\\\u119E';\\r\\n t['\\\\u318E'] = '\\\\u11A1';\\r\\n t['\\\\u3200'] = '\\\\u0028\\\\u1100\\\\u0029';\\r\\n t['\\\\u3201'] = '\\\\u0028\\\\u1102\\\\u0029';\\r\\n t['\\\\u3202'] = '\\\\u0028\\\\u1103\\\\u0029';\\r\\n t['\\\\u3203'] = '\\\\u0028\\\\u1105\\\\u0029';\\r\\n t['\\\\u3204'] = '\\\\u0028\\\\u1106\\\\u0029';\\r\\n t['\\\\u3205'] = '\\\\u0028\\\\u1107\\\\u0029';\\r\\n t['\\\\u3206'] = '\\\\u0028\\\\u1109\\\\u0029';\\r\\n t['\\\\u3207'] = '\\\\u0028\\\\u110B\\\\u0029';\\r\\n t['\\\\u3208'] = '\\\\u0028\\\\u110C\\\\u0029';\\r\\n t['\\\\u3209'] = '\\\\u0028\\\\u110E\\\\u0029';\\r\\n t['\\\\u320A'] = '\\\\u0028\\\\u110F\\\\u0029';\\r\\n t['\\\\u320B'] = '\\\\u0028\\\\u1110\\\\u0029';\\r\\n t['\\\\u320C'] = '\\\\u0028\\\\u1111\\\\u0029';\\r\\n t['\\\\u320D'] = '\\\\u0028\\\\u1112\\\\u0029';\\r\\n t['\\\\u320E'] = '\\\\u0028\\\\u1100\\\\u1161\\\\u0029';\\r\\n t['\\\\u320F'] = '\\\\u0028\\\\u1102\\\\u1161\\\\u0029';\\r\\n t['\\\\u3210'] = '\\\\u0028\\\\u1103\\\\u1161\\\\u0029';\\r\\n t['\\\\u3211'] = '\\\\u0028\\\\u1105\\\\u1161\\\\u0029';\\r\\n t['\\\\u3212'] = '\\\\u0028\\\\u1106\\\\u1161\\\\u0029';\\r\\n t['\\\\u3213'] = '\\\\u0028\\\\u1107\\\\u1161\\\\u0029';\\r\\n t['\\\\u3214'] = '\\\\u0028\\\\u1109\\\\u1161\\\\u0029';\\r\\n t['\\\\u3215'] = '\\\\u0028\\\\u110B\\\\u1161\\\\u0029';\\r\\n t['\\\\u3216'] = '\\\\u0028\\\\u110C\\\\u1161\\\\u0029';\\r\\n t['\\\\u3217'] = '\\\\u0028\\\\u110E\\\\u1161\\\\u0029';\\r\\n t['\\\\u3218'] = '\\\\u0028\\\\u110F\\\\u1161\\\\u0029';\\r\\n t['\\\\u3219'] = '\\\\u0028\\\\u1110\\\\u1161\\\\u0029';\\r\\n t['\\\\u321A'] = '\\\\u0028\\\\u1111\\\\u1161\\\\u0029';\\r\\n t['\\\\u321B'] = '\\\\u0028\\\\u1112\\\\u1161\\\\u0029';\\r\\n t['\\\\u321C'] = '\\\\u0028\\\\u110C\\\\u116E\\\\u0029';\\r\\n t['\\\\u321D'] = '\\\\u0028\\\\u110B\\\\u1169\\\\u110C\\\\u1165\\\\u11AB\\\\u0029';\\r\\n t['\\\\u321E'] = '\\\\u0028\\\\u110B\\\\u1169\\\\u1112\\\\u116E\\\\u0029';\\r\\n t['\\\\u3220'] = '\\\\u0028\\\\u4E00\\\\u0029';\\r\\n t['\\\\u3221'] = '\\\\u0028\\\\u4E8C\\\\u0029';\\r\\n t['\\\\u3222'] = '\\\\u0028\\\\u4E09\\\\u0029';\\r\\n t['\\\\u3223'] = '\\\\u0028\\\\u56DB\\\\u0029';\\r\\n t['\\\\u3224'] = '\\\\u0028\\\\u4E94\\\\u0029';\\r\\n t['\\\\u3225'] = '\\\\u0028\\\\u516D\\\\u0029';\\r\\n t['\\\\u3226'] = '\\\\u0028\\\\u4E03\\\\u0029';\\r\\n t['\\\\u3227'] = '\\\\u0028\\\\u516B\\\\u0029';\\r\\n t['\\\\u3228'] = '\\\\u0028\\\\u4E5D\\\\u0029';\\r\\n t['\\\\u3229'] = '\\\\u0028\\\\u5341\\\\u0029';\\r\\n t['\\\\u322A'] = '\\\\u0028\\\\u6708\\\\u0029';\\r\\n t['\\\\u322B'] = '\\\\u0028\\\\u706B\\\\u0029';\\r\\n t['\\\\u322C'] = '\\\\u0028\\\\u6C34\\\\u0029';\\r\\n t['\\\\u322D'] = '\\\\u0028\\\\u6728\\\\u0029';\\r\\n t['\\\\u322E'] = '\\\\u0028\\\\u91D1\\\\u0029';\\r\\n t['\\\\u322F'] = '\\\\u0028\\\\u571F\\\\u0029';\\r\\n t['\\\\u3230'] = '\\\\u0028\\\\u65E5\\\\u0029';\\r\\n t['\\\\u3231'] = '\\\\u0028\\\\u682A\\\\u0029';\\r\\n t['\\\\u3232'] = '\\\\u0028\\\\u6709\\\\u0029';\\r\\n t['\\\\u3233'] = '\\\\u0028\\\\u793E\\\\u0029';\\r\\n t['\\\\u3234'] = '\\\\u0028\\\\u540D\\\\u0029';\\r\\n t['\\\\u3235'] = '\\\\u0028\\\\u7279\\\\u0029';\\r\\n t['\\\\u3236'] = '\\\\u0028\\\\u8CA1\\\\u0029';\\r\\n t['\\\\u3237'] = '\\\\u0028\\\\u795D\\\\u0029';\\r\\n t['\\\\u3238'] = '\\\\u0028\\\\u52B4\\\\u0029';\\r\\n t['\\\\u3239'] = '\\\\u0028\\\\u4EE3\\\\u0029';\\r\\n t['\\\\u323A'] = '\\\\u0028\\\\u547C\\\\u0029';\\r\\n t['\\\\u323B'] = '\\\\u0028\\\\u5B66\\\\u0029';\\r\\n t['\\\\u323C'] = '\\\\u0028\\\\u76E3\\\\u0029';\\r\\n t['\\\\u323D'] = '\\\\u0028\\\\u4F01\\\\u0029';\\r\\n t['\\\\u323E'] = '\\\\u0028\\\\u8CC7\\\\u0029';\\r\\n t['\\\\u323F'] = '\\\\u0028\\\\u5354\\\\u0029';\\r\\n t['\\\\u3240'] = '\\\\u0028\\\\u796D\\\\u0029';\\r\\n t['\\\\u3241'] = '\\\\u0028\\\\u4F11\\\\u0029';\\r\\n t['\\\\u3242'] = '\\\\u0028\\\\u81EA\\\\u0029';\\r\\n t['\\\\u3243'] = '\\\\u0028\\\\u81F3\\\\u0029';\\r\\n t['\\\\u32C0'] = '\\\\u0031\\\\u6708';\\r\\n t['\\\\u32C1'] = '\\\\u0032\\\\u6708';\\r\\n t['\\\\u32C2'] = '\\\\u0033\\\\u6708';\\r\\n t['\\\\u32C3'] = '\\\\u0034\\\\u6708';\\r\\n t['\\\\u32C4'] = '\\\\u0035\\\\u6708';\\r\\n t['\\\\u32C5'] = '\\\\u0036\\\\u6708';\\r\\n t['\\\\u32C6'] = '\\\\u0037\\\\u6708';\\r\\n t['\\\\u32C7'] = '\\\\u0038\\\\u6708';\\r\\n t['\\\\u32C8'] = '\\\\u0039\\\\u6708';\\r\\n t['\\\\u32C9'] = '\\\\u0031\\\\u0030\\\\u6708';\\r\\n t['\\\\u32CA'] = '\\\\u0031\\\\u0031\\\\u6708';\\r\\n t['\\\\u32CB'] = '\\\\u0031\\\\u0032\\\\u6708';\\r\\n t['\\\\u3358'] = '\\\\u0030\\\\u70B9';\\r\\n t['\\\\u3359'] = '\\\\u0031\\\\u70B9';\\r\\n t['\\\\u335A'] = '\\\\u0032\\\\u70B9';\\r\\n t['\\\\u335B'] = '\\\\u0033\\\\u70B9';\\r\\n t['\\\\u335C'] = '\\\\u0034\\\\u70B9';\\r\\n t['\\\\u335D'] = '\\\\u0035\\\\u70B9';\\r\\n t['\\\\u335E'] = '\\\\u0036\\\\u70B9';\\r\\n t['\\\\u335F'] = '\\\\u0037\\\\u70B9';\\r\\n t['\\\\u3360'] = '\\\\u0038\\\\u70B9';\\r\\n t['\\\\u3361'] = '\\\\u0039\\\\u70B9';\\r\\n t['\\\\u3362'] = '\\\\u0031\\\\u0030\\\\u70B9';\\r\\n t['\\\\u3363'] = '\\\\u0031\\\\u0031\\\\u70B9';\\r\\n t['\\\\u3364'] = '\\\\u0031\\\\u0032\\\\u70B9';\\r\\n t['\\\\u3365'] = '\\\\u0031\\\\u0033\\\\u70B9';\\r\\n t['\\\\u3366'] = '\\\\u0031\\\\u0034\\\\u70B9';\\r\\n t['\\\\u3367'] = '\\\\u0031\\\\u0035\\\\u70B9';\\r\\n t['\\\\u3368'] = '\\\\u0031\\\\u0036\\\\u70B9';\\r\\n t['\\\\u3369'] = '\\\\u0031\\\\u0037\\\\u70B9';\\r\\n t['\\\\u336A'] = '\\\\u0031\\\\u0038\\\\u70B9';\\r\\n t['\\\\u336B'] = '\\\\u0031\\\\u0039\\\\u70B9';\\r\\n t['\\\\u336C'] = '\\\\u0032\\\\u0030\\\\u70B9';\\r\\n t['\\\\u336D'] = '\\\\u0032\\\\u0031\\\\u70B9';\\r\\n t['\\\\u336E'] = '\\\\u0032\\\\u0032\\\\u70B9';\\r\\n t['\\\\u336F'] = '\\\\u0032\\\\u0033\\\\u70B9';\\r\\n t['\\\\u3370'] = '\\\\u0032\\\\u0034\\\\u70B9';\\r\\n t['\\\\u33E0'] = '\\\\u0031\\\\u65E5';\\r\\n t['\\\\u33E1'] = '\\\\u0032\\\\u65E5';\\r\\n t['\\\\u33E2'] = '\\\\u0033\\\\u65E5';\\r\\n t['\\\\u33E3'] = '\\\\u0034\\\\u65E5';\\r\\n t['\\\\u33E4'] = '\\\\u0035\\\\u65E5';\\r\\n t['\\\\u33E5'] = '\\\\u0036\\\\u65E5';\\r\\n t['\\\\u33E6'] = '\\\\u0037\\\\u65E5';\\r\\n t['\\\\u33E7'] = '\\\\u0038\\\\u65E5';\\r\\n t['\\\\u33E8'] = '\\\\u0039\\\\u65E5';\\r\\n t['\\\\u33E9'] = '\\\\u0031\\\\u0030\\\\u65E5';\\r\\n t['\\\\u33EA'] = '\\\\u0031\\\\u0031\\\\u65E5';\\r\\n t['\\\\u33EB'] = '\\\\u0031\\\\u0032\\\\u65E5';\\r\\n t['\\\\u33EC'] = '\\\\u0031\\\\u0033\\\\u65E5';\\r\\n t['\\\\u33ED'] = '\\\\u0031\\\\u0034\\\\u65E5';\\r\\n t['\\\\u33EE'] = '\\\\u0031\\\\u0035\\\\u65E5';\\r\\n t['\\\\u33EF'] = '\\\\u0031\\\\u0036\\\\u65E5';\\r\\n t['\\\\u33F0'] = '\\\\u0031\\\\u0037\\\\u65E5';\\r\\n t['\\\\u33F1'] = '\\\\u0031\\\\u0038\\\\u65E5';\\r\\n t['\\\\u33F2'] = '\\\\u0031\\\\u0039\\\\u65E5';\\r\\n t['\\\\u33F3'] = '\\\\u0032\\\\u0030\\\\u65E5';\\r\\n t['\\\\u33F4'] = '\\\\u0032\\\\u0031\\\\u65E5';\\r\\n t['\\\\u33F5'] = '\\\\u0032\\\\u0032\\\\u65E5';\\r\\n t['\\\\u33F6'] = '\\\\u0032\\\\u0033\\\\u65E5';\\r\\n t['\\\\u33F7'] = '\\\\u0032\\\\u0034\\\\u65E5';\\r\\n t['\\\\u33F8'] = '\\\\u0032\\\\u0035\\\\u65E5';\\r\\n t['\\\\u33F9'] = '\\\\u0032\\\\u0036\\\\u65E5';\\r\\n t['\\\\u33FA'] = '\\\\u0032\\\\u0037\\\\u65E5';\\r\\n t['\\\\u33FB'] = '\\\\u0032\\\\u0038\\\\u65E5';\\r\\n t['\\\\u33FC'] = '\\\\u0032\\\\u0039\\\\u65E5';\\r\\n t['\\\\u33FD'] = '\\\\u0033\\\\u0030\\\\u65E5';\\r\\n t['\\\\u33FE'] = '\\\\u0033\\\\u0031\\\\u65E5';\\r\\n t['\\\\uFB00'] = '\\\\u0066\\\\u0066';\\r\\n t['\\\\uFB01'] = '\\\\u0066\\\\u0069';\\r\\n t['\\\\uFB02'] = '\\\\u0066\\\\u006C';\\r\\n t['\\\\uFB03'] = '\\\\u0066\\\\u0066\\\\u0069';\\r\\n t['\\\\uFB04'] = '\\\\u0066\\\\u0066\\\\u006C';\\r\\n t['\\\\uFB05'] = '\\\\u017F\\\\u0074';\\r\\n t['\\\\uFB06'] = '\\\\u0073\\\\u0074';\\r\\n t['\\\\uFB13'] = '\\\\u0574\\\\u0576';\\r\\n t['\\\\uFB14'] = '\\\\u0574\\\\u0565';\\r\\n t['\\\\uFB15'] = '\\\\u0574\\\\u056B';\\r\\n t['\\\\uFB16'] = '\\\\u057E\\\\u0576';\\r\\n t['\\\\uFB17'] = '\\\\u0574\\\\u056D';\\r\\n t['\\\\uFB4F'] = '\\\\u05D0\\\\u05DC';\\r\\n t['\\\\uFB50'] = '\\\\u0671';\\r\\n t['\\\\uFB51'] = '\\\\u0671';\\r\\n t['\\\\uFB52'] = '\\\\u067B';\\r\\n t['\\\\uFB53'] = '\\\\u067B';\\r\\n t['\\\\uFB54'] = '\\\\u067B';\\r\\n t['\\\\uFB55'] = '\\\\u067B';\\r\\n t['\\\\uFB56'] = '\\\\u067E';\\r\\n t['\\\\uFB57'] = '\\\\u067E';\\r\\n t['\\\\uFB58'] = '\\\\u067E';\\r\\n t['\\\\uFB59'] = '\\\\u067E';\\r\\n t['\\\\uFB5A'] = '\\\\u0680';\\r\\n t['\\\\uFB5B'] = '\\\\u0680';\\r\\n t['\\\\uFB5C'] = '\\\\u0680';\\r\\n t['\\\\uFB5D'] = '\\\\u0680';\\r\\n t['\\\\uFB5E'] = '\\\\u067A';\\r\\n t['\\\\uFB5F'] = '\\\\u067A';\\r\\n t['\\\\uFB60'] = '\\\\u067A';\\r\\n t['\\\\uFB61'] = '\\\\u067A';\\r\\n t['\\\\uFB62'] = '\\\\u067F';\\r\\n t['\\\\uFB63'] = '\\\\u067F';\\r\\n t['\\\\uFB64'] = '\\\\u067F';\\r\\n t['\\\\uFB65'] = '\\\\u067F';\\r\\n t['\\\\uFB66'] = '\\\\u0679';\\r\\n t['\\\\uFB67'] = '\\\\u0679';\\r\\n t['\\\\uFB68'] = '\\\\u0679';\\r\\n t['\\\\uFB69'] = '\\\\u0679';\\r\\n t['\\\\uFB6A'] = '\\\\u06A4';\\r\\n t['\\\\uFB6B'] = '\\\\u06A4';\\r\\n t['\\\\uFB6C'] = '\\\\u06A4';\\r\\n t['\\\\uFB6D'] = '\\\\u06A4';\\r\\n t['\\\\uFB6E'] = '\\\\u06A6';\\r\\n t['\\\\uFB6F'] = '\\\\u06A6';\\r\\n t['\\\\uFB70'] = '\\\\u06A6';\\r\\n t['\\\\uFB71'] = '\\\\u06A6';\\r\\n t['\\\\uFB72'] = '\\\\u0684';\\r\\n t['\\\\uFB73'] = '\\\\u0684';\\r\\n t['\\\\uFB74'] = '\\\\u0684';\\r\\n t['\\\\uFB75'] = '\\\\u0684';\\r\\n t['\\\\uFB76'] = '\\\\u0683';\\r\\n t['\\\\uFB77'] = '\\\\u0683';\\r\\n t['\\\\uFB78'] = '\\\\u0683';\\r\\n t['\\\\uFB79'] = '\\\\u0683';\\r\\n t['\\\\uFB7A'] = '\\\\u0686';\\r\\n t['\\\\uFB7B'] = '\\\\u0686';\\r\\n t['\\\\uFB7C'] = '\\\\u0686';\\r\\n t['\\\\uFB7D'] = '\\\\u0686';\\r\\n t['\\\\uFB7E'] = '\\\\u0687';\\r\\n t['\\\\uFB7F'] = '\\\\u0687';\\r\\n t['\\\\uFB80'] = '\\\\u0687';\\r\\n t['\\\\uFB81'] = '\\\\u0687';\\r\\n t['\\\\uFB82'] = '\\\\u068D';\\r\\n t['\\\\uFB83'] = '\\\\u068D';\\r\\n t['\\\\uFB84'] = '\\\\u068C';\\r\\n t['\\\\uFB85'] = '\\\\u068C';\\r\\n t['\\\\uFB86'] = '\\\\u068E';\\r\\n t['\\\\uFB87'] = '\\\\u068E';\\r\\n t['\\\\uFB88'] = '\\\\u0688';\\r\\n t['\\\\uFB89'] = '\\\\u0688';\\r\\n t['\\\\uFB8A'] = '\\\\u0698';\\r\\n t['\\\\uFB8B'] = '\\\\u0698';\\r\\n t['\\\\uFB8C'] = '\\\\u0691';\\r\\n t['\\\\uFB8D'] = '\\\\u0691';\\r\\n t['\\\\uFB8E'] = '\\\\u06A9';\\r\\n t['\\\\uFB8F'] = '\\\\u06A9';\\r\\n t['\\\\uFB90'] = '\\\\u06A9';\\r\\n t['\\\\uFB91'] = '\\\\u06A9';\\r\\n t['\\\\uFB92'] = '\\\\u06AF';\\r\\n t['\\\\uFB93'] = '\\\\u06AF';\\r\\n t['\\\\uFB94'] = '\\\\u06AF';\\r\\n t['\\\\uFB95'] = '\\\\u06AF';\\r\\n t['\\\\uFB96'] = '\\\\u06B3';\\r\\n t['\\\\uFB97'] = '\\\\u06B3';\\r\\n t['\\\\uFB98'] = '\\\\u06B3';\\r\\n t['\\\\uFB99'] = '\\\\u06B3';\\r\\n t['\\\\uFB9A'] = '\\\\u06B1';\\r\\n t['\\\\uFB9B'] = '\\\\u06B1';\\r\\n t['\\\\uFB9C'] = '\\\\u06B1';\\r\\n t['\\\\uFB9D'] = '\\\\u06B1';\\r\\n t['\\\\uFB9E'] = '\\\\u06BA';\\r\\n t['\\\\uFB9F'] = '\\\\u06BA';\\r\\n t['\\\\uFBA0'] = '\\\\u06BB';\\r\\n t['\\\\uFBA1'] = '\\\\u06BB';\\r\\n t['\\\\uFBA2'] = '\\\\u06BB';\\r\\n t['\\\\uFBA3'] = '\\\\u06BB';\\r\\n t['\\\\uFBA4'] = '\\\\u06C0';\\r\\n t['\\\\uFBA5'] = '\\\\u06C0';\\r\\n t['\\\\uFBA6'] = '\\\\u06C1';\\r\\n t['\\\\uFBA7'] = '\\\\u06C1';\\r\\n t['\\\\uFBA8'] = '\\\\u06C1';\\r\\n t\";a.a+=\"['\\\\uFBA9'] = '\\\\u06C1';\\r\\n t['\\\\uFBAA'] = '\\\\u06BE';\\r\\n t['\\\\uFBAB'] = '\\\\u06BE';\\r\\n t['\\\\uFBAC'] = '\\\\u06BE';\\r\\n t['\\\\uFBAD'] = '\\\\u06BE';\\r\\n t['\\\\uFBAE'] = '\\\\u06D2';\\r\\n t['\\\\uFBAF'] = '\\\\u06D2';\\r\\n t['\\\\uFBB0'] = '\\\\u06D3';\\r\\n t['\\\\uFBB1'] = '\\\\u06D3';\\r\\n t['\\\\uFBD3'] = '\\\\u06AD';\\r\\n t['\\\\uFBD4'] = '\\\\u06AD';\\r\\n t['\\\\uFBD5'] = '\\\\u06AD';\\r\\n t['\\\\uFBD6'] = '\\\\u06AD';\\r\\n t['\\\\uFBD7'] = '\\\\u06C7';\\r\\n t['\\\\uFBD8'] = '\\\\u06C7';\\r\\n t['\\\\uFBD9'] = '\\\\u06C6';\\r\\n t['\\\\uFBDA'] = '\\\\u06C6';\\r\\n t['\\\\uFBDB'] = '\\\\u06C8';\\r\\n t['\\\\uFBDC'] = '\\\\u06C8';\\r\\n t['\\\\uFBDD'] = '\\\\u0677';\\r\\n t['\\\\uFBDE'] = '\\\\u06CB';\\r\\n t['\\\\uFBDF'] = '\\\\u06CB';\\r\\n t['\\\\uFBE0'] = '\\\\u06C5';\\r\\n t['\\\\uFBE1'] = '\\\\u06C5';\\r\\n t['\\\\uFBE2'] = '\\\\u06C9';\\r\\n t['\\\\uFBE3'] = '\\\\u06C9';\\r\\n t['\\\\uFBE4'] = '\\\\u06D0';\\r\\n t['\\\\uFBE5'] = '\\\\u06D0';\\r\\n t['\\\\uFBE6'] = '\\\\u06D0';\\r\\n t['\\\\uFBE7'] = '\\\\u06D0';\\r\\n t['\\\\uFBE8'] = '\\\\u0649';\\r\\n t['\\\\uFBE9'] = '\\\\u0649';\\r\\n t['\\\\uFBEA'] = '\\\\u0626\\\\u0627';\\r\\n t['\\\\uFBEB'] = '\\\\u0626\\\\u0627';\\r\\n t['\\\\uFBEC'] = '\\\\u0626\\\\u06D5';\\r\\n t['\\\\uFBED'] = '\\\\u0626\\\\u06D5';\\r\\n t['\\\\uFBEE'] = '\\\\u0626\\\\u0648';\\r\\n t['\\\\uFBEF'] = '\\\\u0626\\\\u0648';\\r\\n t['\\\\uFBF0'] = '\\\\u0626\\\\u06C7';\\r\\n t['\\\\uFBF1'] = '\\\\u0626\\\\u06C7';\\r\\n t['\\\\uFBF2'] = '\\\\u0626\\\\u06C6';\\r\\n t['\\\\uFBF3'] = '\\\\u0626\\\\u06C6';\\r\\n t['\\\\uFBF4'] = '\\\\u0626\\\\u06C8';\\r\\n t['\\\\uFBF5'] = '\\\\u0626\\\\u06C8';\\r\\n t['\\\\uFBF6'] = '\\\\u0626\\\\u06D0';\\r\\n t['\\\\uFBF7'] = '\\\\u0626\\\\u06D0';\\r\\n t['\\\\uFBF8'] = '\\\\u0626\\\\u06D0';\\r\\n t['\\\\uFBF9'] = '\\\\u0626\\\\u0649';\\r\\n t['\\\\uFBFA'] = '\\\\u0626\\\\u0649';\\r\\n t['\\\\uFBFB'] = '\\\\u0626\\\\u0649';\\r\\n t['\\\\uFBFC'] = '\\\\u06CC';\\r\\n t['\\\\uFBFD'] = '\\\\u06CC';\\r\\n t['\\\\uFBFE'] = '\\\\u06CC';\\r\\n t['\\\\uFBFF'] = '\\\\u06CC';\\r\\n t['\\\\uFC00'] = '\\\\u0626\\\\u062C';\\r\\n t['\\\\uFC01'] = '\\\\u0626\\\\u062D';\\r\\n t['\\\\uFC02'] = '\\\\u0626\\\\u0645';\\r\\n t['\\\\uFC03'] = '\\\\u0626\\\\u0649';\\r\\n t['\\\\uFC04'] = '\\\\u0626\\\\u064A';\\r\\n t['\\\\uFC05'] = '\\\\u0628\\\\u062C';\\r\\n t['\\\\uFC06'] = '\\\\u0628\\\\u062D';\\r\\n t['\\\\uFC07'] = '\\\\u0628\\\\u062E';\\r\\n t['\\\\uFC08'] = '\\\\u0628\\\\u0645';\\r\\n t['\\\\uFC09'] = '\\\\u0628\\\\u0649';\\r\\n t['\\\\uFC0A'] = '\\\\u0628\\\\u064A';\\r\\n t['\\\\uFC0B'] = '\\\\u062A\\\\u062C';\\r\\n t['\\\\uFC0C'] = '\\\\u062A\\\\u062D';\\r\\n t['\\\\uFC0D'] = '\\\\u062A\\\\u062E';\\r\\n t['\\\\uFC0E'] = '\\\\u062A\\\\u0645';\\r\\n t['\\\\uFC0F'] = '\\\\u062A\\\\u0649';\\r\\n t['\\\\uFC10'] = '\\\\u062A\\\\u064A';\\r\\n t['\\\\uFC11'] = '\\\\u062B\\\\u062C';\\r\\n t['\\\\uFC12'] = '\\\\u062B\\\\u0645';\\r\\n t['\\\\uFC13'] = '\\\\u062B\\\\u0649';\\r\\n t['\\\\uFC14'] = '\\\\u062B\\\\u064A';\\r\\n t['\\\\uFC15'] = '\\\\u062C\\\\u062D';\\r\\n t['\\\\uFC16'] = '\\\\u062C\\\\u0645';\\r\\n t['\\\\uFC17'] = '\\\\u062D\\\\u062C';\\r\\n t['\\\\uFC18'] = '\\\\u062D\\\\u0645';\\r\\n t['\\\\uFC19'] = '\\\\u062E\\\\u062C';\\r\\n t['\\\\uFC1A'] = '\\\\u062E\\\\u062D';\\r\\n t['\\\\uFC1B'] = '\\\\u062E\\\\u0645';\\r\\n t['\\\\uFC1C'] = '\\\\u0633\\\\u062C';\\r\\n t['\\\\uFC1D'] = '\\\\u0633\\\\u062D';\\r\\n t['\\\\uFC1E'] = '\\\\u0633\\\\u062E';\\r\\n t['\\\\uFC1F'] = '\\\\u0633\\\\u0645';\\r\\n t['\\\\uFC20'] = '\\\\u0635\\\\u062D';\\r\\n t['\\\\uFC21'] = '\\\\u0635\\\\u0645';\\r\\n t['\\\\uFC22'] = '\\\\u0636\\\\u062C';\\r\\n t['\\\\uFC23'] = '\\\\u0636\\\\u062D';\\r\\n t['\\\\uFC24'] = '\\\\u0636\\\\u062E';\\r\\n t['\\\\uFC25'] = '\\\\u0636\\\\u0645';\\r\\n t['\\\\uFC26'] = '\\\\u0637\\\\u062D';\\r\\n t['\\\\uFC27'] = '\\\\u0637\\\\u0645';\\r\\n t['\\\\uFC28'] = '\\\\u0638\\\\u0645';\\r\\n t['\\\\uFC29'] = '\\\\u0639\\\\u062C';\\r\\n t['\\\\uFC2A'] = '\\\\u0639\\\\u0645';\\r\\n t['\\\\uFC2B'] = '\\\\u063A\\\\u062C';\\r\\n t['\\\\uFC2C'] = '\\\\u063A\\\\u0645';\\r\\n t['\\\\uFC2D'] = '\\\\u0641\\\\u062C';\\r\\n t['\\\\uFC2E'] = '\\\\u0641\\\\u062D';\\r\\n t['\\\\uFC2F'] = '\\\\u0641\\\\u062E';\\r\\n t['\\\\uFC30'] = '\\\\u0641\\\\u0645';\\r\\n t['\\\\uFC31'] = '\\\\u0641\\\\u0649';\\r\\n t['\\\\uFC32'] = '\\\\u0641\\\\u064A';\\r\\n t['\\\\uFC33'] = '\\\\u0642\\\\u062D';\\r\\n t['\\\\uFC34'] = '\\\\u0642\\\\u0645';\\r\\n t['\\\\uFC35'] = '\\\\u0642\\\\u0649';\\r\\n t['\\\\uFC36'] = '\\\\u0642\\\\u064A';\\r\\n t['\\\\uFC37'] = '\\\\u0643\\\\u0627';\\r\\n t['\\\\uFC38'] = '\\\\u0643\\\\u062C';\\r\\n t['\\\\uFC39'] = '\\\\u0643\\\\u062D';\\r\\n t['\\\\uFC3A'] = '\\\\u0643\\\\u062E';\\r\\n t['\\\\uFC3B'] = '\\\\u0643\\\\u0644';\\r\\n t['\\\\uFC3C'] = '\\\\u0643\\\\u0645';\\r\\n t['\\\\uFC3D'] = '\\\\u0643\\\\u0649';\\r\\n t['\\\\uFC3E'] = '\\\\u0643\\\\u064A';\\r\\n t['\\\\uFC3F'] = '\\\\u0644\\\\u062C';\\r\\n t['\\\\uFC40'] = '\\\\u0644\\\\u062D';\\r\\n t['\\\\uFC41'] = '\\\\u0644\\\\u062E';\\r\\n t['\\\\uFC42'] = '\\\\u0644\\\\u0645';\\r\\n t['\\\\uFC43'] = '\\\\u0644\\\\u0649';\\r\\n t['\\\\uFC44'] = '\\\\u0644\\\\u064A';\\r\\n t['\\\\uFC45'] = '\\\\u0645\\\\u062C';\\r\\n t['\\\\uFC46'] = '\\\\u0645\\\\u062D';\\r\\n t['\\\\uFC47'] = '\\\\u0645\\\\u062E';\\r\\n t['\\\\uFC48'] = '\\\\u0645\\\\u0645';\\r\\n t['\\\\uFC49'] = '\\\\u0645\\\\u0649';\\r\\n t['\\\\uFC4A'] = '\\\\u0645\\\\u064A';\\r\\n t['\\\\uFC4B'] = '\\\\u0646\\\\u062C';\\r\\n t['\\\\uFC4C'] = '\\\\u0646\\\\u062D';\\r\\n t['\\\\uFC4D'] = '\\\\u0646\\\\u062E';\\r\\n t['\\\\uFC4E'] = '\\\\u0646\\\\u0645';\\r\\n t['\\\\uFC4F'] = '\\\\u0646\\\\u0649';\\r\\n t['\\\\uFC50'] = '\\\\u0646\\\\u064A';\\r\\n t['\\\\uFC51'] = '\\\\u0647\\\\u062C';\\r\\n t['\\\\uFC52'] = '\\\\u0647\\\\u0645';\\r\\n t['\\\\uFC53'] = '\\\\u0647\\\\u0649';\\r\\n t['\\\\uFC54'] = '\\\\u0647\\\\u064A';\\r\\n t['\\\\uFC55'] = '\\\\u064A\\\\u062C';\\r\\n t['\\\\uFC56'] = '\\\\u064A\\\\u062D';\\r\\n t['\\\\uFC57'] = '\\\\u064A\\\\u062E';\\r\\n t['\\\\uFC58'] = '\\\\u064A\\\\u0645';\\r\\n t['\\\\uFC59'] = '\\\\u064A\\\\u0649';\\r\\n t['\\\\uFC5A'] = '\\\\u064A\\\\u064A';\\r\\n t['\\\\uFC5B'] = '\\\\u0630\\\\u0670';\\r\\n t['\\\\uFC5C'] = '\\\\u0631\\\\u0670';\\r\\n t['\\\\uFC5D'] = '\\\\u0649\\\\u0670';\\r\\n t['\\\\uFC5E'] = '\\\\u0020\\\\u064C\\\\u0651';\\r\\n t['\\\\uFC5F'] = '\\\\u0020\\\\u064D\\\\u0651';\\r\\n t['\\\\uFC60'] = '\\\\u0020\\\\u064E\\\\u0651';\\r\\n t['\\\\uFC61'] = '\\\\u0020\\\\u064F\\\\u0651';\\r\\n t['\\\\uFC62'] = '\\\\u0020\\\\u0650\\\\u0651';\\r\\n t['\\\\uFC63'] = '\\\\u0020\\\\u0651\\\\u0670';\\r\\n t['\\\\uFC64'] = '\\\\u0626\\\\u0631';\\r\\n t['\\\\uFC65'] = '\\\\u0626\\\\u0632';\\r\\n t['\\\\uFC66'] = '\\\\u0626\\\\u0645';\\r\\n t['\\\\uFC67'] = '\\\\u0626\\\\u0646';\\r\\n t['\\\\uFC68'] = '\\\\u0626\\\\u0649';\\r\\n t['\\\\uFC69'] = '\\\\u0626\\\\u064A';\\r\\n t['\\\\uFC6A'] = '\\\\u0628\\\\u0631';\\r\\n t['\\\\uFC6B'] = '\\\\u0628\\\\u0632';\\r\\n t['\\\\uFC6C'] = '\\\\u0628\\\\u0645';\\r\\n t['\\\\uFC6D'] = '\\\\u0628\\\\u0646';\\r\\n t['\\\\uFC6E'] = '\\\\u0628\\\\u0649';\\r\\n t['\\\\uFC6F'] = '\\\\u0628\\\\u064A';\\r\\n t['\\\\uFC70'] = '\\\\u062A\\\\u0631';\\r\\n t['\\\\uFC71'] = '\\\\u062A\\\\u0632';\\r\\n t['\\\\uFC72'] = '\\\\u062A\\\\u0645';\\r\\n t['\\\\uFC73'] = '\\\\u062A\\\\u0646';\\r\\n t['\\\\uFC74'] = '\\\\u062A\\\\u0649';\\r\\n t['\\\\uFC75'] = '\\\\u062A\\\\u064A';\\r\\n t['\\\\uFC76'] = '\\\\u062B\\\\u0631';\\r\\n t['\\\\uFC77'] = '\\\\u062B\\\\u0632';\\r\\n t['\\\\uFC78'] = '\\\\u062B\\\\u0645';\\r\\n t['\\\\uFC79'] = '\\\\u062B\\\\u0646';\\r\\n t['\\\\uFC7A'] = '\\\\u062B\\\\u0649';\\r\\n t['\\\\uFC7B'] = '\\\\u062B\\\\u064A';\\r\\n t['\\\\uFC7C'] = '\\\\u0641\\\\u0649';\\r\\n t['\\\\uFC7D'] = '\\\\u0641\\\\u064A';\\r\\n t['\\\\uFC7E'] = '\\\\u0642\\\\u0649';\\r\\n t['\\\\uFC7F'] = '\\\\u0642\\\\u064A';\\r\\n t['\\\\uFC80'] = '\\\\u0643\\\\u0627';\\r\\n t['\\\\uFC81'] = '\\\\u0643\\\\u0644';\\r\\n t['\\\\uFC82'] = '\\\\u0643\\\\u0645';\\r\\n t['\\\\uFC83'] = '\\\\u0643\\\\u0649';\\r\\n t['\\\\uFC84'] = '\\\\u0643\\\\u064A';\\r\\n t['\\\\uFC85'] = '\\\\u0644\\\\u0645';\\r\\n t['\\\\uFC86'] = '\\\\u0644\\\\u0649';\\r\\n t['\\\\uFC87'] = '\\\\u0644\\\\u064A';\\r\\n t['\\\\uFC88'] = '\\\\u0645\\\\u0627';\\r\\n t['\\\\uFC89'] = '\\\\u0645\\\\u0645';\\r\\n t['\\\\uFC8A'] = '\\\\u0646\\\\u0631';\\r\\n t['\\\\uFC8B'] = '\\\\u0646\\\\u0632';\\r\\n t['\\\\uFC8C'] = '\\\\u0646\\\\u0645';\\r\\n t['\\\\uFC8D'] = '\\\\u0646\\\\u0646';\\r\\n t['\\\\uFC8E'] = '\\\\u0646\\\\u0649';\\r\\n t['\\\\uFC8F'] = '\\\\u0646\\\\u064A';\\r\\n t['\\\\uFC90'] = '\\\\u0649\\\\u0670';\\r\\n t['\\\\uFC91'] = '\\\\u064A\\\\u0631';\\r\\n t['\\\\uFC92'] = '\\\\u064A\\\\u0632';\\r\\n t['\\\\uFC93'] = '\\\\u064A\\\\u0645';\\r\\n t['\\\\uFC94'] = '\\\\u064A\\\\u0646';\\r\\n t['\\\\uFC95'] = '\\\\u064A\\\\u0649';\\r\\n t['\\\\uFC96'] = '\\\\u064A\\\\u064A';\\r\\n t['\\\\uFC97'] = '\\\\u0626\\\\u062C';\\r\\n t['\\\\uFC98'] = '\\\\u0626\\\\u062D';\\r\\n t['\\\\uFC99'] = '\\\\u0626\\\\u062E';\\r\\n t['\\\\uFC9A'] = '\\\\u0626\\\\u0645';\\r\\n t['\\\\uFC9B'] = '\\\\u0626\\\\u0647';\\r\\n t['\\\\uFC9C'] = '\\\\u0628\\\\u062C';\\r\\n t['\\\\uFC9D'] = '\\\\u0628\\\\u062D';\\r\\n t['\\\\uFC9E'] = '\\\\u0628\\\\u062E';\\r\\n t['\\\\uFC9F'] = '\\\\u0628\\\\u0645';\\r\\n t['\\\\uFCA0'] = '\\\\u0628\\\\u0647';\\r\\n t['\\\\uFCA1'] = '\\\\u062A\\\\u062C';\\r\\n t['\\\\uFCA2'] = '\\\\u062A\\\\u062D';\\r\\n t['\\\\uFCA3'] = '\\\\u062A\\\\u062E';\\r\\n t['\\\\uFCA4'] = '\\\\u062A\\\\u0645';\\r\\n t['\\\\uFCA5'] = '\\\\u062A\\\\u0647';\\r\\n t['\\\\uFCA6'] = '\\\\u062B\\\\u0645';\\r\\n t['\\\\uFCA7'] = '\\\\u062C\\\\u062D';\\r\\n t['\\\\uFCA8'] = '\\\\u062C\\\\u0645';\\r\\n t['\\\\uFCA9'] = '\\\\u062D\\\\u062C';\\r\\n t['\\\\uFCAA'] = '\\\\u062D\\\\u0645';\\r\\n t['\\\\uFCAB'] = '\\\\u062E\\\\u062C';\\r\\n t['\\\\uFCAC'] = '\\\\u062E\\\\u0645';\\r\\n t['\\\\uFCAD'] = '\\\\u0633\\\\u062C';\\r\\n t['\\\\uFCAE'] = '\\\\u0633\\\\u062D';\\r\\n t['\\\\uFCAF'] = '\\\\u0633\\\\u062E';\\r\\n t['\\\\uFCB0'] = '\\\\u0633\\\\u0645';\\r\\n t['\\\\uFCB1'] = '\\\\u0635\\\\u062D';\\r\\n t['\\\\uFCB2'] = '\\\\u0635\\\\u062E';\\r\\n t['\\\\uFCB3'] = '\\\\u0635\\\\u0645';\\r\\n t['\\\\uFCB4'] = '\\\\u0636\\\\u062C';\\r\\n t['\\\\uFCB5'] = '\\\\u0636\\\\u062D';\\r\\n t['\\\\uFCB6'] = '\\\\u0636\\\\u062E';\\r\\n t['\\\\uFCB7'] = '\\\\u0636\\\\u0645';\\r\\n t['\\\\uFCB8'] = '\\\\u0637\\\\u062D';\\r\\n t['\\\\uFCB9'] = '\\\\u0638\\\\u0645';\\r\\n t['\\\\uFCBA'] = '\\\\u0639\\\\u062C';\\r\\n t['\\\\uFCBB'] = '\\\\u0639\\\\u0645';\\r\\n t['\\\\uFCBC'] = '\\\\u063A\\\\u062C';\\r\\n t['\\\\uFCBD'] = '\\\\u063A\\\\u0645';\\r\\n t['\\\\uFCBE'] = '\\\\u0641\\\\u062C';\\r\\n t['\\\\uFCBF'] = '\\\\u0641\\\\u062D';\\r\\n t['\\\\uFCC0'] = '\\\\u0641\\\\u062E';\\r\\n t['\\\\uFCC1'] = '\\\\u0641\\\\u0645';\\r\\n t['\\\\uFCC2'] = '\\\\u0642\\\\u062D';\\r\\n t['\\\\uFCC3'] = '\\\\u0642\\\\u0645';\\r\\n t['\\\\uFCC4'] = '\\\\u0643\\\\u062C';\\r\\n t['\\\\uFCC5'] = '\\\\u0643\\\\u062D';\\r\\n t['\\\\uFCC6'] = '\\\\u0643\\\\u062E';\\r\\n t['\\\\uFCC7'] = '\\\\u0643\\\\u0644';\\r\\n t['\\\\uFCC8'] = '\\\\u0643\\\\u0645';\\r\\n t['\\\\uFCC9'] = '\\\\u0644\\\\u062C';\\r\\n t['\\\\uFCCA'] = '\\\\u0644\\\\u062D';\\r\\n t['\\\\uFCCB'] = '\\\\u0644\\\\u062E';\\r\\n t['\\\\uFCCC'] = '\\\\u0644\\\\u0645';\\r\\n t['\\\\uFCCD'] = '\\\\u0644\\\\u0647';\\r\\n t['\\\\uFCCE'] = '\\\\u0645\\\\u062C';\\r\\n t['\\\\uFCCF'] = '\\\\u0645\\\\u062D';\\r\\n t['\\\\uFCD0'] = '\\\\u0645\\\\u062E';\\r\\n t['\\\\uFCD1'] = '\\\\u0645\\\\u0645';\\r\\n t['\\\\uFCD2'] = '\\\\u0646\\\\u062C';\\r\\n t['\\\\uFCD3'] = '\\\\u0646\\\\u062D';\\r\\n t['\\\\uFCD4'] = '\\\\u0646\\\\u062E';\\r\\n t['\\\\uFCD5'] = '\\\\u0646\\\\u0645';\\r\\n t['\\\\uFCD6'] = '\\\\u0646\\\\u0647';\\r\\n t['\\\\uFCD7'] = '\\\\u0647\\\\u062C';\\r\\n t['\\\\uFCD8'] = '\\\\u0647\\\\u0645';\\r\\n t['\\\\uFCD9'] = '\\\\u0647\\\\u0670';\\r\\n t['\\\\uFCDA'] = '\\\\u064A\\\\u062C';\\r\\n t['\\\\uFCDB'] = '\\\\u064A\\\\u062D';\\r\\n t['\\\\uFCDC'] = '\\\\u064A\\\\u062E';\\r\\n t['\\\\uFCDD'] = '\\\\u064A\\\\u0645';\\r\\n t['\\\\uFCDE'] = '\\\\u064A\\\\u0647';\\r\\n t['\\\\uFCDF'] = '\\\\u0626\\\\u0645';\\r\\n t['\\\\uFCE0'] = '\\\\u0626\\\\u0647';\\r\\n t['\\\\uFCE1'] = '\\\\u0628\\\\u0645';\\r\\n t['\\\\uFCE2'] = '\\\\u0628\\\\u0647';\\r\\n t['\\\\uFCE3'] = '\\\\u062A\\\\u0645';\\r\\n t['\\\\uFCE4'] = '\\\\u062A\\\\u0647';\\r\\n t['\\\\uFCE5'] = '\\\\u062B\\\\u0645';\\r\\n t['\\\\uFCE6'] = '\\\\u062B\\\\u0647';\\r\\n t['\\\\uFCE7'] = '\\\\u0633\\\\u0645';\\r\\n t['\\\\uFCE8'] = '\\\\u0633\\\\u0647';\\r\\n t['\\\\uFCE9'] = '\\\\u0634\\\\u0645';\\r\\n t['\\\\uFCEA'] = '\\\\u0634\\\\u0647';\\r\\n t['\\\\uFCEB'] = '\\\\u0643\\\\u0644';\\r\\n t['\\\\uFCEC'] = '\\\\u0643\\\\u0645';\\r\\n t['\\\\uFCED'] = '\\\\u0644\\\\u0645';\\r\\n t['\\\\uFCEE'] = '\\\\u0646\\\\u0645';\\r\\n t['\\\\uFCEF'] = '\\\\u0646\\\\u0647';\\r\\n t['\\\\uFCF0'] = '\\\\u064A\\\\u0645';\\r\\n t['\\\\uFCF1'] = '\\\\u064A\\\\u0647';\\r\\n t['\\\\uFCF2'] = '\\\\u0640\\\\u064E\\\\u0651';\\r\\n t['\\\\uFCF3'] = '\\\\u0640\\\\u064F\\\\u0651';\\r\\n t['\\\\uFCF4'] = '\\\\u0640\\\\u0650\\\\u0651';\\r\\n t['\\\\uFCF5'] = '\\\\u0637\\\\u0649';\\r\\n t['\\\\uFCF6'] = '\\\\u0637\\\\u064A';\\r\\n t['\\\\uFCF7'] = '\\\\u0639\\\\u0649';\\r\\n t['\\\\uFCF8'] = '\\\\u0639\\\\u064A';\\r\\n t['\\\\uFCF9'] = '\\\\u063A\\\\u0649';\\r\\n t['\\\\uFCFA'] = '\\\\u063A\\\\u064A';\\r\\n t['\\\\uFCFB'] = '\\\\u0633\\\\u0649';\\r\\n t['\\\\uFCFC'] = '\\\\u0633\\\\u064A';\\r\\n t['\\\\uFCFD'] = '\\\\u0634\\\\u0649';\\r\\n t['\\\\uFCFE'] = '\\\\u0634\\\\u064A';\\r\\n t['\\\\uFCFF'] = '\\\\u062D\\\\u0649';\\r\\n t['\\\\uFD00'] = '\\\\u062D\\\\u064A';\\r\\n t['\\\\uFD01'] = '\\\\u062C\\\\u0649';\\r\\n t['\\\\uFD02'] = '\\\\u062C\\\\u064A';\\r\\n t['\\\\uFD03'] = '\\\\u062E\\\\u0649';\\r\\n t['\\\\uFD04'] = '\\\\u062E\\\\u064A';\\r\\n t['\\\\uFD05'] = '\\\\u0635\\\\u0649';\\r\\n t['\\\\uFD06'] = '\\\\u0635\\\\u064A';\\r\\n t['\\\\uFD07'] = '\\\\u0636\\\\u0649';\\r\\n t['\\\\uFD08'] = '\\\\u0636\\\\u064A';\\r\\n t['\\\\uFD09'] = '\\\\u0634\\\\u062C';\\r\\n t['\\\\uFD0A'] = '\\\\u0634\\\\u062D';\\r\\n t['\\\\uFD0B'] = '\\\\u0634\\\\u062E';\\r\\n t['\\\\uFD0C'] = '\\\\u0634\\\\u0645';\\r\\n t['\\\\uFD0D'] = '\\\\u0634\\\\u0631';\\r\\n t['\\\\uFD0E'] = '\\\\u0633\\\\u0631';\\r\\n t['\\\\uFD0F'] = '\\\\u0635\\\\u0631';\\r\\n t['\\\\uFD10'] = '\\\\u0636\\\\u0631';\\r\\n t['\\\\uFD11'] = '\\\\u0637\\\\u0649';\\r\\n t['\\\\uFD12'] = '\\\\u0637\\\\u064A';\\r\\n t['\\\\uFD13'] = '\\\\u0639\\\\u0649';\\r\\n t['\\\\uFD14'] = '\\\\u0639\\\\u064A';\\r\\n t['\\\\uFD15'] = '\\\\u063A\\\\u0649';\\r\\n t['\\\\uFD16'] = '\\\\u063A\\\\u064A';\\r\\n t['\\\\uFD17'] = '\\\\u0633\\\\u0649';\\r\\n t['\\\\uFD18'] = '\\\\u0633\\\\u064A';\\r\\n t['\\\\uFD19'] = '\\\\u0634\\\\u0649';\\r\\n t['\\\\uFD1A'] = '\\\\u0634\\\\u064A';\\r\\n t['\\\\uFD1B'] = '\\\\u062D\\\\u0649';\\r\\n t['\\\\uFD1C'] = '\\\\u062D\\\\u064A';\\r\\n t['\\\\uFD1D'] = '\\\\u062C\\\\u0649';\\r\\n t['\\\\uFD1E'] = '\\\\u062C\\\\u064A';\\r\\n t['\\\\uFD1F'] = '\\\\u062E\\\\u0649';\\r\\n t['\\\\uFD20'] = '\\\\u062E\\\\u064A';\\r\\n t['\\\\uFD21'] = '\\\\u0635\\\\u0649';\\r\\n t['\\\\uFD22'] = '\\\\u0635\\\\u064A';\\r\\n t['\\\\uFD23'] = '\\\\u0636\\\\u0649';\\r\\n t['\\\\uFD24'] = '\\\\u0636\\\\u064A';\\r\\n t['\\\\uFD25'] = '\\\\u0634\\\\u062C';\\r\\n t['\\\\uFD26'] = '\\\\u0634\\\\u062D';\\r\\n t['\\\\uFD27'] = '\\\\u0634\\\\u062E';\\r\\n t['\\\\uFD28'] = '\\\\u0634\\\\u0645';\\r\\n t['\\\\uFD29'] = '\\\\u0634\\\\u0631';\\r\\n t['\\\\uFD2A'] = '\\\\u0633\\\\u0631';\\r\\n t['\\\\uFD2B'] = '\\\\u0635\\\\u0631';\\r\\n t['\\\\uFD2C'] = '\\\\u0636\\\\u0631';\\r\\n t['\\\\uFD2D'] = '\\\\u0634\\\\u062C';\\r\\n t['\\\\uFD2E'] = '\\\\u0634\\\\u062D';\\r\\n t['\\\\uFD2F'] = '\\\\u0634\\\\u062E';\\r\\n t['\\\\uFD30'] = '\\\\u0634\\\\u0645';\\r\\n t['\\\\uFD31'] = '\\\\u0633\\\\u0647';\\r\\n t['\\\\uFD32'] = '\\\\u0634\\\\u0647';\\r\\n t['\\\\uFD33'] = '\\\\u0637\\\\u0645';\\r\\n t['\\\\uFD34'] = '\\\\u0633\\\\u062C';\\r\\n t['\\\\uFD35'] = '\\\\u0633\\\\u062D';\\r\\n t['\\\\uFD36'] = '\\\\u0633\\\\u062E';\\r\\n t['\\\\uFD37'] = '\\\\u0634\\\\u062C';\\r\\n t['\\\\uFD38'] = '\\\\u0634\\\\u062D';\\r\\n t['\\\\uFD39'] = '\\\\u0634\\\\u062E';\\r\\n t['\\\\uFD3A'] = '\\\\u0637\\\\u0645';\\r\\n t['\\\\uFD3B'] = '\\\\u0638\\\\u0645';\\r\\n t['\\\\uFD3C'] = '\\\\u0627\\\\u064B';\\r\\n t['\\\\uFD3D'] = '\\\\u0627\\\\u064B';\\r\\n t['\\\\uFD50'] = '\\\\u062A\\\\u062C\\\\u0645';\\r\\n t['\\\\uFD51'] = '\\\\u062A\\\\u062D\\\\u062C';\\r\\n t['\\\\uFD52'] = '\\\\u062A\\\\u062D\\\\u062C';\\r\\n t['\\\\uFD53'] = '\\\\u062A\\\\u062D\\\\u0645';\\r\\n t['\\\\uFD54'] = '\\\\u062A\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD55'] = '\\\\u062A\\\\u0645\\\\u062C';\\r\\n t['\\\\uFD56'] = '\\\\u062A\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD57'] = '\\\\u062A\\\\u0645\\\\u062E';\\r\\n t['\\\\uFD58'] = '\\\\u062C\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD59'] = '\\\\u062C\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD5A'] = '\\\\u062D\\\\u0645\\\\u064A';\\r\\n t['\\\\uFD5B'] = '\\\\u062D\\\\u0645\\\\u0649';\\r\\n t['\\\\uFD5C'] = '\\\\u0633\\\\u062D\\\\u062C';\\r\\n t['\\\\uFD5D'] = '\\\\u0633\\\\u062C\\\\u062D';\\r\\n t['\\\\uFD5E'] = '\\\\u0633\\\\u062C\\\\u0649';\\r\\n t['\\\\uFD5F'] = '\\\\u0633\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD60'] = '\\\\u0633\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD61'] = '\\\\u0633\\\\u0645\\\\u062C';\\r\\n t['\\\\uFD62'] = '\\\\u0633\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD63'] = '\\\\u0633\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD64'] = '\\\\u0635\\\\u062D\\\\u062D';\\r\\n t['\\\\uFD65'] = '\\\\u0635\\\\u062D\\\\u062D';\\r\\n t['\\\\uFD66'] = '\\\\u0635\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD67'] = '\\\\u0634\\\\u062D\\\\u0645';\\r\\n t['\\\\uFD68'] = '\\\\u0634\\\\u062D\\\\u0645';\\r\\n t['\\\\uFD69'] = '\\\\u0634\\\\u062C\\\\u064A';\\r\\n t['\\\\uFD6A'] = '\\\\u0634\\\\u0645\\\\u062E';\\r\\n t['\\\\uFD6B'] = '\\\\u0634\\\\u0645\\\\u062E';\\r\\n t['\\\\uFD6C'] = '\\\\u0634\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD6D'] = '\\\\u0634\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD6E'] = '\\\\u0636\\\\u062D\\\\u0649';\\r\\n t['\\\\uFD6F'] = '\\\\u0636\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD70'] = '\\\\u0636\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD71'] = '\\\\u0637\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD72'] = '\\\\u0637\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD73'] = '\\\\u0637\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD74'] = '\\\\u0637\\\\u0645\\\\u064A';\\r\\n t['\\\\uFD75'] = '\\\\u0639\\\\u062C\\\\u0645';\\r\\n t['\\\\uFD76'] = '\\\\u0639\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD77'] = '\\\\u0639\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD78'] = '\\\\u0639\\\\u0645\\\\u0649';\\r\\n t['\\\\uFD79'] = '\\\\u063A\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD7A'] = '\\\\u063A\\\\u0645\\\\u064A';\\r\\n t['\\\\uFD7B'] = '\\\\u063A\\\\u0645\\\\u0649';\\r\\n t['\\\\uFD7C'] = '\\\\u0641\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD7D'] = '\\\\u0641\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD7E'] = '\\\\u0642\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD7F'] = '\\\\u0642\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD80'] = '\\\\u0644\\\\u062D\\\\u0645';\\r\\n t['\\\\uFD81'] = '\\\\u0644\\\\u062D\\\\u064A';\\r\\n t['\\\\uFD82'] = '\\\\u0644\\\\u062D\\\\u0649';\\r\\n t['\\\\uFD83'] = '\\\\u0644\\\\u062C\\\\u062C';\\r\\n t['\\\\uFD84'] = '\\\\u0644\\\\u062C\\\\u062C';\\r\\n t['\\\\uFD85'] = '\\\\u0644\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD86'] = '\\\\u0644\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD87'] = '\\\\u0644\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD88'] = '\\\\u0644\\\\u0645\\\\u062D';\\r\\n t['\\\\uFD89'] = '\\\\u0645\\\\u062D\\\\u062C';\\r\\n t['\\\\uFD8A'] = '\\\\u0645\\\\u062D\\\\u0645';\\r\\n t['\\\\uFD8B'] = '\\\\u0645\\\\u062D\\\\u064A';\\r\\n t['\\\\uFD8C'] = '\\\\u0645\\\\u062C\\\\u062D';\\r\\n t['\\\\uFD8D'] = '\\\\u0645\\\\u062C\\\\u0645';\\r\\n t['\\\\uFD8E'] = '\\\\u0645\\\\u062E\\\\u062C';\\r\\n t['\\\\uFD8F'] = '\\\\u0645\\\\u062E\\\\u0645';\\r\\n t['\\\\uFD92'] = '\\\\u0645\\\\u062C\\\\u062E';\\r\\n t['\\\\uFD93'] = '\\\\u0647\\\\u0645\\\\u062C';\\r\\n t['\\\\uFD94'] = '\\\\u0647\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD95'] = '\\\\u0646\\\\u062D\\\\u0645';\\r\\n t['\\\\uFD96'] = '\\\\u0646\\\\u062D\\\\u0649';\\r\\n t['\\\\uFD97'] = '\\\\u0646\\\\u062C\\\\u0645';\\r\\n t['\\\\uFD98'] = '\\\\u0646\\\\u062C\\\\u0645';\\r\\n t['\\\\uFD99'] = '\\\\u0646\\\\u062C\\\\u0649';\\r\\n t['\\\\uFD9A'] = '\\\\u0646\\\\u0645\\\\u064A';\\r\\n t['\\\\uFD9B'] = '\\\\u0646\\\\u0645\\\\u0649';\\r\\n t['\\\\uFD9C'] = '\\\\u064A\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD9D'] = '\\\\u064A\\\\u0645\\\\u0645';\\r\\n t['\\\\uFD9E'] = '\\\\u0628\\\\u062E\\\\u064A';\\r\\n t['\\\\uFD9F'] = '\\\\u062A\\\\u062C\\\\u064A';\\r\\n t['\\\\uFDA0'] = '\\\\u062A\\\\u062C\\\\u0649';\\r\\n t['\\\\uFDA1'] = '\\\\u062A\\\\u062E\\\\u064A';\\r\\n t['\\\\uFDA2'] = '\\\\u062A\\\\u062E\\\\u0649';\\r\\n t['\\\\uFDA3'] = '\\\\u062A\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDA4'] = '\\\\u062A\\\\u0645\\\\u0649';\\r\\n t['\\\\uFDA5'] = '\\\\u062C\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDA6'] = '\\\\u062C\\\\u062D\\\\u0649';\\r\\n t['\\\\uFDA7'] = '\\\\u062C\\\\u0645\\\\u0649';\\r\\n t['\\\\uFDA8'] = '\\\\u0633\\\\u062E\\\\u0649';\\r\\n t['\\\\uFDA9'] = '\\\\u0635\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDAA'] = '\\\\u0634\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDAB'] = '\\\\u0636\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDAC'] = '\\\\u0644\\\\u062C\\\\u064A';\\r\\n t['\\\\uFDAD'] = '\\\\u0644\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDAE'] = '\\\\u064A\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDAF'] = '\\\\u064A\\\\u062C\\\\u064A';\\r\\n t['\\\\uFDB0'] = '\\\\u064A\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDB1'] = '\\\\u0645\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDB2'] = '\\\\u0642\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDB3'] = '\\\\u0646\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDB4'] = '\\\\u0642\\\\u0645\\\\u062D';\\r\\n t['\\\\uFDB5'] = '\\\\u0644\\\\u062D\\\\u0645';\\r\\n t['\\\\uFDB6'] = '\\\\u0639\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDB7'] = '\\\\u0643\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDB8'] = '\\\\u0646\\\\u062C\\\\u062D';\\r\\n t['\\\\uFDB9'] = '\\\\u0645\\\\u062E\\\\u064A';\\r\\n t['\\\\uFDBA'] = '\\\\u0644\\\\u062C\\\\u0645';\\r\\n t['\\\\uFDBB'] = '\\\\u0643\\\\u0645\\\\u0645';\\r\\n t['\\\\uFDBC'] = '\\\\u0644\\\\u062C\\\\u0645';\\r\\n t['\\\\uFDBD'] = '\\\\u0646\\\\u062C\\\\u062D';\\r\\n t['\\\\uFDBE'] = '\\\\u062C\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDBF'] = '\\\\u062D\\\\u062C\\\\u064A';\\r\\n t['\\\\uFDC0'] = '\\\\u0645\\\\u062C\\\\u064A';\\r\\n t['\\\\uFDC1'] = '\\\\u0641\\\\u0645\\\\u064A';\\r\\n t['\\\\uFDC2'] = '\\\\u0628\\\\u062D\\\\u064A';\\r\\n t['\\\\uFDC3'] = '\\\\u0643\\\\u0645\\\\u0645';\\r\\n t['\\\\uFDC4'] = '\\\\u0639\\\\u062C\\\\u0645';\\r\\n t['\\\\uFDC5'] = '\\\\u0635\\\\u0645\\\\u0645';\\r\\n t['\\\\uFDC6'] = '\\\\u0633\\\\u062E\\\\u064A';\\r\\n t['\\\\uFDC7'] = '\\\\u0646\\\\u062C\\\\u064A';\\r\\n t['\\\\uFE49'] = '\\\\u203E';\\r\\n t['\\\\uFE4A'] = '\\\\u203E';\\r\\n t['\\\\uFE4B'] = '\\\\u203E';\\r\\n t['\\\\uFE4C'] = '\\\\u203E';\\r\\n t['\\\\uFE4D'] = '\\\\u005F';\\r\\n t['\\\\uFE4E'] = '\\\\u005F';\\r\\n t[\";a.a+=\"'\\\\uFE4F'] = '\\\\u005F';\\r\\n t['\\\\uFE80'] = '\\\\u0621';\\r\\n t['\\\\uFE81'] = '\\\\u0622';\\r\\n t['\\\\uFE82'] = '\\\\u0622';\\r\\n t['\\\\uFE83'] = '\\\\u0623';\\r\\n t['\\\\uFE84'] = '\\\\u0623';\\r\\n t['\\\\uFE85'] = '\\\\u0624';\\r\\n t['\\\\uFE86'] = '\\\\u0624';\\r\\n t['\\\\uFE87'] = '\\\\u0625';\\r\\n t['\\\\uFE88'] = '\\\\u0625';\\r\\n t['\\\\uFE89'] = '\\\\u0626';\\r\\n t['\\\\uFE8A'] = '\\\\u0626';\\r\\n t['\\\\uFE8B'] = '\\\\u0626';\\r\\n t['\\\\uFE8C'] = '\\\\u0626';\\r\\n t['\\\\uFE8D'] = '\\\\u0627';\\r\\n t['\\\\uFE8E'] = '\\\\u0627';\\r\\n t['\\\\uFE8F'] = '\\\\u0628';\\r\\n t['\\\\uFE90'] = '\\\\u0628';\\r\\n t['\\\\uFE91'] = '\\\\u0628';\\r\\n t['\\\\uFE92'] = '\\\\u0628';\\r\\n t['\\\\uFE93'] = '\\\\u0629';\\r\\n t['\\\\uFE94'] = '\\\\u0629';\\r\\n t['\\\\uFE95'] = '\\\\u062A';\\r\\n t['\\\\uFE96'] = '\\\\u062A';\\r\\n t['\\\\uFE97'] = '\\\\u062A';\\r\\n t['\\\\uFE98'] = '\\\\u062A';\\r\\n t['\\\\uFE99'] = '\\\\u062B';\\r\\n t['\\\\uFE9A'] = '\\\\u062B';\\r\\n t['\\\\uFE9B'] = '\\\\u062B';\\r\\n t['\\\\uFE9C'] = '\\\\u062B';\\r\\n t['\\\\uFE9D'] = '\\\\u062C';\\r\\n t['\\\\uFE9E'] = '\\\\u062C';\\r\\n t['\\\\uFE9F'] = '\\\\u062C';\\r\\n t['\\\\uFEA0'] = '\\\\u062C';\\r\\n t['\\\\uFEA1'] = '\\\\u062D';\\r\\n t['\\\\uFEA2'] = '\\\\u062D';\\r\\n t['\\\\uFEA3'] = '\\\\u062D';\\r\\n t['\\\\uFEA4'] = '\\\\u062D';\\r\\n t['\\\\uFEA5'] = '\\\\u062E';\\r\\n t['\\\\uFEA6'] = '\\\\u062E';\\r\\n t['\\\\uFEA7'] = '\\\\u062E';\\r\\n t['\\\\uFEA8'] = '\\\\u062E';\\r\\n t['\\\\uFEA9'] = '\\\\u062F';\\r\\n t['\\\\uFEAA'] = '\\\\u062F';\\r\\n t['\\\\uFEAB'] = '\\\\u0630';\\r\\n t['\\\\uFEAC'] = '\\\\u0630';\\r\\n t['\\\\uFEAD'] = '\\\\u0631';\\r\\n t['\\\\uFEAE'] = '\\\\u0631';\\r\\n t['\\\\uFEAF'] = '\\\\u0632';\\r\\n t['\\\\uFEB0'] = '\\\\u0632';\\r\\n t['\\\\uFEB1'] = '\\\\u0633';\\r\\n t['\\\\uFEB2'] = '\\\\u0633';\\r\\n t['\\\\uFEB3'] = '\\\\u0633';\\r\\n t['\\\\uFEB4'] = '\\\\u0633';\\r\\n t['\\\\uFEB5'] = '\\\\u0634';\\r\\n t['\\\\uFEB6'] = '\\\\u0634';\\r\\n t['\\\\uFEB7'] = '\\\\u0634';\\r\\n t['\\\\uFEB8'] = '\\\\u0634';\\r\\n t['\\\\uFEB9'] = '\\\\u0635';\\r\\n t['\\\\uFEBA'] = '\\\\u0635';\\r\\n t['\\\\uFEBB'] = '\\\\u0635';\\r\\n t['\\\\uFEBC'] = '\\\\u0635';\\r\\n t['\\\\uFEBD'] = '\\\\u0636';\\r\\n t['\\\\uFEBE'] = '\\\\u0636';\\r\\n t['\\\\uFEBF'] = '\\\\u0636';\\r\\n t['\\\\uFEC0'] = '\\\\u0636';\\r\\n t['\\\\uFEC1'] = '\\\\u0637';\\r\\n t['\\\\uFEC2'] = '\\\\u0637';\\r\\n t['\\\\uFEC3'] = '\\\\u0637';\\r\\n t['\\\\uFEC4'] = '\\\\u0637';\\r\\n t['\\\\uFEC5'] = '\\\\u0638';\\r\\n t['\\\\uFEC6'] = '\\\\u0638';\\r\\n t['\\\\uFEC7'] = '\\\\u0638';\\r\\n t['\\\\uFEC8'] = '\\\\u0638';\\r\\n t['\\\\uFEC9'] = '\\\\u0639';\\r\\n t['\\\\uFECA'] = '\\\\u0639';\\r\\n t['\\\\uFECB'] = '\\\\u0639';\\r\\n t['\\\\uFECC'] = '\\\\u0639';\\r\\n t['\\\\uFECD'] = '\\\\u063A';\\r\\n t['\\\\uFECE'] = '\\\\u063A';\\r\\n t['\\\\uFECF'] = '\\\\u063A';\\r\\n t['\\\\uFED0'] = '\\\\u063A';\\r\\n t['\\\\uFED1'] = '\\\\u0641';\\r\\n t['\\\\uFED2'] = '\\\\u0641';\\r\\n t['\\\\uFED3'] = '\\\\u0641';\\r\\n t['\\\\uFED4'] = '\\\\u0641';\\r\\n t['\\\\uFED5'] = '\\\\u0642';\\r\\n t['\\\\uFED6'] = '\\\\u0642';\\r\\n t['\\\\uFED7'] = '\\\\u0642';\\r\\n t['\\\\uFED8'] = '\\\\u0642';\\r\\n t['\\\\uFED9'] = '\\\\u0643';\\r\\n t['\\\\uFEDA'] = '\\\\u0643';\\r\\n t['\\\\uFEDB'] = '\\\\u0643';\\r\\n t['\\\\uFEDC'] = '\\\\u0643';\\r\\n t['\\\\uFEDD'] = '\\\\u0644';\\r\\n t['\\\\uFEDE'] = '\\\\u0644';\\r\\n t['\\\\uFEDF'] = '\\\\u0644';\\r\\n t['\\\\uFEE0'] = '\\\\u0644';\\r\\n t['\\\\uFEE1'] = '\\\\u0645';\\r\\n t['\\\\uFEE2'] = '\\\\u0645';\\r\\n t['\\\\uFEE3'] = '\\\\u0645';\\r\\n t['\\\\uFEE4'] = '\\\\u0645';\\r\\n t['\\\\uFEE5'] = '\\\\u0646';\\r\\n t['\\\\uFEE6'] = '\\\\u0646';\\r\\n t['\\\\uFEE7'] = '\\\\u0646';\\r\\n t['\\\\uFEE8'] = '\\\\u0646';\\r\\n t['\\\\uFEE9'] = '\\\\u0647';\\r\\n t['\\\\uFEEA'] = '\\\\u0647';\\r\\n t['\\\\uFEEB'] = '\\\\u0647';\\r\\n t['\\\\uFEEC'] = '\\\\u0647';\\r\\n t['\\\\uFEED'] = '\\\\u0648';\\r\\n t['\\\\uFEEE'] = '\\\\u0648';\\r\\n t['\\\\uFEEF'] = '\\\\u0649';\\r\\n t['\\\\uFEF0'] = '\\\\u0649';\\r\\n t['\\\\uFEF1'] = '\\\\u064A';\\r\\n t['\\\\uFEF2'] = '\\\\u064A';\\r\\n t['\\\\uFEF3'] = '\\\\u064A';\\r\\n t['\\\\uFEF4'] = '\\\\u064A';\\r\\n t['\\\\uFEF5'] = '\\\\u0644\\\\u0622';\\r\\n t['\\\\uFEF6'] = '\\\\u0644\\\\u0622';\\r\\n t['\\\\uFEF7'] = '\\\\u0644\\\\u0623';\\r\\n t['\\\\uFEF8'] = '\\\\u0644\\\\u0623';\\r\\n t['\\\\uFEF9'] = '\\\\u0644\\\\u0625';\\r\\n t['\\\\uFEFA'] = '\\\\u0644\\\\u0625';\\r\\n t['\\\\uFEFB'] = '\\\\u0644\\\\u0627';\\r\\n t['\\\\uFEFC'] = '\\\\u0644\\\\u0627';\\r\\n});\\r\\nfunction reverseIfRtl(chars) {\\r\\n var charsLength = chars.length;\\r\\n if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\\r\\n  return chars;\\r\\n }\\r\\n var s = '';\\r\\n for (var ii = charsLength - 1; ii >= 0; ii--) {\\r\\n  s += chars[ii];\\r\\n }\\r\\n return s;\\r\\n}\\r\\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\\r\\nexports.reverseIfRtl = reverseIfRtl;\\r\\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\\r\\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\\r\\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\\r\\n\\r\\n/***/ }),\\r\\n/* 87 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _ps_parser = __w_pdfjs_require__(156);\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar IsEvalSupportedCached = {\\r\\n  get value() {\\r\\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\\r\\n  }\\r\\n};\\r\\n\\r\\nvar PDFFunctionFactory = function () {\\r\\n  function PDFFunctionFactory(_ref) {\\r\\n    var xref = _ref.xref,\\r\\n        _ref$isEvalSupported = _ref.isEvalSupported,\\r\\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\\r\\n\\r\\n    _classCallCheck(this, PDFFunctionFactory);\\r\\n\\r\\n    this.xref = xref;\\r\\n    this.isEvalSupported = isEvalSupported !== false;\\r\\n  }\\r\\n\\r\\n  _createClass(PDFFunctionFactory, [{\\r\\n    key: 'create',\\r\\n    value: function create(fn) {\\r\\n      return PDFFunction.parse({\\r\\n        xref: this.xref,\\r\\n        isEvalSupported: this.isEvalSupported,\\r\\n        fn: fn\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'createFromArray',\\r\\n    value: function createFromArray(fnObj) {\\r\\n      return PDFFunction.parseArray({\\r\\n        xref: this.xref,\\r\\n        isEvalSupported: this.isEvalSupported,\\r\\n        fnObj: fnObj\\r\\n      });\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PDFFunctionFactory;\\r\\n}();\\r\\n\\r\\nfunction toNumberArray(arr) {\\r\\n  if (!Array.isArray(arr)) {\\r\\n    return null;\\r\\n  }\\r\\n  var length = arr.length;\\r\\n  for (var i = 0; i < length; i++) {\\r\\n    if (typeof arr[i] !== 'number') {\\r\\n      var result = new Array(length);\\r\\n      for (var _i = 0; _i < length; _i++) {\\r\\n        result[_i] = +arr[_i];\\r\\n      }\\r\\n      return result;\\r\\n    }\\r\\n  }\\r\\n  return arr;\\r\\n}\\r\\nvar PDFFunction = function PDFFunctionClosure() {\\r\\n  var CONSTRUCT_SAMPLED = 0;\\r\\n  var CONSTRUCT_INTERPOLATED = 2;\\r\\n  var CONSTRUCT_STICHED = 3;\\r\\n  var CONSTRUCT_POSTSCRIPT = 4;\\r\\n  return {\\r\\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\\r\\n      var i, ii;\\r\\n      var length = 1;\\r\\n      for (i = 0, ii = size.length; i < ii; i++) {\\r\\n        length *= size[i];\\r\\n      }\\r\\n      length *= outputSize;\\r\\n      var array = new Array(length);\\r\\n      var codeSize = 0;\\r\\n      var codeBuf = 0;\\r\\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\\r\\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\\r\\n      var strIdx = 0;\\r\\n      for (i = 0; i < length; i++) {\\r\\n        while (codeSize < bps) {\\r\\n          codeBuf <<= 8;\\r\\n          codeBuf |= strBytes[strIdx++];\\r\\n          codeSize += 8;\\r\\n        }\\r\\n        codeSize -= bps;\\r\\n        array[i] = (codeBuf >> codeSize) * sampleMul;\\r\\n        codeBuf &= (1 << codeSize) - 1;\\r\\n      }\\r\\n      return array;\\r\\n    },\\r\\n    getIR: function getIR(_ref2) {\\r\\n      var xref = _ref2.xref,\\r\\n          isEvalSupported = _ref2.isEvalSupported,\\r\\n          fn = _ref2.fn;\\r\\n\\r\\n      var dict = fn.dict;\\r\\n      if (!dict) {\\r\\n        dict = fn;\\r\\n      }\\r\\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\\r\\n      var typeNum = dict.get('FunctionType');\\r\\n      var typeFn = types[typeNum];\\r\\n      if (!typeFn) {\\r\\n        throw new _util.FormatError('Unknown type of function');\\r\\n      }\\r\\n      return typeFn.call(this, {\\r\\n        xref: xref,\\r\\n        isEvalSupported: isEvalSupported,\\r\\n        fn: fn,\\r\\n        dict: dict\\r\\n      });\\r\\n    },\\r\\n    fromIR: function fromIR(_ref3) {\\r\\n      var xref = _ref3.xref,\\r\\n          isEvalSupported = _ref3.isEvalSupported,\\r\\n          IR = _ref3.IR;\\r\\n\\r\\n      var type = IR[0];\\r\\n      switch (type) {\\r\\n        case CONSTRUCT_SAMPLED:\\r\\n          return this.constructSampledFromIR({\\r\\n            xref: xref,\\r\\n            isEvalSupported: isEvalSupported,\\r\\n            IR: IR\\r\\n          });\\r\\n        case CONSTRUCT_INTERPOLATED:\\r\\n          return this.constructInterpolatedFromIR({\\r\\n            xref: xref,\\r\\n            isEvalSupported: isEvalSupported,\\r\\n            IR: IR\\r\\n          });\\r\\n        case CONSTRUCT_STICHED:\\r\\n          return this.constructStichedFromIR({\\r\\n            xref: xref,\\r\\n            isEvalSupported: isEvalSupported,\\r\\n            IR: IR\\r\\n          });\\r\\n        default:\\r\\n          return this.constructPostScriptFromIR({\\r\\n            xref: xref,\\r\\n            isEvalSupported: isEvalSupported,\\r\\n            IR: IR\\r\\n          });\\r\\n      }\\r\\n    },\\r\\n    parse: function parse(_ref4) {\\r\\n      var xref = _ref4.xref,\\r\\n          isEvalSupported = _ref4.isEvalSupported,\\r\\n          fn = _ref4.fn;\\r\\n\\r\\n      var IR = this.getIR({\\r\\n        xref: xref,\\r\\n        isEvalSupported: isEvalSupported,\\r\\n        fn: fn\\r\\n      });\\r\\n      return this.fromIR({\\r\\n        xref: xref,\\r\\n        isEvalSupported: isEvalSupported,\\r\\n        IR: IR\\r\\n      });\\r\\n    },\\r\\n    parseArray: function parseArray(_ref5) {\\r\\n      var xref = _ref5.xref,\\r\\n          isEvalSupported = _ref5.isEvalSupported,\\r\\n          fnObj = _ref5.fnObj;\\r\\n\\r\\n      if (!Array.isArray(fnObj)) {\\r\\n        return this.parse({\\r\\n          xref: xref,\\r\\n          isEvalSupported: isEvalSupported,\\r\\n          fn: fnObj\\r\\n        });\\r\\n      }\\r\\n      var fnArray = [];\\r\\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\\r\\n        fnArray.push(this.parse({\\r\\n          xref: xref,\\r\\n          isEvalSupported: isEvalSupported,\\r\\n          fn: xref.fetchIfRef(fnObj[j])\\r\\n        }));\\r\\n      }\\r\\n      return function (src, srcOffset, dest, destOffset) {\\r\\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\\r\\n          fnArray[i](src, srcOffset, dest, destOffset + i);\\r\\n        }\\r\\n      };\\r\\n    },\\r\\n    constructSampled: function constructSampled(_ref6) {\\r\\n      var xref = _ref6.xref,\\r\\n          isEvalSupported = _ref6.isEvalSupported,\\r\\n          fn = _ref6.fn,\\r\\n          dict = _ref6.dict;\\r\\n\\r\\n      function toMultiArray(arr) {\\r\\n        var inputLength = arr.length;\\r\\n        var out = [];\\r\\n        var index = 0;\\r\\n        for (var i = 0; i < inputLength; i += 2) {\\r\\n          out[index] = [arr[i], arr[i + 1]];\\r\\n          ++index;\\r\\n        }\\r\\n        return out;\\r\\n      }\\r\\n      var domain = toNumberArray(dict.getArray('Domain'));\\r\\n      var range = toNumberArray(dict.getArray('Range'));\\r\\n      if (!domain || !range) {\\r\\n        throw new _util.FormatError('No domain or range');\\r\\n      }\\r\\n      var inputSize = domain.length / 2;\\r\\n      var outputSize = range.length / 2;\\r\\n      domain = toMultiArray(domain);\\r\\n      range = toMultiArray(range);\\r\\n      var size = toNumberArray(dict.get('Size'));\\r\\n      var bps = dict.get('BitsPerSample');\\r\\n      var order = dict.get('Order') || 1;\\r\\n      if (order !== 1) {\\r\\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\\r\\n      }\\r\\n      var encode = toNumberArray(dict.getArray('Encode'));\\r\\n      if (!encode) {\\r\\n        encode = [];\\r\\n        for (var i = 0; i < inputSize; ++i) {\\r\\n          encode.push([0, size[i] - 1]);\\r\\n        }\\r\\n      } else {\\r\\n        encode = toMultiArray(encode);\\r\\n      }\\r\\n      var decode = toNumberArray(dict.getArray('Decode'));\\r\\n      if (!decode) {\\r\\n        decode = range;\\r\\n      } else {\\r\\n        decode = toMultiArray(decode);\\r\\n      }\\r\\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\\r\\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\\r\\n    },\\r\\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\\r\\n      var xref = _ref7.xref,\\r\\n          isEvalSupported = _ref7.isEvalSupported,\\r\\n          IR = _ref7.IR;\\r\\n\\r\\n      function interpolate(x, xmin, xmax, ymin, ymax) {\\r\\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\\r\\n      }\\r\\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\\r\\n        var m = IR[1];\\r\\n        var domain = IR[2];\\r\\n        var encode = IR[3];\\r\\n        var decode = IR[4];\\r\\n        var samples = IR[5];\\r\\n        var size = IR[6];\\r\\n        var n = IR[7];\\r\\n        var range = IR[9];\\r\\n        var cubeVertices = 1 << m;\\r\\n        var cubeN = new Float64Array(cubeVertices);\\r\\n        var cubeVertex = new Uint32Array(cubeVertices);\\r\\n        var i, j;\\r\\n        for (j = 0; j < cubeVertices; j++) {\\r\\n          cubeN[j] = 1;\\r\\n        }\\r\\n        var k = n,\\r\\n            pos = 1;\\r\\n        for (i = 0; i < m; ++i) {\\r\\n          var domain_2i = domain[i][0];\\r\\n          var domain_2i_1 = domain[i][1];\\r\\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\\r\\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\\r\\n          var size_i = size[i];\\r\\n          e = Math.min(Math.max(e, 0), size_i - 1);\\r\\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\\r\\n          var n0 = e0 + 1 - e;\\r\\n          var n1 = e - e0;\\r\\n          var offset0 = e0 * k;\\r\\n          var offset1 = offset0 + k;\\r\\n          for (j = 0; j < cubeVertices; j++) {\\r\\n            if (j & pos) {\\r\\n              cubeN[j] *= n1;\\r\\n              cubeVertex[j] += offset1;\\r\\n            } else {\\r\\n              cubeN[j] *= n0;\\r\\n              cubeVertex[j] += offset0;\\r\\n            }\\r\\n          }\\r\\n          k *= size_i;\\r\\n          pos <<= 1;\\r\\n        }\\r\\n        for (j = 0; j < n; ++j) {\\r\\n          var rj = 0;\\r\\n          for (i = 0; i < cubeVertices; i++) {\\r\\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\\r\\n          }\\r\\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\\r\\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\\r\\n        }\\r\\n      };\\r\\n    },\\r\\n    constructInterpolated: function constructInterpolated(_ref8) {\\r\\n      var xref = _ref8.xref,\\r\\n          isEvalSupported = _ref8.isEvalSupported,\\r\\n          fn = _ref8.fn,\\r\\n          dict = _ref8.dict;\\r\\n\\r\\n      var c0 = toNumberArray(dict.getArray('C0')) || [0];\\r\\n      var c1 = toNumberArray(dict.getArray('C1')) || [1];\\r\\n      var n = dict.get('N');\\r\\n      var length = c0.length;\\r\\n      var diff = [];\\r\\n      for (var i = 0; i < length; ++i) {\\r\\n        diff.push(c1[i] - c0[i]);\\r\\n      }\\r\\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\\r\\n    },\\r\\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\\r\\n      var xref = _ref9.xref,\\r\\n          isEvalSupported = _ref9.isEvalSupported,\\r\\n          IR = _ref9.IR;\\r\\n\\r\\n      var c0 = IR[1];\\r\\n      var diff = IR[2];\\r\\n      var n = IR[3];\\r\\n      var length = diff.length;\\r\\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\\r\\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\\r\\n        for (var j = 0; j < length; ++j) {\\r\\n          dest[destOffset + j] = c0[j] + x * diff[j];\\r\\n        }\\r\\n      };\\r\\n    },\\r\\n    constructStiched: function constructStiched(_ref10) {\\r\\n      var xref = _ref10.xref,\\r\\n          isEvalSupported = _ref10.isEvalSupported,\\r\\n          fn = _ref10.fn,\\r\\n          dict = _ref10.dict;\\r\\n\\r\\n      var domain = toNumberArray(dict.getArray('Domain'));\\r\\n      if (!domain) {\\r\\n        throw new _util.FormatError('No domain');\\r\\n      }\\r\\n      var inputSize = domain.length / 2;\\r\\n      if (inputSize !== 1) {\\r\\n        throw new _util.FormatError('Bad domain for stiched function');\\r\\n      }\\r\\n      var fnRefs = dict.get('Functions');\\r\\n      var fns = [];\\r\\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\\r\\n        fns.push(this.parse({\\r\\n          xref: xref,\\r\\n          isEvalSupported: isEvalSupported,\\r\\n          fn: xref.fetchIfRef(fnRefs[i])\\r\\n        }));\\r\\n      }\\r\\n      var bounds = toNumberArray(dict.ge\";a.a+=\"tArray('Bounds'));\\r\\n      var encode = toNumberArray(dict.getArray('Encode'));\\r\\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\\r\\n    },\\r\\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\\r\\n      var xref = _ref11.xref,\\r\\n          isEvalSupported = _ref11.isEvalSupported,\\r\\n          IR = _ref11.IR;\\r\\n\\r\\n      var domain = IR[1];\\r\\n      var bounds = IR[2];\\r\\n      var encode = IR[3];\\r\\n      var fns = IR[4];\\r\\n      var tmpBuf = new Float32Array(1);\\r\\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\\r\\n        var clip = function constructStichedFromIRClip(v, min, max) {\\r\\n          if (v > max) {\\r\\n            v = max;\\r\\n          } else if (v < min) {\\r\\n            v = min;\\r\\n          }\\r\\n          return v;\\r\\n        };\\r\\n        var v = clip(src[srcOffset], domain[0], domain[1]);\\r\\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\\r\\n          if (v < bounds[i]) {\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        var dmin = domain[0];\\r\\n        if (i > 0) {\\r\\n          dmin = bounds[i - 1];\\r\\n        }\\r\\n        var dmax = domain[1];\\r\\n        if (i < bounds.length) {\\r\\n          dmax = bounds[i];\\r\\n        }\\r\\n        var rmin = encode[2 * i];\\r\\n        var rmax = encode[2 * i + 1];\\r\\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\\r\\n        fns[i](tmpBuf, 0, dest, destOffset);\\r\\n      };\\r\\n    },\\r\\n    constructPostScript: function constructPostScript(_ref12) {\\r\\n      var xref = _ref12.xref,\\r\\n          isEvalSupported = _ref12.isEvalSupported,\\r\\n          fn = _ref12.fn,\\r\\n          dict = _ref12.dict;\\r\\n\\r\\n      var domain = toNumberArray(dict.getArray('Domain'));\\r\\n      var range = toNumberArray(dict.getArray('Range'));\\r\\n      if (!domain) {\\r\\n        throw new _util.FormatError('No domain.');\\r\\n      }\\r\\n      if (!range) {\\r\\n        throw new _util.FormatError('No range.');\\r\\n      }\\r\\n      var lexer = new _ps_parser.PostScriptLexer(fn);\\r\\n      var parser = new _ps_parser.PostScriptParser(lexer);\\r\\n      var code = parser.parse();\\r\\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\\r\\n    },\\r\\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\\r\\n      var xref = _ref13.xref,\\r\\n          isEvalSupported = _ref13.isEvalSupported,\\r\\n          IR = _ref13.IR;\\r\\n\\r\\n      var domain = IR[1];\\r\\n      var range = IR[2];\\r\\n      var code = IR[3];\\r\\n      if (isEvalSupported && IsEvalSupportedCached.value) {\\r\\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\\r\\n        if (compiled) {\\r\\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\\r\\n        }\\r\\n      }\\r\\n      (0, _util.info)('Unable to compile PS function');\\r\\n      var numOutputs = range.length >> 1;\\r\\n      var numInputs = domain.length >> 1;\\r\\n      var evaluator = new PostScriptEvaluator(code);\\r\\n      var cache = Object.create(null);\\r\\n      var MAX_CACHE_SIZE = 2048 * 4;\\r\\n      var cache_available = MAX_CACHE_SIZE;\\r\\n      var tmpBuf = new Float32Array(numInputs);\\r\\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\\r\\n        var i, value;\\r\\n        var key = '';\\r\\n        var input = tmpBuf;\\r\\n        for (i = 0; i < numInputs; i++) {\\r\\n          value = src[srcOffset + i];\\r\\n          input[i] = value;\\r\\n          key += value + '_';\\r\\n        }\\r\\n        var cachedValue = cache[key];\\r\\n        if (cachedValue !== undefined) {\\r\\n          dest.set(cachedValue, destOffset);\\r\\n          return;\\r\\n        }\\r\\n        var output = new Float32Array(numOutputs);\\r\\n        var stack = evaluator.execute(input);\\r\\n        var stackIndex = stack.length - numOutputs;\\r\\n        for (i = 0; i < numOutputs; i++) {\\r\\n          value = stack[stackIndex + i];\\r\\n          var bound = range[i * 2];\\r\\n          if (value < bound) {\\r\\n            value = bound;\\r\\n          } else {\\r\\n            bound = range[i * 2 + 1];\\r\\n            if (value > bound) {\\r\\n              value = bound;\\r\\n            }\\r\\n          }\\r\\n          output[i] = value;\\r\\n        }\\r\\n        if (cache_available > 0) {\\r\\n          cache_available--;\\r\\n          cache[key] = output;\\r\\n        }\\r\\n        dest.set(output, destOffset);\\r\\n      };\\r\\n    }\\r\\n  };\\r\\n}();\\r\\nfunction isPDFFunction(v) {\\r\\n  var fnDict;\\r\\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\\r\\n    return false;\\r\\n  } else if ((0, _primitives.isDict)(v)) {\\r\\n    fnDict = v;\\r\\n  } else if ((0, _primitives.isStream)(v)) {\\r\\n    fnDict = v.dict;\\r\\n  } else {\\r\\n    return false;\\r\\n  }\\r\\n  return fnDict.has('FunctionType');\\r\\n}\\r\\nvar PostScriptStack = function PostScriptStackClosure() {\\r\\n  var MAX_STACK_SIZE = 100;\\r\\n  function PostScriptStack(initialStack) {\\r\\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\\r\\n  }\\r\\n  PostScriptStack.prototype = {\\r\\n    push: function PostScriptStack_push(value) {\\r\\n      if (this.stack.length >= MAX_STACK_SIZE) {\\r\\n        throw new Error('PostScript function stack overflow.');\\r\\n      }\\r\\n      this.stack.push(value);\\r\\n    },\\r\\n    pop: function PostScriptStack_pop() {\\r\\n      if (this.stack.length <= 0) {\\r\\n        throw new Error('PostScript function stack underflow.');\\r\\n      }\\r\\n      return this.stack.pop();\\r\\n    },\\r\\n    copy: function PostScriptStack_copy(n) {\\r\\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\\r\\n        throw new Error('PostScript function stack overflow.');\\r\\n      }\\r\\n      var stack = this.stack;\\r\\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\\r\\n        stack.push(stack[i]);\\r\\n      }\\r\\n    },\\r\\n    index: function PostScriptStack_index(n) {\\r\\n      this.push(this.stack[this.stack.length - n - 1]);\\r\\n    },\\r\\n    roll: function PostScriptStack_roll(n, p) {\\r\\n      var stack = this.stack;\\r\\n      var l = stack.length - n;\\r\\n      var r = stack.length - 1,\\r\\n          c = l + (p - Math.floor(p / n) * n),\\r\\n          i,\\r\\n          j,\\r\\n          t;\\r\\n      for (i = l, j = r; i < j; i++, j--) {\\r\\n        t = stack[i];\\r\\n        stack[i] = stack[j];\\r\\n        stack[j] = t;\\r\\n      }\\r\\n      for (i = l, j = c - 1; i < j; i++, j--) {\\r\\n        t = stack[i];\\r\\n        stack[i] = stack[j];\\r\\n        stack[j] = t;\\r\\n      }\\r\\n      for (i = c, j = r; i < j; i++, j--) {\\r\\n        t = stack[i];\\r\\n        stack[i] = stack[j];\\r\\n        stack[j] = t;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return PostScriptStack;\\r\\n}();\\r\\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\\r\\n  function PostScriptEvaluator(operators) {\\r\\n    this.operators = operators;\\r\\n  }\\r\\n  PostScriptEvaluator.prototype = {\\r\\n    execute: function PostScriptEvaluator_execute(initialStack) {\\r\\n      var stack = new PostScriptStack(initialStack);\\r\\n      var counter = 0;\\r\\n      var operators = this.operators;\\r\\n      var length = operators.length;\\r\\n      var operator, a, b;\\r\\n      while (counter < length) {\\r\\n        operator = operators[counter++];\\r\\n        if (typeof operator === 'number') {\\r\\n          stack.push(operator);\\r\\n          continue;\\r\\n        }\\r\\n        switch (operator) {\\r\\n          case 'jz':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            if (!a) {\\r\\n              counter = b;\\r\\n            }\\r\\n            break;\\r\\n          case 'j':\\r\\n            a = stack.pop();\\r\\n            counter = a;\\r\\n            break;\\r\\n          case 'abs':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.abs(a));\\r\\n            break;\\r\\n          case 'add':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a + b);\\r\\n            break;\\r\\n          case 'and':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\r\\n              stack.push(a && b);\\r\\n            } else {\\r\\n              stack.push(a & b);\\r\\n            }\\r\\n            break;\\r\\n          case 'atan':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.atan(a));\\r\\n            break;\\r\\n          case 'bitshift':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            if (a > 0) {\\r\\n              stack.push(a << b);\\r\\n            } else {\\r\\n              stack.push(a >> b);\\r\\n            }\\r\\n            break;\\r\\n          case 'ceiling':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.ceil(a));\\r\\n            break;\\r\\n          case 'copy':\\r\\n            a = stack.pop();\\r\\n            stack.copy(a);\\r\\n            break;\\r\\n          case 'cos':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.cos(a));\\r\\n            break;\\r\\n          case 'cvi':\\r\\n            a = stack.pop() | 0;\\r\\n            stack.push(a);\\r\\n            break;\\r\\n          case 'cvr':\\r\\n            break;\\r\\n          case 'div':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a / b);\\r\\n            break;\\r\\n          case 'dup':\\r\\n            stack.copy(1);\\r\\n            break;\\r\\n          case 'eq':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a === b);\\r\\n            break;\\r\\n          case 'exch':\\r\\n            stack.roll(2, 1);\\r\\n            break;\\r\\n          case 'exp':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.pow(a, b));\\r\\n            break;\\r\\n          case 'false':\\r\\n            stack.push(false);\\r\\n            break;\\r\\n          case 'floor':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.floor(a));\\r\\n            break;\\r\\n          case 'ge':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a >= b);\\r\\n            break;\\r\\n          case 'gt':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a > b);\\r\\n            break;\\r\\n          case 'idiv':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a / b | 0);\\r\\n            break;\\r\\n          case 'index':\\r\\n            a = stack.pop();\\r\\n            stack.index(a);\\r\\n            break;\\r\\n          case 'le':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a <= b);\\r\\n            break;\\r\\n          case 'ln':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.log(a));\\r\\n            break;\\r\\n          case 'log':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.log(a) / Math.LN10);\\r\\n            break;\\r\\n          case 'lt':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a < b);\\r\\n            break;\\r\\n          case 'mod':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a % b);\\r\\n            break;\\r\\n          case 'mul':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a * b);\\r\\n            break;\\r\\n          case 'ne':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a !== b);\\r\\n            break;\\r\\n          case 'neg':\\r\\n            a = stack.pop();\\r\\n            stack.push(-a);\\r\\n            break;\\r\\n          case 'not':\\r\\n            a = stack.pop();\\r\\n            if ((0, _util.isBool)(a)) {\\r\\n              stack.push(!a);\\r\\n            } else {\\r\\n              stack.push(~a);\\r\\n            }\\r\\n            break;\\r\\n          case 'or':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\r\\n              stack.push(a || b);\\r\\n            } else {\\r\\n              stack.push(a | b);\\r\\n            }\\r\\n            break;\\r\\n          case 'pop':\\r\\n            stack.pop();\\r\\n            break;\\r\\n          case 'roll':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.roll(a, b);\\r\\n            break;\\r\\n          case 'round':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.round(a));\\r\\n            break;\\r\\n          case 'sin':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.sin(a));\\r\\n            break;\\r\\n          case 'sqrt':\\r\\n            a = stack.pop();\\r\\n            stack.push(Math.sqrt(a));\\r\\n            break;\\r\\n          case 'sub':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            stack.push(a - b);\\r\\n            break;\\r\\n          case 'true':\\r\\n            stack.push(true);\\r\\n            break;\\r\\n          case 'truncate':\\r\\n            a = stack.pop();\\r\\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\\r\\n            stack.push(a);\\r\\n            break;\\r\\n          case 'xor':\\r\\n            b = stack.pop();\\r\\n            a = stack.pop();\\r\\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\\r\\n              stack.push(a !== b);\\r\\n            } else {\\r\\n              stack.push(a ^ b);\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            throw new _util.FormatError('Unknown operator ' + operator);\\r\\n        }\\r\\n      }\\r\\n      return stack.stack;\\r\\n    }\\r\\n  };\\r\\n  return PostScriptEvaluator;\\r\\n}();\\r\\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\\r\\n  function AstNode(type) {\\r\\n    this.type = type;\\r\\n  }\\r\\n  AstNode.prototype.visit = function (visitor) {\\r\\n    throw new Error('abstract method');\\r\\n  };\\r\\n  function AstArgument(index, min, max) {\\r\\n    AstNode.call(this, 'args');\\r\\n    this.index = index;\\r\\n    this.min = min;\\r\\n    this.max = max;\\r\\n  }\\r\\n  AstArgument.prototype = Object.create(AstNode.prototype);\\r\\n  AstArgument.prototype.visit = function (visitor) {\\r\\n    visitor.visitArgument(this);\\r\\n  };\\r\\n  function AstLiteral(number) {\\r\\n    AstNode.call(this, 'literal');\\r\\n    this.number = number;\\r\\n    this.min = number;\\r\\n    this.max = number;\\r\\n  }\\r\\n  AstLiteral.prototype = Object.create(AstNode.prototype);\\r\\n  AstLiteral.prototype.visit = function (visitor) {\\r\\n    visitor.visitLiteral(this);\\r\\n  };\\r\\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\\r\\n    AstNode.call(this, 'binary');\\r\\n    this.op = op;\\r\\n    this.arg1 = arg1;\\r\\n    this.arg2 = arg2;\\r\\n    this.min = min;\\r\\n    this.max = max;\\r\\n  }\\r\\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\\r\\n  AstBinaryOperation.prototype.visit = function (visitor) {\\r\\n    visitor.visitBinaryOperation(this);\\r\\n  };\\r\\n  function AstMin(arg, max) {\\r\\n    AstNode.call(this, 'max');\\r\\n    this.arg = arg;\\r\\n    this.min = arg.min;\\r\\n    this.max = max;\\r\\n  }\\r\\n  AstMin.prototype = Object.create(AstNode.prototype);\\r\\n  AstMin.prototype.visit = function (visitor) {\\r\\n    visitor.visitMin(this);\\r\\n  };\\r\\n  function AstVariable(index, min, max) {\\r\\n    AstNode.call(this, 'var');\\r\\n    this.index = index;\\r\\n    this.min = min;\\r\\n    this.max = max;\\r\\n  }\\r\\n  AstVariable.prototype = Object.create(AstNode.prototype);\\r\\n  AstVariable.prototype.visit = function (visitor) {\\r\\n    visitor.visitVariable(this);\\r\\n  };\\r\\n  function AstVariableDefinition(variable, arg) {\\r\\n    AstNode.call(this, 'definition');\\r\\n    this.variable = variable;\\r\\n    this.arg = arg;\\r\\n  }\\r\\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\\r\\n  AstVariableDefinition.prototype.visit = function (visitor) {\\r\\n    visitor.visitVariableDefinition(this);\\r\\n  };\\r\\n  function ExpressionBuilderVisitor() {\\r\\n    this.parts = [];\\r\\n  }\\r\\n  ExpressionBuilderVisitor.prototype = {\\r\\n    visitArgument: function visitArgument(arg) {\\r\\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\\r\\n    },\\r\\n    visitVariable: function visitVariable(variable) {\\r\\n      this.parts.push('v', variable.index);\\r\\n    },\\r\\n    visitLiteral: function visitLiteral(literal) {\\r\\n      this.parts.push(literal.number);\\r\\n    },\\r\\n    visitBinaryOperation: function visitBinaryOperation(operation) {\\r\\n      this.parts.push('(');\\r\\n      operation.arg1.visit(this);\\r\\n      this.parts.push(' ', operation.op, ' ');\\r\\n      operation.arg2.visit(this);\\r\\n      this.parts.push(')');\\r\\n    },\\r\\n    visitVariableDefinition: function visitVariableDefinition(definition) {\\r\\n      this.parts.push('var ');\\r\\n      definition.variable.visit(this);\\r\\n      this.parts.push(' = ');\\r\\n      definition.arg.visit(this);\\r\\n      this.parts.push(';');\\r\\n    },\\r\\n    visitMin: function visitMin(max) {\\r\\n      this.parts.push('Math.min(');\\r\\n      max.arg.visit(this);\\r\\n      this.parts.push(', ', max.max, ')');\\r\\n    },\\r\\n    toString: function toString() {\\r\\n      return this.parts.join('');\\r\\n    }\\r\\n  };\\r\\n  function buildAddOperation(num1, num2) {\\r\\n    if (num2.type === 'literal' && num2.number === 0) {\\r\\n      return num1;\\r\\n    }\\r\\n    if (num1.type === 'literal' && num1.number === 0) {\\r\\n      return num2;\\r\\n    }\\r\\n    if (num2.type === 'literal' && num1.type === 'literal') {\\r\\n      return new A\";a.a+=\"stLiteral(num1.number + num2.number);\\r\\n    }\\r\\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\\r\\n  }\\r\\n  function buildMulOperation(num1, num2) {\\r\\n    if (num2.type === 'literal') {\\r\\n      if (num2.number === 0) {\\r\\n        return new AstLiteral(0);\\r\\n      } else if (num2.number === 1) {\\r\\n        return num1;\\r\\n      } else if (num1.type === 'literal') {\\r\\n        return new AstLiteral(num1.number * num2.number);\\r\\n      }\\r\\n    }\\r\\n    if (num1.type === 'literal') {\\r\\n      if (num1.number === 0) {\\r\\n        return new AstLiteral(0);\\r\\n      } else if (num1.number === 1) {\\r\\n        return num2;\\r\\n      }\\r\\n    }\\r\\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\r\\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\\r\\n    return new AstBinaryOperation('*', num1, num2, min, max);\\r\\n  }\\r\\n  function buildSubOperation(num1, num2) {\\r\\n    if (num2.type === 'literal') {\\r\\n      if (num2.number === 0) {\\r\\n        return num1;\\r\\n      } else if (num1.type === 'literal') {\\r\\n        return new AstLiteral(num1.number - num2.number);\\r\\n      }\\r\\n    }\\r\\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\\r\\n      return num2.arg2;\\r\\n    }\\r\\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\\r\\n  }\\r\\n  function buildMinOperation(num1, max) {\\r\\n    if (num1.min >= max) {\\r\\n      return new AstLiteral(max);\\r\\n    } else if (num1.max <= max) {\\r\\n      return num1;\\r\\n    }\\r\\n    return new AstMin(num1, max);\\r\\n  }\\r\\n  function PostScriptCompiler() {}\\r\\n  PostScriptCompiler.prototype = {\\r\\n    compile: function PostScriptCompiler_compile(code, domain, range) {\\r\\n      var stack = [];\\r\\n      var i, ii;\\r\\n      var instructions = [];\\r\\n      var inputSize = domain.length >> 1,\\r\\n          outputSize = range.length >> 1;\\r\\n      var lastRegister = 0;\\r\\n      var n, j;\\r\\n      var num1, num2, ast1, ast2, tmpVar, item;\\r\\n      for (i = 0; i < inputSize; i++) {\\r\\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\\r\\n      }\\r\\n      for (i = 0, ii = code.length; i < ii; i++) {\\r\\n        item = code[i];\\r\\n        if (typeof item === 'number') {\\r\\n          stack.push(new AstLiteral(item));\\r\\n          continue;\\r\\n        }\\r\\n        switch (item) {\\r\\n          case 'add':\\r\\n            if (stack.length < 2) {\\r\\n              return null;\\r\\n            }\\r\\n            num2 = stack.pop();\\r\\n            num1 = stack.pop();\\r\\n            stack.push(buildAddOperation(num1, num2));\\r\\n            break;\\r\\n          case 'cvr':\\r\\n            if (stack.length < 1) {\\r\\n              return null;\\r\\n            }\\r\\n            break;\\r\\n          case 'mul':\\r\\n            if (stack.length < 2) {\\r\\n              return null;\\r\\n            }\\r\\n            num2 = stack.pop();\\r\\n            num1 = stack.pop();\\r\\n            stack.push(buildMulOperation(num1, num2));\\r\\n            break;\\r\\n          case 'sub':\\r\\n            if (stack.length < 2) {\\r\\n              return null;\\r\\n            }\\r\\n            num2 = stack.pop();\\r\\n            num1 = stack.pop();\\r\\n            stack.push(buildSubOperation(num1, num2));\\r\\n            break;\\r\\n          case 'exch':\\r\\n            if (stack.length < 2) {\\r\\n              return null;\\r\\n            }\\r\\n            ast1 = stack.pop();\\r\\n            ast2 = stack.pop();\\r\\n            stack.push(ast1, ast2);\\r\\n            break;\\r\\n          case 'pop':\\r\\n            if (stack.length < 1) {\\r\\n              return null;\\r\\n            }\\r\\n            stack.pop();\\r\\n            break;\\r\\n          case 'index':\\r\\n            if (stack.length < 1) {\\r\\n              return null;\\r\\n            }\\r\\n            num1 = stack.pop();\\r\\n            if (num1.type !== 'literal') {\\r\\n              return null;\\r\\n            }\\r\\n            n = num1.number;\\r\\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\\r\\n              return null;\\r\\n            }\\r\\n            ast1 = stack[stack.length - n - 1];\\r\\n            if (ast1.type === 'literal' || ast1.type === 'var') {\\r\\n              stack.push(ast1);\\r\\n              break;\\r\\n            }\\r\\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\r\\n            stack[stack.length - n - 1] = tmpVar;\\r\\n            stack.push(tmpVar);\\r\\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\\r\\n            break;\\r\\n          case 'dup':\\r\\n            if (stack.length < 1) {\\r\\n              return null;\\r\\n            }\\r\\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\\r\\n              num1 = stack.pop();\\r\\n              stack.push(buildMinOperation(num1, code[i + 1]));\\r\\n              i += 6;\\r\\n              break;\\r\\n            }\\r\\n            ast1 = stack[stack.length - 1];\\r\\n            if (ast1.type === 'literal' || ast1.type === 'var') {\\r\\n              stack.push(ast1);\\r\\n              break;\\r\\n            }\\r\\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\\r\\n            stack[stack.length - 1] = tmpVar;\\r\\n            stack.push(tmpVar);\\r\\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\\r\\n            break;\\r\\n          case 'roll':\\r\\n            if (stack.length < 2) {\\r\\n              return null;\\r\\n            }\\r\\n            num2 = stack.pop();\\r\\n            num1 = stack.pop();\\r\\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\\r\\n              return null;\\r\\n            }\\r\\n            j = num2.number;\\r\\n            n = num1.number;\\r\\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\\r\\n              return null;\\r\\n            }\\r\\n            j = (j % n + n) % n;\\r\\n            if (j === 0) {\\r\\n              break;\\r\\n            }\\r\\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\\r\\n            break;\\r\\n          default:\\r\\n            return null;\\r\\n        }\\r\\n      }\\r\\n      if (stack.length !== outputSize) {\\r\\n        return null;\\r\\n      }\\r\\n      var result = [];\\r\\n      instructions.forEach(function (instruction) {\\r\\n        var statementBuilder = new ExpressionBuilderVisitor();\\r\\n        instruction.visit(statementBuilder);\\r\\n        result.push(statementBuilder.toString());\\r\\n      });\\r\\n      stack.forEach(function (expr, i) {\\r\\n        var statementBuilder = new ExpressionBuilderVisitor();\\r\\n        expr.visit(statementBuilder);\\r\\n        var min = range[i * 2],\\r\\n            max = range[i * 2 + 1];\\r\\n        var out = [statementBuilder.toString()];\\r\\n        if (min > expr.min) {\\r\\n          out.unshift('Math.max(', min, ', ');\\r\\n          out.push(')');\\r\\n        }\\r\\n        if (max < expr.max) {\\r\\n          out.unshift('Math.min(', max, ', ');\\r\\n          out.push(')');\\r\\n        }\\r\\n        out.unshift('dest[destOffset + ', i, '] = ');\\r\\n        out.push(';');\\r\\n        result.push(out.join(''));\\r\\n      });\\r\\n      return result.join('\\\\n');\\r\\n    }\\r\\n  };\\r\\n  return PostScriptCompiler;\\r\\n}();\\r\\nexports.isPDFFunction = isPDFFunction;\\r\\nexports.PDFFunctionFactory = PDFFunctionFactory;\\r\\nexports.PostScriptEvaluator = PostScriptEvaluator;\\r\\nexports.PostScriptCompiler = PostScriptCompiler;\\r\\n\\r\\n/***/ }),\\r\\n/* 88 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.AnnotationLayer = undefined;\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _dom_utils = __w_pdfjs_require__(17);\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\r\\n\\r\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar AnnotationElementFactory = function () {\\r\\n  function AnnotationElementFactory() {\\r\\n    _classCallCheck(this, AnnotationElementFactory);\\r\\n  }\\r\\n\\r\\n  _createClass(AnnotationElementFactory, null, [{\\r\\n    key: 'create',\\r\\n    value: function create(parameters) {\\r\\n      var subtype = parameters.data.annotationType;\\r\\n      switch (subtype) {\\r\\n        case _util.AnnotationType.LINK:\\r\\n          return new LinkAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.TEXT:\\r\\n          return new TextAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.WIDGET:\\r\\n          var fieldType = parameters.data.fieldType;\\r\\n          switch (fieldType) {\\r\\n            case 'Tx':\\r\\n              return new TextWidgetAnnotationElement(parameters);\\r\\n            case 'Btn':\\r\\n              if (parameters.data.radioButton) {\\r\\n                return new RadioButtonWidgetAnnotationElement(parameters);\\r\\n              } else if (parameters.data.checkBox) {\\r\\n                return new CheckboxWidgetAnnotationElement(parameters);\\r\\n              }\\r\\n              (0, _util.warn)('Unimplemented button widget annotation: pushbutton');\\r\\n              break;\\r\\n            case 'Ch':\\r\\n              return new ChoiceWidgetAnnotationElement(parameters);\\r\\n          }\\r\\n          return new WidgetAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.POPUP:\\r\\n          return new PopupAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.LINE:\\r\\n          return new LineAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.SQUARE:\\r\\n          return new SquareAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.CIRCLE:\\r\\n          return new CircleAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.POLYLINE:\\r\\n          return new PolylineAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.POLYGON:\\r\\n          return new PolygonAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.HIGHLIGHT:\\r\\n          return new HighlightAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.UNDERLINE:\\r\\n          return new UnderlineAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.SQUIGGLY:\\r\\n          return new SquigglyAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.STRIKEOUT:\\r\\n          return new StrikeOutAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.STAMP:\\r\\n          return new StampAnnotationElement(parameters);\\r\\n        case _util.AnnotationType.FILEATTACHMENT:\\r\\n          return new FileAttachmentAnnotationElement(parameters);\\r\\n        default:\\r\\n          return new AnnotationElement(parameters);\\r\\n      }\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return AnnotationElementFactory;\\r\\n}();\\r\\n\\r\\nvar AnnotationElement = function () {\\r\\n  function AnnotationElement(parameters) {\\r\\n    var isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\r\\n    var ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\r\\n\\r\\n    _classCallCheck(this, AnnotationElement);\\r\\n\\r\\n    this.isRenderable = isRenderable;\\r\\n    this.data = parameters.data;\\r\\n    this.layer = parameters.layer;\\r\\n    this.page = parameters.page;\\r\\n    this.viewport = parameters.viewport;\\r\\n    this.linkService = parameters.linkService;\\r\\n    this.downloadManager = parameters.downloadManager;\\r\\n    this.imageResourcesPath = parameters.imageResourcesPath;\\r\\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\\r\\n    this.svgFactory = parameters.svgFactory;\\r\\n    if (isRenderable) {\\r\\n      this.container = this._createContainer(ignoreBorder);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  _createClass(AnnotationElement, [{\\r\\n    key: '_createContainer',\\r\\n    value: function _createContainer() {\\r\\n      var ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\r\\n\\r\\n      var data = this.data,\\r\\n          page = this.page,\\r\\n          viewport = this.viewport;\\r\\n      var container = document.createElement('section');\\r\\n      var width = data.rect[2] - data.rect[0];\\r\\n      var height = data.rect[3] - data.rect[1];\\r\\n      container.setAttribute('data-annotation-id', data.id);\\r\\n      var rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\\r\\n      _dom_utils.CustomStyle.setProp('transform', container, 'matrix(' + viewport.transform.join(',') + ')');\\r\\n      _dom_utils.CustomStyle.setProp('transformOrigin', container, -rect[0] + 'px ' + -rect[1] + 'px');\\r\\n      if (!ignoreBorder && data.borderStyle.width > 0) {\\r\\n        container.style.borderWidth = data.borderStyle.width + 'px';\\r\\n        if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\\r\\n          width = width - 2 * data.borderStyle.width;\\r\\n          height = height - 2 * data.borderStyle.width;\\r\\n        }\\r\\n        var horizontalRadius = data.borderStyle.horizontalCornerRadius;\\r\\n        var verticalRadius = data.borderStyle.verticalCornerRadius;\\r\\n        if (horizontalRadius > 0 || verticalRadius > 0) {\\r\\n          var radius = horizontalRadius + 'px / ' + verticalRadius + 'px';\\r\\n          _dom_utils.CustomStyle.setProp('borderRadius', container, radius);\\r\\n        }\\r\\n        switch (data.borderStyle.style) {\\r\\n          case _util.AnnotationBorderStyleType.SOLID:\\r\\n            container.style.borderStyle = 'solid';\\r\\n            break;\\r\\n          case _util.AnnotationBorderStyleType.DASHED:\\r\\n            container.style.borderStyle = 'dashed';\\r\\n            break;\\r\\n          case _util.AnnotationBorderStyleType.BEVELED:\\r\\n            (0, _util.warn)('Unimplemented border style: beveled');\\r\\n            break;\\r\\n          case _util.AnnotationBorderStyleType.INSET:\\r\\n            (0, _util.warn)('Unimplemented border style: inset');\\r\\n            break;\\r\\n          case _util.AnnotationBorderStyleType.UNDERLINE:\\r\\n            container.style.borderBottomStyle = 'solid';\\r\\n            break;\\r\\n          default:\\r\\n            break;\\r\\n        }\\r\\n        if (data.color) {\\r\\n          container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\\r\\n        } else {\\r\\n          container.style.borderWidth = 0;\\r\\n        }\\r\\n      }\\r\\n      container.style.left = rect[0] + 'px';\\r\\n      container.style.top = rect[1] + 'px';\\r\\n      container.style.width = width + 'px';\\r\\n      container.style.height = height + 'px';\\r\\n      return container;\\r\\n    }\\r\\n  }, {\\r\\n    key: '_createPopup',\\r\\n    value: function _createPopup(container, trigger, data) {\\r\\n      if (!trigger) {\\r\\n        trigger = document.createElement('div');\\r\\n        trigger.style.height = container.style.height;\\r\\n        trigger.style.width = container.style.width;\\r\\n        container.appendChild(trigger);\\r\\n      }\\r\\n      var popupElement = new PopupElement({\\r\\n        container: container,\\r\\n        trigger: trigger,\\r\\n        color: data.color,\\r\\n        title: data.title,\\r\\n        contents: data.contents,\\r\\n        hideWrapper: true\\r\\n      });\\r\\n      var popup = popupElement.render();\\r\\n      popup.style.left = container.style.width;\\r\\n      container.appendChild(popup);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      throw new Error('Abstract method `AnnotationElement.render` called');\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  \";a.a+=\"return AnnotationElement;\\r\\n}();\\r\\n\\r\\nvar LinkAnnotationElement = function (_AnnotationElement) {\\r\\n  _inherits(LinkAnnotationElement, _AnnotationElement);\\r\\n\\r\\n  function LinkAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, LinkAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\\r\\n    return _possibleConstructorReturn(this, (LinkAnnotationElement.__proto__ || Object.getPrototypeOf(LinkAnnotationElement)).call(this, parameters, isRenderable));\\r\\n  }\\r\\n\\r\\n  _createClass(LinkAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'linkAnnotation';\\r\\n      var link = document.createElement('a');\\r\\n      (0, _dom_utils.addLinkAttributes)(link, {\\r\\n        url: this.data.url,\\r\\n        target: this.data.newWindow ? _dom_utils.LinkTarget.BLANK : undefined\\r\\n      });\\r\\n      if (!this.data.url) {\\r\\n        if (this.data.action) {\\r\\n          this._bindNamedAction(link, this.data.action);\\r\\n        } else {\\r\\n          this._bindLink(link, this.data.dest);\\r\\n        }\\r\\n      }\\r\\n      this.container.appendChild(link);\\r\\n      return this.container;\\r\\n    }\\r\\n  }, {\\r\\n    key: '_bindLink',\\r\\n    value: function _bindLink(link, destination) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      link.href = this.linkService.getDestinationHash(destination);\\r\\n      link.onclick = function () {\\r\\n        if (destination) {\\r\\n          _this2.linkService.navigateTo(destination);\\r\\n        }\\r\\n        return false;\\r\\n      };\\r\\n      if (destination) {\\r\\n        link.className = 'internalLink';\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: '_bindNamedAction',\\r\\n    value: function _bindNamedAction(link, action) {\\r\\n      var _this3 = this;\\r\\n\\r\\n      link.href = this.linkService.getAnchorUrl('');\\r\\n      link.onclick = function () {\\r\\n        _this3.linkService.executeNamedAction(action);\\r\\n        return false;\\r\\n      };\\r\\n      link.className = 'internalLink';\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return LinkAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar TextAnnotationElement = function (_AnnotationElement2) {\\r\\n  _inherits(TextAnnotationElement, _AnnotationElement2);\\r\\n\\r\\n  function TextAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, TextAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (TextAnnotationElement.__proto__ || Object.getPrototypeOf(TextAnnotationElement)).call(this, parameters, isRenderable));\\r\\n  }\\r\\n\\r\\n  _createClass(TextAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'textAnnotation';\\r\\n      var image = document.createElement('img');\\r\\n      image.style.height = this.container.style.height;\\r\\n      image.style.width = this.container.style.width;\\r\\n      image.src = this.imageResourcesPath + 'annotation-' + this.data.name.toLowerCase() + '.svg';\\r\\n      image.alt = '[{{type}} Annotation]';\\r\\n      image.dataset.l10nId = 'text_annotation_type';\\r\\n      image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\\r\\n      if (!this.data.hasPopup) {\\r\\n        this._createPopup(this.container, image, this.data);\\r\\n      }\\r\\n      this.container.appendChild(image);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return TextAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar WidgetAnnotationElement = function (_AnnotationElement3) {\\r\\n  _inherits(WidgetAnnotationElement, _AnnotationElement3);\\r\\n\\r\\n  function WidgetAnnotationElement() {\\r\\n    _classCallCheck(this, WidgetAnnotationElement);\\r\\n\\r\\n    return _possibleConstructorReturn(this, (WidgetAnnotationElement.__proto__ || Object.getPrototypeOf(WidgetAnnotationElement)).apply(this, arguments));\\r\\n  }\\r\\n\\r\\n  _createClass(WidgetAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return WidgetAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar TextWidgetAnnotationElement = function (_WidgetAnnotationElem) {\\r\\n  _inherits(TextWidgetAnnotationElement, _WidgetAnnotationElem);\\r\\n\\r\\n  function TextWidgetAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, TextWidgetAnnotationElement);\\r\\n\\r\\n    var isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\\r\\n    return _possibleConstructorReturn(this, (TextWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(TextWidgetAnnotationElement)).call(this, parameters, isRenderable));\\r\\n  }\\r\\n\\r\\n  _createClass(TextWidgetAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      var TEXT_ALIGNMENT = ['left', 'center', 'right'];\\r\\n      this.container.className = 'textWidgetAnnotation';\\r\\n      var element = null;\\r\\n      if (this.renderInteractiveForms) {\\r\\n        if (this.data.multiLine) {\\r\\n          element = document.createElement('textarea');\\r\\n          element.textContent = this.data.fieldValue;\\r\\n        } else {\\r\\n          element = document.createElement('input');\\r\\n          element.type = 'text';\\r\\n          element.setAttribute('value', this.data.fieldValue);\\r\\n        }\\r\\n        element.disabled = this.data.readOnly;\\r\\n        if (this.data.maxLen !== null) {\\r\\n          element.maxLength = this.data.maxLen;\\r\\n        }\\r\\n        if (this.data.comb) {\\r\\n          var fieldWidth = this.data.rect[2] - this.data.rect[0];\\r\\n          var combWidth = fieldWidth / this.data.maxLen;\\r\\n          element.classList.add('comb');\\r\\n          element.style.letterSpacing = 'calc(' + combWidth + 'px - 1ch)';\\r\\n        }\\r\\n      } else {\\r\\n        element = document.createElement('div');\\r\\n        element.textContent = this.data.fieldValue;\\r\\n        element.style.verticalAlign = 'middle';\\r\\n        element.style.display = 'table-cell';\\r\\n        var font = null;\\r\\n        if (this.data.fontRefName) {\\r\\n          font = this.page.commonObjs.getData(this.data.fontRefName);\\r\\n        }\\r\\n        this._setTextStyle(element, font);\\r\\n      }\\r\\n      if (this.data.textAlignment !== null) {\\r\\n        element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\\r\\n      }\\r\\n      this.container.appendChild(element);\\r\\n      return this.container;\\r\\n    }\\r\\n  }, {\\r\\n    key: '_setTextStyle',\\r\\n    value: function _setTextStyle(element, font) {\\r\\n      var style = element.style;\\r\\n      style.fontSize = this.data.fontSize + 'px';\\r\\n      style.direction = this.data.fontDirection < 0 ? 'rtl' : 'ltr';\\r\\n      if (!font) {\\r\\n        return;\\r\\n      }\\r\\n      style.fontWeight = font.black ? font.bold ? '900' : 'bold' : font.bold ? 'bold' : 'normal';\\r\\n      style.fontStyle = font.italic ? 'italic' : 'normal';\\r\\n      var fontFamily = font.loadedName ? '\\\"' + font.loadedName + '\\\", ' : '';\\r\\n      var fallbackName = font.fallbackName || 'Helvetica, sans-serif';\\r\\n      style.fontFamily = fontFamily + fallbackName;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return TextWidgetAnnotationElement;\\r\\n}(WidgetAnnotationElement);\\r\\n\\r\\nvar CheckboxWidgetAnnotationElement = function (_WidgetAnnotationElem2) {\\r\\n  _inherits(CheckboxWidgetAnnotationElement, _WidgetAnnotationElem2);\\r\\n\\r\\n  function CheckboxWidgetAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, CheckboxWidgetAnnotationElement);\\r\\n\\r\\n    return _possibleConstructorReturn(this, (CheckboxWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(CheckboxWidgetAnnotationElement)).call(this, parameters, parameters.renderInteractiveForms));\\r\\n  }\\r\\n\\r\\n  _createClass(CheckboxWidgetAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'buttonWidgetAnnotation checkBox';\\r\\n      var element = document.createElement('input');\\r\\n      element.disabled = this.data.readOnly;\\r\\n      element.type = 'checkbox';\\r\\n      if (this.data.fieldValue && this.data.fieldValue !== 'Off') {\\r\\n        element.setAttribute('checked', true);\\r\\n      }\\r\\n      this.container.appendChild(element);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return CheckboxWidgetAnnotationElement;\\r\\n}(WidgetAnnotationElement);\\r\\n\\r\\nvar RadioButtonWidgetAnnotationElement = function (_WidgetAnnotationElem3) {\\r\\n  _inherits(RadioButtonWidgetAnnotationElement, _WidgetAnnotationElem3);\\r\\n\\r\\n  function RadioButtonWidgetAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, RadioButtonWidgetAnnotationElement);\\r\\n\\r\\n    return _possibleConstructorReturn(this, (RadioButtonWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(RadioButtonWidgetAnnotationElement)).call(this, parameters, parameters.renderInteractiveForms));\\r\\n  }\\r\\n\\r\\n  _createClass(RadioButtonWidgetAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'buttonWidgetAnnotation radioButton';\\r\\n      var element = document.createElement('input');\\r\\n      element.disabled = this.data.readOnly;\\r\\n      element.type = 'radio';\\r\\n      element.name = this.data.fieldName;\\r\\n      if (this.data.fieldValue === this.data.buttonValue) {\\r\\n        element.setAttribute('checked', true);\\r\\n      }\\r\\n      this.container.appendChild(element);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return RadioButtonWidgetAnnotationElement;\\r\\n}(WidgetAnnotationElement);\\r\\n\\r\\nvar ChoiceWidgetAnnotationElement = function (_WidgetAnnotationElem4) {\\r\\n  _inherits(ChoiceWidgetAnnotationElement, _WidgetAnnotationElem4);\\r\\n\\r\\n  function ChoiceWidgetAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, ChoiceWidgetAnnotationElement);\\r\\n\\r\\n    return _possibleConstructorReturn(this, (ChoiceWidgetAnnotationElement.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotationElement)).call(this, parameters, parameters.renderInteractiveForms));\\r\\n  }\\r\\n\\r\\n  _createClass(ChoiceWidgetAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'choiceWidgetAnnotation';\\r\\n      var selectElement = document.createElement('select');\\r\\n      selectElement.disabled = this.data.readOnly;\\r\\n      if (!this.data.combo) {\\r\\n        selectElement.size = this.data.options.length;\\r\\n        if (this.data.multiSelect) {\\r\\n          selectElement.multiple = true;\\r\\n        }\\r\\n      }\\r\\n      for (var i = 0, ii = this.data.options.length; i < ii; i++) {\\r\\n        var option = this.data.options[i];\\r\\n        var optionElement = document.createElement('option');\\r\\n        optionElement.textContent = option.displayValue;\\r\\n        optionElement.value = option.exportValue;\\r\\n        if (this.data.fieldValue.indexOf(option.displayValue) >= 0) {\\r\\n          optionElement.setAttribute('selected', true);\\r\\n        }\\r\\n        selectElement.appendChild(optionElement);\\r\\n      }\\r\\n      this.container.appendChild(selectElement);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return ChoiceWidgetAnnotationElement;\\r\\n}(WidgetAnnotationElement);\\r\\n\\r\\nvar PopupAnnotationElement = function (_AnnotationElement4) {\\r\\n  _inherits(PopupAnnotationElement, _AnnotationElement4);\\r\\n\\r\\n  function PopupAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, PopupAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (PopupAnnotationElement.__proto__ || Object.getPrototypeOf(PopupAnnotationElement)).call(this, parameters, isRenderable));\\r\\n  }\\r\\n\\r\\n  _createClass(PopupAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      var IGNORE_TYPES = ['Line', 'Square', 'Circle', 'PolyLine', 'Polygon'];\\r\\n      this.container.className = 'popupAnnotation';\\r\\n      if (IGNORE_TYPES.indexOf(this.data.parentType) >= 0) {\\r\\n        return this.container;\\r\\n      }\\r\\n      var selector = '[data-annotation-id=\\\"' + this.data.parentId + '\\\"]';\\r\\n      var parentElement = this.layer.querySelector(selector);\\r\\n      if (!parentElement) {\\r\\n        return this.container;\\r\\n      }\\r\\n      var popup = new PopupElement({\\r\\n        container: this.container,\\r\\n        trigger: parentElement,\\r\\n        color: this.data.color,\\r\\n        title: this.data.title,\\r\\n        contents: this.data.contents\\r\\n      });\\r\\n      var parentLeft = parseFloat(parentElement.style.left);\\r\\n      var parentWidth = parseFloat(parentElement.style.width);\\r\\n      _dom_utils.CustomStyle.setProp('transformOrigin', this.container, -(parentLeft + parentWidth) + 'px -' + parentElement.style.top);\\r\\n      this.container.style.left = parentLeft + parentWidth + 'px';\\r\\n      this.container.appendChild(popup.render());\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PopupAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar PopupElement = function () {\\r\\n  function PopupElement(parameters) {\\r\\n    _classCallCheck(this, PopupElement);\\r\\n\\r\\n    this.container = parameters.container;\\r\\n    this.trigger = parameters.trigger;\\r\\n    this.color = parameters.color;\\r\\n    this.title = parameters.title;\\r\\n    this.contents = parameters.contents;\\r\\n    this.hideWrapper = parameters.hideWrapper || false;\\r\\n    this.pinned = false;\\r\\n  }\\r\\n\\r\\n  _createClass(PopupElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      var BACKGROUND_ENLIGHT = 0.7;\\r\\n      var wrapper = document.createElement('div');\\r\\n      wrapper.className = 'popupWrapper';\\r\\n      this.hideElement = this.hideWrapper ? wrapper : this.container;\\r\\n      this.hideElement.setAttribute('hidden', true);\\r\\n      var popup = document.createElement('div');\\r\\n      popup.className = 'popup';\\r\\n      var color = this.color;\\r\\n      if (color) {\\r\\n        var r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\\r\\n        var g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\\r\\n        var b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\\r\\n        popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\\r\\n      }\\r\\n      var contents = this._formatContents(this.contents);\\r\\n      var title = document.createElement('h1');\\r\\n      title.textContent = this.title;\\r\\n      this.trigger.addEventListener('click', this._toggle.bind(this));\\r\\n      this.trigger.addEventListener('mouseover', this._show.bind(this, false));\\r\\n      this.trigger.addEventListener('mouseout', this._hide.bind(this, false));\\r\\n      popup.addEventListener('click', this._hide.bind(this, true));\\r\\n      popup.appendChild(title);\\r\\n      popup.appendChild(contents);\\r\\n      wrapper.appendChild(popup);\\r\\n      return wrapper;\\r\\n    }\\r\\n  }, {\\r\\n    key: '_formatContents',\\r\\n    value: function _formatContents(contents) {\\r\\n      var p = document.createElement('p');\\r\\n      var lines = contents.split(/(?:\\\\r\\\\n?|\\\\n)/);\\r\\n      for (var i = 0, ii = lines.length; i < ii; ++i) {\\r\\n        var line = lines[i];\\r\\n        p.appendChild(document.createTextNode(line));\\r\\n        if (i < ii - 1) {\\r\\n          p.appendChild(document.createElement('br'));\\r\\n        }\\r\\n      }\\r\\n      return p;\\r\\n    }\\r\\n  }, {\\r\\n    key: '_toggle',\\r\\n    value: function _toggle() {\\r\\n      if (this.pinned) {\\r\\n        this._hide(true);\\r\\n      } else {\\r\\n        this._show(true);\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: '_show',\\r\\n    value: function _show() {\\r\\n      var pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\r\\n\\r\\n      if (pin) {\\r\\n        this.pinned = true;\\r\\n      }\\r\\n      if (this.hideElement.hasAttribute('hidden')) {\\r\\n        this.hideElement.removeAttribute('hidden');\\r\\n        this.container.style.zIndex += 1;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: '_hide',\\r\\n    value: function _hide() {\\r\\n      var unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\\r\\n\\r\\n      if (unpin) {\\r\\n        this.pinned = false;\\r\\n      }\\r\\n      if (!this.hideElement.hasAttribute('hidden') && !this.pinned) {\\r\\n        this.hideElement.setAttribute('hidden', true);\\r\\n        this.container.style.zIndex -= 1;\\r\\n      }\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PopupElement;\\r\\n}();\\r\\n\\r\\nvar LineAnnotationElement = function (_AnnotationElement5) {\\r\\n  _inherits(LineAnnotationElement, _AnnotationElement5);\\r\\n\\r\\n  function LineAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, LineAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (LineAnnotationElement.__proto__ || Object.getPrototypeOf(LineAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(LineAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'lineAnnotation';\\r\\n      var data = this.data;\\r\\n      var width = data.rect[2] - data.rect[0];\\r\\n      va\";a.a+=\"r height = data.rect[3] - data.rect[1];\\r\\n      var svg = this.svgFactory.create(width, height);\\r\\n      var line = this.svgFactory.createElement('svg:line');\\r\\n      line.setAttribute('x1', data.rect[2] - data.lineCoordinates[0]);\\r\\n      line.setAttribute('y1', data.rect[3] - data.lineCoordinates[1]);\\r\\n      line.setAttribute('x2', data.rect[2] - data.lineCoordinates[2]);\\r\\n      line.setAttribute('y2', data.rect[3] - data.lineCoordinates[3]);\\r\\n      line.setAttribute('stroke-width', data.borderStyle.width);\\r\\n      line.setAttribute('stroke', 'transparent');\\r\\n      svg.appendChild(line);\\r\\n      this.container.append(svg);\\r\\n      this._createPopup(this.container, line, data);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return LineAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar SquareAnnotationElement = function (_AnnotationElement6) {\\r\\n  _inherits(SquareAnnotationElement, _AnnotationElement6);\\r\\n\\r\\n  function SquareAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, SquareAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (SquareAnnotationElement.__proto__ || Object.getPrototypeOf(SquareAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(SquareAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'squareAnnotation';\\r\\n      var data = this.data;\\r\\n      var width = data.rect[2] - data.rect[0];\\r\\n      var height = data.rect[3] - data.rect[1];\\r\\n      var svg = this.svgFactory.create(width, height);\\r\\n      var borderWidth = data.borderStyle.width;\\r\\n      var square = this.svgFactory.createElement('svg:rect');\\r\\n      square.setAttribute('x', borderWidth / 2);\\r\\n      square.setAttribute('y', borderWidth / 2);\\r\\n      square.setAttribute('width', width - borderWidth);\\r\\n      square.setAttribute('height', height - borderWidth);\\r\\n      square.setAttribute('stroke-width', borderWidth);\\r\\n      square.setAttribute('stroke', 'transparent');\\r\\n      square.setAttribute('fill', 'none');\\r\\n      svg.appendChild(square);\\r\\n      this.container.append(svg);\\r\\n      this._createPopup(this.container, square, data);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return SquareAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar CircleAnnotationElement = function (_AnnotationElement7) {\\r\\n  _inherits(CircleAnnotationElement, _AnnotationElement7);\\r\\n\\r\\n  function CircleAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, CircleAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (CircleAnnotationElement.__proto__ || Object.getPrototypeOf(CircleAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(CircleAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'circleAnnotation';\\r\\n      var data = this.data;\\r\\n      var width = data.rect[2] - data.rect[0];\\r\\n      var height = data.rect[3] - data.rect[1];\\r\\n      var svg = this.svgFactory.create(width, height);\\r\\n      var borderWidth = data.borderStyle.width;\\r\\n      var circle = this.svgFactory.createElement('svg:ellipse');\\r\\n      circle.setAttribute('cx', width / 2);\\r\\n      circle.setAttribute('cy', height / 2);\\r\\n      circle.setAttribute('rx', width / 2 - borderWidth / 2);\\r\\n      circle.setAttribute('ry', height / 2 - borderWidth / 2);\\r\\n      circle.setAttribute('stroke-width', borderWidth);\\r\\n      circle.setAttribute('stroke', 'transparent');\\r\\n      circle.setAttribute('fill', 'none');\\r\\n      svg.appendChild(circle);\\r\\n      this.container.append(svg);\\r\\n      this._createPopup(this.container, circle, data);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return CircleAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar PolylineAnnotationElement = function (_AnnotationElement8) {\\r\\n  _inherits(PolylineAnnotationElement, _AnnotationElement8);\\r\\n\\r\\n  function PolylineAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, PolylineAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n\\r\\n    var _this14 = _possibleConstructorReturn(this, (PolylineAnnotationElement.__proto__ || Object.getPrototypeOf(PolylineAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n\\r\\n    _this14.containerClassName = 'polylineAnnotation';\\r\\n    _this14.svgElementName = 'svg:polyline';\\r\\n    return _this14;\\r\\n  }\\r\\n\\r\\n  _createClass(PolylineAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = this.containerClassName;\\r\\n      var data = this.data;\\r\\n      var width = data.rect[2] - data.rect[0];\\r\\n      var height = data.rect[3] - data.rect[1];\\r\\n      var svg = this.svgFactory.create(width, height);\\r\\n      var vertices = data.vertices;\\r\\n      var points = [];\\r\\n      for (var i = 0, ii = vertices.length; i < ii; i++) {\\r\\n        var x = vertices[i].x - data.rect[0];\\r\\n        var y = data.rect[3] - vertices[i].y;\\r\\n        points.push(x + ',' + y);\\r\\n      }\\r\\n      points = points.join(' ');\\r\\n      var borderWidth = data.borderStyle.width;\\r\\n      var polyline = this.svgFactory.createElement(this.svgElementName);\\r\\n      polyline.setAttribute('points', points);\\r\\n      polyline.setAttribute('stroke-width', borderWidth);\\r\\n      polyline.setAttribute('stroke', 'transparent');\\r\\n      polyline.setAttribute('fill', 'none');\\r\\n      svg.appendChild(polyline);\\r\\n      this.container.append(svg);\\r\\n      this._createPopup(this.container, polyline, data);\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PolylineAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar PolygonAnnotationElement = function (_PolylineAnnotationEl) {\\r\\n  _inherits(PolygonAnnotationElement, _PolylineAnnotationEl);\\r\\n\\r\\n  function PolygonAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, PolygonAnnotationElement);\\r\\n\\r\\n    var _this15 = _possibleConstructorReturn(this, (PolygonAnnotationElement.__proto__ || Object.getPrototypeOf(PolygonAnnotationElement)).call(this, parameters));\\r\\n\\r\\n    _this15.containerClassName = 'polygonAnnotation';\\r\\n    _this15.svgElementName = 'svg:polygon';\\r\\n    return _this15;\\r\\n  }\\r\\n\\r\\n  return PolygonAnnotationElement;\\r\\n}(PolylineAnnotationElement);\\r\\n\\r\\nvar HighlightAnnotationElement = function (_AnnotationElement9) {\\r\\n  _inherits(HighlightAnnotationElement, _AnnotationElement9);\\r\\n\\r\\n  function HighlightAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, HighlightAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (HighlightAnnotationElement.__proto__ || Object.getPrototypeOf(HighlightAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(HighlightAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'highlightAnnotation';\\r\\n      if (!this.data.hasPopup) {\\r\\n        this._createPopup(this.container, null, this.data);\\r\\n      }\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return HighlightAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar UnderlineAnnotationElement = function (_AnnotationElement10) {\\r\\n  _inherits(UnderlineAnnotationElement, _AnnotationElement10);\\r\\n\\r\\n  function UnderlineAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, UnderlineAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (UnderlineAnnotationElement.__proto__ || Object.getPrototypeOf(UnderlineAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(UnderlineAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'underlineAnnotation';\\r\\n      if (!this.data.hasPopup) {\\r\\n        this._createPopup(this.container, null, this.data);\\r\\n      }\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return UnderlineAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar SquigglyAnnotationElement = function (_AnnotationElement11) {\\r\\n  _inherits(SquigglyAnnotationElement, _AnnotationElement11);\\r\\n\\r\\n  function SquigglyAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, SquigglyAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (SquigglyAnnotationElement.__proto__ || Object.getPrototypeOf(SquigglyAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(SquigglyAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'squigglyAnnotation';\\r\\n      if (!this.data.hasPopup) {\\r\\n        this._createPopup(this.container, null, this.data);\\r\\n      }\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return SquigglyAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar StrikeOutAnnotationElement = function (_AnnotationElement12) {\\r\\n  _inherits(StrikeOutAnnotationElement, _AnnotationElement12);\\r\\n\\r\\n  function StrikeOutAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, StrikeOutAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (StrikeOutAnnotationElement.__proto__ || Object.getPrototypeOf(StrikeOutAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(StrikeOutAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'strikeoutAnnotation';\\r\\n      if (!this.data.hasPopup) {\\r\\n        this._createPopup(this.container, null, this.data);\\r\\n      }\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return StrikeOutAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar StampAnnotationElement = function (_AnnotationElement13) {\\r\\n  _inherits(StampAnnotationElement, _AnnotationElement13);\\r\\n\\r\\n  function StampAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, StampAnnotationElement);\\r\\n\\r\\n    var isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\\r\\n    return _possibleConstructorReturn(this, (StampAnnotationElement.__proto__ || Object.getPrototypeOf(StampAnnotationElement)).call(this, parameters, isRenderable, true));\\r\\n  }\\r\\n\\r\\n  _createClass(StampAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'stampAnnotation';\\r\\n      if (!this.data.hasPopup) {\\r\\n        this._createPopup(this.container, null, this.data);\\r\\n      }\\r\\n      return this.container;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return StampAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar FileAttachmentAnnotationElement = function (_AnnotationElement14) {\\r\\n  _inherits(FileAttachmentAnnotationElement, _AnnotationElement14);\\r\\n\\r\\n  function FileAttachmentAnnotationElement(parameters) {\\r\\n    _classCallCheck(this, FileAttachmentAnnotationElement);\\r\\n\\r\\n    var _this21 = _possibleConstructorReturn(this, (FileAttachmentAnnotationElement.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotationElement)).call(this, parameters, true));\\r\\n\\r\\n    var file = _this21.data.file;\\r\\n    _this21.filename = (0, _dom_utils.getFilenameFromUrl)(file.filename);\\r\\n    _this21.content = file.content;\\r\\n    _this21.linkService.onFileAttachmentAnnotation({\\r\\n      id: (0, _util.stringToPDFString)(file.filename),\\r\\n      filename: file.filename,\\r\\n      content: file.content\\r\\n    });\\r\\n    return _this21;\\r\\n  }\\r\\n\\r\\n  _createClass(FileAttachmentAnnotationElement, [{\\r\\n    key: 'render',\\r\\n    value: function render() {\\r\\n      this.container.className = 'fileAttachmentAnnotation';\\r\\n      var trigger = document.createElement('div');\\r\\n      trigger.style.height = this.container.style.height;\\r\\n      trigger.style.width = this.container.style.width;\\r\\n      trigger.addEventListener('dblclick', this._download.bind(this));\\r\\n      if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\\r\\n        this._createPopup(this.container, trigger, this.data);\\r\\n      }\\r\\n      this.container.appendChild(trigger);\\r\\n      return this.container;\\r\\n    }\\r\\n  }, {\\r\\n    key: '_download',\\r\\n    value: function _download() {\\r\\n      if (!this.downloadManager) {\\r\\n        (0, _util.warn)('Download cannot be started due to unavailable download manager');\\r\\n        return;\\r\\n      }\\r\\n      this.downloadManager.downloadData(this.content, this.filename, '');\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return FileAttachmentAnnotationElement;\\r\\n}(AnnotationElement);\\r\\n\\r\\nvar AnnotationLayer = function () {\\r\\n  function AnnotationLayer() {\\r\\n    _classCallCheck(this, AnnotationLayer);\\r\\n  }\\r\\n\\r\\n  _createClass(AnnotationLayer, null, [{\\r\\n    key: 'render',\\r\\n    value: function render(parameters) {\\r\\n      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {\\r\\n        var data = parameters.annotations[i];\\r\\n        if (!data) {\\r\\n          continue;\\r\\n        }\\r\\n        var element = AnnotationElementFactory.create({\\r\\n          data: data,\\r\\n          layer: parameters.div,\\r\\n          page: parameters.page,\\r\\n          viewport: parameters.viewport,\\r\\n          linkService: parameters.linkService,\\r\\n          downloadManager: parameters.downloadManager,\\r\\n          imageResourcesPath: parameters.imageResourcesPath || (0, _dom_utils.getDefaultSetting)('imageResourcesPath'),\\r\\n          renderInteractiveForms: parameters.renderInteractiveForms || false,\\r\\n          svgFactory: new _dom_utils.DOMSVGFactory()\\r\\n        });\\r\\n        if (element.isRenderable) {\\r\\n          parameters.div.appendChild(element.render());\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'update',\\r\\n    value: function update(parameters) {\\r\\n      for (var i = 0, ii = parameters.annotations.length; i < ii; i++) {\\r\\n        var data = parameters.annotations[i];\\r\\n        var element = parameters.div.querySelector('[data-annotation-id=\\\"' + data.id + '\\\"]');\\r\\n        if (element) {\\r\\n          _dom_utils.CustomStyle.setProp('transform', element, 'matrix(' + parameters.viewport.transform.join(',') + ')');\\r\\n        }\\r\\n      }\\r\\n      parameters.div.removeAttribute('hidden');\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return AnnotationLayer;\\r\\n}();\\r\\n\\r\\nexports.AnnotationLayer = AnnotationLayer;\\r\\n\\r\\n/***/ }),\\r\\n/* 89 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.renderTextLayer = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _dom_utils = __w_pdfjs_require__(17);\\r\\n\\r\\nvar renderTextLayer = function renderTextLayerClosure() {\\r\\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\\r\\n  var NonWhitespaceRegexp = /\\\\S/;\\r\\n  function isAllWhitespace(str) {\\r\\n    return !NonWhitespaceRegexp.test(str);\\r\\n  }\\r\\n  var styleBuf = ['left: ', 0, 'px; top: ', 0, 'px; font-size: ', 0, 'px; font-family: ', '', ';'];\\r\\n  function appendText(task, geom, styles) {\\r\\n    var textDiv = document.createElement('div');\\r\\n    var textDivProperties = {\\r\\n      style: null,\\r\\n      angle: 0,\\r\\n      canvasWidth: 0,\\r\\n      isWhitespace: false,\\r\\n      originalTransform: null,\\r\\n      paddingBottom: 0,\\r\\n      paddingLeft: 0,\\r\\n      paddingRight: 0,\\r\\n      paddingTop: 0,\\r\\n      scale: 1\\r\\n    };\\r\\n    task._textDivs.push(textDiv);\\r\\n    if (isAllWhitespace(geom.str)) {\\r\\n      textDivProperties.isWhitespace = true;\\r\\n      task._textDivProperties.set(textDiv, textDivProperties);\\r\\n      return;\\r\\n    }\\r\\n    var tx = _util.Util.transform(task._viewport.transform, geom.transform);\\r\\n    var angle = Math.atan2(tx[1], tx[0]);\\r\\n    var style = styles[geom.fontName];\\r\\n    if (style.vertical) {\\r\\n      angle += Math.PI / 2;\\r\\n    }\\r\\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\\r\\n    var fontAscent = fontHeight;\\r\\n    if (style.ascent) {\\r\\n      fontAscent = style.ascent * fontAscent;\\r\\n    } else if (style.descent) {\\r\\n      fontAscent = (1 + style.descent) * fontAscent;\\r\\n    }\\r\\n    var left;\\r\\n    var top;\\r\\n    if (angle === 0) {\\r\\n      left = tx[4];\\r\\n      top = tx[5] - fontAscent;\\r\\n    } else {\\r\\n      left = tx[4] + fontAscent * Math.sin(angle);\\r\\n      top = tx[5] - fontAscent * Math.cos(angle);\\r\\n    }\\r\\n    styleBuf[1] = left;\\r\\n    styleBuf[3] = top;\\r\\n    styleBuf[5] = fontHeigh\";a.a+=\"t;\\r\\n    styleBuf[7] = style.fontFamily;\\r\\n    textDivProperties.style = styleBuf.join('');\\r\\n    textDiv.setAttribute('style', textDivProperties.style);\\r\\n    textDiv.textContent = geom.str;\\r\\n    if ((0, _dom_utils.getDefaultSetting)('pdfBug')) {\\r\\n      textDiv.dataset.fontName = geom.fontName;\\r\\n    }\\r\\n    if (angle !== 0) {\\r\\n      textDivProperties.angle = angle * (180 / Math.PI);\\r\\n    }\\r\\n    if (geom.str.length > 1) {\\r\\n      if (style.vertical) {\\r\\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\\r\\n      } else {\\r\\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\\r\\n      }\\r\\n    }\\r\\n    task._textDivProperties.set(textDiv, textDivProperties);\\r\\n    if (task._textContentStream) {\\r\\n      task._layoutText(textDiv);\\r\\n    }\\r\\n    if (task._enhanceTextSelection) {\\r\\n      var angleCos = 1,\\r\\n          angleSin = 0;\\r\\n      if (angle !== 0) {\\r\\n        angleCos = Math.cos(angle);\\r\\n        angleSin = Math.sin(angle);\\r\\n      }\\r\\n      var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\\r\\n      var divHeight = fontHeight;\\r\\n      var m, b;\\r\\n      if (angle !== 0) {\\r\\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\\r\\n        b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\\r\\n      } else {\\r\\n        b = [left, top, left + divWidth, top + divHeight];\\r\\n      }\\r\\n      task._bounds.push({\\r\\n        left: b[0],\\r\\n        top: b[1],\\r\\n        right: b[2],\\r\\n        bottom: b[3],\\r\\n        div: textDiv,\\r\\n        size: [divWidth, divHeight],\\r\\n        m: m\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  function render(task) {\\r\\n    if (task._canceled) {\\r\\n      return;\\r\\n    }\\r\\n    var textDivs = task._textDivs;\\r\\n    var capability = task._capability;\\r\\n    var textDivsLength = textDivs.length;\\r\\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\\r\\n      task._renderingDone = true;\\r\\n      capability.resolve();\\r\\n      return;\\r\\n    }\\r\\n    if (!task._textContentStream) {\\r\\n      for (var i = 0; i < textDivsLength; i++) {\\r\\n        task._layoutText(textDivs[i]);\\r\\n      }\\r\\n    }\\r\\n    task._renderingDone = true;\\r\\n    capability.resolve();\\r\\n  }\\r\\n  function expand(task) {\\r\\n    var bounds = task._bounds;\\r\\n    var viewport = task._viewport;\\r\\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\\r\\n    for (var i = 0; i < expanded.length; i++) {\\r\\n      var div = bounds[i].div;\\r\\n      var divProperties = task._textDivProperties.get(div);\\r\\n      if (divProperties.angle === 0) {\\r\\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\\r\\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\\r\\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\\r\\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\\r\\n        task._textDivProperties.set(div, divProperties);\\r\\n        continue;\\r\\n      }\\r\\n      var e = expanded[i],\\r\\n          b = bounds[i];\\r\\n      var m = b.m,\\r\\n          c = m[0],\\r\\n          s = m[1];\\r\\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\\r\\n      var ts = new Float64Array(64);\\r\\n      points.forEach(function (p, i) {\\r\\n        var t = _util.Util.applyTransform(p, m);\\r\\n        ts[i + 0] = c && (e.left - t[0]) / c;\\r\\n        ts[i + 4] = s && (e.top - t[1]) / s;\\r\\n        ts[i + 8] = c && (e.right - t[0]) / c;\\r\\n        ts[i + 12] = s && (e.bottom - t[1]) / s;\\r\\n        ts[i + 16] = s && (e.left - t[0]) / -s;\\r\\n        ts[i + 20] = c && (e.top - t[1]) / c;\\r\\n        ts[i + 24] = s && (e.right - t[0]) / -s;\\r\\n        ts[i + 28] = c && (e.bottom - t[1]) / c;\\r\\n        ts[i + 32] = c && (e.left - t[0]) / -c;\\r\\n        ts[i + 36] = s && (e.top - t[1]) / -s;\\r\\n        ts[i + 40] = c && (e.right - t[0]) / -c;\\r\\n        ts[i + 44] = s && (e.bottom - t[1]) / -s;\\r\\n        ts[i + 48] = s && (e.left - t[0]) / s;\\r\\n        ts[i + 52] = c && (e.top - t[1]) / -c;\\r\\n        ts[i + 56] = s && (e.right - t[0]) / s;\\r\\n        ts[i + 60] = c && (e.bottom - t[1]) / -c;\\r\\n      });\\r\\n      var findPositiveMin = function findPositiveMin(ts, offset, count) {\\r\\n        var result = 0;\\r\\n        for (var i = 0; i < count; i++) {\\r\\n          var t = ts[offset++];\\r\\n          if (t > 0) {\\r\\n            result = result ? Math.min(t, result) : t;\\r\\n          }\\r\\n        }\\r\\n        return result;\\r\\n      };\\r\\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\\r\\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\\r\\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\\r\\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\\r\\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\\r\\n      task._textDivProperties.set(div, divProperties);\\r\\n    }\\r\\n  }\\r\\n  function expandBounds(width, height, boxes) {\\r\\n    var bounds = boxes.map(function (box, i) {\\r\\n      return {\\r\\n        x1: box.left,\\r\\n        y1: box.top,\\r\\n        x2: box.right,\\r\\n        y2: box.bottom,\\r\\n        index: i,\\r\\n        x1New: undefined,\\r\\n        x2New: undefined\\r\\n      };\\r\\n    });\\r\\n    expandBoundsLTR(width, bounds);\\r\\n    var expanded = new Array(boxes.length);\\r\\n    bounds.forEach(function (b) {\\r\\n      var i = b.index;\\r\\n      expanded[i] = {\\r\\n        left: b.x1New,\\r\\n        top: 0,\\r\\n        right: b.x2New,\\r\\n        bottom: 0\\r\\n      };\\r\\n    });\\r\\n    boxes.map(function (box, i) {\\r\\n      var e = expanded[i],\\r\\n          b = bounds[i];\\r\\n      b.x1 = box.top;\\r\\n      b.y1 = width - e.right;\\r\\n      b.x2 = box.bottom;\\r\\n      b.y2 = width - e.left;\\r\\n      b.index = i;\\r\\n      b.x1New = undefined;\\r\\n      b.x2New = undefined;\\r\\n    });\\r\\n    expandBoundsLTR(height, bounds);\\r\\n    bounds.forEach(function (b) {\\r\\n      var i = b.index;\\r\\n      expanded[i].top = b.x1New;\\r\\n      expanded[i].bottom = b.x2New;\\r\\n    });\\r\\n    return expanded;\\r\\n  }\\r\\n  function expandBoundsLTR(width, bounds) {\\r\\n    bounds.sort(function (a, b) {\\r\\n      return a.x1 - b.x1 || a.index - b.index;\\r\\n    });\\r\\n    var fakeBoundary = {\\r\\n      x1: -Infinity,\\r\\n      y1: -Infinity,\\r\\n      x2: 0,\\r\\n      y2: Infinity,\\r\\n      index: -1,\\r\\n      x1New: 0,\\r\\n      x2New: 0\\r\\n    };\\r\\n    var horizon = [{\\r\\n      start: -Infinity,\\r\\n      end: Infinity,\\r\\n      boundary: fakeBoundary\\r\\n    }];\\r\\n    bounds.forEach(function (boundary) {\\r\\n      var i = 0;\\r\\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\\r\\n        i++;\\r\\n      }\\r\\n      var j = horizon.length - 1;\\r\\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\\r\\n        j--;\\r\\n      }\\r\\n      var horizonPart, affectedBoundary;\\r\\n      var q,\\r\\n          k,\\r\\n          maxXNew = -Infinity;\\r\\n      for (q = i; q <= j; q++) {\\r\\n        horizonPart = horizon[q];\\r\\n        affectedBoundary = horizonPart.boundary;\\r\\n        var xNew;\\r\\n        if (affectedBoundary.x2 > boundary.x1) {\\r\\n          xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\\r\\n        } else if (affectedBoundary.x2New === undefined) {\\r\\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\\r\\n        } else {\\r\\n          xNew = affectedBoundary.x2New;\\r\\n        }\\r\\n        if (xNew > maxXNew) {\\r\\n          maxXNew = xNew;\\r\\n        }\\r\\n      }\\r\\n      boundary.x1New = maxXNew;\\r\\n      for (q = i; q <= j; q++) {\\r\\n        horizonPart = horizon[q];\\r\\n        affectedBoundary = horizonPart.boundary;\\r\\n        if (affectedBoundary.x2New === undefined) {\\r\\n          if (affectedBoundary.x2 > boundary.x1) {\\r\\n            if (affectedBoundary.index > boundary.index) {\\r\\n              affectedBoundary.x2New = affectedBoundary.x2;\\r\\n            }\\r\\n          } else {\\r\\n            affectedBoundary.x2New = maxXNew;\\r\\n          }\\r\\n        } else if (affectedBoundary.x2New > maxXNew) {\\r\\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\\r\\n        }\\r\\n      }\\r\\n      var changedHorizon = [],\\r\\n          lastBoundary = null;\\r\\n      for (q = i; q <= j; q++) {\\r\\n        horizonPart = horizon[q];\\r\\n        affectedBoundary = horizonPart.boundary;\\r\\n        var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\\r\\n        if (lastBoundary === useBoundary) {\\r\\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\\r\\n        } else {\\r\\n          changedHorizon.push({\\r\\n            start: horizonPart.start,\\r\\n            end: horizonPart.end,\\r\\n            boundary: useBoundary\\r\\n          });\\r\\n          lastBoundary = useBoundary;\\r\\n        }\\r\\n      }\\r\\n      if (horizon[i].start < boundary.y1) {\\r\\n        changedHorizon[0].start = boundary.y1;\\r\\n        changedHorizon.unshift({\\r\\n          start: horizon[i].start,\\r\\n          end: boundary.y1,\\r\\n          boundary: horizon[i].boundary\\r\\n        });\\r\\n      }\\r\\n      if (boundary.y2 < horizon[j].end) {\\r\\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\\r\\n        changedHorizon.push({\\r\\n          start: boundary.y2,\\r\\n          end: horizon[j].end,\\r\\n          boundary: horizon[j].boundary\\r\\n        });\\r\\n      }\\r\\n      for (q = i; q <= j; q++) {\\r\\n        horizonPart = horizon[q];\\r\\n        affectedBoundary = horizonPart.boundary;\\r\\n        if (affectedBoundary.x2New !== undefined) {\\r\\n          continue;\\r\\n        }\\r\\n        var used = false;\\r\\n        for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\\r\\n          used = horizon[k].boundary === affectedBoundary;\\r\\n        }\\r\\n        for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\\r\\n          used = horizon[k].boundary === affectedBoundary;\\r\\n        }\\r\\n        for (k = 0; !used && k < changedHorizon.length; k++) {\\r\\n          used = changedHorizon[k].boundary === affectedBoundary;\\r\\n        }\\r\\n        if (!used) {\\r\\n          affectedBoundary.x2New = maxXNew;\\r\\n        }\\r\\n      }\\r\\n      Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\\r\\n    });\\r\\n    horizon.forEach(function (horizonPart) {\\r\\n      var affectedBoundary = horizonPart.boundary;\\r\\n      if (affectedBoundary.x2New === undefined) {\\r\\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n  function TextLayerRenderTask(_ref) {\\r\\n    var textContent = _ref.textContent,\\r\\n        textContentStream = _ref.textContentStream,\\r\\n        container = _ref.container,\\r\\n        viewport = _ref.viewport,\\r\\n        textDivs = _ref.textDivs,\\r\\n        textContentItemsStr = _ref.textContentItemsStr,\\r\\n        enhanceTextSelection = _ref.enhanceTextSelection;\\r\\n\\r\\n    this._textContent = textContent;\\r\\n    this._textContentStream = textContentStream;\\r\\n    this._container = container;\\r\\n    this._viewport = viewport;\\r\\n    this._textDivs = textDivs || [];\\r\\n    this._textContentItemsStr = textContentItemsStr || [];\\r\\n    this._enhanceTextSelection = !!enhanceTextSelection;\\r\\n    this._reader = null;\\r\\n    this._layoutTextLastFontSize = null;\\r\\n    this._layoutTextLastFontFamily = null;\\r\\n    this._layoutTextCtx = null;\\r\\n    this._textDivProperties = new WeakMap();\\r\\n    this._renderingDone = false;\\r\\n    this._canceled = false;\\r\\n    this._capability = (0, _util.createPromiseCapability)();\\r\\n    this._renderTimer = null;\\r\\n    this._bounds = [];\\r\\n  }\\r\\n  TextLayerRenderTask.prototype = {\\r\\n    get promise() {\\r\\n      return this._capability.promise;\\r\\n    },\\r\\n    cancel: function TextLayer_cancel() {\\r\\n      if (this._reader) {\\r\\n        this._reader.cancel(new _util.AbortException('text layer task cancelled'));\\r\\n        this._reader = null;\\r\\n      }\\r\\n      this._canceled = true;\\r\\n      if (this._renderTimer !== null) {\\r\\n        clearTimeout(this._renderTimer);\\r\\n        this._renderTimer = null;\\r\\n      }\\r\\n      this._capability.reject('canceled');\\r\\n    },\\r\\n    _processItems: function _processItems(items, styleCache) {\\r\\n      for (var i = 0, len = items.length; i < len; i++) {\\r\\n        this._textContentItemsStr.push(items[i].str);\\r\\n        appendText(this, items[i], styleCache);\\r\\n      }\\r\\n    },\\r\\n    _layoutText: function _layoutText(textDiv) {\\r\\n      var textLayerFrag = this._container;\\r\\n      var textDivProperties = this._textDivProperties.get(textDiv);\\r\\n      if (textDivProperties.isWhitespace) {\\r\\n        return;\\r\\n      }\\r\\n      var fontSize = textDiv.style.fontSize;\\r\\n      var fontFamily = textDiv.style.fontFamily;\\r\\n      if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\\r\\n        this._layoutTextCtx.font = fontSize + ' ' + fontFamily;\\r\\n        this._lastFontSize = fontSize;\\r\\n        this._lastFontFamily = fontFamily;\\r\\n      }\\r\\n      var width = this._layoutTextCtx.measureText(textDiv.textContent).width;\\r\\n      var transform = '';\\r\\n      if (textDivProperties.canvasWidth !== 0 && width > 0) {\\r\\n        textDivProperties.scale = textDivProperties.canvasWidth / width;\\r\\n        transform = 'scaleX(' + textDivProperties.scale + ')';\\r\\n      }\\r\\n      if (textDivProperties.angle !== 0) {\\r\\n        transform = 'rotate(' + textDivProperties.angle + 'deg) ' + transform;\\r\\n      }\\r\\n      if (transform !== '') {\\r\\n        textDivProperties.originalTransform = transform;\\r\\n        _dom_utils.CustomStyle.setProp('transform', textDiv, transform);\\r\\n      }\\r\\n      this._textDivProperties.set(textDiv, textDivProperties);\\r\\n      textLayerFrag.appendChild(textDiv);\\r\\n    },\\r\\n\\r\\n    _render: function TextLayer_render(timeout) {\\r\\n      var _this = this;\\r\\n\\r\\n      var capability = (0, _util.createPromiseCapability)();\\r\\n      var styleCache = Object.create(null);\\r\\n      var canvas = document.createElement('canvas');\\r\\n      this._layoutTextCtx = canvas.getContext('2d', { alpha: false });\\r\\n      if (this._textContent) {\\r\\n        var textItems = this._textContent.items;\\r\\n        var textStyles = this._textContent.styles;\\r\\n        this._processItems(textItems, textStyles);\\r\\n        capability.resolve();\\r\\n      } else if (this._textContentStream) {\\r\\n        var pump = function pump() {\\r\\n          _this._reader.read().then(function (_ref2) {\\r\\n            var value = _ref2.value,\\r\\n                done = _ref2.done;\\r\\n\\r\\n            if (done) {\\r\\n              capability.resolve();\\r\\n              return;\\r\\n            }\\r\\n            _util.Util.extendObj(styleCache, value.styles);\\r\\n            _this._processItems(value.items, styleCache);\\r\\n            pump();\\r\\n          }, capability.reject);\\r\\n        };\\r\\n        this._reader = this._textContentStream.getReader();\\r\\n        pump();\\r\\n      } else {\\r\\n        throw new Error('Neither \\\"textContent\\\" nor \\\"textContentStream\\\"' + ' parameters specified.');\\r\\n      }\\r\\n      capability.promise.then(function () {\\r\\n        styleCache = null;\\r\\n        if (!timeout) {\\r\\n          render(_this);\\r\\n        } else {\\r\\n          _this._renderTimer = setTimeout(function () {\\r\\n            render(_this);\\r\\n            _this._renderTimer = null;\\r\\n          }, timeout);\\r\\n        }\\r\\n      }, this._capability.reject);\\r\\n    },\\r\\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\\r\\n      if (!this._enhanceTextSelection || !this._renderingDone) {\\r\\n        return;\\r\\n      }\\r\\n      if (this._bounds !== null) {\\r\\n        expand(this);\\r\\n        this._bounds = null;\\r\\n      }\\r\\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\\r\\n        var div = this._textDivs[i];\\r\\n        var divProperties = this._textDivProperties.get(div);\\r\\n        if (divProperties.isWhitespace) {\\r\\n          continue;\\r\\n        }\\r\\n        if (expandDivs) {\\r\\n          var transform = '',\\r\\n              padding = '';\\r\\n          if (divProperties.scale !== 1) {\\r\\n            transform = 'scaleX(' + divProperties.scale + ')';\\r\\n          }\\r\\n          if (divProperties.angle !== 0) {\\r\\n            transform = 'rotate(' + divProperties.angle + 'deg) ' + transform;\\r\\n          }\\r\\n          if (divProperties.paddingLeft !== 0) {\\r\\n            padding += ' padding-left: ' + divProperties.paddingLeft / divProperties.scale + 'px;';\\r\\n            transform += ' translateX(' + -divProperties.paddingLeft / divProperties.scale + 'px)';\\r\\n          }\\r\\n          if (divProperties.paddingTop !== 0) {\\r\\n            padding += ' padding-top: ' + divProperties.paddingTop + 'px;';\\r\\n            transform += ' translateY(' + -divProperties.paddingTop + 'px)';\\r\\n          }\\r\\n          if (divProperties.paddingRight !== 0) {\\r\\n            padding += ' padding-right: ' + divProperties.paddingRight / divProperties.scale + 'px;';\\r\\n          }\\r\\n          if (divProperties.paddingBottom !== 0) {\\r\\n            padding += ' padding-bottom: ' + divProperties.paddingBottom + 'px;';\\r\\n          }\\r\\n          if (p\";a.a+=\"adding !== '') {\\r\\n            div.setAttribute('style', divProperties.style + padding);\\r\\n          }\\r\\n          if (transform !== '') {\\r\\n            _dom_utils.CustomStyle.setProp('transform', div, transform);\\r\\n          }\\r\\n        } else {\\r\\n          div.style.padding = 0;\\r\\n          _dom_utils.CustomStyle.setProp('transform', div, divProperties.originalTransform || '');\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  function renderTextLayer(renderParameters) {\\r\\n    var task = new TextLayerRenderTask({\\r\\n      textContent: renderParameters.textContent,\\r\\n      textContentStream: renderParameters.textContentStream,\\r\\n      container: renderParameters.container,\\r\\n      viewport: renderParameters.viewport,\\r\\n      textDivs: renderParameters.textDivs,\\r\\n      textContentItemsStr: renderParameters.textContentItemsStr,\\r\\n      enhanceTextSelection: renderParameters.enhanceTextSelection\\r\\n    });\\r\\n    task._render(renderParameters.timeout);\\r\\n    return task;\\r\\n  }\\r\\n  return renderTextLayer;\\r\\n}();\\r\\nexports.renderTextLayer = renderTextLayer;\\r\\n\\r\\n/***/ }),\\r\\n/* 90 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.SVGGraphics = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _dom_utils = __w_pdfjs_require__(17);\\r\\n\\r\\nvar SVGGraphics = function SVGGraphics() {\\r\\n  throw new Error('Not implemented: SVGGraphics');\\r\\n};\\r\\n{\\r\\n  var SVG_DEFAULTS = {\\r\\n    fontStyle: 'normal',\\r\\n    fontWeight: 'normal',\\r\\n    fillColor: '#000000'\\r\\n  };\\r\\n  var convertImgDataToPng = function convertImgDataToPngClosure() {\\r\\n    var PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\\r\\n    var CHUNK_WRAPPER_SIZE = 12;\\r\\n    var crcTable = new Int32Array(256);\\r\\n    for (var i = 0; i < 256; i++) {\\r\\n      var c = i;\\r\\n      for (var h = 0; h < 8; h++) {\\r\\n        if (c & 1) {\\r\\n          c = 0xedB88320 ^ c >> 1 & 0x7fffffff;\\r\\n        } else {\\r\\n          c = c >> 1 & 0x7fffffff;\\r\\n        }\\r\\n      }\\r\\n      crcTable[i] = c;\\r\\n    }\\r\\n    function crc32(data, start, end) {\\r\\n      var crc = -1;\\r\\n      for (var i = start; i < end; i++) {\\r\\n        var a = (crc ^ data[i]) & 0xff;\\r\\n        var b = crcTable[a];\\r\\n        crc = crc >>> 8 ^ b;\\r\\n      }\\r\\n      return crc ^ -1;\\r\\n    }\\r\\n    function writePngChunk(type, body, data, offset) {\\r\\n      var p = offset;\\r\\n      var len = body.length;\\r\\n      data[p] = len >> 24 & 0xff;\\r\\n      data[p + 1] = len >> 16 & 0xff;\\r\\n      data[p + 2] = len >> 8 & 0xff;\\r\\n      data[p + 3] = len & 0xff;\\r\\n      p += 4;\\r\\n      data[p] = type.charCodeAt(0) & 0xff;\\r\\n      data[p + 1] = type.charCodeAt(1) & 0xff;\\r\\n      data[p + 2] = type.charCodeAt(2) & 0xff;\\r\\n      data[p + 3] = type.charCodeAt(3) & 0xff;\\r\\n      p += 4;\\r\\n      data.set(body, p);\\r\\n      p += body.length;\\r\\n      var crc = crc32(data, offset + 4, p);\\r\\n      data[p] = crc >> 24 & 0xff;\\r\\n      data[p + 1] = crc >> 16 & 0xff;\\r\\n      data[p + 2] = crc >> 8 & 0xff;\\r\\n      data[p + 3] = crc & 0xff;\\r\\n    }\\r\\n    function adler32(data, start, end) {\\r\\n      var a = 1;\\r\\n      var b = 0;\\r\\n      for (var i = start; i < end; ++i) {\\r\\n        a = (a + (data[i] & 0xff)) % 65521;\\r\\n        b = (b + a) % 65521;\\r\\n      }\\r\\n      return b << 16 | a;\\r\\n    }\\r\\n    function deflateSync(literals) {\\r\\n      if (!(0, _util.isNodeJS)()) {\\r\\n        return deflateSyncUncompressed(literals);\\r\\n      }\\r\\n      try {\\r\\n        var input;\\r\\n        if (parseInt(process.versions.node) >= 8) {\\r\\n          input = literals;\\r\\n        } else {\\r\\n          input = new Buffer(literals);\\r\\n        }\\r\\n        var output = require('zlib').deflateSync(input, { level: 9 });\\r\\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\\r\\n      } catch (e) {\\r\\n        (0, _util.warn)('Not compressing PNG because zlib.deflateSync is unavailable: ' + e);\\r\\n      }\\r\\n      return deflateSyncUncompressed(literals);\\r\\n    }\\r\\n    function deflateSyncUncompressed(literals) {\\r\\n      var len = literals.length;\\r\\n      var maxBlockLength = 0xFFFF;\\r\\n      var deflateBlocks = Math.ceil(len / maxBlockLength);\\r\\n      var idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\\r\\n      var pi = 0;\\r\\n      idat[pi++] = 0x78;\\r\\n      idat[pi++] = 0x9c;\\r\\n      var pos = 0;\\r\\n      while (len > maxBlockLength) {\\r\\n        idat[pi++] = 0x00;\\r\\n        idat[pi++] = 0xff;\\r\\n        idat[pi++] = 0xff;\\r\\n        idat[pi++] = 0x00;\\r\\n        idat[pi++] = 0x00;\\r\\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\\r\\n        pi += maxBlockLength;\\r\\n        pos += maxBlockLength;\\r\\n        len -= maxBlockLength;\\r\\n      }\\r\\n      idat[pi++] = 0x01;\\r\\n      idat[pi++] = len & 0xff;\\r\\n      idat[pi++] = len >> 8 & 0xff;\\r\\n      idat[pi++] = ~len & 0xffff & 0xff;\\r\\n      idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\\r\\n      idat.set(literals.subarray(pos), pi);\\r\\n      pi += literals.length - pos;\\r\\n      var adler = adler32(literals, 0, literals.length);\\r\\n      idat[pi++] = adler >> 24 & 0xff;\\r\\n      idat[pi++] = adler >> 16 & 0xff;\\r\\n      idat[pi++] = adler >> 8 & 0xff;\\r\\n      idat[pi++] = adler & 0xff;\\r\\n      return idat;\\r\\n    }\\r\\n    function encode(imgData, kind, forceDataSchema) {\\r\\n      var width = imgData.width;\\r\\n      var height = imgData.height;\\r\\n      var bitDepth, colorType, lineSize;\\r\\n      var bytes = imgData.data;\\r\\n      switch (kind) {\\r\\n        case _util.ImageKind.GRAYSCALE_1BPP:\\r\\n          colorType = 0;\\r\\n          bitDepth = 1;\\r\\n          lineSize = width + 7 >> 3;\\r\\n          break;\\r\\n        case _util.ImageKind.RGB_24BPP:\\r\\n          colorType = 2;\\r\\n          bitDepth = 8;\\r\\n          lineSize = width * 3;\\r\\n          break;\\r\\n        case _util.ImageKind.RGBA_32BPP:\\r\\n          colorType = 6;\\r\\n          bitDepth = 8;\\r\\n          lineSize = width * 4;\\r\\n          break;\\r\\n        default:\\r\\n          throw new Error('invalid format');\\r\\n      }\\r\\n      var literals = new Uint8Array((1 + lineSize) * height);\\r\\n      var offsetLiterals = 0,\\r\\n          offsetBytes = 0;\\r\\n      var y, i;\\r\\n      for (y = 0; y < height; ++y) {\\r\\n        literals[offsetLiterals++] = 0;\\r\\n        literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\\r\\n        offsetBytes += lineSize;\\r\\n        offsetLiterals += lineSize;\\r\\n      }\\r\\n      if (kind === _util.ImageKind.GRAYSCALE_1BPP) {\\r\\n        offsetLiterals = 0;\\r\\n        for (y = 0; y < height; y++) {\\r\\n          offsetLiterals++;\\r\\n          for (i = 0; i < lineSize; i++) {\\r\\n            literals[offsetLiterals++] ^= 0xFF;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      var ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\\r\\n      var idat = deflateSync(literals);\\r\\n      var pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\\r\\n      var data = new Uint8Array(pngLength);\\r\\n      var offset = 0;\\r\\n      data.set(PNG_HEADER, offset);\\r\\n      offset += PNG_HEADER.length;\\r\\n      writePngChunk('IHDR', ihdr, data, offset);\\r\\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\\r\\n      writePngChunk('IDATA', idat, data, offset);\\r\\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\\r\\n      writePngChunk('IEND', new Uint8Array(0), data, offset);\\r\\n      return (0, _util.createObjectURL)(data, 'image/png', forceDataSchema);\\r\\n    }\\r\\n    return function convertImgDataToPng(imgData, forceDataSchema) {\\r\\n      var kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\\r\\n      return encode(imgData, kind, forceDataSchema);\\r\\n    };\\r\\n  }();\\r\\n  var SVGExtraState = function SVGExtraStateClosure() {\\r\\n    function SVGExtraState() {\\r\\n      this.fontSizeScale = 1;\\r\\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\\r\\n      this.fontSize = 0;\\r\\n      this.textMatrix = _util.IDENTITY_MATRIX;\\r\\n      this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\\r\\n      this.leading = 0;\\r\\n      this.x = 0;\\r\\n      this.y = 0;\\r\\n      this.lineX = 0;\\r\\n      this.lineY = 0;\\r\\n      this.charSpacing = 0;\\r\\n      this.wordSpacing = 0;\\r\\n      this.textHScale = 1;\\r\\n      this.textRise = 0;\\r\\n      this.fillColor = SVG_DEFAULTS.fillColor;\\r\\n      this.strokeColor = '#000000';\\r\\n      this.fillAlpha = 1;\\r\\n      this.strokeAlpha = 1;\\r\\n      this.lineWidth = 1;\\r\\n      this.lineJoin = '';\\r\\n      this.lineCap = '';\\r\\n      this.miterLimit = 0;\\r\\n      this.dashArray = [];\\r\\n      this.dashPhase = 0;\\r\\n      this.dependencies = [];\\r\\n      this.activeClipUrl = null;\\r\\n      this.clipGroup = null;\\r\\n      this.maskId = '';\\r\\n    }\\r\\n    SVGExtraState.prototype = {\\r\\n      clone: function SVGExtraState_clone() {\\r\\n        return Object.create(this);\\r\\n      },\\r\\n      setCurrentPoint: function SVGExtraState_setCurrentPoint(x, y) {\\r\\n        this.x = x;\\r\\n        this.y = y;\\r\\n      }\\r\\n    };\\r\\n    return SVGExtraState;\\r\\n  }();\\r\\n  exports.SVGGraphics = SVGGraphics = function SVGGraphicsClosure() {\\r\\n    function opListToTree(opList) {\\r\\n      var opTree = [];\\r\\n      var tmp = [];\\r\\n      var opListLen = opList.length;\\r\\n      for (var x = 0; x < opListLen; x++) {\\r\\n        if (opList[x].fn === 'save') {\\r\\n          opTree.push({\\r\\n            'fnId': 92,\\r\\n            'fn': 'group',\\r\\n            'items': []\\r\\n          });\\r\\n          tmp.push(opTree);\\r\\n          opTree = opTree[opTree.length - 1].items;\\r\\n          continue;\\r\\n        }\\r\\n        if (opList[x].fn === 'restore') {\\r\\n          opTree = tmp.pop();\\r\\n        } else {\\r\\n          opTree.push(opList[x]);\\r\\n        }\\r\\n      }\\r\\n      return opTree;\\r\\n    }\\r\\n    function pf(value) {\\r\\n      if (Number.isInteger(value)) {\\r\\n        return value.toString();\\r\\n      }\\r\\n      var s = value.toFixed(10);\\r\\n      var i = s.length - 1;\\r\\n      if (s[i] !== '0') {\\r\\n        return s;\\r\\n      }\\r\\n      do {\\r\\n        i--;\\r\\n      } while (s[i] === '0');\\r\\n      return s.substr(0, s[i] === '.' ? i : i + 1);\\r\\n    }\\r\\n    function pm(m) {\\r\\n      if (m[4] === 0 && m[5] === 0) {\\r\\n        if (m[1] === 0 && m[2] === 0) {\\r\\n          if (m[0] === 1 && m[3] === 1) {\\r\\n            return '';\\r\\n          }\\r\\n          return 'scale(' + pf(m[0]) + ' ' + pf(m[3]) + ')';\\r\\n        }\\r\\n        if (m[0] === m[3] && m[1] === -m[2]) {\\r\\n          var a = Math.acos(m[0]) * 180 / Math.PI;\\r\\n          return 'rotate(' + pf(a) + ')';\\r\\n        }\\r\\n      } else {\\r\\n        if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\\r\\n          return 'translate(' + pf(m[4]) + ' ' + pf(m[5]) + ')';\\r\\n        }\\r\\n      }\\r\\n      return 'matrix(' + pf(m[0]) + ' ' + pf(m[1]) + ' ' + pf(m[2]) + ' ' + pf(m[3]) + ' ' + pf(m[4]) + ' ' + pf(m[5]) + ')';\\r\\n    }\\r\\n    function SVGGraphics(commonObjs, objs, forceDataSchema) {\\r\\n      this.svgFactory = new _dom_utils.DOMSVGFactory();\\r\\n      this.current = new SVGExtraState();\\r\\n      this.transformMatrix = _util.IDENTITY_MATRIX;\\r\\n      this.transformStack = [];\\r\\n      this.extraStack = [];\\r\\n      this.commonObjs = commonObjs;\\r\\n      this.objs = objs;\\r\\n      this.pendingClip = null;\\r\\n      this.pendingEOFill = false;\\r\\n      this.embedFonts = false;\\r\\n      this.embeddedFonts = Object.create(null);\\r\\n      this.cssStyle = null;\\r\\n      this.forceDataSchema = !!forceDataSchema;\\r\\n    }\\r\\n    var XML_NS = 'http://www.w3.org/XML/1998/namespace';\\r\\n    var XLINK_NS = 'http://www.w3.org/1999/xlink';\\r\\n    var LINE_CAP_STYLES = ['butt', 'round', 'square'];\\r\\n    var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];\\r\\n    var clipCount = 0;\\r\\n    var maskCount = 0;\\r\\n    SVGGraphics.prototype = {\\r\\n      save: function SVGGraphics_save() {\\r\\n        this.transformStack.push(this.transformMatrix);\\r\\n        var old = this.current;\\r\\n        this.extraStack.push(old);\\r\\n        this.current = old.clone();\\r\\n      },\\r\\n      restore: function SVGGraphics_restore() {\\r\\n        this.transformMatrix = this.transformStack.pop();\\r\\n        this.current = this.extraStack.pop();\\r\\n        this.pendingClip = null;\\r\\n        this.tgrp = null;\\r\\n      },\\r\\n      group: function SVGGraphics_group(items) {\\r\\n        this.save();\\r\\n        this.executeOpTree(items);\\r\\n        this.restore();\\r\\n      },\\r\\n      loadDependencies: function SVGGraphics_loadDependencies(operatorList) {\\r\\n        var _this = this;\\r\\n\\r\\n        var fnArray = operatorList.fnArray;\\r\\n        var fnArrayLen = fnArray.length;\\r\\n        var argsArray = operatorList.argsArray;\\r\\n        for (var i = 0; i < fnArrayLen; i++) {\\r\\n          if (_util.OPS.dependency === fnArray[i]) {\\r\\n            var deps = argsArray[i];\\r\\n            for (var n = 0, nn = deps.length; n < nn; n++) {\\r\\n              var obj = deps[n];\\r\\n              var common = obj.substring(0, 2) === 'g_';\\r\\n              var promise;\\r\\n              if (common) {\\r\\n                promise = new Promise(function (resolve) {\\r\\n                  _this.commonObjs.get(obj, resolve);\\r\\n                });\\r\\n              } else {\\r\\n                promise = new Promise(function (resolve) {\\r\\n                  _this.objs.get(obj, resolve);\\r\\n                });\\r\\n              }\\r\\n              this.current.dependencies.push(promise);\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        return Promise.all(this.current.dependencies);\\r\\n      },\\r\\n      transform: function SVGGraphics_transform(a, b, c, d, e, f) {\\r\\n        var transformMatrix = [a, b, c, d, e, f];\\r\\n        this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\\r\\n        this.tgrp = null;\\r\\n      },\\r\\n      getSVG: function SVGGraphics_getSVG(operatorList, viewport) {\\r\\n        var _this2 = this;\\r\\n\\r\\n        this.viewport = viewport;\\r\\n        var svgElement = this._initialize(viewport);\\r\\n        return this.loadDependencies(operatorList).then(function () {\\r\\n          _this2.transformMatrix = _util.IDENTITY_MATRIX;\\r\\n          var opTree = _this2.convertOpList(operatorList);\\r\\n          _this2.executeOpTree(opTree);\\r\\n          return svgElement;\\r\\n        });\\r\\n      },\\r\\n      convertOpList: function SVGGraphics_convertOpList(operatorList) {\\r\\n        var argsArray = operatorList.argsArray;\\r\\n        var fnArray = operatorList.fnArray;\\r\\n        var fnArrayLen = fnArray.length;\\r\\n        var REVOPS = [];\\r\\n        var opList = [];\\r\\n        for (var op in _util.OPS) {\\r\\n          REVOPS[_util.OPS[op]] = op;\\r\\n        }\\r\\n        for (var x = 0; x < fnArrayLen; x++) {\\r\\n          var fnId = fnArray[x];\\r\\n          opList.push({\\r\\n            'fnId': fnId,\\r\\n            'fn': REVOPS[fnId],\\r\\n            'args': argsArray[x]\\r\\n          });\\r\\n        }\\r\\n        return opListToTree(opList);\\r\\n      },\\r\\n      executeOpTree: function SVGGraphics_executeOpTree(opTree) {\\r\\n        var opTreeLen = opTree.length;\\r\\n        for (var x = 0; x < opTreeLen; x++) {\\r\\n          var fn = opTree[x].fn;\\r\\n          var fnId = opTree[x].fnId;\\r\\n          var args = opTree[x].args;\\r\\n          switch (fnId | 0) {\\r\\n            case _util.OPS.beginText:\\r\\n              this.beginText();\\r\\n              break;\\r\\n            case _util.OPS.setLeading:\\r\\n              this.setLeading(args);\\r\\n              break;\\r\\n            case _util.OPS.setLeadingMoveText:\\r\\n              this.setLeadingMoveText(args[0], args[1]);\\r\\n              break;\\r\\n            case _util.OPS.setFont:\\r\\n              this.setFont(args);\\r\\n              break;\\r\\n            case _util.OPS.showText:\\r\\n              this.showText(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.showSpacedText:\\r\\n              this.showText(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.endText:\\r\\n              this.endText();\\r\\n              break;\\r\\n            case _util.OPS.moveText:\\r\\n              this.moveText(args[0], args[1]);\\r\\n              break;\\r\\n            case _util.OPS.setCharSpacing:\\r\\n              this.setCharSpacing(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setWordSpacing:\\r\\n              this.setWordSpacing(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setHScale:\\r\\n              this.setHScale(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setTextMatrix:\\r\\n              this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\\r\\n              break;\\r\\n            case _util.OPS.setTextRise:\\r\\n              this.setTextRise(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setLineWidth:\\r\\n              this.setLineWidth(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setLineJoin:\\r\\n              this.setLineJoin(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setLineCap:\\r\\n             \";a.a+=\" this.setLineCap(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setMiterLimit:\\r\\n              this.setMiterLimit(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.setFillRGBColor:\\r\\n              this.setFillRGBColor(args[0], args[1], args[2]);\\r\\n              break;\\r\\n            case _util.OPS.setStrokeRGBColor:\\r\\n              this.setStrokeRGBColor(args[0], args[1], args[2]);\\r\\n              break;\\r\\n            case _util.OPS.setDash:\\r\\n              this.setDash(args[0], args[1]);\\r\\n              break;\\r\\n            case _util.OPS.setGState:\\r\\n              this.setGState(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.fill:\\r\\n              this.fill();\\r\\n              break;\\r\\n            case _util.OPS.eoFill:\\r\\n              this.eoFill();\\r\\n              break;\\r\\n            case _util.OPS.stroke:\\r\\n              this.stroke();\\r\\n              break;\\r\\n            case _util.OPS.fillStroke:\\r\\n              this.fillStroke();\\r\\n              break;\\r\\n            case _util.OPS.eoFillStroke:\\r\\n              this.eoFillStroke();\\r\\n              break;\\r\\n            case _util.OPS.clip:\\r\\n              this.clip('nonzero');\\r\\n              break;\\r\\n            case _util.OPS.eoClip:\\r\\n              this.clip('evenodd');\\r\\n              break;\\r\\n            case _util.OPS.paintSolidColorImageMask:\\r\\n              this.paintSolidColorImageMask();\\r\\n              break;\\r\\n            case _util.OPS.paintJpegXObject:\\r\\n              this.paintJpegXObject(args[0], args[1], args[2]);\\r\\n              break;\\r\\n            case _util.OPS.paintImageXObject:\\r\\n              this.paintImageXObject(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.paintInlineImageXObject:\\r\\n              this.paintInlineImageXObject(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.paintImageMaskXObject:\\r\\n              this.paintImageMaskXObject(args[0]);\\r\\n              break;\\r\\n            case _util.OPS.paintFormXObjectBegin:\\r\\n              this.paintFormXObjectBegin(args[0], args[1]);\\r\\n              break;\\r\\n            case _util.OPS.paintFormXObjectEnd:\\r\\n              this.paintFormXObjectEnd();\\r\\n              break;\\r\\n            case _util.OPS.closePath:\\r\\n              this.closePath();\\r\\n              break;\\r\\n            case _util.OPS.closeStroke:\\r\\n              this.closeStroke();\\r\\n              break;\\r\\n            case _util.OPS.closeFillStroke:\\r\\n              this.closeFillStroke();\\r\\n              break;\\r\\n            case _util.OPS.nextLine:\\r\\n              this.nextLine();\\r\\n              break;\\r\\n            case _util.OPS.transform:\\r\\n              this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\\r\\n              break;\\r\\n            case _util.OPS.constructPath:\\r\\n              this.constructPath(args[0], args[1]);\\r\\n              break;\\r\\n            case _util.OPS.endPath:\\r\\n              this.endPath();\\r\\n              break;\\r\\n            case 92:\\r\\n              this.group(opTree[x].items);\\r\\n              break;\\r\\n            default:\\r\\n              (0, _util.warn)('Unimplemented operator ' + fn);\\r\\n              break;\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      setWordSpacing: function SVGGraphics_setWordSpacing(wordSpacing) {\\r\\n        this.current.wordSpacing = wordSpacing;\\r\\n      },\\r\\n      setCharSpacing: function SVGGraphics_setCharSpacing(charSpacing) {\\r\\n        this.current.charSpacing = charSpacing;\\r\\n      },\\r\\n      nextLine: function SVGGraphics_nextLine() {\\r\\n        this.moveText(0, this.current.leading);\\r\\n      },\\r\\n      setTextMatrix: function SVGGraphics_setTextMatrix(a, b, c, d, e, f) {\\r\\n        var current = this.current;\\r\\n        this.current.textMatrix = this.current.lineMatrix = [a, b, c, d, e, f];\\r\\n        this.current.x = this.current.lineX = 0;\\r\\n        this.current.y = this.current.lineY = 0;\\r\\n        current.xcoords = [];\\r\\n        current.tspan = this.svgFactory.createElement('svg:tspan');\\r\\n        current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);\\r\\n        current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');\\r\\n        current.tspan.setAttributeNS(null, 'y', pf(-current.y));\\r\\n        current.txtElement = this.svgFactory.createElement('svg:text');\\r\\n        current.txtElement.appendChild(current.tspan);\\r\\n      },\\r\\n      beginText: function SVGGraphics_beginText() {\\r\\n        this.current.x = this.current.lineX = 0;\\r\\n        this.current.y = this.current.lineY = 0;\\r\\n        this.current.textMatrix = _util.IDENTITY_MATRIX;\\r\\n        this.current.lineMatrix = _util.IDENTITY_MATRIX;\\r\\n        this.current.tspan = this.svgFactory.createElement('svg:tspan');\\r\\n        this.current.txtElement = this.svgFactory.createElement('svg:text');\\r\\n        this.current.txtgrp = this.svgFactory.createElement('svg:g');\\r\\n        this.current.xcoords = [];\\r\\n      },\\r\\n      moveText: function SVGGraphics_moveText(x, y) {\\r\\n        var current = this.current;\\r\\n        this.current.x = this.current.lineX += x;\\r\\n        this.current.y = this.current.lineY += y;\\r\\n        current.xcoords = [];\\r\\n        current.tspan = this.svgFactory.createElement('svg:tspan');\\r\\n        current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);\\r\\n        current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');\\r\\n        current.tspan.setAttributeNS(null, 'y', pf(-current.y));\\r\\n      },\\r\\n      showText: function SVGGraphics_showText(glyphs) {\\r\\n        var current = this.current;\\r\\n        var font = current.font;\\r\\n        var fontSize = current.fontSize;\\r\\n        if (fontSize === 0) {\\r\\n          return;\\r\\n        }\\r\\n        var charSpacing = current.charSpacing;\\r\\n        var wordSpacing = current.wordSpacing;\\r\\n        var fontDirection = current.fontDirection;\\r\\n        var textHScale = current.textHScale * fontDirection;\\r\\n        var glyphsLength = glyphs.length;\\r\\n        var vertical = font.vertical;\\r\\n        var widthAdvanceScale = fontSize * current.fontMatrix[0];\\r\\n        var x = 0,\\r\\n            i;\\r\\n        for (i = 0; i < glyphsLength; ++i) {\\r\\n          var glyph = glyphs[i];\\r\\n          if (glyph === null) {\\r\\n            x += fontDirection * wordSpacing;\\r\\n            continue;\\r\\n          } else if ((0, _util.isNum)(glyph)) {\\r\\n            x += -glyph * fontSize * 0.001;\\r\\n            continue;\\r\\n          }\\r\\n          var width = glyph.width;\\r\\n          var character = glyph.fontChar;\\r\\n          var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\\r\\n          var charWidth = width * widthAdvanceScale + spacing * fontDirection;\\r\\n          if (!glyph.isInFont && !font.missingFile) {\\r\\n            x += charWidth;\\r\\n            continue;\\r\\n          }\\r\\n          current.xcoords.push(current.x + x * textHScale);\\r\\n          current.tspan.textContent += character;\\r\\n          x += charWidth;\\r\\n        }\\r\\n        if (vertical) {\\r\\n          current.y -= x * textHScale;\\r\\n        } else {\\r\\n          current.x += x * textHScale;\\r\\n        }\\r\\n        current.tspan.setAttributeNS(null, 'x', current.xcoords.map(pf).join(' '));\\r\\n        current.tspan.setAttributeNS(null, 'y', pf(-current.y));\\r\\n        current.tspan.setAttributeNS(null, 'font-family', current.fontFamily);\\r\\n        current.tspan.setAttributeNS(null, 'font-size', pf(current.fontSize) + 'px');\\r\\n        if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\\r\\n          current.tspan.setAttributeNS(null, 'font-style', current.fontStyle);\\r\\n        }\\r\\n        if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\\r\\n          current.tspan.setAttributeNS(null, 'font-weight', current.fontWeight);\\r\\n        }\\r\\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\\r\\n          current.tspan.setAttributeNS(null, 'fill', current.fillColor);\\r\\n        }\\r\\n        var textMatrix = current.textMatrix;\\r\\n        if (current.textRise !== 0) {\\r\\n          textMatrix = textMatrix.slice();\\r\\n          textMatrix[5] += current.textRise;\\r\\n        }\\r\\n        current.txtElement.setAttributeNS(null, 'transform', pm(textMatrix) + ' scale(1, -1)');\\r\\n        current.txtElement.setAttributeNS(XML_NS, 'xml:space', 'preserve');\\r\\n        current.txtElement.appendChild(current.tspan);\\r\\n        current.txtgrp.appendChild(current.txtElement);\\r\\n        this._ensureTransformGroup().appendChild(current.txtElement);\\r\\n      },\\r\\n      setLeadingMoveText: function SVGGraphics_setLeadingMoveText(x, y) {\\r\\n        this.setLeading(-y);\\r\\n        this.moveText(x, y);\\r\\n      },\\r\\n      addFontStyle: function SVGGraphics_addFontStyle(fontObj) {\\r\\n        if (!this.cssStyle) {\\r\\n          this.cssStyle = this.svgFactory.createElement('svg:style');\\r\\n          this.cssStyle.setAttributeNS(null, 'type', 'text/css');\\r\\n          this.defs.appendChild(this.cssStyle);\\r\\n        }\\r\\n        var url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\\r\\n        this.cssStyle.textContent += '@font-face { font-family: \\\"' + fontObj.loadedName + '\\\";' + ' src: url(' + url + '); }\\\\n';\\r\\n      },\\r\\n      setFont: function SVGGraphics_setFont(details) {\\r\\n        var current = this.current;\\r\\n        var fontObj = this.commonObjs.get(details[0]);\\r\\n        var size = details[1];\\r\\n        this.current.font = fontObj;\\r\\n        if (this.embedFonts && fontObj.data && !this.embeddedFonts[fontObj.loadedName]) {\\r\\n          this.addFontStyle(fontObj);\\r\\n          this.embeddedFonts[fontObj.loadedName] = fontObj;\\r\\n        }\\r\\n        current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\\r\\n        var bold = fontObj.black ? fontObj.bold ? 'bolder' : 'bold' : fontObj.bold ? 'bold' : 'normal';\\r\\n        var italic = fontObj.italic ? 'italic' : 'normal';\\r\\n        if (size < 0) {\\r\\n          size = -size;\\r\\n          current.fontDirection = -1;\\r\\n        } else {\\r\\n          current.fontDirection = 1;\\r\\n        }\\r\\n        current.fontSize = size;\\r\\n        current.fontFamily = fontObj.loadedName;\\r\\n        current.fontWeight = bold;\\r\\n        current.fontStyle = italic;\\r\\n        current.tspan = this.svgFactory.createElement('svg:tspan');\\r\\n        current.tspan.setAttributeNS(null, 'y', pf(-current.y));\\r\\n        current.xcoords = [];\\r\\n      },\\r\\n      endText: function SVGGraphics_endText() {},\\r\\n      setLineWidth: function SVGGraphics_setLineWidth(width) {\\r\\n        this.current.lineWidth = width;\\r\\n      },\\r\\n      setLineCap: function SVGGraphics_setLineCap(style) {\\r\\n        this.current.lineCap = LINE_CAP_STYLES[style];\\r\\n      },\\r\\n      setLineJoin: function SVGGraphics_setLineJoin(style) {\\r\\n        this.current.lineJoin = LINE_JOIN_STYLES[style];\\r\\n      },\\r\\n      setMiterLimit: function SVGGraphics_setMiterLimit(limit) {\\r\\n        this.current.miterLimit = limit;\\r\\n      },\\r\\n      setStrokeAlpha: function SVGGraphics_setStrokeAlpha(strokeAlpha) {\\r\\n        this.current.strokeAlpha = strokeAlpha;\\r\\n      },\\r\\n      setStrokeRGBColor: function SVGGraphics_setStrokeRGBColor(r, g, b) {\\r\\n        var color = _util.Util.makeCssRgb(r, g, b);\\r\\n        this.current.strokeColor = color;\\r\\n      },\\r\\n      setFillAlpha: function SVGGraphics_setFillAlpha(fillAlpha) {\\r\\n        this.current.fillAlpha = fillAlpha;\\r\\n      },\\r\\n      setFillRGBColor: function SVGGraphics_setFillRGBColor(r, g, b) {\\r\\n        var color = _util.Util.makeCssRgb(r, g, b);\\r\\n        this.current.fillColor = color;\\r\\n        this.current.tspan = this.svgFactory.createElement('svg:tspan');\\r\\n        this.current.xcoords = [];\\r\\n      },\\r\\n      setDash: function SVGGraphics_setDash(dashArray, dashPhase) {\\r\\n        this.current.dashArray = dashArray;\\r\\n        this.current.dashPhase = dashPhase;\\r\\n      },\\r\\n      constructPath: function SVGGraphics_constructPath(ops, args) {\\r\\n        var current = this.current;\\r\\n        var x = current.x,\\r\\n            y = current.y;\\r\\n        current.path = this.svgFactory.createElement('svg:path');\\r\\n        var d = [];\\r\\n        var opLength = ops.length;\\r\\n        for (var i = 0, j = 0; i < opLength; i++) {\\r\\n          switch (ops[i] | 0) {\\r\\n            case _util.OPS.rectangle:\\r\\n              x = args[j++];\\r\\n              y = args[j++];\\r\\n              var width = args[j++];\\r\\n              var height = args[j++];\\r\\n              var xw = x + width;\\r\\n              var yh = y + height;\\r\\n              d.push('M', pf(x), pf(y), 'L', pf(xw), pf(y), 'L', pf(xw), pf(yh), 'L', pf(x), pf(yh), 'Z');\\r\\n              break;\\r\\n            case _util.OPS.moveTo:\\r\\n              x = args[j++];\\r\\n              y = args[j++];\\r\\n              d.push('M', pf(x), pf(y));\\r\\n              break;\\r\\n            case _util.OPS.lineTo:\\r\\n              x = args[j++];\\r\\n              y = args[j++];\\r\\n              d.push('L', pf(x), pf(y));\\r\\n              break;\\r\\n            case _util.OPS.curveTo:\\r\\n              x = args[j + 4];\\r\\n              y = args[j + 5];\\r\\n              d.push('C', pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\\r\\n              j += 6;\\r\\n              break;\\r\\n            case _util.OPS.curveTo2:\\r\\n              x = args[j + 2];\\r\\n              y = args[j + 3];\\r\\n              d.push('C', pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\\r\\n              j += 4;\\r\\n              break;\\r\\n            case _util.OPS.curveTo3:\\r\\n              x = args[j + 2];\\r\\n              y = args[j + 3];\\r\\n              d.push('C', pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\\r\\n              j += 4;\\r\\n              break;\\r\\n            case _util.OPS.closePath:\\r\\n              d.push('Z');\\r\\n              break;\\r\\n          }\\r\\n        }\\r\\n        current.path.setAttributeNS(null, 'd', d.join(' '));\\r\\n        current.path.setAttributeNS(null, 'fill', 'none');\\r\\n        this._ensureTransformGroup().appendChild(current.path);\\r\\n        current.element = current.path;\\r\\n        current.setCurrentPoint(x, y);\\r\\n      },\\r\\n      endPath: function SVGGraphics_endPath() {\\r\\n        if (!this.pendingClip) {\\r\\n          return;\\r\\n        }\\r\\n        var current = this.current;\\r\\n        var clipId = 'clippath' + clipCount;\\r\\n        clipCount++;\\r\\n        var clipPath = this.svgFactory.createElement('svg:clipPath');\\r\\n        clipPath.setAttributeNS(null, 'id', clipId);\\r\\n        clipPath.setAttributeNS(null, 'transform', pm(this.transformMatrix));\\r\\n        var clipElement = current.element.cloneNode();\\r\\n        if (this.pendingClip === 'evenodd') {\\r\\n          clipElement.setAttributeNS(null, 'clip-rule', 'evenodd');\\r\\n        } else {\\r\\n          clipElement.setAttributeNS(null, 'clip-rule', 'nonzero');\\r\\n        }\\r\\n        this.pendingClip = null;\\r\\n        clipPath.appendChild(clipElement);\\r\\n        this.defs.appendChild(clipPath);\\r\\n        if (current.activeClipUrl) {\\r\\n          current.clipGroup = null;\\r\\n          this.extraStack.forEach(function (prev) {\\r\\n            prev.clipGroup = null;\\r\\n          });\\r\\n        }\\r\\n        current.activeClipUrl = 'url(#' + clipId + ')';\\r\\n        this.tgrp = null;\\r\\n      },\\r\\n      clip: function SVGGraphics_clip(type) {\\r\\n        this.pendingClip = type;\\r\\n      },\\r\\n      closePath: function SVGGraphics_closePath() {\\r\\n        var current = this.current;\\r\\n        var d = current.path.getAttributeNS(null, 'd');\\r\\n        d += 'Z';\\r\\n        current.path.setAttributeNS(null, 'd', d);\\r\\n      },\\r\\n      setLeading: function SVGGraphics_setLeading(leading) {\\r\\n        this.current.leading = -leading;\\r\\n      },\\r\\n      setTextRise: function SVGGraphics_setTextRise(textRise) {\\r\\n        this.current.textRise = textRise;\\r\\n      },\\r\\n      setHScale: function SVGGraphics_setHScale(scale) {\\r\\n        this.current.textHScale = scale / 100;\\r\\n      },\\r\\n      setGState: function SVGGraphics_setGState(states) {\\r\\n        for (var i = 0, ii = states.length; i < ii; i++) {\\r\\n          var state = states[i];\\r\\n          var key = state[0];\\r\\n          var value = state[1];\\r\\n          switch (key) {\\r\\n            case 'LW':\\r\\n              this.setLineWidth(value);\\r\\n              break;\\r\\n            case 'LC':\\r\\n              this.setLineCap(value);\\r\\n              break;\\r\\n            case 'LJ':\\r\\n              this.setLineJoin(value);\\r\\n              break;\\r\\n            case 'ML':\\r\\n              this.setMiterLimit(value);\\r\\n              break;\\r\\n            case 'D':\\r\\n              this.setDash(value[0], value[1]);\\r\\n              break;\\r\\n            case 'Font':\\r\\n              this.setFont(value);\\r\\n              break;\\r\\n            case 'CA':\\r\\n              this.setStrokeAlpha(value);\\r\\n              break;\\r\\n            case 'ca':\\r\\n       \";a.a+=\"       this.setFillAlpha(value);\\r\\n              break;\\r\\n            default:\\r\\n              (0, _util.warn)('Unimplemented graphic state ' + key);\\r\\n              break;\\r\\n          }\\r\\n        }\\r\\n      },\\r\\n      fill: function SVGGraphics_fill() {\\r\\n        var current = this.current;\\r\\n        current.element.setAttributeNS(null, 'fill', current.fillColor);\\r\\n        current.element.setAttributeNS(null, 'fill-opacity', current.fillAlpha);\\r\\n      },\\r\\n      stroke: function SVGGraphics_stroke() {\\r\\n        var current = this.current;\\r\\n        current.element.setAttributeNS(null, 'stroke', current.strokeColor);\\r\\n        current.element.setAttributeNS(null, 'stroke-opacity', current.strokeAlpha);\\r\\n        current.element.setAttributeNS(null, 'stroke-miterlimit', pf(current.miterLimit));\\r\\n        current.element.setAttributeNS(null, 'stroke-linecap', current.lineCap);\\r\\n        current.element.setAttributeNS(null, 'stroke-linejoin', current.lineJoin);\\r\\n        current.element.setAttributeNS(null, 'stroke-width', pf(current.lineWidth) + 'px');\\r\\n        current.element.setAttributeNS(null, 'stroke-dasharray', current.dashArray.map(pf).join(' '));\\r\\n        current.element.setAttributeNS(null, 'stroke-dashoffset', pf(current.dashPhase) + 'px');\\r\\n        current.element.setAttributeNS(null, 'fill', 'none');\\r\\n      },\\r\\n      eoFill: function SVGGraphics_eoFill() {\\r\\n        this.current.element.setAttributeNS(null, 'fill-rule', 'evenodd');\\r\\n        this.fill();\\r\\n      },\\r\\n      fillStroke: function SVGGraphics_fillStroke() {\\r\\n        this.stroke();\\r\\n        this.fill();\\r\\n      },\\r\\n      eoFillStroke: function SVGGraphics_eoFillStroke() {\\r\\n        this.current.element.setAttributeNS(null, 'fill-rule', 'evenodd');\\r\\n        this.fillStroke();\\r\\n      },\\r\\n      closeStroke: function SVGGraphics_closeStroke() {\\r\\n        this.closePath();\\r\\n        this.stroke();\\r\\n      },\\r\\n      closeFillStroke: function SVGGraphics_closeFillStroke() {\\r\\n        this.closePath();\\r\\n        this.fillStroke();\\r\\n      },\\r\\n      paintSolidColorImageMask: function SVGGraphics_paintSolidColorImageMask() {\\r\\n        var current = this.current;\\r\\n        var rect = this.svgFactory.createElement('svg:rect');\\r\\n        rect.setAttributeNS(null, 'x', '0');\\r\\n        rect.setAttributeNS(null, 'y', '0');\\r\\n        rect.setAttributeNS(null, 'width', '1px');\\r\\n        rect.setAttributeNS(null, 'height', '1px');\\r\\n        rect.setAttributeNS(null, 'fill', current.fillColor);\\r\\n        this._ensureTransformGroup().appendChild(rect);\\r\\n      },\\r\\n      paintJpegXObject: function SVGGraphics_paintJpegXObject(objId, w, h) {\\r\\n        var imgObj = this.objs.get(objId);\\r\\n        var imgEl = this.svgFactory.createElement('svg:image');\\r\\n        imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgObj.src);\\r\\n        imgEl.setAttributeNS(null, 'width', pf(w));\\r\\n        imgEl.setAttributeNS(null, 'height', pf(h));\\r\\n        imgEl.setAttributeNS(null, 'x', '0');\\r\\n        imgEl.setAttributeNS(null, 'y', pf(-h));\\r\\n        imgEl.setAttributeNS(null, 'transform', 'scale(' + pf(1 / w) + ' ' + pf(-1 / h) + ')');\\r\\n        this._ensureTransformGroup().appendChild(imgEl);\\r\\n      },\\r\\n      paintImageXObject: function SVGGraphics_paintImageXObject(objId) {\\r\\n        var imgData = this.objs.get(objId);\\r\\n        if (!imgData) {\\r\\n          (0, _util.warn)('Dependent image isn\\\\'t ready yet');\\r\\n          return;\\r\\n        }\\r\\n        this.paintInlineImageXObject(imgData);\\r\\n      },\\r\\n      paintInlineImageXObject: function SVGGraphics_paintInlineImageXObject(imgData, mask) {\\r\\n        var width = imgData.width;\\r\\n        var height = imgData.height;\\r\\n        var imgSrc = convertImgDataToPng(imgData, this.forceDataSchema);\\r\\n        var cliprect = this.svgFactory.createElement('svg:rect');\\r\\n        cliprect.setAttributeNS(null, 'x', '0');\\r\\n        cliprect.setAttributeNS(null, 'y', '0');\\r\\n        cliprect.setAttributeNS(null, 'width', pf(width));\\r\\n        cliprect.setAttributeNS(null, 'height', pf(height));\\r\\n        this.current.element = cliprect;\\r\\n        this.clip('nonzero');\\r\\n        var imgEl = this.svgFactory.createElement('svg:image');\\r\\n        imgEl.setAttributeNS(XLINK_NS, 'xlink:href', imgSrc);\\r\\n        imgEl.setAttributeNS(null, 'x', '0');\\r\\n        imgEl.setAttributeNS(null, 'y', pf(-height));\\r\\n        imgEl.setAttributeNS(null, 'width', pf(width) + 'px');\\r\\n        imgEl.setAttributeNS(null, 'height', pf(height) + 'px');\\r\\n        imgEl.setAttributeNS(null, 'transform', 'scale(' + pf(1 / width) + ' ' + pf(-1 / height) + ')');\\r\\n        if (mask) {\\r\\n          mask.appendChild(imgEl);\\r\\n        } else {\\r\\n          this._ensureTransformGroup().appendChild(imgEl);\\r\\n        }\\r\\n      },\\r\\n      paintImageMaskXObject: function SVGGraphics_paintImageMaskXObject(imgData) {\\r\\n        var current = this.current;\\r\\n        var width = imgData.width;\\r\\n        var height = imgData.height;\\r\\n        var fillColor = current.fillColor;\\r\\n        current.maskId = 'mask' + maskCount++;\\r\\n        var mask = this.svgFactory.createElement('svg:mask');\\r\\n        mask.setAttributeNS(null, 'id', current.maskId);\\r\\n        var rect = this.svgFactory.createElement('svg:rect');\\r\\n        rect.setAttributeNS(null, 'x', '0');\\r\\n        rect.setAttributeNS(null, 'y', '0');\\r\\n        rect.setAttributeNS(null, 'width', pf(width));\\r\\n        rect.setAttributeNS(null, 'height', pf(height));\\r\\n        rect.setAttributeNS(null, 'fill', fillColor);\\r\\n        rect.setAttributeNS(null, 'mask', 'url(#' + current.maskId + ')');\\r\\n        this.defs.appendChild(mask);\\r\\n        this._ensureTransformGroup().appendChild(rect);\\r\\n        this.paintInlineImageXObject(imgData, mask);\\r\\n      },\\r\\n      paintFormXObjectBegin: function SVGGraphics_paintFormXObjectBegin(matrix, bbox) {\\r\\n        if (Array.isArray(matrix) && matrix.length === 6) {\\r\\n          this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\\r\\n        }\\r\\n        if (Array.isArray(bbox) && bbox.length === 4) {\\r\\n          var width = bbox[2] - bbox[0];\\r\\n          var height = bbox[3] - bbox[1];\\r\\n          var cliprect = this.svgFactory.createElement('svg:rect');\\r\\n          cliprect.setAttributeNS(null, 'x', bbox[0]);\\r\\n          cliprect.setAttributeNS(null, 'y', bbox[1]);\\r\\n          cliprect.setAttributeNS(null, 'width', pf(width));\\r\\n          cliprect.setAttributeNS(null, 'height', pf(height));\\r\\n          this.current.element = cliprect;\\r\\n          this.clip('nonzero');\\r\\n          this.endPath();\\r\\n        }\\r\\n      },\\r\\n      paintFormXObjectEnd: function SVGGraphics_paintFormXObjectEnd() {},\\r\\n      _initialize: function _initialize(viewport) {\\r\\n        var svg = this.svgFactory.create(viewport.width, viewport.height);\\r\\n        var definitions = this.svgFactory.createElement('svg:defs');\\r\\n        svg.appendChild(definitions);\\r\\n        this.defs = definitions;\\r\\n        var rootGroup = this.svgFactory.createElement('svg:g');\\r\\n        rootGroup.setAttributeNS(null, 'transform', pm(viewport.transform));\\r\\n        svg.appendChild(rootGroup);\\r\\n        this.svg = rootGroup;\\r\\n        return svg;\\r\\n      },\\r\\n\\r\\n      _ensureClipGroup: function SVGGraphics_ensureClipGroup() {\\r\\n        if (!this.current.clipGroup) {\\r\\n          var clipGroup = this.svgFactory.createElement('svg:g');\\r\\n          clipGroup.setAttributeNS(null, 'clip-path', this.current.activeClipUrl);\\r\\n          this.svg.appendChild(clipGroup);\\r\\n          this.current.clipGroup = clipGroup;\\r\\n        }\\r\\n        return this.current.clipGroup;\\r\\n      },\\r\\n      _ensureTransformGroup: function SVGGraphics_ensureTransformGroup() {\\r\\n        if (!this.tgrp) {\\r\\n          this.tgrp = this.svgFactory.createElement('svg:g');\\r\\n          this.tgrp.setAttributeNS(null, 'transform', pm(this.transformMatrix));\\r\\n          if (this.current.activeClipUrl) {\\r\\n            this._ensureClipGroup().appendChild(this.tgrp);\\r\\n          } else {\\r\\n            this.svg.appendChild(this.tgrp);\\r\\n          }\\r\\n        }\\r\\n        return this.tgrp;\\r\\n      }\\r\\n    };\\r\\n    return SVGGraphics;\\r\\n  }();\\r\\n}\\r\\nexports.SVGGraphics = SVGGraphics;\\r\\n\\r\\n/***/ }),\\r\\n/* 91 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar pdfjsVersion = '1.10.100';\\r\\nvar pdfjsBuild = 'ea29ec83';\\r\\nvar pdfjsSharedUtil = __w_pdfjs_require__(0);\\r\\nvar pdfjsDisplayGlobal = __w_pdfjs_require__(134);\\r\\nvar pdfjsDisplayAPI = __w_pdfjs_require__(75);\\r\\nvar pdfjsDisplayTextLayer = __w_pdfjs_require__(89);\\r\\nvar pdfjsDisplayAnnotationLayer = __w_pdfjs_require__(88);\\r\\nvar pdfjsDisplayDOMUtils = __w_pdfjs_require__(17);\\r\\nvar pdfjsDisplaySVG = __w_pdfjs_require__(90);\\r\\n{\\r\\n  if (pdfjsSharedUtil.isNodeJS()) {\\r\\n    var PDFNodeStream = __w_pdfjs_require__(160).PDFNodeStream;\\r\\n    pdfjsDisplayAPI.setPDFNetworkStreamClass(PDFNodeStream);\\r\\n  } else if (typeof Response !== 'undefined' && 'body' in Response.prototype && typeof ReadableStream !== 'undefined') {\\r\\n    var PDFFetchStream = __w_pdfjs_require__(161).PDFFetchStream;\\r\\n    pdfjsDisplayAPI.setPDFNetworkStreamClass(PDFFetchStream);\\r\\n  } else {\\r\\n    var PDFNetworkStream = __w_pdfjs_require__(162).PDFNetworkStream;\\r\\n    pdfjsDisplayAPI.setPDFNetworkStreamClass(PDFNetworkStream);\\r\\n  }\\r\\n}\\r\\nexports.PDFJS = pdfjsDisplayGlobal.PDFJS;\\r\\nexports.build = pdfjsDisplayAPI.build;\\r\\nexports.version = pdfjsDisplayAPI.version;\\r\\nexports.getDocument = pdfjsDisplayAPI.getDocument;\\r\\nexports.LoopbackPort = pdfjsDisplayAPI.LoopbackPort;\\r\\nexports.PDFDataRangeTransport = pdfjsDisplayAPI.PDFDataRangeTransport;\\r\\nexports.PDFWorker = pdfjsDisplayAPI.PDFWorker;\\r\\nexports.renderTextLayer = pdfjsDisplayTextLayer.renderTextLayer;\\r\\nexports.AnnotationLayer = pdfjsDisplayAnnotationLayer.AnnotationLayer;\\r\\nexports.CustomStyle = pdfjsDisplayDOMUtils.CustomStyle;\\r\\nexports.createPromiseCapability = pdfjsSharedUtil.createPromiseCapability;\\r\\nexports.PasswordResponses = pdfjsSharedUtil.PasswordResponses;\\r\\nexports.InvalidPDFException = pdfjsSharedUtil.InvalidPDFException;\\r\\nexports.MissingPDFException = pdfjsSharedUtil.MissingPDFException;\\r\\nexports.SVGGraphics = pdfjsDisplaySVG.SVGGraphics;\\r\\nexports.NativeImageDecoding = pdfjsSharedUtil.NativeImageDecoding;\\r\\nexports.UnexpectedResponseException = pdfjsSharedUtil.UnexpectedResponseException;\\r\\nexports.OPS = pdfjsSharedUtil.OPS;\\r\\nexports.UNSUPPORTED_FEATURES = pdfjsSharedUtil.UNSUPPORTED_FEATURES;\\r\\nexports.isValidUrl = pdfjsDisplayDOMUtils.isValidUrl;\\r\\nexports.createValidAbsoluteUrl = pdfjsSharedUtil.createValidAbsoluteUrl;\\r\\nexports.createObjectURL = pdfjsSharedUtil.createObjectURL;\\r\\nexports.removeNullCharacters = pdfjsSharedUtil.removeNullCharacters;\\r\\nexports.shadow = pdfjsSharedUtil.shadow;\\r\\nexports.createBlob = pdfjsSharedUtil.createBlob;\\r\\nexports.RenderingCancelledException = pdfjsDisplayDOMUtils.RenderingCancelledException;\\r\\nexports.getFilenameFromUrl = pdfjsDisplayDOMUtils.getFilenameFromUrl;\\r\\nexports.addLinkAttributes = pdfjsDisplayDOMUtils.addLinkAttributes;\\r\\nexports.StatTimer = pdfjsSharedUtil.StatTimer;\\r\\n\\r\\n/***/ }),\\r\\n/* 92 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\\r\\n  var globalScope = __w_pdfjs_require__(22);\\r\\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\\r\\n  var isAndroid = /Android/.test(userAgent);\\r\\n  var isAndroidPre3 = /Android\\\\s[0-2][^\\\\d]/.test(userAgent);\\r\\n  var isAndroidPre5 = /Android\\\\s[0-4][^\\\\d]/.test(userAgent);\\r\\n  var isChrome = userAgent.indexOf('Chrom') >= 0;\\r\\n  var isChromeWithRangeBug = /Chrome\\\\/(39|40)\\\\./.test(userAgent);\\r\\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\\r\\n  var isIE = userAgent.indexOf('Trident') >= 0;\\r\\n  var isIOS = /\\\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\\r\\n  var isOpera = userAgent.indexOf('Opera') >= 0;\\r\\n  var isSafari = /Safari\\\\//.test(userAgent) && !/(Chrome\\\\/|Android\\\\s)/.test(userAgent);\\r\\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\\r\\n  if (typeof PDFJS === 'undefined') {\\r\\n    globalScope.PDFJS = {};\\r\\n  }\\r\\n  PDFJS.compatibilityChecked = true;\\r\\n  (function checkTypedArrayCompatibility() {\\r\\n    if (typeof Uint8ClampedArray === 'undefined') {\\r\\n      globalScope.Uint8ClampedArray = __w_pdfjs_require__(93);\\r\\n    }\\r\\n    if (typeof Uint8Array !== 'undefined') {\\r\\n      if (typeof Uint8Array.prototype.subarray === 'undefined') {\\r\\n        Uint8Array.prototype.subarray = function subarray(start, end) {\\r\\n          return new Uint8Array(this.slice(start, end));\\r\\n        };\\r\\n        Float32Array.prototype.subarray = function subarray(start, end) {\\r\\n          return new Float32Array(this.slice(start, end));\\r\\n        };\\r\\n      }\\r\\n      if (typeof Float64Array === 'undefined') {\\r\\n        globalScope.Float64Array = Float32Array;\\r\\n      }\\r\\n      return;\\r\\n    }\\r\\n    function subarray(start, end) {\\r\\n      return new TypedArray(this.slice(start, end));\\r\\n    }\\r\\n    function setArrayOffset(array, offset) {\\r\\n      if (arguments.length < 2) {\\r\\n        offset = 0;\\r\\n      }\\r\\n      for (var i = 0, n = array.length; i < n; ++i, ++offset) {\\r\\n        this[offset] = array[i] & 0xFF;\\r\\n      }\\r\\n    }\\r\\n    function Uint32ArrayView(buffer, length) {\\r\\n      this.buffer = buffer;\\r\\n      this.byteLength = buffer.length;\\r\\n      this.length = length;\\r\\n      ensureUint32ArrayViewProps(this.length);\\r\\n    }\\r\\n    Uint32ArrayView.prototype = Object.create(null);\\r\\n    var uint32ArrayViewSetters = 0;\\r\\n    function createUint32ArrayProp(index) {\\r\\n      return {\\r\\n        get: function get() {\\r\\n          var buffer = this.buffer,\\r\\n              offset = index << 2;\\r\\n          return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\\r\\n        },\\r\\n        set: function set(value) {\\r\\n          var buffer = this.buffer,\\r\\n              offset = index << 2;\\r\\n          buffer[offset] = value & 255;\\r\\n          buffer[offset + 1] = value >> 8 & 255;\\r\\n          buffer[offset + 2] = value >> 16 & 255;\\r\\n          buffer[offset + 3] = value >>> 24 & 255;\\r\\n        }\\r\\n      };\\r\\n    }\\r\\n    function ensureUint32ArrayViewProps(length) {\\r\\n      while (uint32ArrayViewSetters < length) {\\r\\n        Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\\r\\n        uint32ArrayViewSetters++;\\r\\n      }\\r\\n    }\\r\\n    function TypedArray(arg1) {\\r\\n      var result, i, n;\\r\\n      if (typeof arg1 === 'number') {\\r\\n        result = [];\\r\\n        for (i = 0; i < arg1; ++i) {\\r\\n          result[i] = 0;\\r\\n        }\\r\\n      } else if ('slice' in arg1) {\\r\\n        result = arg1.slice(0);\\r\\n      } else {\\r\\n        result = [];\\r\\n        for (i = 0, n = arg1.length; i < n; ++i) {\\r\\n          result[i] = arg1[i];\\r\\n        }\\r\\n      }\\r\\n      result.subarray = subarray;\\r\\n      result.buffer = result;\\r\\n      result.byteLength = result.length;\\r\\n      result.set = setArrayOffset;\\r\\n      if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) === 'object' && arg1.buffer) {\\r\\n        result.buffer = arg1.buffer;\\r\\n      }\\r\\n      return result;\\r\\n    }\\r\\n    globalScope.Uint8Array = TypedArray;\\r\\n    globalScope.Int8Array = TypedArray;\\r\\n    globalScope.Int32Array = TypedArray;\\r\\n    globalScope.Uint16Array = TypedArray;\\r\\n    globalScope.Float32Array = TypedArray;\\r\\n    globalScope.Float64Array = TypedArray;\\r\\n    globalScope.Uint32Array = function () {\\r\\n      if (arguments.length === 3) {\\r\\n        if (arguments[1] !== 0) {\\r\\n          throw new Error('offset !== 0 is not supported');\\r\\n        }\\r\\n        return new Uint32ArrayView(arguments[0], arguments[2]);\\r\\n      }\\r\\n      return TypedArray.apply(this, arguments);\\r\\n    };\\r\\n  })();\\r\\n  (function canvasPixelArrayBuffer() {\\r\\n    if (!hasDOM || !window.CanvasPixelArray) {\\r\\n      return;\\r\\n    }\\r\\n    var cpaProto = window.CanvasPixelArray.prototype;\\r\\n    if ('buffer' in cpaProto) {\\r\\n      return;\\r\\n    }\\r\\n    Object.defineProperty(cpaProto, 'buffer', {\\r\\n      get: function get() {\\r\\n        return this;\\r\\n      },\\r\\n\\r\\n      enumerable: false,\\r\\n      configurable: true\\r\\n    });\\r\\n    Object.defineProperty(cpaProto, 'byteLength', {\\r\\n      get: function get() {\\r\\n        return t\";a.a+=\"his.length;\\r\\n      },\\r\\n\\r\\n      enumerable: false,\\r\\n      configurable: true\\r\\n    });\\r\\n  })();\\r\\n  (function normalizeURLObject() {\\r\\n    if (!globalScope.URL) {\\r\\n      globalScope.URL = globalScope.webkitURL;\\r\\n    }\\r\\n  })();\\r\\n  (function checkObjectDefinePropertyCompatibility() {\\r\\n    if (typeof Object.defineProperty !== 'undefined') {\\r\\n      var definePropertyPossible = true;\\r\\n      try {\\r\\n        if (hasDOM) {\\r\\n          Object.defineProperty(new Image(), 'id', { value: 'test' });\\r\\n        }\\r\\n        var Test = function Test() {};\\r\\n        Test.prototype = {\\r\\n          get id() {}\\r\\n        };\\r\\n        Object.defineProperty(new Test(), 'id', {\\r\\n          value: '',\\r\\n          configurable: true,\\r\\n          enumerable: true,\\r\\n          writable: false\\r\\n        });\\r\\n      } catch (e) {\\r\\n        definePropertyPossible = false;\\r\\n      }\\r\\n      if (definePropertyPossible) {\\r\\n        return;\\r\\n      }\\r\\n    }\\r\\n    Object.defineProperty = function objectDefineProperty(obj, name, def) {\\r\\n      delete obj[name];\\r\\n      if ('get' in def) {\\r\\n        obj.__defineGetter__(name, def['get']);\\r\\n      }\\r\\n      if ('set' in def) {\\r\\n        obj.__defineSetter__(name, def['set']);\\r\\n      }\\r\\n      if ('value' in def) {\\r\\n        obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\\r\\n          this.__defineGetter__(name, function objectDefinePropertyGetter() {\\r\\n            return value;\\r\\n          });\\r\\n          return value;\\r\\n        });\\r\\n        obj[name] = def.value;\\r\\n      }\\r\\n    };\\r\\n  })();\\r\\n  (function checkXMLHttpRequestResponseCompatibility() {\\r\\n    if (typeof XMLHttpRequest === 'undefined') {\\r\\n      return;\\r\\n    }\\r\\n    var xhrPrototype = XMLHttpRequest.prototype;\\r\\n    var xhr = new XMLHttpRequest();\\r\\n    if (!('overrideMimeType' in xhr)) {\\r\\n      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\\r\\n        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\\r\\n      });\\r\\n    }\\r\\n    if ('responseType' in xhr) {\\r\\n      return;\\r\\n    }\\r\\n    Object.defineProperty(xhrPrototype, 'responseType', {\\r\\n      get: function xmlHttpRequestGetResponseType() {\\r\\n        return this._responseType || 'text';\\r\\n      },\\r\\n      set: function xmlHttpRequestSetResponseType(value) {\\r\\n        if (value === 'text' || value === 'arraybuffer') {\\r\\n          this._responseType = value;\\r\\n          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\\r\\n            this.overrideMimeType('text/plain; charset=x-user-defined');\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    });\\r\\n    if (typeof VBArray !== 'undefined') {\\r\\n      Object.defineProperty(xhrPrototype, 'response', {\\r\\n        get: function xmlHttpRequestResponseGet() {\\r\\n          if (this.responseType === 'arraybuffer') {\\r\\n            return new Uint8Array(new VBArray(this.responseBody).toArray());\\r\\n          }\\r\\n          return this.responseText;\\r\\n        }\\r\\n      });\\r\\n      return;\\r\\n    }\\r\\n    Object.defineProperty(xhrPrototype, 'response', {\\r\\n      get: function xmlHttpRequestResponseGet() {\\r\\n        if (this.responseType !== 'arraybuffer') {\\r\\n          return this.responseText;\\r\\n        }\\r\\n        var text = this.responseText;\\r\\n        var i,\\r\\n            n = text.length;\\r\\n        var result = new Uint8Array(n);\\r\\n        for (i = 0; i < n; ++i) {\\r\\n          result[i] = text.charCodeAt(i) & 0xFF;\\r\\n        }\\r\\n        return result.buffer;\\r\\n      }\\r\\n    });\\r\\n  })();\\r\\n  (function checkWindowBtoaCompatibility() {\\r\\n    if ('btoa' in globalScope) {\\r\\n      return;\\r\\n    }\\r\\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\\r\\n    globalScope.btoa = function (chars) {\\r\\n      var buffer = '';\\r\\n      var i, n;\\r\\n      for (i = 0, n = chars.length; i < n; i += 3) {\\r\\n        var b1 = chars.charCodeAt(i) & 0xFF;\\r\\n        var b2 = chars.charCodeAt(i + 1) & 0xFF;\\r\\n        var b3 = chars.charCodeAt(i + 2) & 0xFF;\\r\\n        var d1 = b1 >> 2,\\r\\n            d2 = (b1 & 3) << 4 | b2 >> 4;\\r\\n        var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\\r\\n        var d4 = i + 2 < n ? b3 & 0x3F : 64;\\r\\n        buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\\r\\n      }\\r\\n      return buffer;\\r\\n    };\\r\\n  })();\\r\\n  (function checkWindowAtobCompatibility() {\\r\\n    if ('atob' in globalScope) {\\r\\n      return;\\r\\n    }\\r\\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\\r\\n    globalScope.atob = function (input) {\\r\\n      input = input.replace(/=+$/, '');\\r\\n      if (input.length % 4 === 1) {\\r\\n        throw new Error('bad atob input');\\r\\n      }\\r\\n      for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\\r\\n        buffer = digits.indexOf(buffer);\\r\\n      }\\r\\n      return output;\\r\\n    };\\r\\n  })();\\r\\n  (function checkFunctionPrototypeBindCompatibility() {\\r\\n    if (typeof Function.prototype.bind !== 'undefined') {\\r\\n      return;\\r\\n    }\\r\\n    Function.prototype.bind = function functionPrototypeBind(obj) {\\r\\n      var fn = this,\\r\\n          headArgs = Array.prototype.slice.call(arguments, 1);\\r\\n      var bound = function functionPrototypeBindBound() {\\r\\n        var args = headArgs.concat(Array.prototype.slice.call(arguments));\\r\\n        return fn.apply(obj, args);\\r\\n      };\\r\\n      return bound;\\r\\n    };\\r\\n  })();\\r\\n  (function checkDatasetProperty() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    var div = document.createElement('div');\\r\\n    if ('dataset' in div) {\\r\\n      return;\\r\\n    }\\r\\n    Object.defineProperty(HTMLElement.prototype, 'dataset', {\\r\\n      get: function get() {\\r\\n        if (this._dataset) {\\r\\n          return this._dataset;\\r\\n        }\\r\\n        var dataset = {};\\r\\n        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\\r\\n          var attribute = this.attributes[j];\\r\\n          if (attribute.name.substring(0, 5) !== 'data-') {\\r\\n            continue;\\r\\n          }\\r\\n          var key = attribute.name.substring(5).replace(/\\\\-([a-z])/g, function (all, ch) {\\r\\n            return ch.toUpperCase();\\r\\n          });\\r\\n          dataset[key] = attribute.value;\\r\\n        }\\r\\n        Object.defineProperty(this, '_dataset', {\\r\\n          value: dataset,\\r\\n          writable: false,\\r\\n          enumerable: false\\r\\n        });\\r\\n        return dataset;\\r\\n      },\\r\\n\\r\\n      enumerable: true\\r\\n    });\\r\\n  })();\\r\\n  (function checkClassListProperty() {\\r\\n    function changeList(element, itemName, add, remove) {\\r\\n      var s = element.className || '';\\r\\n      var list = s.split(/\\\\s+/g);\\r\\n      if (list[0] === '') {\\r\\n        list.shift();\\r\\n      }\\r\\n      var index = list.indexOf(itemName);\\r\\n      if (index < 0 && add) {\\r\\n        list.push(itemName);\\r\\n      }\\r\\n      if (index >= 0 && remove) {\\r\\n        list.splice(index, 1);\\r\\n      }\\r\\n      element.className = list.join(' ');\\r\\n      return index >= 0;\\r\\n    }\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    var div = document.createElement('div');\\r\\n    if ('classList' in div) {\\r\\n      return;\\r\\n    }\\r\\n    var classListPrototype = {\\r\\n      add: function add(name) {\\r\\n        changeList(this.element, name, true, false);\\r\\n      },\\r\\n      contains: function contains(name) {\\r\\n        return changeList(this.element, name, false, false);\\r\\n      },\\r\\n      remove: function remove(name) {\\r\\n        changeList(this.element, name, false, true);\\r\\n      },\\r\\n      toggle: function toggle(name) {\\r\\n        changeList(this.element, name, true, true);\\r\\n      }\\r\\n    };\\r\\n    Object.defineProperty(HTMLElement.prototype, 'classList', {\\r\\n      get: function get() {\\r\\n        if (this._classList) {\\r\\n          return this._classList;\\r\\n        }\\r\\n        var classList = Object.create(classListPrototype, {\\r\\n          element: {\\r\\n            value: this,\\r\\n            writable: false,\\r\\n            enumerable: true\\r\\n          }\\r\\n        });\\r\\n        Object.defineProperty(this, '_classList', {\\r\\n          value: classList,\\r\\n          writable: false,\\r\\n          enumerable: false\\r\\n        });\\r\\n        return classList;\\r\\n      },\\r\\n\\r\\n      enumerable: true\\r\\n    });\\r\\n  })();\\r\\n  (function checkWorkerConsoleCompatibility() {\\r\\n    if (typeof importScripts === 'undefined' || 'console' in globalScope) {\\r\\n      return;\\r\\n    }\\r\\n    var consoleTimer = {};\\r\\n    var workerConsole = {\\r\\n      log: function log() {\\r\\n        var args = Array.prototype.slice.call(arguments);\\r\\n        globalScope.postMessage({\\r\\n          targetName: 'main',\\r\\n          action: 'console_log',\\r\\n          data: args\\r\\n        });\\r\\n      },\\r\\n      error: function error() {\\r\\n        var args = Array.prototype.slice.call(arguments);\\r\\n        globalScope.postMessage({\\r\\n          targetName: 'main',\\r\\n          action: 'console_error',\\r\\n          data: args\\r\\n        });\\r\\n      },\\r\\n      time: function time(name) {\\r\\n        consoleTimer[name] = Date.now();\\r\\n      },\\r\\n      timeEnd: function timeEnd(name) {\\r\\n        var time = consoleTimer[name];\\r\\n        if (!time) {\\r\\n          throw new Error('Unknown timer name ' + name);\\r\\n        }\\r\\n        this.log('Timer:', name, Date.now() - time);\\r\\n      }\\r\\n    };\\r\\n    globalScope.console = workerConsole;\\r\\n  })();\\r\\n  (function checkConsoleCompatibility() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (!('console' in window)) {\\r\\n      window.console = {\\r\\n        log: function log() {},\\r\\n        error: function error() {},\\r\\n        warn: function warn() {}\\r\\n      };\\r\\n      return;\\r\\n    }\\r\\n    if (!('bind' in console.log)) {\\r\\n      console.log = function (fn) {\\r\\n        return function (msg) {\\r\\n          return fn(msg);\\r\\n        };\\r\\n      }(console.log);\\r\\n      console.error = function (fn) {\\r\\n        return function (msg) {\\r\\n          return fn(msg);\\r\\n        };\\r\\n      }(console.error);\\r\\n      console.warn = function (fn) {\\r\\n        return function (msg) {\\r\\n          return fn(msg);\\r\\n        };\\r\\n      }(console.warn);\\r\\n      return;\\r\\n    }\\r\\n  })();\\r\\n  (function checkOnClickCompatibility() {\\r\\n    function ignoreIfTargetDisabled(event) {\\r\\n      if (isDisabled(event.target)) {\\r\\n        event.stopPropagation();\\r\\n      }\\r\\n    }\\r\\n    function isDisabled(node) {\\r\\n      return node.disabled || node.parentNode && isDisabled(node.parentNode);\\r\\n    }\\r\\n    if (isOpera) {\\r\\n      document.addEventListener('click', ignoreIfTargetDisabled, true);\\r\\n    }\\r\\n  })();\\r\\n  (function checkOnBlobSupport() {\\r\\n    if (isIE || isIOSChrome) {\\r\\n      PDFJS.disableCreateObjectURL = true;\\r\\n    }\\r\\n  })();\\r\\n  (function checkNavigatorLanguage() {\\r\\n    if (typeof navigator === 'undefined') {\\r\\n      return;\\r\\n    }\\r\\n    if ('language' in navigator) {\\r\\n      return;\\r\\n    }\\r\\n    PDFJS.locale = navigator.userLanguage || 'en-US';\\r\\n  })();\\r\\n  (function checkRangeRequests() {\\r\\n    if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\\r\\n      PDFJS.disableRange = true;\\r\\n      PDFJS.disableStream = true;\\r\\n    }\\r\\n  })();\\r\\n  (function checkHistoryManipulation() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (!history.pushState || isAndroidPre3) {\\r\\n      PDFJS.disableHistory = true;\\r\\n    }\\r\\n  })();\\r\\n  (function checkSetPresenceInImageData() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (window.CanvasPixelArray) {\\r\\n      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\\r\\n        window.CanvasPixelArray.prototype.set = function (arr) {\\r\\n          for (var i = 0, ii = this.length; i < ii; i++) {\\r\\n            this[i] = arr[i];\\r\\n          }\\r\\n        };\\r\\n      }\\r\\n    } else {\\r\\n      var polyfill = false,\\r\\n          versionMatch;\\r\\n      if (isChrome) {\\r\\n        versionMatch = userAgent.match(/Chrom(e|ium)\\\\/([0-9]+)\\\\./);\\r\\n        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\\r\\n      } else if (isAndroid) {\\r\\n        polyfill = isAndroidPre5;\\r\\n      } else if (isSafari) {\\r\\n        versionMatch = userAgent.match(/Version\\\\/([0-9]+)\\\\.([0-9]+)\\\\.([0-9]+) Safari\\\\//);\\r\\n        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\\r\\n      }\\r\\n      if (polyfill) {\\r\\n        var contextPrototype = window.CanvasRenderingContext2D.prototype;\\r\\n        var createImageData = contextPrototype.createImageData;\\r\\n        contextPrototype.createImageData = function (w, h) {\\r\\n          var imageData = createImageData.call(this, w, h);\\r\\n          imageData.data.set = function (arr) {\\r\\n            for (var i = 0, ii = this.length; i < ii; i++) {\\r\\n              this[i] = arr[i];\\r\\n            }\\r\\n          };\\r\\n          return imageData;\\r\\n        };\\r\\n        contextPrototype = null;\\r\\n      }\\r\\n    }\\r\\n  })();\\r\\n  (function checkRequestAnimationFrame() {\\r\\n    function installFakeAnimationFrameFunctions() {\\r\\n      window.requestAnimationFrame = function (callback) {\\r\\n        return window.setTimeout(callback, 20);\\r\\n      };\\r\\n      window.cancelAnimationFrame = function (timeoutID) {\\r\\n        window.clearTimeout(timeoutID);\\r\\n      };\\r\\n    }\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (isIOS) {\\r\\n      installFakeAnimationFrameFunctions();\\r\\n      return;\\r\\n    }\\r\\n    if ('requestAnimationFrame' in window) {\\r\\n      return;\\r\\n    }\\r\\n    window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame;\\r\\n    if (window.requestAnimationFrame) {\\r\\n      return;\\r\\n    }\\r\\n    installFakeAnimationFrameFunctions();\\r\\n  })();\\r\\n  (function checkCanvasSizeLimitation() {\\r\\n    if (isIOS || isAndroid) {\\r\\n      PDFJS.maxCanvasPixels = 5242880;\\r\\n    }\\r\\n  })();\\r\\n  (function checkFullscreenSupport() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (isIE && window.parent !== window) {\\r\\n      PDFJS.disableFullscreen = true;\\r\\n    }\\r\\n  })();\\r\\n  (function checkCurrentScript() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if ('currentScript' in document) {\\r\\n      return;\\r\\n    }\\r\\n    Object.defineProperty(document, 'currentScript', {\\r\\n      get: function get() {\\r\\n        var scripts = document.getElementsByTagName('script');\\r\\n        return scripts[scripts.length - 1];\\r\\n      },\\r\\n\\r\\n      enumerable: true,\\r\\n      configurable: true\\r\\n    });\\r\\n  })();\\r\\n  (function checkInputTypeNumberAssign() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    var el = document.createElement('input');\\r\\n    try {\\r\\n      el.type = 'number';\\r\\n    } catch (ex) {\\r\\n      var inputProto = el.constructor.prototype;\\r\\n      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\\r\\n      Object.defineProperty(inputProto, 'type', {\\r\\n        get: function get() {\\r\\n          return typeProperty.get.call(this);\\r\\n        },\\r\\n        set: function set(value) {\\r\\n          typeProperty.set.call(this, value === 'number' ? 'text' : value);\\r\\n        },\\r\\n\\r\\n        enumerable: true,\\r\\n        configurable: true\\r\\n      });\\r\\n    }\\r\\n  })();\\r\\n  (function checkDocumentReadyState() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (!document.attachEvent) {\\r\\n      return;\\r\\n    }\\r\\n    var documentProto = document.constructor.prototype;\\r\\n    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\\r\\n    Object.defineProperty(documentProto, 'readyState', {\\r\\n      get: function get() {\\r\\n        var value = readyStateProto.get.call(this);\\r\\n        return value === 'interactive' ? 'loading' : value;\\r\\n      },\\r\\n      set: function set(value) {\\r\\n        readyStateProto.set.call(this, value);\\r\\n      },\\r\\n\\r\\n      enumerable: true,\\r\\n      configurable: true\\r\\n    });\\r\\n  })();\\r\\n  (function checkChildNodeRemove() {\\r\\n    if (!hasDOM) {\\r\\n      return;\\r\\n    }\\r\\n    if (typeof Element.prototype.remove !== 'undefined') {\\r\\n      return;\\r\\n    }\\r\\n    Element.prototype.remove = function () {\\r\\n      if (this.parentNode) {\\r\\n        this.parentNode.removeChild(this);\\r\\n      }\\r\\n    };\\r\\n  })();\\r\\n  (function checkNumberIsNaN() {\\r\\n    if (Number.isNaN) {\\r\\n      return;\\r\\n    }\\r\\n    Number.isNaN = __w_pdfjs_require__(105);\\r\\n  })();\\r\\n  (function checkNumberIsInteger() {\\r\\n    if (Number.isInteger) {\\r\\n      return;\\r\\n    }\\r\\n    Number.isInteger = __w_pdfjs_require__(107);\\r\\n  })();\\r\\n  (function checkPromise() {\\r\\n    if (globalScope.Promise) {\\r\\n      return;\\r\\n    }\\r\\n    globalScope.Promise = __w_pdfjs_require__(110);\\r\\n  })();\\r\\n  (function checkWeakMap() {\\r\\n    if (globalScope.WeakMap) {\\r\\n      return;\\r\\n    }\\r\\n    globalScope.WeakMap = __w_pdfjs_require__(120);\\r\\n  })();\\r\\n  (function checkURLConstructor() {\\r\\n    var hasWorkingUrl = false;\\r\\n    try {\\r\\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\\r\\n        var u = new URL('b', 'http://a');\\r\\n        u.p\";a.a+=\"athname = 'c%20d';\\r\\n        hasWorkingUrl = u.href === 'http://a/c%20d';\\r\\n      }\\r\\n    } catch (e) {}\\r\\n    if (hasWorkingUrl) {\\r\\n      return;\\r\\n    }\\r\\n    var relative = Object.create(null);\\r\\n    relative['ftp'] = 21;\\r\\n    relative['file'] = 0;\\r\\n    relative['gopher'] = 70;\\r\\n    relative['http'] = 80;\\r\\n    relative['https'] = 443;\\r\\n    relative['ws'] = 80;\\r\\n    relative['wss'] = 443;\\r\\n    var relativePathDotMapping = Object.create(null);\\r\\n    relativePathDotMapping['%2e'] = '.';\\r\\n    relativePathDotMapping['.%2e'] = '..';\\r\\n    relativePathDotMapping['%2e.'] = '..';\\r\\n    relativePathDotMapping['%2e%2e'] = '..';\\r\\n    function isRelativeScheme(scheme) {\\r\\n      return relative[scheme] !== undefined;\\r\\n    }\\r\\n    function invalid() {\\r\\n      clear.call(this);\\r\\n      this._isInvalid = true;\\r\\n    }\\r\\n    function IDNAToASCII(h) {\\r\\n      if (h === '') {\\r\\n        invalid.call(this);\\r\\n      }\\r\\n      return h.toLowerCase();\\r\\n    }\\r\\n    function percentEscape(c) {\\r\\n      var unicode = c.charCodeAt(0);\\r\\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\\r\\n        return c;\\r\\n      }\\r\\n      return encodeURIComponent(c);\\r\\n    }\\r\\n    function percentEscapeQuery(c) {\\r\\n      var unicode = c.charCodeAt(0);\\r\\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\\r\\n        return c;\\r\\n      }\\r\\n      return encodeURIComponent(c);\\r\\n    }\\r\\n    var EOF,\\r\\n        ALPHA = /[a-zA-Z]/,\\r\\n        ALPHANUMERIC = /[a-zA-Z0-9\\\\+\\\\-\\\\.]/;\\r\\n    function parse(input, stateOverride, base) {\\r\\n      function err(message) {\\r\\n        errors.push(message);\\r\\n      }\\r\\n      var state = stateOverride || 'scheme start',\\r\\n          cursor = 0,\\r\\n          buffer = '',\\r\\n          seenAt = false,\\r\\n          seenBracket = false,\\r\\n          errors = [];\\r\\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\\r\\n        var c = input[cursor];\\r\\n        switch (state) {\\r\\n          case 'scheme start':\\r\\n            if (c && ALPHA.test(c)) {\\r\\n              buffer += c.toLowerCase();\\r\\n              state = 'scheme';\\r\\n            } else if (!stateOverride) {\\r\\n              buffer = '';\\r\\n              state = 'no scheme';\\r\\n              continue;\\r\\n            } else {\\r\\n              err('Invalid scheme.');\\r\\n              break loop;\\r\\n            }\\r\\n            break;\\r\\n          case 'scheme':\\r\\n            if (c && ALPHANUMERIC.test(c)) {\\r\\n              buffer += c.toLowerCase();\\r\\n            } else if (c === ':') {\\r\\n              this._scheme = buffer;\\r\\n              buffer = '';\\r\\n              if (stateOverride) {\\r\\n                break loop;\\r\\n              }\\r\\n              if (isRelativeScheme(this._scheme)) {\\r\\n                this._isRelative = true;\\r\\n              }\\r\\n              if (this._scheme === 'file') {\\r\\n                state = 'relative';\\r\\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\\r\\n                state = 'relative or authority';\\r\\n              } else if (this._isRelative) {\\r\\n                state = 'authority first slash';\\r\\n              } else {\\r\\n                state = 'scheme data';\\r\\n              }\\r\\n            } else if (!stateOverride) {\\r\\n              buffer = '';\\r\\n              cursor = 0;\\r\\n              state = 'no scheme';\\r\\n              continue;\\r\\n            } else if (c === EOF) {\\r\\n              break loop;\\r\\n            } else {\\r\\n              err('Code point not allowed in scheme: ' + c);\\r\\n              break loop;\\r\\n            }\\r\\n            break;\\r\\n          case 'scheme data':\\r\\n            if (c === '?') {\\r\\n              this._query = '?';\\r\\n              state = 'query';\\r\\n            } else if (c === '#') {\\r\\n              this._fragment = '#';\\r\\n              state = 'fragment';\\r\\n            } else {\\r\\n              if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\r\\n                this._schemeData += percentEscape(c);\\r\\n              }\\r\\n            }\\r\\n            break;\\r\\n          case 'no scheme':\\r\\n            if (!base || !isRelativeScheme(base._scheme)) {\\r\\n              err('Missing scheme.');\\r\\n              invalid.call(this);\\r\\n            } else {\\r\\n              state = 'relative';\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'relative or authority':\\r\\n            if (c === '/' && input[cursor + 1] === '/') {\\r\\n              state = 'authority ignore slashes';\\r\\n            } else {\\r\\n              err('Expected /, got: ' + c);\\r\\n              state = 'relative';\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'relative':\\r\\n            this._isRelative = true;\\r\\n            if (this._scheme !== 'file') {\\r\\n              this._scheme = base._scheme;\\r\\n            }\\r\\n            if (c === EOF) {\\r\\n              this._host = base._host;\\r\\n              this._port = base._port;\\r\\n              this._path = base._path.slice();\\r\\n              this._query = base._query;\\r\\n              this._username = base._username;\\r\\n              this._password = base._password;\\r\\n              break loop;\\r\\n            } else if (c === '/' || c === '\\\\\\\\') {\\r\\n              if (c === '\\\\\\\\') {\\r\\n                err('\\\\\\\\ is an invalid code point.');\\r\\n              }\\r\\n              state = 'relative slash';\\r\\n            } else if (c === '?') {\\r\\n              this._host = base._host;\\r\\n              this._port = base._port;\\r\\n              this._path = base._path.slice();\\r\\n              this._query = '?';\\r\\n              this._username = base._username;\\r\\n              this._password = base._password;\\r\\n              state = 'query';\\r\\n            } else if (c === '#') {\\r\\n              this._host = base._host;\\r\\n              this._port = base._port;\\r\\n              this._path = base._path.slice();\\r\\n              this._query = base._query;\\r\\n              this._fragment = '#';\\r\\n              this._username = base._username;\\r\\n              this._password = base._password;\\r\\n              state = 'fragment';\\r\\n            } else {\\r\\n              var nextC = input[cursor + 1];\\r\\n              var nextNextC = input[cursor + 2];\\r\\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\\\\\' && nextNextC !== '?' && nextNextC !== '#') {\\r\\n                this._host = base._host;\\r\\n                this._port = base._port;\\r\\n                this._username = base._username;\\r\\n                this._password = base._password;\\r\\n                this._path = base._path.slice();\\r\\n                this._path.pop();\\r\\n              }\\r\\n              state = 'relative path';\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'relative slash':\\r\\n            if (c === '/' || c === '\\\\\\\\') {\\r\\n              if (c === '\\\\\\\\') {\\r\\n                err('\\\\\\\\ is an invalid code point.');\\r\\n              }\\r\\n              if (this._scheme === 'file') {\\r\\n                state = 'file host';\\r\\n              } else {\\r\\n                state = 'authority ignore slashes';\\r\\n              }\\r\\n            } else {\\r\\n              if (this._scheme !== 'file') {\\r\\n                this._host = base._host;\\r\\n                this._port = base._port;\\r\\n                this._username = base._username;\\r\\n                this._password = base._password;\\r\\n              }\\r\\n              state = 'relative path';\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'authority first slash':\\r\\n            if (c === '/') {\\r\\n              state = 'authority second slash';\\r\\n            } else {\\r\\n              err('Expected \\\\'/\\\\', got: ' + c);\\r\\n              state = 'authority ignore slashes';\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'authority second slash':\\r\\n            state = 'authority ignore slashes';\\r\\n            if (c !== '/') {\\r\\n              err('Expected \\\\'/\\\\', got: ' + c);\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'authority ignore slashes':\\r\\n            if (c !== '/' && c !== '\\\\\\\\') {\\r\\n              state = 'authority';\\r\\n              continue;\\r\\n            } else {\\r\\n              err('Expected authority, got: ' + c);\\r\\n            }\\r\\n            break;\\r\\n          case 'authority':\\r\\n            if (c === '@') {\\r\\n              if (seenAt) {\\r\\n                err('@ already seen.');\\r\\n                buffer += '%40';\\r\\n              }\\r\\n              seenAt = true;\\r\\n              for (var i = 0; i < buffer.length; i++) {\\r\\n                var cp = buffer[i];\\r\\n                if (cp === '\\\\t' || cp === '\\\\n' || cp === '\\\\r') {\\r\\n                  err('Invalid whitespace in authority.');\\r\\n                  continue;\\r\\n                }\\r\\n                if (cp === ':' && this._password === null) {\\r\\n                  this._password = '';\\r\\n                  continue;\\r\\n                }\\r\\n                var tempC = percentEscape(cp);\\r\\n                if (this._password !== null) {\\r\\n                  this._password += tempC;\\r\\n                } else {\\r\\n                  this._username += tempC;\\r\\n                }\\r\\n              }\\r\\n              buffer = '';\\r\\n            } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\r\\n              cursor -= buffer.length;\\r\\n              buffer = '';\\r\\n              state = 'host';\\r\\n              continue;\\r\\n            } else {\\r\\n              buffer += c;\\r\\n            }\\r\\n            break;\\r\\n          case 'file host':\\r\\n            if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\r\\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\\r\\n                state = 'relative path';\\r\\n              } else if (buffer.length === 0) {\\r\\n                state = 'relative path start';\\r\\n              } else {\\r\\n                this._host = IDNAToASCII.call(this, buffer);\\r\\n                buffer = '';\\r\\n                state = 'relative path start';\\r\\n              }\\r\\n              continue;\\r\\n            } else if (c === '\\\\t' || c === '\\\\n' || c === '\\\\r') {\\r\\n              err('Invalid whitespace in file host.');\\r\\n            } else {\\r\\n              buffer += c;\\r\\n            }\\r\\n            break;\\r\\n          case 'host':\\r\\n          case 'hostname':\\r\\n            if (c === ':' && !seenBracket) {\\r\\n              this._host = IDNAToASCII.call(this, buffer);\\r\\n              buffer = '';\\r\\n              state = 'port';\\r\\n              if (stateOverride === 'hostname') {\\r\\n                break loop;\\r\\n              }\\r\\n            } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#') {\\r\\n              this._host = IDNAToASCII.call(this, buffer);\\r\\n              buffer = '';\\r\\n              state = 'relative path start';\\r\\n              if (stateOverride) {\\r\\n                break loop;\\r\\n              }\\r\\n              continue;\\r\\n            } else if (c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\r\\n              if (c === '[') {\\r\\n                seenBracket = true;\\r\\n              } else if (c === ']') {\\r\\n                seenBracket = false;\\r\\n              }\\r\\n              buffer += c;\\r\\n            } else {\\r\\n              err('Invalid code point in host/hostname: ' + c);\\r\\n            }\\r\\n            break;\\r\\n          case 'port':\\r\\n            if (/[0-9]/.test(c)) {\\r\\n              buffer += c;\\r\\n            } else if (c === EOF || c === '/' || c === '\\\\\\\\' || c === '?' || c === '#' || stateOverride) {\\r\\n              if (buffer !== '') {\\r\\n                var temp = parseInt(buffer, 10);\\r\\n                if (temp !== relative[this._scheme]) {\\r\\n                  this._port = temp + '';\\r\\n                }\\r\\n                buffer = '';\\r\\n              }\\r\\n              if (stateOverride) {\\r\\n                break loop;\\r\\n              }\\r\\n              state = 'relative path start';\\r\\n              continue;\\r\\n            } else if (c === '\\\\t' || c === '\\\\n' || c === '\\\\r') {\\r\\n              err('Invalid code point in port: ' + c);\\r\\n            } else {\\r\\n              invalid.call(this);\\r\\n            }\\r\\n            break;\\r\\n          case 'relative path start':\\r\\n            if (c === '\\\\\\\\') {\\r\\n              err('\\\\'\\\\\\\\\\\\' not allowed in path.');\\r\\n            }\\r\\n            state = 'relative path';\\r\\n            if (c !== '/' && c !== '\\\\\\\\') {\\r\\n              continue;\\r\\n            }\\r\\n            break;\\r\\n          case 'relative path':\\r\\n            if (c === EOF || c === '/' || c === '\\\\\\\\' || !stateOverride && (c === '?' || c === '#')) {\\r\\n              if (c === '\\\\\\\\') {\\r\\n                err('\\\\\\\\ not allowed in relative path.');\\r\\n              }\\r\\n              var tmp;\\r\\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\\r\\n                buffer = tmp;\\r\\n              }\\r\\n              if (buffer === '..') {\\r\\n                this._path.pop();\\r\\n                if (c !== '/' && c !== '\\\\\\\\') {\\r\\n                  this._path.push('');\\r\\n                }\\r\\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\\\\\') {\\r\\n                this._path.push('');\\r\\n              } else if (buffer !== '.') {\\r\\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\\r\\n                  buffer = buffer[0] + ':';\\r\\n                }\\r\\n                this._path.push(buffer);\\r\\n              }\\r\\n              buffer = '';\\r\\n              if (c === '?') {\\r\\n                this._query = '?';\\r\\n                state = 'query';\\r\\n              } else if (c === '#') {\\r\\n                this._fragment = '#';\\r\\n                state = 'fragment';\\r\\n              }\\r\\n            } else if (c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\r\\n              buffer += percentEscape(c);\\r\\n            }\\r\\n            break;\\r\\n          case 'query':\\r\\n            if (!stateOverride && c === '#') {\\r\\n              this._fragment = '#';\\r\\n              state = 'fragment';\\r\\n            } else if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\r\\n              this._query += percentEscapeQuery(c);\\r\\n            }\\r\\n            break;\\r\\n          case 'fragment':\\r\\n            if (c !== EOF && c !== '\\\\t' && c !== '\\\\n' && c !== '\\\\r') {\\r\\n              this._fragment += c;\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        cursor++;\\r\\n      }\\r\\n    }\\r\\n    function clear() {\\r\\n      this._scheme = '';\\r\\n      this._schemeData = '';\\r\\n      this._username = '';\\r\\n      this._password = null;\\r\\n      this._host = '';\\r\\n      this._port = '';\\r\\n      this._path = [];\\r\\n      this._query = '';\\r\\n      this._fragment = '';\\r\\n      this._isInvalid = false;\\r\\n      this._isRelative = false;\\r\\n    }\\r\\n    function JURL(url, base) {\\r\\n      if (base !== undefined && !(base instanceof JURL)) {\\r\\n        base = new JURL(String(base));\\r\\n      }\\r\\n      this._url = url;\\r\\n      clear.call(this);\\r\\n      var input = url.replace(/^[ \\\\t\\\\r\\\\n\\\\f]+|[ \\\\t\\\\r\\\\n\\\\f]+$/g, '');\\r\\n      parse.call(this, input, null, base);\\r\\n    }\\r\\n    JURL.prototype = {\\r\\n      toString: function toString() {\\r\\n        return this.href;\\r\\n      },\\r\\n\\r\\n      get href() {\\r\\n        if (this._isInvalid) {\\r\\n          return this._url;\\r\\n        }\\r\\n        var authority = '';\\r\\n        if (this._username !== '' || this._password !== null) {\\r\\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\\r\\n        }\\r\\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\\r\\n      },\\r\\n      set href(value) {\\r\\n        clear.call(this);\\r\\n        parse.call(this, value);\\r\\n      },\\r\\n      get protocol() {\\r\\n        return this._scheme + ':';\\r\\n      },\\r\\n      set protocol(value) {\\r\\n        if (this._isInvalid) {\\r\\n          return;\\r\\n        }\\r\\n        parse.call(this, value + ':', 'scheme start');\\r\\n      },\\r\\n      get host() {\\r\\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\\r\\n      },\\r\\n      set host(value) {\\r\\n        if (this._isInvalid || !this._isRelative) {\\r\\n          return;\\r\\n        }\\r\\n        parse.call(this, value, 'host');\\r\\n      },\\r\\n      get hostname() {\\r\\n        return this._host;\\r\\n      },\\r\\n      set hostname(value) {\\r\\n        if (this._isInvalid || !this._isRelative) {\\r\\n          return;\\r\\n        }\\r\\n        parse.call(this, value, 'hostname');\\r\\n      },\\r\\n      get port() {\\r\\n        return this._port;\\r\\n      },\\r\\n      set port(value) {\\r\\n        if (this._isInvalid || !this._isRelative) {\\r\\n  \";a.a+=\"        return;\\r\\n        }\\r\\n        parse.call(this, value, 'port');\\r\\n      },\\r\\n      get pathname() {\\r\\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\\r\\n      },\\r\\n      set pathname(value) {\\r\\n        if (this._isInvalid || !this._isRelative) {\\r\\n          return;\\r\\n        }\\r\\n        this._path = [];\\r\\n        parse.call(this, value, 'relative path start');\\r\\n      },\\r\\n      get search() {\\r\\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\\r\\n      },\\r\\n      set search(value) {\\r\\n        if (this._isInvalid || !this._isRelative) {\\r\\n          return;\\r\\n        }\\r\\n        this._query = '?';\\r\\n        if (value[0] === '?') {\\r\\n          value = value.slice(1);\\r\\n        }\\r\\n        parse.call(this, value, 'query');\\r\\n      },\\r\\n      get hash() {\\r\\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\\r\\n      },\\r\\n      set hash(value) {\\r\\n        if (this._isInvalid) {\\r\\n          return;\\r\\n        }\\r\\n        this._fragment = '#';\\r\\n        if (value[0] === '#') {\\r\\n          value = value.slice(1);\\r\\n        }\\r\\n        parse.call(this, value, 'fragment');\\r\\n      },\\r\\n      get origin() {\\r\\n        var host;\\r\\n        if (this._isInvalid || !this._scheme) {\\r\\n          return '';\\r\\n        }\\r\\n        switch (this._scheme) {\\r\\n          case 'data':\\r\\n          case 'file':\\r\\n          case 'javascript':\\r\\n          case 'mailto':\\r\\n            return 'null';\\r\\n          case 'blob':\\r\\n            try {\\r\\n              return new JURL(this._schemeData).origin || 'null';\\r\\n            } catch (_) {}\\r\\n            return 'null';\\r\\n        }\\r\\n        host = this.host;\\r\\n        if (!host) {\\r\\n          return '';\\r\\n        }\\r\\n        return this._scheme + '://' + host;\\r\\n      }\\r\\n    };\\r\\n    var OriginalURL = globalScope.URL;\\r\\n    if (OriginalURL) {\\r\\n      JURL.createObjectURL = function (blob) {\\r\\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\\r\\n      };\\r\\n      JURL.revokeObjectURL = function (url) {\\r\\n        OriginalURL.revokeObjectURL(url);\\r\\n      };\\r\\n    }\\r\\n    globalScope.URL = JURL;\\r\\n  })();\\r\\n}\\r\\n\\r\\n/***/ }),\\r\\n/* 93 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(94);\\r\\nmodule.exports = __w_pdfjs_require__(6).Uint8ClampedArray;\\r\\n\\r\\n/***/ }),\\r\\n/* 94 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(95)('Uint8', 1, function (init) {\\r\\n  return function Uint8ClampedArray(data, byteOffset, length) {\\r\\n    return init(this, data, byteOffset, length);\\r\\n  };\\r\\n}, true);\\r\\n\\r\\n/***/ }),\\r\\n/* 95 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nif (__w_pdfjs_require__(10)) {\\r\\n  var LIBRARY = __w_pdfjs_require__(23);\\r\\n  var global = __w_pdfjs_require__(1);\\r\\n  var fails = __w_pdfjs_require__(11);\\r\\n  var $export = __w_pdfjs_require__(7);\\r\\n  var $typed = __w_pdfjs_require__(52);\\r\\n  var $buffer = __w_pdfjs_require__(96);\\r\\n  var ctx = __w_pdfjs_require__(13);\\r\\n  var anInstance = __w_pdfjs_require__(26);\\r\\n  var propertyDesc = __w_pdfjs_require__(31);\\r\\n  var hide = __w_pdfjs_require__(8);\\r\\n  var redefineAll = __w_pdfjs_require__(25);\\r\\n  var toInteger = __w_pdfjs_require__(19);\\r\\n  var toLength = __w_pdfjs_require__(14);\\r\\n  var toIndex = __w_pdfjs_require__(53);\\r\\n  var toAbsoluteIndex = __w_pdfjs_require__(33);\\r\\n  var toPrimitive = __w_pdfjs_require__(38);\\r\\n  var has = __w_pdfjs_require__(12);\\r\\n  var classof = __w_pdfjs_require__(34);\\r\\n  var isObject = __w_pdfjs_require__(3);\\r\\n  var toObject = __w_pdfjs_require__(20);\\r\\n  var isArrayIter = __w_pdfjs_require__(59);\\r\\n  var create = __w_pdfjs_require__(60);\\r\\n  var getPrototypeOf = __w_pdfjs_require__(62);\\r\\n  var gOPN = __w_pdfjs_require__(54).f;\\r\\n  var getIterFn = __w_pdfjs_require__(63);\\r\\n  var uid = __w_pdfjs_require__(18);\\r\\n  var wks = __w_pdfjs_require__(4);\\r\\n  var createArrayMethod = __w_pdfjs_require__(44);\\r\\n  var createArrayIncludes = __w_pdfjs_require__(56);\\r\\n  var speciesConstructor = __w_pdfjs_require__(45);\\r\\n  var ArrayIterators = __w_pdfjs_require__(64);\\r\\n  var Iterators = __w_pdfjs_require__(21);\\r\\n  var $iterDetect = __w_pdfjs_require__(46);\\r\\n  var setSpecies = __w_pdfjs_require__(66);\\r\\n  var arrayFill = __w_pdfjs_require__(58);\\r\\n  var arrayCopyWithin = __w_pdfjs_require__(104);\\r\\n  var $DP = __w_pdfjs_require__(15);\\r\\n  var $GOPD = __w_pdfjs_require__(67);\\r\\n  var dP = $DP.f;\\r\\n  var gOPD = $GOPD.f;\\r\\n  var RangeError = global.RangeError;\\r\\n  var TypeError = global.TypeError;\\r\\n  var Uint8Array = global.Uint8Array;\\r\\n  var ARRAY_BUFFER = 'ArrayBuffer';\\r\\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\\r\\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\\r\\n  var PROTOTYPE = 'prototype';\\r\\n  var ArrayProto = Array[PROTOTYPE];\\r\\n  var $ArrayBuffer = $buffer.ArrayBuffer;\\r\\n  var $DataView = $buffer.DataView;\\r\\n  var arrayForEach = createArrayMethod(0);\\r\\n  var arrayFilter = createArrayMethod(2);\\r\\n  var arraySome = createArrayMethod(3);\\r\\n  var arrayEvery = createArrayMethod(4);\\r\\n  var arrayFind = createArrayMethod(5);\\r\\n  var arrayFindIndex = createArrayMethod(6);\\r\\n  var arrayIncludes = createArrayIncludes(true);\\r\\n  var arrayIndexOf = createArrayIncludes(false);\\r\\n  var arrayValues = ArrayIterators.values;\\r\\n  var arrayKeys = ArrayIterators.keys;\\r\\n  var arrayEntries = ArrayIterators.entries;\\r\\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\\r\\n  var arrayReduce = ArrayProto.reduce;\\r\\n  var arrayReduceRight = ArrayProto.reduceRight;\\r\\n  var arrayJoin = ArrayProto.join;\\r\\n  var arraySort = ArrayProto.sort;\\r\\n  var arraySlice = ArrayProto.slice;\\r\\n  var arrayToString = ArrayProto.toString;\\r\\n  var arrayToLocaleString = ArrayProto.toLocaleString;\\r\\n  var ITERATOR = wks('iterator');\\r\\n  var TAG = wks('toStringTag');\\r\\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\\r\\n  var DEF_CONSTRUCTOR = uid('def_constructor');\\r\\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\\r\\n  var TYPED_ARRAY = $typed.TYPED;\\r\\n  var VIEW = $typed.VIEW;\\r\\n  var WRONG_LENGTH = 'Wrong length!';\\r\\n  var $map = createArrayMethod(1, function (O, length) {\\r\\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\\r\\n  });\\r\\n  var LITTLE_ENDIAN = fails(function () {\\r\\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\\r\\n  });\\r\\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\\r\\n    new Uint8Array(1).set({});\\r\\n  });\\r\\n  var toOffset = function toOffset(it, BYTES) {\\r\\n    var offset = toInteger(it);\\r\\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\\r\\n    return offset;\\r\\n  };\\r\\n  var validate = function validate(it) {\\r\\n    if (isObject(it) && TYPED_ARRAY in it) return it;\\r\\n    throw TypeError(it + ' is not a typed array!');\\r\\n  };\\r\\n  var allocate = function allocate(C, length) {\\r\\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\\r\\n      throw TypeError('It is not a typed array constructor!');\\r\\n    }\\r\\n    return new C(length);\\r\\n  };\\r\\n  var speciesFromList = function speciesFromList(O, list) {\\r\\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\\r\\n  };\\r\\n  var fromList = function fromList(C, list) {\\r\\n    var index = 0;\\r\\n    var length = list.length;\\r\\n    var result = allocate(C, length);\\r\\n    while (length > index) {\\r\\n      result[index] = list[index++];\\r\\n    }return result;\\r\\n  };\\r\\n  var addGetter = function addGetter(it, key, internal) {\\r\\n    dP(it, key, {\\r\\n      get: function get() {\\r\\n        return this._d[internal];\\r\\n      }\\r\\n    });\\r\\n  };\\r\\n  var $from = function from(source) {\\r\\n    var O = toObject(source);\\r\\n    var aLen = arguments.length;\\r\\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\\r\\n    var mapping = mapfn !== undefined;\\r\\n    var iterFn = getIterFn(O);\\r\\n    var i, length, values, result, step, iterator;\\r\\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\\r\\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\\r\\n        values.push(step.value);\\r\\n      }\\r\\n      O = values;\\r\\n    }\\r\\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\\r\\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\\r\\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\\r\\n    }\\r\\n    return result;\\r\\n  };\\r\\n  var $of = function of() {\\r\\n    var index = 0;\\r\\n    var length = arguments.length;\\r\\n    var result = allocate(this, length);\\r\\n    while (length > index) {\\r\\n      result[index] = arguments[index++];\\r\\n    }return result;\\r\\n  };\\r\\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {\\r\\n    arrayToLocaleString.call(new Uint8Array(1));\\r\\n  });\\r\\n  var $toLocaleString = function toLocaleString() {\\r\\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\\r\\n  };\\r\\n  var proto = {\\r\\n    copyWithin: function copyWithin(target, start) {\\r\\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\\r\\n    },\\r\\n    every: function every(callbackfn) {\\r\\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    fill: function fill(value) {\\r\\n      return arrayFill.apply(validate(this), arguments);\\r\\n    },\\r\\n    filter: function filter(callbackfn) {\\r\\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));\\r\\n    },\\r\\n    find: function find(predicate) {\\r\\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    findIndex: function findIndex(predicate) {\\r\\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    forEach: function forEach(callbackfn) {\\r\\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    indexOf: function indexOf(searchElement) {\\r\\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    includes: function includes(searchElement) {\\r\\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    join: function join(separator) {\\r\\n      return arrayJoin.apply(validate(this), arguments);\\r\\n    },\\r\\n    lastIndexOf: function lastIndexOf(searchElement) {\\r\\n      return arrayLastIndexOf.apply(validate(this), arguments);\\r\\n    },\\r\\n    map: function map(mapfn) {\\r\\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    reduce: function reduce(callbackfn) {\\r\\n      return arrayReduce.apply(validate(this), arguments);\\r\\n    },\\r\\n    reduceRight: function reduceRight(callbackfn) {\\r\\n      return arrayReduceRight.apply(validate(this), arguments);\\r\\n    },\\r\\n    reverse: function reverse() {\\r\\n      var that = this;\\r\\n      var length = validate(that).length;\\r\\n      var middle = Math.floor(length / 2);\\r\\n      var index = 0;\\r\\n      var value;\\r\\n      while (index < middle) {\\r\\n        value = that[index];\\r\\n        that[index++] = that[--length];\\r\\n        that[length] = value;\\r\\n      }\\r\\n      return that;\\r\\n    },\\r\\n    some: function some(callbackfn) {\\r\\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\\r\\n    },\\r\\n    sort: function sort(comparefn) {\\r\\n      return arraySort.call(validate(this), comparefn);\\r\\n    },\\r\\n    subarray: function subarray(begin, end) {\\r\\n      var O = validate(this);\\r\\n      var length = O.length;\\r\\n      var $begin = toAbsoluteIndex(begin, length);\\r\\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));\\r\\n    }\\r\\n  };\\r\\n  var $slice = function slice(start, end) {\\r\\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\\r\\n  };\\r\\n  var $set = function set(arrayLike) {\\r\\n    validate(this);\\r\\n    var offset = toOffset(arguments[1], 1);\\r\\n    var length = this.length;\\r\\n    var src = toObject(arrayLike);\\r\\n    var len = toLength(src.length);\\r\\n    var index = 0;\\r\\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\\r\\n    while (index < len) {\\r\\n      this[offset + index] = src[index++];\\r\\n    }\\r\\n  };\\r\\n  var $iterators = {\\r\\n    entries: function entries() {\\r\\n      return arrayEntries.call(validate(this));\\r\\n    },\\r\\n    keys: function keys() {\\r\\n      return arrayKeys.call(validate(this));\\r\\n    },\\r\\n    values: function values() {\\r\\n      return arrayValues.call(validate(this));\\r\\n    }\\r\\n  };\\r\\n  var isTAIndex = function isTAIndex(target, key) {\\r\\n    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);\\r\\n  };\\r\\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\\r\\n    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);\\r\\n  };\\r\\n  var $setDesc = function defineProperty(target, key, desc) {\\r\\n    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {\\r\\n      target[key] = desc.value;\\r\\n      return target;\\r\\n    }\\r\\n    return dP(target, key, desc);\\r\\n  };\\r\\n  if (!ALL_CONSTRUCTORS) {\\r\\n    $GOPD.f = $getDesc;\\r\\n    $DP.f = $setDesc;\\r\\n  }\\r\\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\\r\\n    getOwnPropertyDescriptor: $getDesc,\\r\\n    defineProperty: $setDesc\\r\\n  });\\r\\n  if (fails(function () {\\r\\n    arrayToString.call({});\\r\\n  })) {\\r\\n    arrayToString = arrayToLocaleString = function toString() {\\r\\n      return arrayJoin.call(this);\\r\\n    };\\r\\n  }\\r\\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\\r\\n  redefineAll($TypedArrayPrototype$, $iterators);\\r\\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\\r\\n  redefineAll($TypedArrayPrototype$, {\\r\\n    slice: $slice,\\r\\n    set: $set,\\r\\n    constructor: function constructor() {},\\r\\n    toString: arrayToString,\\r\\n    toLocaleString: $toLocaleString\\r\\n  });\\r\\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\\r\\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\\r\\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\\r\\n  addGetter($TypedArrayPrototype$, 'length', 'e');\\r\\n  dP($TypedArrayPrototype$, TAG, {\\r\\n    get: function get() {\\r\\n      return this[TYPED_ARRAY];\\r\\n    }\\r\\n  });\\r\\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\\r\\n    CLAMPED = !!CLAMPED;\\r\\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\\r\\n    var GETTER = 'get' + KEY;\\r\\n    var SETTER = 'set' + KEY;\\r\\n    var TypedArray = global[NAME];\\r\\n    var Base = TypedArray || {};\\r\\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\\r\\n    var FORCED = !TypedArray || !$typed.ABV;\\r\\n    var O = {};\\r\\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\\r\\n    var getter = function getter(that, index) {\\r\\n      var data = that._d;\\r\\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\\r\\n    };\\r\\n    var setter = function setter(that, index, value) {\\r\\n      var data = that._d;\\r\\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\\r\\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\\r\\n    };\\r\\n    var addElement = function addElement(that, index) {\\r\\n      dP(that, index, {\\r\\n        get: function get() {\\r\\n          return getter(this, index);\\r\\n        },\\r\\n        set: function set(value) {\\r\\n          return setter(this, index, value);\\r\\n        },\\r\\n        enumerable: true\\r\\n      });\\r\\n    };\\r\\n    if (FORCED) {\\r\\n      TypedArray = wrapper(function (that, data, $offset, $length) {\\r\\n        anInstance(that, TypedArray, NAME, '_d');\\r\\n        var index = 0;\\r\\n        var offset = 0;\\r\\n        var buffer, byteLength, length, klass;\\r\\n        if (!isObject(data)) {\\r\\n          length = toIndex(data);\\r\\n          byteLength = length * BYTES;\\r\\n          buffer = new $ArrayBuffer(byteLength);\\r\\n        } else if (data instanceof $ArrayBuffer || (\";a.a+=\"klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\\r\\n          buffer = data;\\r\\n          offset = toOffset($offset, BYTES);\\r\\n          var $len = data.byteLength;\\r\\n          if ($length === undefined) {\\r\\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\\r\\n            byteLength = $len - offset;\\r\\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\\r\\n          } else {\\r\\n            byteLength = toLength($length) * BYTES;\\r\\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\\r\\n          }\\r\\n          length = byteLength / BYTES;\\r\\n        } else if (TYPED_ARRAY in data) {\\r\\n          return fromList(TypedArray, data);\\r\\n        } else {\\r\\n          return $from.call(TypedArray, data);\\r\\n        }\\r\\n        hide(that, '_d', {\\r\\n          b: buffer,\\r\\n          o: offset,\\r\\n          l: byteLength,\\r\\n          e: length,\\r\\n          v: new $DataView(buffer)\\r\\n        });\\r\\n        while (index < length) {\\r\\n          addElement(that, index++);\\r\\n        }\\r\\n      });\\r\\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\\r\\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\\r\\n    } else if (!fails(function () {\\r\\n      TypedArray(1);\\r\\n    }) || !fails(function () {\\r\\n      new TypedArray(-1);\\r\\n    }) || !$iterDetect(function (iter) {\\r\\n      new TypedArray();\\r\\n      new TypedArray(null);\\r\\n      new TypedArray(1.5);\\r\\n      new TypedArray(iter);\\r\\n    }, true)) {\\r\\n      TypedArray = wrapper(function (that, data, $offset, $length) {\\r\\n        anInstance(that, TypedArray, NAME);\\r\\n        var klass;\\r\\n        if (!isObject(data)) return new Base(toIndex(data));\\r\\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\\r\\n          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);\\r\\n        }\\r\\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\\r\\n        return $from.call(TypedArray, data);\\r\\n      });\\r\\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\\r\\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\\r\\n      });\\r\\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\\r\\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\\r\\n    }\\r\\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\\r\\n    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\\r\\n    var $iterator = $iterators.values;\\r\\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\\r\\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\\r\\n    hide(TypedArrayPrototype, VIEW, true);\\r\\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\\r\\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\\r\\n      dP(TypedArrayPrototype, TAG, {\\r\\n        get: function get() {\\r\\n          return NAME;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n    O[NAME] = TypedArray;\\r\\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\\r\\n    $export($export.S, NAME, { BYTES_PER_ELEMENT: BYTES });\\r\\n    $export($export.S + $export.F * fails(function () {\\r\\n      Base.of.call(TypedArray, 1);\\r\\n    }), NAME, {\\r\\n      from: $from,\\r\\n      of: $of\\r\\n    });\\r\\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\\r\\n    $export($export.P, NAME, proto);\\r\\n    setSpecies(NAME);\\r\\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\\r\\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\\r\\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\\r\\n    $export($export.P + $export.F * fails(function () {\\r\\n      new TypedArray(1).slice();\\r\\n    }), NAME, { slice: $slice });\\r\\n    $export($export.P + $export.F * (fails(function () {\\r\\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\\r\\n    }) || !fails(function () {\\r\\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\\r\\n    })), NAME, { toLocaleString: $toLocaleString });\\r\\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\\r\\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\\r\\n  };\\r\\n} else module.exports = function () {};\\r\\n\\r\\n/***/ }),\\r\\n/* 96 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar DESCRIPTORS = __w_pdfjs_require__(10);\\r\\nvar LIBRARY = __w_pdfjs_require__(23);\\r\\nvar $typed = __w_pdfjs_require__(52);\\r\\nvar hide = __w_pdfjs_require__(8);\\r\\nvar redefineAll = __w_pdfjs_require__(25);\\r\\nvar fails = __w_pdfjs_require__(11);\\r\\nvar anInstance = __w_pdfjs_require__(26);\\r\\nvar toInteger = __w_pdfjs_require__(19);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nvar toIndex = __w_pdfjs_require__(53);\\r\\nvar gOPN = __w_pdfjs_require__(54).f;\\r\\nvar dP = __w_pdfjs_require__(15).f;\\r\\nvar arrayFill = __w_pdfjs_require__(58);\\r\\nvar setToStringTag = __w_pdfjs_require__(28);\\r\\nvar ARRAY_BUFFER = 'ArrayBuffer';\\r\\nvar DATA_VIEW = 'DataView';\\r\\nvar PROTOTYPE = 'prototype';\\r\\nvar WRONG_LENGTH = 'Wrong length!';\\r\\nvar WRONG_INDEX = 'Wrong index!';\\r\\nvar $ArrayBuffer = global[ARRAY_BUFFER];\\r\\nvar $DataView = global[DATA_VIEW];\\r\\nvar Math = global.Math;\\r\\nvar RangeError = global.RangeError;\\r\\nvar Infinity = global.Infinity;\\r\\nvar BaseBuffer = $ArrayBuffer;\\r\\nvar abs = Math.abs;\\r\\nvar pow = Math.pow;\\r\\nvar floor = Math.floor;\\r\\nvar log = Math.log;\\r\\nvar LN2 = Math.LN2;\\r\\nvar BUFFER = 'buffer';\\r\\nvar BYTE_LENGTH = 'byteLength';\\r\\nvar BYTE_OFFSET = 'byteOffset';\\r\\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\\r\\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\\r\\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\\r\\nfunction packIEEE754(value, mLen, nBytes) {\\r\\n  var buffer = new Array(nBytes);\\r\\n  var eLen = nBytes * 8 - mLen - 1;\\r\\n  var eMax = (1 << eLen) - 1;\\r\\n  var eBias = eMax >> 1;\\r\\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\\r\\n  var i = 0;\\r\\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\\r\\n  var e, m, c;\\r\\n  value = abs(value);\\r\\n  if (value != value || value === Infinity) {\\r\\n    m = value != value ? 1 : 0;\\r\\n    e = eMax;\\r\\n  } else {\\r\\n    e = floor(log(value) / LN2);\\r\\n    if (value * (c = pow(2, -e)) < 1) {\\r\\n      e--;\\r\\n      c *= 2;\\r\\n    }\\r\\n    if (e + eBias >= 1) {\\r\\n      value += rt / c;\\r\\n    } else {\\r\\n      value += rt * pow(2, 1 - eBias);\\r\\n    }\\r\\n    if (value * c >= 2) {\\r\\n      e++;\\r\\n      c /= 2;\\r\\n    }\\r\\n    if (e + eBias >= eMax) {\\r\\n      m = 0;\\r\\n      e = eMax;\\r\\n    } else if (e + eBias >= 1) {\\r\\n      m = (value * c - 1) * pow(2, mLen);\\r\\n      e = e + eBias;\\r\\n    } else {\\r\\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\\r\\n      e = 0;\\r\\n    }\\r\\n  }\\r\\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}\\r\\n  e = e << mLen | m;\\r\\n  eLen += mLen;\\r\\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}\\r\\n  buffer[--i] |= s * 128;\\r\\n  return buffer;\\r\\n}\\r\\nfunction unpackIEEE754(buffer, mLen, nBytes) {\\r\\n  var eLen = nBytes * 8 - mLen - 1;\\r\\n  var eMax = (1 << eLen) - 1;\\r\\n  var eBias = eMax >> 1;\\r\\n  var nBits = eLen - 7;\\r\\n  var i = nBytes - 1;\\r\\n  var s = buffer[i--];\\r\\n  var e = s & 127;\\r\\n  var m;\\r\\n  s >>= 7;\\r\\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}\\r\\n  m = e & (1 << -nBits) - 1;\\r\\n  e >>= -nBits;\\r\\n  nBits += mLen;\\r\\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}\\r\\n  if (e === 0) {\\r\\n    e = 1 - eBias;\\r\\n  } else if (e === eMax) {\\r\\n    return m ? NaN : s ? -Infinity : Infinity;\\r\\n  } else {\\r\\n    m = m + pow(2, mLen);\\r\\n    e = e - eBias;\\r\\n  }\\r\\n  return (s ? -1 : 1) * m * pow(2, e - mLen);\\r\\n}\\r\\nfunction unpackI32(bytes) {\\r\\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\\r\\n}\\r\\nfunction packI8(it) {\\r\\n  return [it & 0xff];\\r\\n}\\r\\nfunction packI16(it) {\\r\\n  return [it & 0xff, it >> 8 & 0xff];\\r\\n}\\r\\nfunction packI32(it) {\\r\\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\\r\\n}\\r\\nfunction packF64(it) {\\r\\n  return packIEEE754(it, 52, 8);\\r\\n}\\r\\nfunction packF32(it) {\\r\\n  return packIEEE754(it, 23, 4);\\r\\n}\\r\\nfunction addGetter(C, key, internal) {\\r\\n  dP(C[PROTOTYPE], key, {\\r\\n    get: function get() {\\r\\n      return this[internal];\\r\\n    }\\r\\n  });\\r\\n}\\r\\nfunction get(view, bytes, index, isLittleEndian) {\\r\\n  var numIndex = +index;\\r\\n  var intIndex = toIndex(numIndex);\\r\\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\\r\\n  var store = view[$BUFFER]._b;\\r\\n  var start = intIndex + view[$OFFSET];\\r\\n  var pack = store.slice(start, start + bytes);\\r\\n  return isLittleEndian ? pack : pack.reverse();\\r\\n}\\r\\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\\r\\n  var numIndex = +index;\\r\\n  var intIndex = toIndex(numIndex);\\r\\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\\r\\n  var store = view[$BUFFER]._b;\\r\\n  var start = intIndex + view[$OFFSET];\\r\\n  var pack = conversion(+value);\\r\\n  for (var i = 0; i < bytes; i++) {\\r\\n    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\\r\\n  }\\r\\n}\\r\\nif (!$typed.ABV) {\\r\\n  $ArrayBuffer = function ArrayBuffer(length) {\\r\\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\\r\\n    var byteLength = toIndex(length);\\r\\n    this._b = arrayFill.call(new Array(byteLength), 0);\\r\\n    this[$LENGTH] = byteLength;\\r\\n  };\\r\\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\\r\\n    anInstance(this, $DataView, DATA_VIEW);\\r\\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\\r\\n    var bufferLength = buffer[$LENGTH];\\r\\n    var offset = toInteger(byteOffset);\\r\\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\\r\\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\\r\\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\\r\\n    this[$BUFFER] = buffer;\\r\\n    this[$OFFSET] = offset;\\r\\n    this[$LENGTH] = byteLength;\\r\\n  };\\r\\n  if (DESCRIPTORS) {\\r\\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\\r\\n    addGetter($DataView, BUFFER, '_b');\\r\\n    addGetter($DataView, BYTE_LENGTH, '_l');\\r\\n    addGetter($DataView, BYTE_OFFSET, '_o');\\r\\n  }\\r\\n  redefineAll($DataView[PROTOTYPE], {\\r\\n    getInt8: function getInt8(byteOffset) {\\r\\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\\r\\n    },\\r\\n    getUint8: function getUint8(byteOffset) {\\r\\n      return get(this, 1, byteOffset)[0];\\r\\n    },\\r\\n    getInt16: function getInt16(byteOffset) {\\r\\n      var bytes = get(this, 2, byteOffset, arguments[1]);\\r\\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\\r\\n    },\\r\\n    getUint16: function getUint16(byteOffset) {\\r\\n      var bytes = get(this, 2, byteOffset, arguments[1]);\\r\\n      return bytes[1] << 8 | bytes[0];\\r\\n    },\\r\\n    getInt32: function getInt32(byteOffset) {\\r\\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\\r\\n    },\\r\\n    getUint32: function getUint32(byteOffset) {\\r\\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\\r\\n    },\\r\\n    getFloat32: function getFloat32(byteOffset) {\\r\\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\\r\\n    },\\r\\n    getFloat64: function getFloat64(byteOffset) {\\r\\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\\r\\n    },\\r\\n    setInt8: function setInt8(byteOffset, value) {\\r\\n      set(this, 1, byteOffset, packI8, value);\\r\\n    },\\r\\n    setUint8: function setUint8(byteOffset, value) {\\r\\n      set(this, 1, byteOffset, packI8, value);\\r\\n    },\\r\\n    setInt16: function setInt16(byteOffset, value) {\\r\\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\\r\\n    },\\r\\n    setUint16: function setUint16(byteOffset, value) {\\r\\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\\r\\n    },\\r\\n    setInt32: function setInt32(byteOffset, value) {\\r\\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\\r\\n    },\\r\\n    setUint32: function setUint32(byteOffset, value) {\\r\\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\\r\\n    },\\r\\n    setFloat32: function setFloat32(byteOffset, value) {\\r\\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\\r\\n    },\\r\\n    setFloat64: function setFloat64(byteOffset, value) {\\r\\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\\r\\n    }\\r\\n  });\\r\\n} else {\\r\\n  if (!fails(function () {\\r\\n    $ArrayBuffer(1);\\r\\n  }) || !fails(function () {\\r\\n    new $ArrayBuffer(-1);\\r\\n  }) || fails(function () {\\r\\n    new $ArrayBuffer();\\r\\n    new $ArrayBuffer(1.5);\\r\\n    new $ArrayBuffer(NaN);\\r\\n    return $ArrayBuffer.name != ARRAY_BUFFER;\\r\\n  })) {\\r\\n    $ArrayBuffer = function ArrayBuffer(length) {\\r\\n      anInstance(this, $ArrayBuffer);\\r\\n      return new BaseBuffer(toIndex(length));\\r\\n    };\\r\\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\\r\\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\\r\\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\\r\\n    }\\r\\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\\r\\n  }\\r\\n  var view = new $DataView(new $ArrayBuffer(2));\\r\\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\\r\\n  view.setInt8(0, 2147483648);\\r\\n  view.setInt8(1, 2147483649);\\r\\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\\r\\n    setInt8: function setInt8(byteOffset, value) {\\r\\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\\r\\n    },\\r\\n    setUint8: function setUint8(byteOffset, value) {\\r\\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\\r\\n    }\\r\\n  }, true);\\r\\n}\\r\\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\\r\\nsetToStringTag($DataView, DATA_VIEW);\\r\\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\\r\\nexports[ARRAY_BUFFER] = $ArrayBuffer;\\r\\nexports[DATA_VIEW] = $DataView;\\r\\n\\r\\n/***/ }),\\r\\n/* 97 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar dP = __w_pdfjs_require__(15);\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar getKeys = __w_pdfjs_require__(43);\\r\\nmodule.exports = __w_pdfjs_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {\\r\\n  anObject(O);\\r\\n  var keys = getKeys(Properties);\\r\\n  var length = keys.length;\\r\\n  var i = 0;\\r\\n  var P;\\r\\n  while (length > i) {\\r\\n    dP.f(O, P = keys[i++], Properties[P]);\\r\\n  }return O;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 98 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar speciesConstructor = __w_pdfjs_require__(99);\\r\\nmodule.exports = function (original, length) {\\r\\n  return new (speciesConstructor(original))(length);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 99 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar isArray = __w_pdfjs_require__(100);\\r\\nvar SPECIES = __w_pdfjs_require__(4)('species');\\r\\nmodule.exports = function (original) {\\r\\n  var C;\\r\\n  if (isArray(original)) {\\r\\n    C = original.constructor;\\r\\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\\r\\n    if (isObject(C)) {\\r\\n      C = C[SPECIES];\\r\\n      if (C === null) C = undefined;\\r\\n    }\\r\\n  }\\r\\n  return C === undefined ? Array : C;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 100 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar cof = __w_pdfjs_require__(27);\\r\\nmodule.exports = Array.isArray || function isArray(arg) {\\r\\n  return cof(arg) == 'Array';\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 101 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\\r\\nvar ArrayProto = Array.prototype;\\r\\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(8)(ArrayProto, UNSCOPABLES, {});\\r\\nmodule.exports = function (key) {\\r\\n  ArrayProto[UNSCOPABLES][key] = true;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 102 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (done, value) {\\r\\n  return {\\r\\n    value: value,\\r\\n    done: !!done\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 103 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar create = __w_pdfjs_require__(60);\\r\\nvar descriptor = __w_pdfjs_require__(31);\\r\\nvar setToStringTag = __w_pdfjs_require__(28);\\r\\nvar IteratorPrototype = {};\\r\\n__w_pdfjs_require__(8)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\\r\\n  return this;\\r\\n});\\r\\nmodule.exports = function (Constructor, NAME, next) {\\r\\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\\r\\n  setToStringTag(Constructor, NAME + ' Iterator');\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 104\";a.a+=\" */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toObject = __w_pdfjs_require__(20);\\r\\nvar toAbsoluteIndex = __w_pdfjs_require__(33);\\r\\nvar toLength = __w_pdfjs_require__(14);\\r\\nmodule.exports = [].copyWithin || function copyWithin(target, start) {\\r\\n  var O = toObject(this);\\r\\n  var len = toLength(O.length);\\r\\n  var to = toAbsoluteIndex(target, len);\\r\\n  var from = toAbsoluteIndex(start, len);\\r\\n  var end = arguments.length > 2 ? arguments[2] : undefined;\\r\\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\\r\\n  var inc = 1;\\r\\n  if (from < to && to < from + count) {\\r\\n    inc = -1;\\r\\n    from += count - 1;\\r\\n    to += count - 1;\\r\\n  }\\r\\n  while (count-- > 0) {\\r\\n    if (from in O) O[to] = O[from];else delete O[to];\\r\\n    to += inc;\\r\\n    from += inc;\\r\\n  }\\r\\n  return O;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 105 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(106);\\r\\nmodule.exports = __w_pdfjs_require__(6).Number.isNaN;\\r\\n\\r\\n/***/ }),\\r\\n/* 106 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\n$export($export.S, 'Number', {\\r\\n  isNaN: function isNaN(number) {\\r\\n    return number != number;\\r\\n  }\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 107 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(108);\\r\\nmodule.exports = __w_pdfjs_require__(6).Number.isInteger;\\r\\n\\r\\n/***/ }),\\r\\n/* 108 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(109) });\\r\\n\\r\\n/***/ }),\\r\\n/* 109 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar floor = Math.floor;\\r\\nmodule.exports = function isInteger(it) {\\r\\n  return !isObject(it) && isFinite(it) && floor(it) === it;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 110 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(69);\\r\\n__w_pdfjs_require__(111);\\r\\n__w_pdfjs_require__(70);\\r\\n__w_pdfjs_require__(113);\\r\\n__w_pdfjs_require__(118);\\r\\n__w_pdfjs_require__(119);\\r\\nmodule.exports = __w_pdfjs_require__(6).Promise;\\r\\n\\r\\n/***/ }),\\r\\n/* 111 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $at = __w_pdfjs_require__(112)(true);\\r\\n__w_pdfjs_require__(65)(String, 'String', function (iterated) {\\r\\n  this._t = String(iterated);\\r\\n  this._i = 0;\\r\\n}, function () {\\r\\n  var O = this._t;\\r\\n  var index = this._i;\\r\\n  var point;\\r\\n  if (index >= O.length) return {\\r\\n    value: undefined,\\r\\n    done: true\\r\\n  };\\r\\n  point = $at(O, index);\\r\\n  this._i += point.length;\\r\\n  return {\\r\\n    value: point,\\r\\n    done: false\\r\\n  };\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 112 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar toInteger = __w_pdfjs_require__(19);\\r\\nvar defined = __w_pdfjs_require__(40);\\r\\nmodule.exports = function (TO_STRING) {\\r\\n  return function (that, pos) {\\r\\n    var s = String(defined(that));\\r\\n    var i = toInteger(pos);\\r\\n    var l = s.length;\\r\\n    var a, b;\\r\\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\\r\\n    a = s.charCodeAt(i);\\r\\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 113 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar LIBRARY = __w_pdfjs_require__(23);\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar ctx = __w_pdfjs_require__(13);\\r\\nvar classof = __w_pdfjs_require__(34);\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar aFunction = __w_pdfjs_require__(24);\\r\\nvar anInstance = __w_pdfjs_require__(26);\\r\\nvar forOf = __w_pdfjs_require__(35);\\r\\nvar speciesConstructor = __w_pdfjs_require__(45);\\r\\nvar task = __w_pdfjs_require__(71).set;\\r\\nvar microtask = __w_pdfjs_require__(116)();\\r\\nvar newPromiseCapabilityModule = __w_pdfjs_require__(47);\\r\\nvar perform = __w_pdfjs_require__(72);\\r\\nvar userAgent = __w_pdfjs_require__(117);\\r\\nvar promiseResolve = __w_pdfjs_require__(73);\\r\\nvar PROMISE = 'Promise';\\r\\nvar TypeError = global.TypeError;\\r\\nvar process = global.process;\\r\\nvar versions = process && process.versions;\\r\\nvar v8 = versions && versions.v8 || '';\\r\\nvar $Promise = global[PROMISE];\\r\\nvar isNode = classof(process) == 'process';\\r\\nvar empty = function empty() {};\\r\\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\\r\\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\\r\\nvar USE_NATIVE = !!function () {\\r\\n  try {\\r\\n    var promise = $Promise.resolve(1);\\r\\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\\r\\n      exec(empty, empty);\\r\\n    };\\r\\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\\r\\n  } catch (e) {}\\r\\n}();\\r\\nvar isThenable = function isThenable(it) {\\r\\n  var then;\\r\\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\\r\\n};\\r\\nvar notify = function notify(promise, isReject) {\\r\\n  if (promise._n) return;\\r\\n  promise._n = true;\\r\\n  var chain = promise._c;\\r\\n  microtask(function () {\\r\\n    var value = promise._v;\\r\\n    var ok = promise._s == 1;\\r\\n    var i = 0;\\r\\n    var run = function run(reaction) {\\r\\n      var handler = ok ? reaction.ok : reaction.fail;\\r\\n      var resolve = reaction.resolve;\\r\\n      var reject = reaction.reject;\\r\\n      var domain = reaction.domain;\\r\\n      var result, then, exited;\\r\\n      try {\\r\\n        if (handler) {\\r\\n          if (!ok) {\\r\\n            if (promise._h == 2) onHandleUnhandled(promise);\\r\\n            promise._h = 1;\\r\\n          }\\r\\n          if (handler === true) result = value;else {\\r\\n            if (domain) domain.enter();\\r\\n            result = handler(value);\\r\\n            if (domain) {\\r\\n              domain.exit();\\r\\n              exited = true;\\r\\n            }\\r\\n          }\\r\\n          if (result === reaction.promise) {\\r\\n            reject(TypeError('Promise-chain cycle'));\\r\\n          } else if (then = isThenable(result)) {\\r\\n            then.call(result, resolve, reject);\\r\\n          } else resolve(result);\\r\\n        } else reject(value);\\r\\n      } catch (e) {\\r\\n        if (domain && !exited) domain.exit();\\r\\n        reject(e);\\r\\n      }\\r\\n    };\\r\\n    while (chain.length > i) {\\r\\n      run(chain[i++]);\\r\\n    }promise._c = [];\\r\\n    promise._n = false;\\r\\n    if (isReject && !promise._h) onUnhandled(promise);\\r\\n  });\\r\\n};\\r\\nvar onUnhandled = function onUnhandled(promise) {\\r\\n  task.call(global, function () {\\r\\n    var value = promise._v;\\r\\n    var unhandled = isUnhandled(promise);\\r\\n    var result, handler, console;\\r\\n    if (unhandled) {\\r\\n      result = perform(function () {\\r\\n        if (isNode) {\\r\\n          process.emit('unhandledRejection', value, promise);\\r\\n        } else if (handler = global.onunhandledrejection) {\\r\\n          handler({\\r\\n            promise: promise,\\r\\n            reason: value\\r\\n          });\\r\\n        } else if ((console = global.console) && console.error) {\\r\\n          console.error('Unhandled promise rejection', value);\\r\\n        }\\r\\n      });\\r\\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\\r\\n    }\\r\\n    promise._a = undefined;\\r\\n    if (unhandled && result.e) throw result.v;\\r\\n  });\\r\\n};\\r\\nvar isUnhandled = function isUnhandled(promise) {\\r\\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\\r\\n};\\r\\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\\r\\n  task.call(global, function () {\\r\\n    var handler;\\r\\n    if (isNode) {\\r\\n      process.emit('rejectionHandled', promise);\\r\\n    } else if (handler = global.onrejectionhandled) {\\r\\n      handler({\\r\\n        promise: promise,\\r\\n        reason: promise._v\\r\\n      });\\r\\n    }\\r\\n  });\\r\\n};\\r\\nvar $reject = function $reject(value) {\\r\\n  var promise = this;\\r\\n  if (promise._d) return;\\r\\n  promise._d = true;\\r\\n  promise = promise._w || promise;\\r\\n  promise._v = value;\\r\\n  promise._s = 2;\\r\\n  if (!promise._a) promise._a = promise._c.slice();\\r\\n  notify(promise, true);\\r\\n};\\r\\nvar $resolve = function $resolve(value) {\\r\\n  var promise = this;\\r\\n  var then;\\r\\n  if (promise._d) return;\\r\\n  promise._d = true;\\r\\n  promise = promise._w || promise;\\r\\n  try {\\r\\n    if (promise === value) throw TypeError(\\\"Promise can't be resolved itself\\\");\\r\\n    if (then = isThenable(value)) {\\r\\n      microtask(function () {\\r\\n        var wrapper = {\\r\\n          _w: promise,\\r\\n          _d: false\\r\\n        };\\r\\n        try {\\r\\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\\r\\n        } catch (e) {\\r\\n          $reject.call(wrapper, e);\\r\\n        }\\r\\n      });\\r\\n    } else {\\r\\n      promise._v = value;\\r\\n      promise._s = 1;\\r\\n      notify(promise, false);\\r\\n    }\\r\\n  } catch (e) {\\r\\n    $reject.call({\\r\\n      _w: promise,\\r\\n      _d: false\\r\\n    }, e);\\r\\n  }\\r\\n};\\r\\nif (!USE_NATIVE) {\\r\\n  $Promise = function Promise(executor) {\\r\\n    anInstance(this, $Promise, PROMISE, '_h');\\r\\n    aFunction(executor);\\r\\n    Internal.call(this);\\r\\n    try {\\r\\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\\r\\n    } catch (err) {\\r\\n      $reject.call(this, err);\\r\\n    }\\r\\n  };\\r\\n  Internal = function Promise(executor) {\\r\\n    this._c = [];\\r\\n    this._a = undefined;\\r\\n    this._s = 0;\\r\\n    this._d = false;\\r\\n    this._v = undefined;\\r\\n    this._h = 0;\\r\\n    this._n = false;\\r\\n  };\\r\\n  Internal.prototype = __w_pdfjs_require__(25)($Promise.prototype, {\\r\\n    then: function then(onFulfilled, onRejected) {\\r\\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\\r\\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\\r\\n      reaction.fail = typeof onRejected == 'function' && onRejected;\\r\\n      reaction.domain = isNode ? process.domain : undefined;\\r\\n      this._c.push(reaction);\\r\\n      if (this._a) this._a.push(reaction);\\r\\n      if (this._s) notify(this, false);\\r\\n      return reaction.promise;\\r\\n    },\\r\\n    'catch': function _catch(onRejected) {\\r\\n      return this.then(undefined, onRejected);\\r\\n    }\\r\\n  });\\r\\n  OwnPromiseCapability = function OwnPromiseCapability() {\\r\\n    var promise = new Internal();\\r\\n    this.promise = promise;\\r\\n    this.resolve = ctx($resolve, promise, 1);\\r\\n    this.reject = ctx($reject, promise, 1);\\r\\n  };\\r\\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\\r\\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\\r\\n  };\\r\\n}\\r\\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\\r\\n__w_pdfjs_require__(28)($Promise, PROMISE);\\r\\n__w_pdfjs_require__(66)(PROMISE);\\r\\nWrapper = __w_pdfjs_require__(6)[PROMISE];\\r\\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\\r\\n  reject: function reject(r) {\\r\\n    var capability = newPromiseCapability(this);\\r\\n    var $$reject = capability.reject;\\r\\n    $$reject(r);\\r\\n    return capability.promise;\\r\\n  }\\r\\n});\\r\\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\\r\\n  resolve: function resolve(x) {\\r\\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\\r\\n  }\\r\\n});\\r\\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(46)(function (iter) {\\r\\n  $Promise.all(iter)['catch'](empty);\\r\\n})), PROMISE, {\\r\\n  all: function all(iterable) {\\r\\n    var C = this;\\r\\n    var capability = newPromiseCapability(C);\\r\\n    var resolve = capability.resolve;\\r\\n    var reject = capability.reject;\\r\\n    var result = perform(function () {\\r\\n      var values = [];\\r\\n      var index = 0;\\r\\n      var remaining = 1;\\r\\n      forOf(iterable, false, function (promise) {\\r\\n        var $index = index++;\\r\\n        var alreadyCalled = false;\\r\\n        values.push(undefined);\\r\\n        remaining++;\\r\\n        C.resolve(promise).then(function (value) {\\r\\n          if (alreadyCalled) return;\\r\\n          alreadyCalled = true;\\r\\n          values[$index] = value;\\r\\n          --remaining || resolve(values);\\r\\n        }, reject);\\r\\n      });\\r\\n      --remaining || resolve(values);\\r\\n    });\\r\\n    if (result.e) reject(result.v);\\r\\n    return capability.promise;\\r\\n  },\\r\\n  race: function race(iterable) {\\r\\n    var C = this;\\r\\n    var capability = newPromiseCapability(C);\\r\\n    var reject = capability.reject;\\r\\n    var result = perform(function () {\\r\\n      forOf(iterable, false, function (promise) {\\r\\n        C.resolve(promise).then(capability.resolve, reject);\\r\\n      });\\r\\n    });\\r\\n    if (result.e) reject(result.v);\\r\\n    return capability.promise;\\r\\n  }\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 114 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nmodule.exports = function (iterator, fn, value, entries) {\\r\\n  try {\\r\\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\\r\\n  } catch (e) {\\r\\n    var ret = iterator['return'];\\r\\n    if (ret !== undefined) anObject(ret.call(iterator));\\r\\n    throw e;\\r\\n  }\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 115 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nmodule.exports = function (fn, args, that) {\\r\\n  var un = that === undefined;\\r\\n  switch (args.length) {\\r\\n    case 0:\\r\\n      return un ? fn() : fn.call(that);\\r\\n    case 1:\\r\\n      return un ? fn(args[0]) : fn.call(that, args[0]);\\r\\n    case 2:\\r\\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\\r\\n    case 3:\\r\\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\\r\\n    case 4:\\r\\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\\r\\n  }\\r\\n  return fn.apply(that, args);\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 116 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar macrotask = __w_pdfjs_require__(71).set;\\r\\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\\r\\nvar process = global.process;\\r\\nvar Promise = global.Promise;\\r\\nvar isNode = __w_pdfjs_require__(27)(process) == 'process';\\r\\nmodule.exports = function () {\\r\\n  var head, last, notify;\\r\\n  var flush = function flush() {\\r\\n    var parent, fn;\\r\\n    if (isNode && (parent = process.domain)) parent.exit();\\r\\n    while (head) {\\r\\n      fn = head.fn;\\r\\n      head = head.next;\\r\\n      try {\\r\\n        fn();\\r\\n      } catch (e) {\\r\\n        if (head) notify();else last = undefined;\\r\\n        throw e;\\r\\n      }\\r\\n    }\\r\\n    last = undefined;\\r\\n    if (parent) parent.enter();\\r\\n  };\\r\\n  if (isNode) {\\r\\n    notify = function notify() {\\r\\n      process.nextTick(flush);\\r\\n    };\\r\\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\\r\\n    var toggle = true;\\r\\n    var node = document.createTextNode('');\\r\\n    new Observer(flush).observe(node, { characterData: true });\\r\\n    notify = function notify() {\\r\\n      node.data = toggle = !toggle;\\r\\n    };\\r\\n  } else if (Promise && Promise.resolve) {\\r\\n    var promise = Promise.resolve(undefined);\\r\\n    notify = function notify() {\\r\\n      promise.then(flush);\\r\\n    };\\r\\n  } else {\\r\\n    notify = function notify() {\\r\\n      macrotask.call(global, flush);\\r\\n    };\\r\\n  }\\r\\n  return function (fn) {\\r\\n    var task = {\\r\\n      fn: fn,\\r\\n      next: undefined\\r\\n    };\\r\\n    if (last) last.next = task;\\r\\n    if (!head) {\\r\\n      head = task;\\r\\n      notify();\\r\\n    }\\r\\n    last = task;\\r\\n  };\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 117 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar navigator = global.navigator;\\r\\nmodule.exports = navigator && navigator.userAgent || '';\\r\\n\\r\\n/***/ }),\\r\\n/* 118 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nvar core = __w_pdfjs_require__(6);\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar speciesConstructor = __w_pdfjs_require__(45);\\r\\nvar promiseResolve = __w_pdfjs_require__(73);\\r\\n$export($export.P + $export.R, 'Promise', {\\r\\n  'finally': function _finally(onFinally) {\\r\\n    var C = speciesConstructor(this, core.Promise || global.Promise);\\r\\n    var isFunction = typeof onFinally == 'function';\\r\\n    return this.then(isFunction ? function (x) {\\r\\n      return promiseResolve(C, onFinally()).then(function () {\\r\\n        return x;\\r\\n      });\\r\\n    } : onFinally, isFunction ? function (e) {\\r\\n      return promiseResolve(C, onFina\";a.a+=\"lly()).then(function () {\\r\\n        throw e;\\r\\n      });\\r\\n    } : onFinally);\\r\\n  }\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 119 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nvar newPromiseCapability = __w_pdfjs_require__(47);\\r\\nvar perform = __w_pdfjs_require__(72);\\r\\n$export($export.S, 'Promise', {\\r\\n  'try': function _try(callbackfn) {\\r\\n    var promiseCapability = newPromiseCapability.f(this);\\r\\n    var result = perform(callbackfn);\\r\\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\\r\\n    return promiseCapability.promise;\\r\\n  }\\r\\n});\\r\\n\\r\\n/***/ }),\\r\\n/* 120 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(69);\\r\\n__w_pdfjs_require__(70);\\r\\n__w_pdfjs_require__(121);\\r\\n__w_pdfjs_require__(128);\\r\\n__w_pdfjs_require__(130);\\r\\nmodule.exports = __w_pdfjs_require__(6).WeakMap;\\r\\n\\r\\n/***/ }),\\r\\n/* 121 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar each = __w_pdfjs_require__(44)(0);\\r\\nvar redefine = __w_pdfjs_require__(16);\\r\\nvar meta = __w_pdfjs_require__(48);\\r\\nvar assign = __w_pdfjs_require__(122);\\r\\nvar weak = __w_pdfjs_require__(124);\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar fails = __w_pdfjs_require__(11);\\r\\nvar validate = __w_pdfjs_require__(74);\\r\\nvar WEAK_MAP = 'WeakMap';\\r\\nvar getWeak = meta.getWeak;\\r\\nvar isExtensible = Object.isExtensible;\\r\\nvar uncaughtFrozenStore = weak.ufstore;\\r\\nvar tmp = {};\\r\\nvar InternalMap;\\r\\nvar wrapper = function wrapper(get) {\\r\\n  return function WeakMap() {\\r\\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\\r\\n  };\\r\\n};\\r\\nvar methods = {\\r\\n  get: function get(key) {\\r\\n    if (isObject(key)) {\\r\\n      var data = getWeak(key);\\r\\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\\r\\n      return data ? data[this._i] : undefined;\\r\\n    }\\r\\n  },\\r\\n  set: function set(key, value) {\\r\\n    return weak.def(validate(this, WEAK_MAP), key, value);\\r\\n  }\\r\\n};\\r\\nvar $WeakMap = module.exports = __w_pdfjs_require__(125)(WEAK_MAP, wrapper, methods, weak, true, true);\\r\\nif (fails(function () {\\r\\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\\r\\n})) {\\r\\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\\r\\n  assign(InternalMap.prototype, methods);\\r\\n  meta.NEED = true;\\r\\n  each(['delete', 'has', 'get', 'set'], function (key) {\\r\\n    var proto = $WeakMap.prototype;\\r\\n    var method = proto[key];\\r\\n    redefine(proto, key, function (a, b) {\\r\\n      if (isObject(a) && !isExtensible(a)) {\\r\\n        if (!this._f) this._f = new InternalMap();\\r\\n        var result = this._f[key](a, b);\\r\\n        return key == 'set' ? this : result;\\r\\n      }\\r\\n      return method.call(this, a, b);\\r\\n    });\\r\\n  });\\r\\n}\\r\\n\\r\\n/***/ }),\\r\\n/* 122 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar getKeys = __w_pdfjs_require__(43);\\r\\nvar gOPS = __w_pdfjs_require__(123);\\r\\nvar pIE = __w_pdfjs_require__(68);\\r\\nvar toObject = __w_pdfjs_require__(20);\\r\\nvar IObject = __w_pdfjs_require__(39);\\r\\nvar $assign = Object.assign;\\r\\nmodule.exports = !$assign || __w_pdfjs_require__(11)(function () {\\r\\n  var A = {};\\r\\n  var B = {};\\r\\n  var S = Symbol();\\r\\n  var K = 'abcdefghijklmnopqrst';\\r\\n  A[S] = 7;\\r\\n  K.split('').forEach(function (k) {\\r\\n    B[k] = k;\\r\\n  });\\r\\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\\r\\n}) ? function assign(target, source) {\\r\\n  var T = toObject(target);\\r\\n  var aLen = arguments.length;\\r\\n  var index = 1;\\r\\n  var getSymbols = gOPS.f;\\r\\n  var isEnum = pIE.f;\\r\\n  while (aLen > index) {\\r\\n    var S = IObject(arguments[index++]);\\r\\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\\r\\n    var length = keys.length;\\r\\n    var j = 0;\\r\\n    var key;\\r\\n    while (length > j) {\\r\\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\\r\\n    }\\r\\n  }\\r\\n  return T;\\r\\n} : $assign;\\r\\n\\r\\n/***/ }),\\r\\n/* 123 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nexports.f = Object.getOwnPropertySymbols;\\r\\n\\r\\n/***/ }),\\r\\n/* 124 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar redefineAll = __w_pdfjs_require__(25);\\r\\nvar getWeak = __w_pdfjs_require__(48).getWeak;\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar anInstance = __w_pdfjs_require__(26);\\r\\nvar forOf = __w_pdfjs_require__(35);\\r\\nvar createArrayMethod = __w_pdfjs_require__(44);\\r\\nvar $has = __w_pdfjs_require__(12);\\r\\nvar validate = __w_pdfjs_require__(74);\\r\\nvar arrayFind = createArrayMethod(5);\\r\\nvar arrayFindIndex = createArrayMethod(6);\\r\\nvar id = 0;\\r\\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\\r\\n  return that._l || (that._l = new UncaughtFrozenStore());\\r\\n};\\r\\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\\r\\n  this.a = [];\\r\\n};\\r\\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\\r\\n  return arrayFind(store.a, function (it) {\\r\\n    return it[0] === key;\\r\\n  });\\r\\n};\\r\\nUncaughtFrozenStore.prototype = {\\r\\n  get: function get(key) {\\r\\n    var entry = findUncaughtFrozen(this, key);\\r\\n    if (entry) return entry[1];\\r\\n  },\\r\\n  has: function has(key) {\\r\\n    return !!findUncaughtFrozen(this, key);\\r\\n  },\\r\\n  set: function set(key, value) {\\r\\n    var entry = findUncaughtFrozen(this, key);\\r\\n    if (entry) entry[1] = value;else this.a.push([key, value]);\\r\\n  },\\r\\n  'delete': function _delete(key) {\\r\\n    var index = arrayFindIndex(this.a, function (it) {\\r\\n      return it[0] === key;\\r\\n    });\\r\\n    if (~index) this.a.splice(index, 1);\\r\\n    return !!~index;\\r\\n  }\\r\\n};\\r\\nmodule.exports = {\\r\\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\\r\\n    var C = wrapper(function (that, iterable) {\\r\\n      anInstance(that, C, NAME, '_i');\\r\\n      that._t = NAME;\\r\\n      that._i = id++;\\r\\n      that._l = undefined;\\r\\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\r\\n    });\\r\\n    redefineAll(C.prototype, {\\r\\n      'delete': function _delete(key) {\\r\\n        if (!isObject(key)) return false;\\r\\n        var data = getWeak(key);\\r\\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\\r\\n        return data && $has(data, this._i) && delete data[this._i];\\r\\n      },\\r\\n      has: function has(key) {\\r\\n        if (!isObject(key)) return false;\\r\\n        var data = getWeak(key);\\r\\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\\r\\n        return data && $has(data, this._i);\\r\\n      }\\r\\n    });\\r\\n    return C;\\r\\n  },\\r\\n  def: function def(that, key, value) {\\r\\n    var data = getWeak(anObject(key), true);\\r\\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\\r\\n    return that;\\r\\n  },\\r\\n  ufstore: uncaughtFrozenStore\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 125 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar global = __w_pdfjs_require__(1);\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nvar redefine = __w_pdfjs_require__(16);\\r\\nvar redefineAll = __w_pdfjs_require__(25);\\r\\nvar meta = __w_pdfjs_require__(48);\\r\\nvar forOf = __w_pdfjs_require__(35);\\r\\nvar anInstance = __w_pdfjs_require__(26);\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar fails = __w_pdfjs_require__(11);\\r\\nvar $iterDetect = __w_pdfjs_require__(46);\\r\\nvar setToStringTag = __w_pdfjs_require__(28);\\r\\nvar inheritIfRequired = __w_pdfjs_require__(126);\\r\\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\\r\\n  var Base = global[NAME];\\r\\n  var C = Base;\\r\\n  var ADDER = IS_MAP ? 'set' : 'add';\\r\\n  var proto = C && C.prototype;\\r\\n  var O = {};\\r\\n  var fixMethod = function fixMethod(KEY) {\\r\\n    var fn = proto[KEY];\\r\\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\\r\\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\\r\\n    } : KEY == 'has' ? function has(a) {\\r\\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\\r\\n    } : KEY == 'get' ? function get(a) {\\r\\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\\r\\n    } : KEY == 'add' ? function add(a) {\\r\\n      fn.call(this, a === 0 ? 0 : a);\\r\\n      return this;\\r\\n    } : function set(a, b) {\\r\\n      fn.call(this, a === 0 ? 0 : a, b);\\r\\n      return this;\\r\\n    });\\r\\n  };\\r\\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\\r\\n    new C().entries().next();\\r\\n  }))) {\\r\\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\\r\\n    redefineAll(C.prototype, methods);\\r\\n    meta.NEED = true;\\r\\n  } else {\\r\\n    var instance = new C();\\r\\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\\r\\n    var THROWS_ON_PRIMITIVES = fails(function () {\\r\\n      instance.has(1);\\r\\n    });\\r\\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\\r\\n      new C(iter);\\r\\n    });\\r\\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\\r\\n      var $instance = new C();\\r\\n      var index = 5;\\r\\n      while (index--) {\\r\\n        $instance[ADDER](index, index);\\r\\n      }return !$instance.has(-0);\\r\\n    });\\r\\n    if (!ACCEPT_ITERABLES) {\\r\\n      C = wrapper(function (target, iterable) {\\r\\n        anInstance(target, C, NAME);\\r\\n        var that = inheritIfRequired(new Base(), target, C);\\r\\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\\r\\n        return that;\\r\\n      });\\r\\n      C.prototype = proto;\\r\\n      proto.constructor = C;\\r\\n    }\\r\\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\\r\\n      fixMethod('delete');\\r\\n      fixMethod('has');\\r\\n      IS_MAP && fixMethod('get');\\r\\n    }\\r\\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\\r\\n    if (IS_WEAK && proto.clear) delete proto.clear;\\r\\n  }\\r\\n  setToStringTag(C, NAME);\\r\\n  O[NAME] = C;\\r\\n  $export($export.G + $export.W + $export.F * (C != Base), O);\\r\\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\\r\\n  return C;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 126 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar setPrototypeOf = __w_pdfjs_require__(127).set;\\r\\nmodule.exports = function (that, target, C) {\\r\\n  var S = target.constructor;\\r\\n  var P;\\r\\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\\r\\n    setPrototypeOf(that, P);\\r\\n  }\\r\\n  return that;\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 127 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isObject = __w_pdfjs_require__(3);\\r\\nvar anObject = __w_pdfjs_require__(9);\\r\\nvar check = function check(O, proto) {\\r\\n  anObject(O);\\r\\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \\\": can't set as prototype!\\\");\\r\\n};\\r\\nmodule.exports = {\\r\\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\\r\\n    try {\\r\\n      set = __w_pdfjs_require__(13)(Function.call, __w_pdfjs_require__(67).f(Object.prototype, '__proto__').set, 2);\\r\\n      set(test, []);\\r\\n      buggy = !(test instanceof Array);\\r\\n    } catch (e) {\\r\\n      buggy = true;\\r\\n    }\\r\\n    return function setPrototypeOf(O, proto) {\\r\\n      check(O, proto);\\r\\n      if (buggy) O.__proto__ = proto;else set(O, proto);\\r\\n      return O;\\r\\n    };\\r\\n  }({}, false) : undefined),\\r\\n  check: check\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 128 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(129)('WeakMap');\\r\\n\\r\\n/***/ }),\\r\\n/* 129 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nmodule.exports = function (COLLECTION) {\\r\\n  $export($export.S, COLLECTION, {\\r\\n    of: function of() {\\r\\n      var length = arguments.length;\\r\\n      var A = new Array(length);\\r\\n      while (length--) {\\r\\n        A[length] = arguments[length];\\r\\n      }return new this(A);\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 130 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\n__w_pdfjs_require__(131)('WeakMap');\\r\\n\\r\\n/***/ }),\\r\\n/* 131 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar $export = __w_pdfjs_require__(7);\\r\\nvar aFunction = __w_pdfjs_require__(24);\\r\\nvar ctx = __w_pdfjs_require__(13);\\r\\nvar forOf = __w_pdfjs_require__(35);\\r\\nmodule.exports = function (COLLECTION) {\\r\\n  $export($export.S, COLLECTION, {\\r\\n    from: function from(source) {\\r\\n      var mapFn = arguments[1];\\r\\n      var mapping, A, n, cb;\\r\\n      aFunction(this);\\r\\n      mapping = mapFn !== undefined;\\r\\n      if (mapping) aFunction(mapFn);\\r\\n      if (source == undefined) return new this();\\r\\n      A = [];\\r\\n      if (mapping) {\\r\\n        n = 0;\\r\\n        cb = ctx(mapFn, arguments[2], 2);\\r\\n        forOf(source, false, function (nextItem) {\\r\\n          A.push(cb(nextItem, n++));\\r\\n        });\\r\\n      } else {\\r\\n        forOf(source, false, A.push, A);\\r\\n      }\\r\\n      return new this(A);\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\n/***/ }),\\r\\n/* 132 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar isReadableStreamSupported = false;\\r\\nif (typeof ReadableStream !== 'undefined') {\\r\\n  try {\\r\\n    new ReadableStream({\\r\\n      start: function start(controller) {\\r\\n        controller.close();\\r\\n      }\\r\\n    });\\r\\n    isReadableStreamSupported = true;\\r\\n  } catch (e) {}\\r\\n}\\r\\nif (isReadableStreamSupported) {\\r\\n  exports.ReadableStream = ReadableStream;\\r\\n} else {\\r\\n  exports.ReadableStream = __w_pdfjs_require__(133).ReadableStream;\\r\\n}\\r\\n\\r\\n/***/ }),\\r\\n/* 133 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nvar _typeof2 = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\n(function (e, a) {\\r\\n  for (var i in a) {\\r\\n    e[i] = a[i];\\r\\n  }\\r\\n})(exports, function (modules) {\\r\\n  var installedModules = {};\\r\\n  function __w_pdfjs_require__(moduleId) {\\r\\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\\r\\n    var module = installedModules[moduleId] = {\\r\\n      i: moduleId,\\r\\n      l: false,\\r\\n      exports: {}\\r\\n    };\\r\\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\\r\\n    module.l = true;\\r\\n    return module.exports;\\r\\n  }\\r\\n  __w_pdfjs_require__.m = modules;\\r\\n  __w_pdfjs_require__.c = installedModules;\\r\\n  __w_pdfjs_require__.i = function (value) {\\r\\n    return value;\\r\\n  };\\r\\n  __w_pdfjs_require__.d = function (exports, name, getter) {\\r\\n    if (!__w_pdfjs_require__.o(exports, name)) {\\r\\n      Object.defineProperty(exports, name, {\\r\\n        configurable: false,\\r\\n        enumerable: true,\\r\\n        get: getter\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n  __w_pdfjs_require__.n = function (module) {\\r\\n    var getter = module && module.__esModule ? function getDefault() {\\r\\n      return module['default'];\\r\\n    } : function getModuleExports() {\\r\\n      return module;\\r\\n    };\\r\\n    __w_pdfjs_require__.d(getter, 'a', getter);\\r\\n    return getter;\\r\\n  };\\r\\n  __w_pdfjs_require__.o = function (object, property) {\\r\\n    return Object.prototype.hasOwnProperty.call(object, property);\\r\\n  };\\r\\n  __w_pdfjs_require__.p = \\\"\\\";\\r\\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\\r\\n}([function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var _typeof = typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\" ? function (obj) {\\r\\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\\r\\n  } : function (obj) {\\r\\n    return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\\r\\n  };\\r\\n  var _require = __w_pdfjs_require__(1),\\r\\n      assert = _require.assert;\\r\\n  function IsPropertyKey(argument) {\\r\\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\\r\\n  }\\r\\n  exports.typeIsObject = function (x) {\\r\\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\\r\\n  };\\r\\n  exports.createDataProperty = function (o, p, v) {\\r\\n    assert(exports.typeIsObject(o));\\r\\n    Object.defineProperty(o, p, {\\r\\n      value: v,\\r\\n      writable: true,\\r\\n      enumerable: true,\\r\\n      configurable: true\\r\\n    });\\r\\n  };\\r\\n  exports.createArrayFromList = function (elements) {\\r\\n    return elements.slice();\\r\\n  };\\r\\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\\r\\n    new Uint8Array(dest).set(new Uint8Arra\";a.a+=\"y(src, srcOffset, n), destOffset);\\r\\n  };\\r\\n  exports.CreateIterResultObject = function (value, done) {\\r\\n    assert(typeof done === 'boolean');\\r\\n    var obj = {};\\r\\n    Object.defineProperty(obj, 'value', {\\r\\n      value: value,\\r\\n      enumerable: true,\\r\\n      writable: true,\\r\\n      configurable: true\\r\\n    });\\r\\n    Object.defineProperty(obj, 'done', {\\r\\n      value: done,\\r\\n      enumerable: true,\\r\\n      writable: true,\\r\\n      configurable: true\\r\\n    });\\r\\n    return obj;\\r\\n  };\\r\\n  exports.IsFiniteNonNegativeNumber = function (v) {\\r\\n    if (Number.isNaN(v)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (v === Infinity) {\\r\\n      return false;\\r\\n    }\\r\\n    if (v < 0) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  };\\r\\n  function Call(F, V, args) {\\r\\n    if (typeof F !== 'function') {\\r\\n      throw new TypeError('Argument is not a function');\\r\\n    }\\r\\n    return Function.prototype.apply.call(F, V, args);\\r\\n  }\\r\\n  exports.InvokeOrNoop = function (O, P, args) {\\r\\n    assert(O !== undefined);\\r\\n    assert(IsPropertyKey(P));\\r\\n    assert(Array.isArray(args));\\r\\n    var method = O[P];\\r\\n    if (method === undefined) {\\r\\n      return undefined;\\r\\n    }\\r\\n    return Call(method, O, args);\\r\\n  };\\r\\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\\r\\n    assert(O !== undefined);\\r\\n    assert(IsPropertyKey(P));\\r\\n    assert(Array.isArray(args));\\r\\n    try {\\r\\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\\r\\n    } catch (returnValueE) {\\r\\n      return Promise.reject(returnValueE);\\r\\n    }\\r\\n  };\\r\\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\\r\\n    assert(O !== undefined);\\r\\n    assert(IsPropertyKey(P));\\r\\n    assert(Array.isArray(args));\\r\\n    assert(Array.isArray(argsF));\\r\\n    var method = void 0;\\r\\n    try {\\r\\n      method = O[P];\\r\\n    } catch (methodE) {\\r\\n      return Promise.reject(methodE);\\r\\n    }\\r\\n    if (method === undefined) {\\r\\n      return F.apply(null, argsF);\\r\\n    }\\r\\n    try {\\r\\n      return Promise.resolve(Call(method, O, args));\\r\\n    } catch (e) {\\r\\n      return Promise.reject(e);\\r\\n    }\\r\\n  };\\r\\n  exports.TransferArrayBuffer = function (O) {\\r\\n    return O.slice();\\r\\n  };\\r\\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\\r\\n    highWaterMark = Number(highWaterMark);\\r\\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\\r\\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\\r\\n    }\\r\\n    return highWaterMark;\\r\\n  };\\r\\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\\r\\n    if (size !== undefined && typeof size !== 'function') {\\r\\n      throw new TypeError('size property of a queuing strategy must be a function');\\r\\n    }\\r\\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\\r\\n    return {\\r\\n      size: size,\\r\\n      highWaterMark: highWaterMark\\r\\n    };\\r\\n  };\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  function rethrowAssertionErrorRejection(e) {\\r\\n    if (e && e.constructor === AssertionError) {\\r\\n      setTimeout(function () {\\r\\n        throw e;\\r\\n      }, 0);\\r\\n    }\\r\\n  }\\r\\n  function AssertionError(message) {\\r\\n    this.name = 'AssertionError';\\r\\n    this.message = message || '';\\r\\n    this.stack = new Error().stack;\\r\\n  }\\r\\n  AssertionError.prototype = Object.create(Error.prototype);\\r\\n  AssertionError.prototype.constructor = AssertionError;\\r\\n  function assert(value, message) {\\r\\n    if (!value) {\\r\\n      throw new AssertionError(message);\\r\\n    }\\r\\n  }\\r\\n  module.exports = {\\r\\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\\r\\n    AssertionError: AssertionError,\\r\\n    assert: assert\\r\\n  };\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var _createClass = function () {\\r\\n    function defineProperties(target, props) {\\r\\n      for (var i = 0; i < props.length; i++) {\\r\\n        var descriptor = props[i];\\r\\n        descriptor.enumerable = descriptor.enumerable || false;\\r\\n        descriptor.configurable = true;\\r\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\r\\n        Object.defineProperty(target, descriptor.key, descriptor);\\r\\n      }\\r\\n    }\\r\\n    return function (Constructor, protoProps, staticProps) {\\r\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\r\\n      if (staticProps) defineProperties(Constructor, staticProps);\\r\\n      return Constructor;\\r\\n    };\\r\\n  }();\\r\\n  function _classCallCheck(instance, Constructor) {\\r\\n    if (!(instance instanceof Constructor)) {\\r\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\r\\n    }\\r\\n  }\\r\\n  var _require = __w_pdfjs_require__(0),\\r\\n      InvokeOrNoop = _require.InvokeOrNoop,\\r\\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\\r\\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\\r\\n      typeIsObject = _require.typeIsObject;\\r\\n  var _require2 = __w_pdfjs_require__(1),\\r\\n      assert = _require2.assert,\\r\\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\\r\\n  var _require3 = __w_pdfjs_require__(3),\\r\\n      DequeueValue = _require3.DequeueValue,\\r\\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\\r\\n      PeekQueueValue = _require3.PeekQueueValue,\\r\\n      ResetQueue = _require3.ResetQueue;\\r\\n  var WritableStream = function () {\\r\\n    function WritableStream() {\\r\\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\r\\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\r\\n          size = _ref.size,\\r\\n          _ref$highWaterMark = _ref.highWaterMark,\\r\\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\\r\\n      _classCallCheck(this, WritableStream);\\r\\n      this._state = 'writable';\\r\\n      this._storedError = undefined;\\r\\n      this._writer = undefined;\\r\\n      this._writableStreamController = undefined;\\r\\n      this._writeRequests = [];\\r\\n      this._inFlightWriteRequest = undefined;\\r\\n      this._closeRequest = undefined;\\r\\n      this._inFlightCloseRequest = undefined;\\r\\n      this._pendingAbortRequest = undefined;\\r\\n      this._backpressure = false;\\r\\n      var type = underlyingSink.type;\\r\\n      if (type !== undefined) {\\r\\n        throw new RangeError('Invalid type is specified');\\r\\n      }\\r\\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\\r\\n      this._writableStreamController.__startSteps();\\r\\n    }\\r\\n    _createClass(WritableStream, [{\\r\\n      key: 'abort',\\r\\n      value: function abort(reason) {\\r\\n        if (IsWritableStream(this) === false) {\\r\\n          return Promise.reject(streamBrandCheckException('abort'));\\r\\n        }\\r\\n        if (IsWritableStreamLocked(this) === true) {\\r\\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\\r\\n        }\\r\\n        return WritableStreamAbort(this, reason);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'getWriter',\\r\\n      value: function getWriter() {\\r\\n        if (IsWritableStream(this) === false) {\\r\\n          throw streamBrandCheckException('getWriter');\\r\\n        }\\r\\n        return AcquireWritableStreamDefaultWriter(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'locked',\\r\\n      get: function get() {\\r\\n        if (IsWritableStream(this) === false) {\\r\\n          throw streamBrandCheckException('locked');\\r\\n        }\\r\\n        return IsWritableStreamLocked(this);\\r\\n      }\\r\\n    }]);\\r\\n    return WritableStream;\\r\\n  }();\\r\\n  module.exports = {\\r\\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\\r\\n    IsWritableStream: IsWritableStream,\\r\\n    IsWritableStreamLocked: IsWritableStreamLocked,\\r\\n    WritableStream: WritableStream,\\r\\n    WritableStreamAbort: WritableStreamAbort,\\r\\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\\r\\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\\r\\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\\r\\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\\r\\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\\r\\n  };\\r\\n  function AcquireWritableStreamDefaultWriter(stream) {\\r\\n    return new WritableStreamDefaultWriter(stream);\\r\\n  }\\r\\n  function IsWritableStream(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function IsWritableStreamLocked(stream) {\\r\\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\\r\\n    if (stream._writer === undefined) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function WritableStreamAbort(stream, reason) {\\r\\n    var state = stream._state;\\r\\n    if (state === 'closed') {\\r\\n      return Promise.resolve(undefined);\\r\\n    }\\r\\n    if (state === 'errored') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    var error = new TypeError('Requested to abort');\\r\\n    if (stream._pendingAbortRequest !== undefined) {\\r\\n      return Promise.reject(error);\\r\\n    }\\r\\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\\r\\n    var wasAlreadyErroring = false;\\r\\n    if (state === 'erroring') {\\r\\n      wasAlreadyErroring = true;\\r\\n      reason = undefined;\\r\\n    }\\r\\n    var promise = new Promise(function (resolve, reject) {\\r\\n      stream._pendingAbortRequest = {\\r\\n        _resolve: resolve,\\r\\n        _reject: reject,\\r\\n        _reason: reason,\\r\\n        _wasAlreadyErroring: wasAlreadyErroring\\r\\n      };\\r\\n    });\\r\\n    if (wasAlreadyErroring === false) {\\r\\n      WritableStreamStartErroring(stream, error);\\r\\n    }\\r\\n    return promise;\\r\\n  }\\r\\n  function WritableStreamAddWriteRequest(stream) {\\r\\n    assert(IsWritableStreamLocked(stream) === true);\\r\\n    assert(stream._state === 'writable');\\r\\n    var promise = new Promise(function (resolve, reject) {\\r\\n      var writeRequest = {\\r\\n        _resolve: resolve,\\r\\n        _reject: reject\\r\\n      };\\r\\n      stream._writeRequests.push(writeRequest);\\r\\n    });\\r\\n    return promise;\\r\\n  }\\r\\n  function WritableStreamDealWithRejection(stream, error) {\\r\\n    var state = stream._state;\\r\\n    if (state === 'writable') {\\r\\n      WritableStreamStartErroring(stream, error);\\r\\n      return;\\r\\n    }\\r\\n    assert(state === 'erroring');\\r\\n    WritableStreamFinishErroring(stream);\\r\\n  }\\r\\n  function WritableStreamStartErroring(stream, reason) {\\r\\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\\r\\n    assert(stream._state === 'writable', 'state must be writable');\\r\\n    var controller = stream._writableStreamController;\\r\\n    assert(controller !== undefined, 'controller must not be undefined');\\r\\n    stream._state = 'erroring';\\r\\n    stream._storedError = reason;\\r\\n    var writer = stream._writer;\\r\\n    if (writer !== undefined) {\\r\\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\\r\\n    }\\r\\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\\r\\n      WritableStreamFinishErroring(stream);\\r\\n    }\\r\\n  }\\r\\n  function WritableStreamFinishErroring(stream) {\\r\\n    assert(stream._state === 'erroring', 'stream._state === erroring');\\r\\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\\r\\n    stream._state = 'errored';\\r\\n    stream._writableStreamController.__errorSteps();\\r\\n    var storedError = stream._storedError;\\r\\n    for (var i = 0; i < stream._writeRequests.length; i++) {\\r\\n      var writeRequest = stream._writeRequests[i];\\r\\n      writeRequest._reject(storedError);\\r\\n    }\\r\\n    stream._writeRequests = [];\\r\\n    if (stream._pendingAbortRequest === undefined) {\\r\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\r\\n      return;\\r\\n    }\\r\\n    var abortRequest = stream._pendingAbortRequest;\\r\\n    stream._pendingAbortRequest = undefined;\\r\\n    if (abortRequest._wasAlreadyErroring === true) {\\r\\n      abortRequest._reject(storedError);\\r\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\r\\n      return;\\r\\n    }\\r\\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\\r\\n    promise.then(function () {\\r\\n      abortRequest._resolve();\\r\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\r\\n    }, function (reason) {\\r\\n      abortRequest._reject(reason);\\r\\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\\r\\n    });\\r\\n  }\\r\\n  function WritableStreamFinishInFlightWrite(stream) {\\r\\n    assert(stream._inFlightWriteRequest !== undefined);\\r\\n    stream._inFlightWriteRequest._resolve(undefined);\\r\\n    stream._inFlightWriteRequest = undefined;\\r\\n  }\\r\\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\\r\\n    assert(stream._inFlightWriteRequest !== undefined);\\r\\n    stream._inFlightWriteRequest._reject(error);\\r\\n    stream._inFlightWriteRequest = undefined;\\r\\n    assert(stream._state === 'writable' || stream._state === 'erroring');\\r\\n    WritableStreamDealWithRejection(stream, error);\\r\\n  }\\r\\n  function WritableStreamFinishInFlightClose(stream) {\\r\\n    assert(stream._inFlightCloseRequest !== undefined);\\r\\n    stream._inFlightCloseRequest._resolve(undefined);\\r\\n    stream._inFlightCloseRequest = undefined;\\r\\n    var state = stream._state;\\r\\n    assert(state === 'writable' || state === 'erroring');\\r\\n    if (state === 'erroring') {\\r\\n      stream._storedError = undefined;\\r\\n      if (stream._pendingAbortRequest !== undefined) {\\r\\n        stream._pendingAbortRequest._resolve();\\r\\n        stream._pendingAbortRequest = undefined;\\r\\n      }\\r\\n    }\\r\\n    stream._state = 'closed';\\r\\n    var writer = stream._writer;\\r\\n    if (writer !== undefined) {\\r\\n      defaultWriterClosedPromiseResolve(writer);\\r\\n    }\\r\\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\\r\\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\\r\\n  }\\r\\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\\r\\n    assert(stream._inFlightCloseRequest !== undefined);\\r\\n    stream._inFlightCloseRequest._reject(error);\\r\\n    stream._inFlightCloseRequest = undefined;\\r\\n    assert(stream._state === 'writable' || stream._state === 'erroring');\\r\\n    if (stream._pendingAbortRequest !== undefined) {\\r\\n      stream._pendingAbortRequest._reject(error);\\r\\n      stream._pendingAbortRequest = undefined;\\r\\n    }\\r\\n    WritableStreamDealWithRejection(stream, error);\\r\\n  }\\r\\n  function WritableStreamCloseQueuedOrInFlight(stream) {\\r\\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function WritableStreamHasOperationMarkedInFlight(stream) {\\r\\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function WritableStreamMarkCloseRequestInFlight(stream) {\\r\\n    assert(stream._inFlightCloseRequest === undefined);\\r\\n    assert(stream._closeRequest !== undefined);\\r\\n    stream._inFlightCloseRequest = stream._closeRequest;\\r\\n    stream._closeRequest = undefined;\\r\\n  }\\r\\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\\r\\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\\r\\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\\r\\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\\r\\n  }\\r\\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\\r\\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\\\"errored\\\"`');\\r\\n    if (stream._closeRequest !== undefined) {\\r\\n      assert(stream._inFlightCloseRequest === undefined);\\r\\n      stream._closeRequest._reject(stream._storedError);\\r\\n      stream._closeRequest = undefined;\\r\\n    }\\r\\n    var writer = stream._writer;\\r\\n    if (writer !== undefined) {\\r\\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\\r\\n      writer._closedPromise.catch(function () {});\\r\\n    }\\r\\n  }\\r\\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\\r\\n    assert(stream._state === 'writable');\\r\\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\\r\\n    var writer = stream._writer;\\r\\n    if (writer !== undefined && backpressure !== stream._backpressure) {\\r\\n      if (backpressure === true) {\\r\\n        de\";a.a+=\"faultWriterReadyPromiseReset(writer);\\r\\n      } else {\\r\\n        assert(backpressure === false);\\r\\n        defaultWriterReadyPromiseResolve(writer);\\r\\n      }\\r\\n    }\\r\\n    stream._backpressure = backpressure;\\r\\n  }\\r\\n  var WritableStreamDefaultWriter = function () {\\r\\n    function WritableStreamDefaultWriter(stream) {\\r\\n      _classCallCheck(this, WritableStreamDefaultWriter);\\r\\n      if (IsWritableStream(stream) === false) {\\r\\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\\r\\n      }\\r\\n      if (IsWritableStreamLocked(stream) === true) {\\r\\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\\r\\n      }\\r\\n      this._ownerWritableStream = stream;\\r\\n      stream._writer = this;\\r\\n      var state = stream._state;\\r\\n      if (state === 'writable') {\\r\\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\\r\\n          defaultWriterReadyPromiseInitialize(this);\\r\\n        } else {\\r\\n          defaultWriterReadyPromiseInitializeAsResolved(this);\\r\\n        }\\r\\n        defaultWriterClosedPromiseInitialize(this);\\r\\n      } else if (state === 'erroring') {\\r\\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\\r\\n        this._readyPromise.catch(function () {});\\r\\n        defaultWriterClosedPromiseInitialize(this);\\r\\n      } else if (state === 'closed') {\\r\\n        defaultWriterReadyPromiseInitializeAsResolved(this);\\r\\n        defaultWriterClosedPromiseInitializeAsResolved(this);\\r\\n      } else {\\r\\n        assert(state === 'errored', 'state must be errored');\\r\\n        var storedError = stream._storedError;\\r\\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\\r\\n        this._readyPromise.catch(function () {});\\r\\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\\r\\n        this._closedPromise.catch(function () {});\\r\\n      }\\r\\n    }\\r\\n    _createClass(WritableStreamDefaultWriter, [{\\r\\n      key: 'abort',\\r\\n      value: function abort(reason) {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\\r\\n        }\\r\\n        if (this._ownerWritableStream === undefined) {\\r\\n          return Promise.reject(defaultWriterLockException('abort'));\\r\\n        }\\r\\n        return WritableStreamDefaultWriterAbort(this, reason);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'close',\\r\\n      value: function close() {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          return Promise.reject(defaultWriterBrandCheckException('close'));\\r\\n        }\\r\\n        var stream = this._ownerWritableStream;\\r\\n        if (stream === undefined) {\\r\\n          return Promise.reject(defaultWriterLockException('close'));\\r\\n        }\\r\\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\\r\\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\\r\\n        }\\r\\n        return WritableStreamDefaultWriterClose(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'releaseLock',\\r\\n      value: function releaseLock() {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          throw defaultWriterBrandCheckException('releaseLock');\\r\\n        }\\r\\n        var stream = this._ownerWritableStream;\\r\\n        if (stream === undefined) {\\r\\n          return;\\r\\n        }\\r\\n        assert(stream._writer !== undefined);\\r\\n        WritableStreamDefaultWriterRelease(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'write',\\r\\n      value: function write(chunk) {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          return Promise.reject(defaultWriterBrandCheckException('write'));\\r\\n        }\\r\\n        if (this._ownerWritableStream === undefined) {\\r\\n          return Promise.reject(defaultWriterLockException('write to'));\\r\\n        }\\r\\n        return WritableStreamDefaultWriterWrite(this, chunk);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'closed',\\r\\n      get: function get() {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\\r\\n        }\\r\\n        return this._closedPromise;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'desiredSize',\\r\\n      get: function get() {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          throw defaultWriterBrandCheckException('desiredSize');\\r\\n        }\\r\\n        if (this._ownerWritableStream === undefined) {\\r\\n          throw defaultWriterLockException('desiredSize');\\r\\n        }\\r\\n        return WritableStreamDefaultWriterGetDesiredSize(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'ready',\\r\\n      get: function get() {\\r\\n        if (IsWritableStreamDefaultWriter(this) === false) {\\r\\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\\r\\n        }\\r\\n        return this._readyPromise;\\r\\n      }\\r\\n    }]);\\r\\n    return WritableStreamDefaultWriter;\\r\\n  }();\\r\\n  function IsWritableStreamDefaultWriter(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function WritableStreamDefaultWriterAbort(writer, reason) {\\r\\n    var stream = writer._ownerWritableStream;\\r\\n    assert(stream !== undefined);\\r\\n    return WritableStreamAbort(stream, reason);\\r\\n  }\\r\\n  function WritableStreamDefaultWriterClose(writer) {\\r\\n    var stream = writer._ownerWritableStream;\\r\\n    assert(stream !== undefined);\\r\\n    var state = stream._state;\\r\\n    if (state === 'closed' || state === 'errored') {\\r\\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\\r\\n    }\\r\\n    assert(state === 'writable' || state === 'erroring');\\r\\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\\r\\n    var promise = new Promise(function (resolve, reject) {\\r\\n      var closeRequest = {\\r\\n        _resolve: resolve,\\r\\n        _reject: reject\\r\\n      };\\r\\n      stream._closeRequest = closeRequest;\\r\\n    });\\r\\n    if (stream._backpressure === true && state === 'writable') {\\r\\n      defaultWriterReadyPromiseResolve(writer);\\r\\n    }\\r\\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\\r\\n    return promise;\\r\\n  }\\r\\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\\r\\n    var stream = writer._ownerWritableStream;\\r\\n    assert(stream !== undefined);\\r\\n    var state = stream._state;\\r\\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\\r\\n      return Promise.resolve();\\r\\n    }\\r\\n    if (state === 'errored') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    assert(state === 'writable' || state === 'erroring');\\r\\n    return WritableStreamDefaultWriterClose(writer);\\r\\n  }\\r\\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\\r\\n    if (writer._closedPromiseState === 'pending') {\\r\\n      defaultWriterClosedPromiseReject(writer, error);\\r\\n    } else {\\r\\n      defaultWriterClosedPromiseResetToRejected(writer, error);\\r\\n    }\\r\\n    writer._closedPromise.catch(function () {});\\r\\n  }\\r\\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\\r\\n    if (writer._readyPromiseState === 'pending') {\\r\\n      defaultWriterReadyPromiseReject(writer, error);\\r\\n    } else {\\r\\n      defaultWriterReadyPromiseResetToRejected(writer, error);\\r\\n    }\\r\\n    writer._readyPromise.catch(function () {});\\r\\n  }\\r\\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\\r\\n    var stream = writer._ownerWritableStream;\\r\\n    var state = stream._state;\\r\\n    if (state === 'errored' || state === 'erroring') {\\r\\n      return null;\\r\\n    }\\r\\n    if (state === 'closed') {\\r\\n      return 0;\\r\\n    }\\r\\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\\r\\n  }\\r\\n  function WritableStreamDefaultWriterRelease(writer) {\\r\\n    var stream = writer._ownerWritableStream;\\r\\n    assert(stream !== undefined);\\r\\n    assert(stream._writer === writer);\\r\\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\\\'s closedness');\\r\\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\\r\\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\\r\\n    stream._writer = undefined;\\r\\n    writer._ownerWritableStream = undefined;\\r\\n  }\\r\\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\\r\\n    var stream = writer._ownerWritableStream;\\r\\n    assert(stream !== undefined);\\r\\n    var controller = stream._writableStreamController;\\r\\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\\r\\n    if (stream !== writer._ownerWritableStream) {\\r\\n      return Promise.reject(defaultWriterLockException('write to'));\\r\\n    }\\r\\n    var state = stream._state;\\r\\n    if (state === 'errored') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\\r\\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\\r\\n    }\\r\\n    if (state === 'erroring') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    assert(state === 'writable');\\r\\n    var promise = WritableStreamAddWriteRequest(stream);\\r\\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\\r\\n    return promise;\\r\\n  }\\r\\n  var WritableStreamDefaultController = function () {\\r\\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\\r\\n      _classCallCheck(this, WritableStreamDefaultController);\\r\\n      if (IsWritableStream(stream) === false) {\\r\\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\\r\\n      }\\r\\n      if (stream._writableStreamController !== undefined) {\\r\\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\\r\\n      }\\r\\n      this._controlledWritableStream = stream;\\r\\n      this._underlyingSink = underlyingSink;\\r\\n      this._queue = undefined;\\r\\n      this._queueTotalSize = undefined;\\r\\n      ResetQueue(this);\\r\\n      this._started = false;\\r\\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\\r\\n      this._strategySize = normalizedStrategy.size;\\r\\n      this._strategyHWM = normalizedStrategy.highWaterMark;\\r\\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\\r\\n      WritableStreamUpdateBackpressure(stream, backpressure);\\r\\n    }\\r\\n    _createClass(WritableStreamDefaultController, [{\\r\\n      key: 'error',\\r\\n      value: function error(e) {\\r\\n        if (IsWritableStreamDefaultController(this) === false) {\\r\\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\\r\\n        }\\r\\n        var state = this._controlledWritableStream._state;\\r\\n        if (state !== 'writable') {\\r\\n          return;\\r\\n        }\\r\\n        WritableStreamDefaultControllerError(this, e);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__abortSteps',\\r\\n      value: function __abortSteps(reason) {\\r\\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__errorSteps',\\r\\n      value: function __errorSteps() {\\r\\n        ResetQueue(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__startSteps',\\r\\n      value: function __startSteps() {\\r\\n        var _this = this;\\r\\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\\r\\n        var stream = this._controlledWritableStream;\\r\\n        Promise.resolve(startResult).then(function () {\\r\\n          assert(stream._state === 'writable' || stream._state === 'erroring');\\r\\n          _this._started = true;\\r\\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\\r\\n        }, function (r) {\\r\\n          assert(stream._state === 'writable' || stream._state === 'erroring');\\r\\n          _this._started = true;\\r\\n          WritableStreamDealWithRejection(stream, r);\\r\\n        }).catch(rethrowAssertionErrorRejection);\\r\\n      }\\r\\n    }]);\\r\\n    return WritableStreamDefaultController;\\r\\n  }();\\r\\n  function WritableStreamDefaultControllerClose(controller) {\\r\\n    EnqueueValueWithSize(controller, 'close', 0);\\r\\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\r\\n  }\\r\\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\\r\\n    var strategySize = controller._strategySize;\\r\\n    if (strategySize === undefined) {\\r\\n      return 1;\\r\\n    }\\r\\n    try {\\r\\n      return strategySize(chunk);\\r\\n    } catch (chunkSizeE) {\\r\\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\\r\\n      return 1;\\r\\n    }\\r\\n  }\\r\\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\\r\\n    return controller._strategyHWM - controller._queueTotalSize;\\r\\n  }\\r\\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\\r\\n    var writeRecord = { chunk: chunk };\\r\\n    try {\\r\\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\\r\\n    } catch (enqueueE) {\\r\\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\\r\\n      return;\\r\\n    }\\r\\n    var stream = controller._controlledWritableStream;\\r\\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\\r\\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\\r\\n      WritableStreamUpdateBackpressure(stream, backpressure);\\r\\n    }\\r\\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\r\\n  }\\r\\n  function IsWritableStreamDefaultController(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\\r\\n    var stream = controller._controlledWritableStream;\\r\\n    if (controller._started === false) {\\r\\n      return;\\r\\n    }\\r\\n    if (stream._inFlightWriteRequest !== undefined) {\\r\\n      return;\\r\\n    }\\r\\n    var state = stream._state;\\r\\n    if (state === 'closed' || state === 'errored') {\\r\\n      return;\\r\\n    }\\r\\n    if (state === 'erroring') {\\r\\n      WritableStreamFinishErroring(stream);\\r\\n      return;\\r\\n    }\\r\\n    if (controller._queue.length === 0) {\\r\\n      return;\\r\\n    }\\r\\n    var writeRecord = PeekQueueValue(controller);\\r\\n    if (writeRecord === 'close') {\\r\\n      WritableStreamDefaultControllerProcessClose(controller);\\r\\n    } else {\\r\\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\\r\\n    }\\r\\n  }\\r\\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\\r\\n    if (controller._controlledWritableStream._state === 'writable') {\\r\\n      WritableStreamDefaultControllerError(controller, error);\\r\\n    }\\r\\n  }\\r\\n  function WritableStreamDefaultControllerProcessClose(controller) {\\r\\n    var stream = controller._controlledWritableStream;\\r\\n    WritableStreamMarkCloseRequestInFlight(stream);\\r\\n    DequeueValue(controller);\\r\\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\\r\\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\\r\\n    sinkClosePromise.then(function () {\\r\\n      WritableStreamFinishInFlightClose(stream);\\r\\n    }, function (reason) {\\r\\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\\r\\n    }).catch(rethrowAssertionErrorRejection);\\r\\n  }\\r\\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\\r\\n    var stream = controller._controlledWritableStream;\\r\\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\\r\\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\\r\\n    sinkWritePromise.then(function () {\\r\\n      WritableStreamFinishInFlightWrite(stream);\\r\\n      var state = stream._state;\\r\\n      assert(state === 'writable' || state === 'erroring');\\r\\n      DequeueValue(controller);\\r\\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\\r\\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\\r\\n        WritableStreamUpdateBackpressure(stream, backpressure);\\r\\n      }\\r\\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\\r\\n    }, function (reason) {\\r\\n      WritableStreamFinishInFlightWriteWithError\";a.a+=\"(stream, reason);\\r\\n    }).catch(rethrowAssertionErrorRejection);\\r\\n  }\\r\\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\\r\\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\\r\\n    return desiredSize <= 0;\\r\\n  }\\r\\n  function WritableStreamDefaultControllerError(controller, error) {\\r\\n    var stream = controller._controlledWritableStream;\\r\\n    assert(stream._state === 'writable');\\r\\n    WritableStreamStartErroring(stream, error);\\r\\n  }\\r\\n  function streamBrandCheckException(name) {\\r\\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\\r\\n  }\\r\\n  function defaultWriterBrandCheckException(name) {\\r\\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\\r\\n  }\\r\\n  function defaultWriterLockException(name) {\\r\\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\\r\\n  }\\r\\n  function defaultWriterClosedPromiseInitialize(writer) {\\r\\n    writer._closedPromise = new Promise(function (resolve, reject) {\\r\\n      writer._closedPromise_resolve = resolve;\\r\\n      writer._closedPromise_reject = reject;\\r\\n      writer._closedPromiseState = 'pending';\\r\\n    });\\r\\n  }\\r\\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\\r\\n    writer._closedPromise = Promise.reject(reason);\\r\\n    writer._closedPromise_resolve = undefined;\\r\\n    writer._closedPromise_reject = undefined;\\r\\n    writer._closedPromiseState = 'rejected';\\r\\n  }\\r\\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\\r\\n    writer._closedPromise = Promise.resolve(undefined);\\r\\n    writer._closedPromise_resolve = undefined;\\r\\n    writer._closedPromise_reject = undefined;\\r\\n    writer._closedPromiseState = 'resolved';\\r\\n  }\\r\\n  function defaultWriterClosedPromiseReject(writer, reason) {\\r\\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\\r\\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\\r\\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\\r\\n    writer._closedPromise_reject(reason);\\r\\n    writer._closedPromise_resolve = undefined;\\r\\n    writer._closedPromise_reject = undefined;\\r\\n    writer._closedPromiseState = 'rejected';\\r\\n  }\\r\\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\\r\\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\\r\\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\\r\\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\\r\\n    writer._closedPromise = Promise.reject(reason);\\r\\n    writer._closedPromiseState = 'rejected';\\r\\n  }\\r\\n  function defaultWriterClosedPromiseResolve(writer) {\\r\\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\\r\\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\\r\\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\\r\\n    writer._closedPromise_resolve(undefined);\\r\\n    writer._closedPromise_resolve = undefined;\\r\\n    writer._closedPromise_reject = undefined;\\r\\n    writer._closedPromiseState = 'resolved';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseInitialize(writer) {\\r\\n    writer._readyPromise = new Promise(function (resolve, reject) {\\r\\n      writer._readyPromise_resolve = resolve;\\r\\n      writer._readyPromise_reject = reject;\\r\\n    });\\r\\n    writer._readyPromiseState = 'pending';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\\r\\n    writer._readyPromise = Promise.reject(reason);\\r\\n    writer._readyPromise_resolve = undefined;\\r\\n    writer._readyPromise_reject = undefined;\\r\\n    writer._readyPromiseState = 'rejected';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\\r\\n    writer._readyPromise = Promise.resolve(undefined);\\r\\n    writer._readyPromise_resolve = undefined;\\r\\n    writer._readyPromise_reject = undefined;\\r\\n    writer._readyPromiseState = 'fulfilled';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseReject(writer, reason) {\\r\\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\\r\\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\\r\\n    writer._readyPromise_reject(reason);\\r\\n    writer._readyPromise_resolve = undefined;\\r\\n    writer._readyPromise_reject = undefined;\\r\\n    writer._readyPromiseState = 'rejected';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseReset(writer) {\\r\\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\\r\\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\\r\\n    writer._readyPromise = new Promise(function (resolve, reject) {\\r\\n      writer._readyPromise_resolve = resolve;\\r\\n      writer._readyPromise_reject = reject;\\r\\n    });\\r\\n    writer._readyPromiseState = 'pending';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\\r\\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\\r\\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\\r\\n    writer._readyPromise = Promise.reject(reason);\\r\\n    writer._readyPromiseState = 'rejected';\\r\\n  }\\r\\n  function defaultWriterReadyPromiseResolve(writer) {\\r\\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\\r\\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\\r\\n    writer._readyPromise_resolve(undefined);\\r\\n    writer._readyPromise_resolve = undefined;\\r\\n    writer._readyPromise_reject = undefined;\\r\\n    writer._readyPromiseState = 'fulfilled';\\r\\n  }\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var _require = __w_pdfjs_require__(0),\\r\\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\\r\\n  var _require2 = __w_pdfjs_require__(1),\\r\\n      assert = _require2.assert;\\r\\n  exports.DequeueValue = function (container) {\\r\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\r\\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\\r\\n    var pair = container._queue.shift();\\r\\n    container._queueTotalSize -= pair.size;\\r\\n    if (container._queueTotalSize < 0) {\\r\\n      container._queueTotalSize = 0;\\r\\n    }\\r\\n    return pair.value;\\r\\n  };\\r\\n  exports.EnqueueValueWithSize = function (container, value, size) {\\r\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\\r\\n    size = Number(size);\\r\\n    if (!IsFiniteNonNegativeNumber(size)) {\\r\\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\\r\\n    }\\r\\n    container._queue.push({\\r\\n      value: value,\\r\\n      size: size\\r\\n    });\\r\\n    container._queueTotalSize += size;\\r\\n  };\\r\\n  exports.PeekQueueValue = function (container) {\\r\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\r\\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\\r\\n    var pair = container._queue[0];\\r\\n    return pair.value;\\r\\n  };\\r\\n  exports.ResetQueue = function (container) {\\r\\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\\r\\n    container._queue = [];\\r\\n    container._queueTotalSize = 0;\\r\\n  };\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var _createClass = function () {\\r\\n    function defineProperties(target, props) {\\r\\n      for (var i = 0; i < props.length; i++) {\\r\\n        var descriptor = props[i];\\r\\n        descriptor.enumerable = descriptor.enumerable || false;\\r\\n        descriptor.configurable = true;\\r\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\r\\n        Object.defineProperty(target, descriptor.key, descriptor);\\r\\n      }\\r\\n    }\\r\\n    return function (Constructor, protoProps, staticProps) {\\r\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\r\\n      if (staticProps) defineProperties(Constructor, staticProps);\\r\\n      return Constructor;\\r\\n    };\\r\\n  }();\\r\\n  function _classCallCheck(instance, Constructor) {\\r\\n    if (!(instance instanceof Constructor)) {\\r\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\r\\n    }\\r\\n  }\\r\\n  var _require = __w_pdfjs_require__(0),\\r\\n      ArrayBufferCopy = _require.ArrayBufferCopy,\\r\\n      CreateIterResultObject = _require.CreateIterResultObject,\\r\\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\\r\\n      InvokeOrNoop = _require.InvokeOrNoop,\\r\\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\\r\\n      TransferArrayBuffer = _require.TransferArrayBuffer,\\r\\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\\r\\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\\r\\n  var _require2 = __w_pdfjs_require__(0),\\r\\n      createArrayFromList = _require2.createArrayFromList,\\r\\n      createDataProperty = _require2.createDataProperty,\\r\\n      typeIsObject = _require2.typeIsObject;\\r\\n  var _require3 = __w_pdfjs_require__(1),\\r\\n      assert = _require3.assert,\\r\\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\\r\\n  var _require4 = __w_pdfjs_require__(3),\\r\\n      DequeueValue = _require4.DequeueValue,\\r\\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\\r\\n      ResetQueue = _require4.ResetQueue;\\r\\n  var _require5 = __w_pdfjs_require__(2),\\r\\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\\r\\n      IsWritableStream = _require5.IsWritableStream,\\r\\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\\r\\n      WritableStreamAbort = _require5.WritableStreamAbort,\\r\\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\\r\\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\\r\\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\\r\\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\\r\\n  var ReadableStream = function () {\\r\\n    function ReadableStream() {\\r\\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\r\\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\r\\n          size = _ref.size,\\r\\n          highWaterMark = _ref.highWaterMark;\\r\\n      _classCallCheck(this, ReadableStream);\\r\\n      this._state = 'readable';\\r\\n      this._reader = undefined;\\r\\n      this._storedError = undefined;\\r\\n      this._disturbed = false;\\r\\n      this._readableStreamController = undefined;\\r\\n      var type = underlyingSource.type;\\r\\n      var typeString = String(type);\\r\\n      if (typeString === 'bytes') {\\r\\n        if (highWaterMark === undefined) {\\r\\n          highWaterMark = 0;\\r\\n        }\\r\\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\\r\\n      } else if (type === undefined) {\\r\\n        if (highWaterMark === undefined) {\\r\\n          highWaterMark = 1;\\r\\n        }\\r\\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\\r\\n      } else {\\r\\n        throw new RangeError('Invalid type is specified');\\r\\n      }\\r\\n    }\\r\\n    _createClass(ReadableStream, [{\\r\\n      key: 'cancel',\\r\\n      value: function cancel(reason) {\\r\\n        if (IsReadableStream(this) === false) {\\r\\n          return Promise.reject(streamBrandCheckException('cancel'));\\r\\n        }\\r\\n        if (IsReadableStreamLocked(this) === true) {\\r\\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\\r\\n        }\\r\\n        return ReadableStreamCancel(this, reason);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'getReader',\\r\\n      value: function getReader() {\\r\\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\\r\\n            mode = _ref2.mode;\\r\\n        if (IsReadableStream(this) === false) {\\r\\n          throw streamBrandCheckException('getReader');\\r\\n        }\\r\\n        if (mode === undefined) {\\r\\n          return AcquireReadableStreamDefaultReader(this);\\r\\n        }\\r\\n        mode = String(mode);\\r\\n        if (mode === 'byob') {\\r\\n          return AcquireReadableStreamBYOBReader(this);\\r\\n        }\\r\\n        throw new RangeError('Invalid mode is specified');\\r\\n      }\\r\\n    }, {\\r\\n      key: 'pipeThrough',\\r\\n      value: function pipeThrough(_ref3, options) {\\r\\n        var writable = _ref3.writable,\\r\\n            readable = _ref3.readable;\\r\\n        var promise = this.pipeTo(writable, options);\\r\\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\\r\\n        return readable;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'pipeTo',\\r\\n      value: function pipeTo(dest) {\\r\\n        var _this = this;\\r\\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\\r\\n            preventClose = _ref4.preventClose,\\r\\n            preventAbort = _ref4.preventAbort,\\r\\n            preventCancel = _ref4.preventCancel;\\r\\n        if (IsReadableStream(this) === false) {\\r\\n          return Promise.reject(streamBrandCheckException('pipeTo'));\\r\\n        }\\r\\n        if (IsWritableStream(dest) === false) {\\r\\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\\\'s first argument must be a WritableStream'));\\r\\n        }\\r\\n        preventClose = Boolean(preventClose);\\r\\n        preventAbort = Boolean(preventAbort);\\r\\n        preventCancel = Boolean(preventCancel);\\r\\n        if (IsReadableStreamLocked(this) === true) {\\r\\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\\r\\n        }\\r\\n        if (IsWritableStreamLocked(dest) === true) {\\r\\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\\r\\n        }\\r\\n        var reader = AcquireReadableStreamDefaultReader(this);\\r\\n        var writer = AcquireWritableStreamDefaultWriter(dest);\\r\\n        var shuttingDown = false;\\r\\n        var currentWrite = Promise.resolve();\\r\\n        return new Promise(function (resolve, reject) {\\r\\n          function pipeLoop() {\\r\\n            currentWrite = Promise.resolve();\\r\\n            if (shuttingDown === true) {\\r\\n              return Promise.resolve();\\r\\n            }\\r\\n            return writer._readyPromise.then(function () {\\r\\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\\r\\n                var value = _ref5.value,\\r\\n                    done = _ref5.done;\\r\\n                if (done === true) {\\r\\n                  return;\\r\\n                }\\r\\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\\r\\n              });\\r\\n            }).then(pipeLoop);\\r\\n          }\\r\\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\\r\\n            if (preventAbort === false) {\\r\\n              shutdownWithAction(function () {\\r\\n                return WritableStreamAbort(dest, storedError);\\r\\n              }, true, storedError);\\r\\n            } else {\\r\\n              shutdown(true, storedError);\\r\\n            }\\r\\n          });\\r\\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\\r\\n            if (preventCancel === false) {\\r\\n              shutdownWithAction(function () {\\r\\n                return ReadableStreamCancel(_this, storedError);\\r\\n              }, true, storedError);\\r\\n            } else {\\r\\n              shutdown(true, storedError);\\r\\n            }\\r\\n          });\\r\\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\\r\\n            if (preventClose === false) {\\r\";a.a+=\"\\n              shutdownWithAction(function () {\\r\\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\\r\\n              });\\r\\n            } else {\\r\\n              shutdown();\\r\\n            }\\r\\n          });\\r\\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\\r\\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\\r\\n            if (preventCancel === false) {\\r\\n              shutdownWithAction(function () {\\r\\n                return ReadableStreamCancel(_this, destClosed);\\r\\n              }, true, destClosed);\\r\\n            } else {\\r\\n              shutdown(true, destClosed);\\r\\n            }\\r\\n          }\\r\\n          pipeLoop().catch(function (err) {\\r\\n            currentWrite = Promise.resolve();\\r\\n            rethrowAssertionErrorRejection(err);\\r\\n          });\\r\\n          function waitForWritesToFinish() {\\r\\n            var oldCurrentWrite = currentWrite;\\r\\n            return currentWrite.then(function () {\\r\\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\\r\\n            });\\r\\n          }\\r\\n          function isOrBecomesErrored(stream, promise, action) {\\r\\n            if (stream._state === 'errored') {\\r\\n              action(stream._storedError);\\r\\n            } else {\\r\\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\\r\\n            }\\r\\n          }\\r\\n          function isOrBecomesClosed(stream, promise, action) {\\r\\n            if (stream._state === 'closed') {\\r\\n              action();\\r\\n            } else {\\r\\n              promise.then(action).catch(rethrowAssertionErrorRejection);\\r\\n            }\\r\\n          }\\r\\n          function shutdownWithAction(action, originalIsError, originalError) {\\r\\n            if (shuttingDown === true) {\\r\\n              return;\\r\\n            }\\r\\n            shuttingDown = true;\\r\\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\\r\\n              waitForWritesToFinish().then(doTheRest);\\r\\n            } else {\\r\\n              doTheRest();\\r\\n            }\\r\\n            function doTheRest() {\\r\\n              action().then(function () {\\r\\n                return finalize(originalIsError, originalError);\\r\\n              }, function (newError) {\\r\\n                return finalize(true, newError);\\r\\n              }).catch(rethrowAssertionErrorRejection);\\r\\n            }\\r\\n          }\\r\\n          function shutdown(isError, error) {\\r\\n            if (shuttingDown === true) {\\r\\n              return;\\r\\n            }\\r\\n            shuttingDown = true;\\r\\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\\r\\n              waitForWritesToFinish().then(function () {\\r\\n                return finalize(isError, error);\\r\\n              }).catch(rethrowAssertionErrorRejection);\\r\\n            } else {\\r\\n              finalize(isError, error);\\r\\n            }\\r\\n          }\\r\\n          function finalize(isError, error) {\\r\\n            WritableStreamDefaultWriterRelease(writer);\\r\\n            ReadableStreamReaderGenericRelease(reader);\\r\\n            if (isError) {\\r\\n              reject(error);\\r\\n            } else {\\r\\n              resolve(undefined);\\r\\n            }\\r\\n          }\\r\\n        });\\r\\n      }\\r\\n    }, {\\r\\n      key: 'tee',\\r\\n      value: function tee() {\\r\\n        if (IsReadableStream(this) === false) {\\r\\n          throw streamBrandCheckException('tee');\\r\\n        }\\r\\n        var branches = ReadableStreamTee(this, false);\\r\\n        return createArrayFromList(branches);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'locked',\\r\\n      get: function get() {\\r\\n        if (IsReadableStream(this) === false) {\\r\\n          throw streamBrandCheckException('locked');\\r\\n        }\\r\\n        return IsReadableStreamLocked(this);\\r\\n      }\\r\\n    }]);\\r\\n    return ReadableStream;\\r\\n  }();\\r\\n  module.exports = {\\r\\n    ReadableStream: ReadableStream,\\r\\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\\r\\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\\r\\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\\r\\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\\r\\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\\r\\n  };\\r\\n  function AcquireReadableStreamBYOBReader(stream) {\\r\\n    return new ReadableStreamBYOBReader(stream);\\r\\n  }\\r\\n  function AcquireReadableStreamDefaultReader(stream) {\\r\\n    return new ReadableStreamDefaultReader(stream);\\r\\n  }\\r\\n  function IsReadableStream(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function IsReadableStreamDisturbed(stream) {\\r\\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\\r\\n    return stream._disturbed;\\r\\n  }\\r\\n  function IsReadableStreamLocked(stream) {\\r\\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\\r\\n    if (stream._reader === undefined) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function ReadableStreamTee(stream, cloneForBranch2) {\\r\\n    assert(IsReadableStream(stream) === true);\\r\\n    assert(typeof cloneForBranch2 === 'boolean');\\r\\n    var reader = AcquireReadableStreamDefaultReader(stream);\\r\\n    var teeState = {\\r\\n      closedOrErrored: false,\\r\\n      canceled1: false,\\r\\n      canceled2: false,\\r\\n      reason1: undefined,\\r\\n      reason2: undefined\\r\\n    };\\r\\n    teeState.promise = new Promise(function (resolve) {\\r\\n      teeState._resolve = resolve;\\r\\n    });\\r\\n    var pull = create_ReadableStreamTeePullFunction();\\r\\n    pull._reader = reader;\\r\\n    pull._teeState = teeState;\\r\\n    pull._cloneForBranch2 = cloneForBranch2;\\r\\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\\r\\n    cancel1._stream = stream;\\r\\n    cancel1._teeState = teeState;\\r\\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\\r\\n    cancel2._stream = stream;\\r\\n    cancel2._teeState = teeState;\\r\\n    var underlyingSource1 = Object.create(Object.prototype);\\r\\n    createDataProperty(underlyingSource1, 'pull', pull);\\r\\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\\r\\n    var branch1Stream = new ReadableStream(underlyingSource1);\\r\\n    var underlyingSource2 = Object.create(Object.prototype);\\r\\n    createDataProperty(underlyingSource2, 'pull', pull);\\r\\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\\r\\n    var branch2Stream = new ReadableStream(underlyingSource2);\\r\\n    pull._branch1 = branch1Stream._readableStreamController;\\r\\n    pull._branch2 = branch2Stream._readableStreamController;\\r\\n    reader._closedPromise.catch(function (r) {\\r\\n      if (teeState.closedOrErrored === true) {\\r\\n        return;\\r\\n      }\\r\\n      ReadableStreamDefaultControllerError(pull._branch1, r);\\r\\n      ReadableStreamDefaultControllerError(pull._branch2, r);\\r\\n      teeState.closedOrErrored = true;\\r\\n    });\\r\\n    return [branch1Stream, branch2Stream];\\r\\n  }\\r\\n  function create_ReadableStreamTeePullFunction() {\\r\\n    function f() {\\r\\n      var reader = f._reader,\\r\\n          branch1 = f._branch1,\\r\\n          branch2 = f._branch2,\\r\\n          teeState = f._teeState;\\r\\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\\r\\n        assert(typeIsObject(result));\\r\\n        var value = result.value;\\r\\n        var done = result.done;\\r\\n        assert(typeof done === 'boolean');\\r\\n        if (done === true && teeState.closedOrErrored === false) {\\r\\n          if (teeState.canceled1 === false) {\\r\\n            ReadableStreamDefaultControllerClose(branch1);\\r\\n          }\\r\\n          if (teeState.canceled2 === false) {\\r\\n            ReadableStreamDefaultControllerClose(branch2);\\r\\n          }\\r\\n          teeState.closedOrErrored = true;\\r\\n        }\\r\\n        if (teeState.closedOrErrored === true) {\\r\\n          return;\\r\\n        }\\r\\n        var value1 = value;\\r\\n        var value2 = value;\\r\\n        if (teeState.canceled1 === false) {\\r\\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\\r\\n        }\\r\\n        if (teeState.canceled2 === false) {\\r\\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n    return f;\\r\\n  }\\r\\n  function create_ReadableStreamTeeBranch1CancelFunction() {\\r\\n    function f(reason) {\\r\\n      var stream = f._stream,\\r\\n          teeState = f._teeState;\\r\\n      teeState.canceled1 = true;\\r\\n      teeState.reason1 = reason;\\r\\n      if (teeState.canceled2 === true) {\\r\\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\\r\\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\\r\\n        teeState._resolve(cancelResult);\\r\\n      }\\r\\n      return teeState.promise;\\r\\n    }\\r\\n    return f;\\r\\n  }\\r\\n  function create_ReadableStreamTeeBranch2CancelFunction() {\\r\\n    function f(reason) {\\r\\n      var stream = f._stream,\\r\\n          teeState = f._teeState;\\r\\n      teeState.canceled2 = true;\\r\\n      teeState.reason2 = reason;\\r\\n      if (teeState.canceled1 === true) {\\r\\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\\r\\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\\r\\n        teeState._resolve(cancelResult);\\r\\n      }\\r\\n      return teeState.promise;\\r\\n    }\\r\\n    return f;\\r\\n  }\\r\\n  function ReadableStreamAddReadIntoRequest(stream) {\\r\\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\\r\\n    assert(stream._state === 'readable' || stream._state === 'closed');\\r\\n    var promise = new Promise(function (resolve, reject) {\\r\\n      var readIntoRequest = {\\r\\n        _resolve: resolve,\\r\\n        _reject: reject\\r\\n      };\\r\\n      stream._reader._readIntoRequests.push(readIntoRequest);\\r\\n    });\\r\\n    return promise;\\r\\n  }\\r\\n  function ReadableStreamAddReadRequest(stream) {\\r\\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\\r\\n    assert(stream._state === 'readable');\\r\\n    var promise = new Promise(function (resolve, reject) {\\r\\n      var readRequest = {\\r\\n        _resolve: resolve,\\r\\n        _reject: reject\\r\\n      };\\r\\n      stream._reader._readRequests.push(readRequest);\\r\\n    });\\r\\n    return promise;\\r\\n  }\\r\\n  function ReadableStreamCancel(stream, reason) {\\r\\n    stream._disturbed = true;\\r\\n    if (stream._state === 'closed') {\\r\\n      return Promise.resolve(undefined);\\r\\n    }\\r\\n    if (stream._state === 'errored') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    ReadableStreamClose(stream);\\r\\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\\r\\n    return sourceCancelPromise.then(function () {\\r\\n      return undefined;\\r\\n    });\\r\\n  }\\r\\n  function ReadableStreamClose(stream) {\\r\\n    assert(stream._state === 'readable');\\r\\n    stream._state = 'closed';\\r\\n    var reader = stream._reader;\\r\\n    if (reader === undefined) {\\r\\n      return undefined;\\r\\n    }\\r\\n    if (IsReadableStreamDefaultReader(reader) === true) {\\r\\n      for (var i = 0; i < reader._readRequests.length; i++) {\\r\\n        var _resolve = reader._readRequests[i]._resolve;\\r\\n        _resolve(CreateIterResultObject(undefined, true));\\r\\n      }\\r\\n      reader._readRequests = [];\\r\\n    }\\r\\n    defaultReaderClosedPromiseResolve(reader);\\r\\n    return undefined;\\r\\n  }\\r\\n  function ReadableStreamError(stream, e) {\\r\\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\\r\\n    assert(stream._state === 'readable', 'state must be readable');\\r\\n    stream._state = 'errored';\\r\\n    stream._storedError = e;\\r\\n    var reader = stream._reader;\\r\\n    if (reader === undefined) {\\r\\n      return undefined;\\r\\n    }\\r\\n    if (IsReadableStreamDefaultReader(reader) === true) {\\r\\n      for (var i = 0; i < reader._readRequests.length; i++) {\\r\\n        var readRequest = reader._readRequests[i];\\r\\n        readRequest._reject(e);\\r\\n      }\\r\\n      reader._readRequests = [];\\r\\n    } else {\\r\\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\\r\\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\\r\\n        var readIntoRequest = reader._readIntoRequests[_i];\\r\\n        readIntoRequest._reject(e);\\r\\n      }\\r\\n      reader._readIntoRequests = [];\\r\\n    }\\r\\n    defaultReaderClosedPromiseReject(reader, e);\\r\\n    reader._closedPromise.catch(function () {});\\r\\n  }\\r\\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\\r\\n    var reader = stream._reader;\\r\\n    assert(reader._readIntoRequests.length > 0);\\r\\n    var readIntoRequest = reader._readIntoRequests.shift();\\r\\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\\r\\n  }\\r\\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\\r\\n    var reader = stream._reader;\\r\\n    assert(reader._readRequests.length > 0);\\r\\n    var readRequest = reader._readRequests.shift();\\r\\n    readRequest._resolve(CreateIterResultObject(chunk, done));\\r\\n  }\\r\\n  function ReadableStreamGetNumReadIntoRequests(stream) {\\r\\n    return stream._reader._readIntoRequests.length;\\r\\n  }\\r\\n  function ReadableStreamGetNumReadRequests(stream) {\\r\\n    return stream._reader._readRequests.length;\\r\\n  }\\r\\n  function ReadableStreamHasBYOBReader(stream) {\\r\\n    var reader = stream._reader;\\r\\n    if (reader === undefined) {\\r\\n      return false;\\r\\n    }\\r\\n    if (IsReadableStreamBYOBReader(reader) === false) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function ReadableStreamHasDefaultReader(stream) {\\r\\n    var reader = stream._reader;\\r\\n    if (reader === undefined) {\\r\\n      return false;\\r\\n    }\\r\\n    if (IsReadableStreamDefaultReader(reader) === false) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  var ReadableStreamDefaultReader = function () {\\r\\n    function ReadableStreamDefaultReader(stream) {\\r\\n      _classCallCheck(this, ReadableStreamDefaultReader);\\r\\n      if (IsReadableStream(stream) === false) {\\r\\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\\r\\n      }\\r\\n      if (IsReadableStreamLocked(stream) === true) {\\r\\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\\r\\n      }\\r\\n      ReadableStreamReaderGenericInitialize(this, stream);\\r\\n      this._readRequests = [];\\r\\n    }\\r\\n    _createClass(ReadableStreamDefaultReader, [{\\r\\n      key: 'cancel',\\r\\n      value: function cancel(reason) {\\r\\n        if (IsReadableStreamDefaultReader(this) === false) {\\r\\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\\r\\n        }\\r\\n        if (this._ownerReadableStream === undefined) {\\r\\n          return Promise.reject(readerLockException('cancel'));\\r\\n        }\\r\\n        return ReadableStreamReaderGenericCancel(this, reason);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'read',\\r\\n      value: function read() {\\r\\n        if (IsReadableStreamDefaultReader(this) === false) {\\r\\n          return Promise.reject(defaultReaderBrandCheckException('read'));\\r\\n        }\\r\\n        if (this._ownerReadableStream === undefined) {\\r\\n          return Promise.reject(readerLockException('read from'));\\r\\n        }\\r\\n        return ReadableStreamDefaultReaderRead(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'releaseLock',\\r\\n      value: function releaseLock() {\\r\\n        if (IsReadableStreamDefaultReader(this) === false) {\\r\\n          throw defaultReaderBrandCheckException('releaseLock');\\r\\n        }\\r\\n        if (this._ownerReadableStream === undefined) {\\r\\n          return;\\r\\n        }\\r\\n        if (this._readRequests.length > 0) {\\r\\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\\r\\n        }\\r\\n        ReadableStreamReaderGenericRelease(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'closed',\\r\\n      get: function get() {\\r\\n        if (IsReadableStreamDefaultReader(this) === false) {\\r\\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\\r\\n        }\\r\\n        return this._closedPromise;\\r\\n      }\\r\\n    }]);\\r\\n    return ReadableStreamDefaultReader;\\r\\n  }();\\r\\n  var ReadableStreamBYOBReader = function () {\\r\\n    function ReadableStreamBYOBReader(stream) {\\r\\n      _classCallCheck(this, ReadableStreamBYOBReader);\\r\\n      if (!IsReadableStream(stream)) {\\r\\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\\r\\n      }\\r\\n      if (IsReadableByteStreamControlle\";a.a+=\"r(stream._readableStreamController) === false) {\\r\\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\\r\\n      }\\r\\n      if (IsReadableStreamLocked(stream)) {\\r\\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\\r\\n      }\\r\\n      ReadableStreamReaderGenericInitialize(this, stream);\\r\\n      this._readIntoRequests = [];\\r\\n    }\\r\\n    _createClass(ReadableStreamBYOBReader, [{\\r\\n      key: 'cancel',\\r\\n      value: function cancel(reason) {\\r\\n        if (!IsReadableStreamBYOBReader(this)) {\\r\\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\\r\\n        }\\r\\n        if (this._ownerReadableStream === undefined) {\\r\\n          return Promise.reject(readerLockException('cancel'));\\r\\n        }\\r\\n        return ReadableStreamReaderGenericCancel(this, reason);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'read',\\r\\n      value: function read(view) {\\r\\n        if (!IsReadableStreamBYOBReader(this)) {\\r\\n          return Promise.reject(byobReaderBrandCheckException('read'));\\r\\n        }\\r\\n        if (this._ownerReadableStream === undefined) {\\r\\n          return Promise.reject(readerLockException('read from'));\\r\\n        }\\r\\n        if (!ArrayBuffer.isView(view)) {\\r\\n          return Promise.reject(new TypeError('view must be an array buffer view'));\\r\\n        }\\r\\n        if (view.byteLength === 0) {\\r\\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\\r\\n        }\\r\\n        return ReadableStreamBYOBReaderRead(this, view);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'releaseLock',\\r\\n      value: function releaseLock() {\\r\\n        if (!IsReadableStreamBYOBReader(this)) {\\r\\n          throw byobReaderBrandCheckException('releaseLock');\\r\\n        }\\r\\n        if (this._ownerReadableStream === undefined) {\\r\\n          return;\\r\\n        }\\r\\n        if (this._readIntoRequests.length > 0) {\\r\\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\\r\\n        }\\r\\n        ReadableStreamReaderGenericRelease(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'closed',\\r\\n      get: function get() {\\r\\n        if (!IsReadableStreamBYOBReader(this)) {\\r\\n          return Promise.reject(byobReaderBrandCheckException('closed'));\\r\\n        }\\r\\n        return this._closedPromise;\\r\\n      }\\r\\n    }]);\\r\\n    return ReadableStreamBYOBReader;\\r\\n  }();\\r\\n  function IsReadableStreamBYOBReader(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function IsReadableStreamDefaultReader(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\\r\\n    reader._ownerReadableStream = stream;\\r\\n    stream._reader = reader;\\r\\n    if (stream._state === 'readable') {\\r\\n      defaultReaderClosedPromiseInitialize(reader);\\r\\n    } else if (stream._state === 'closed') {\\r\\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\\r\\n    } else {\\r\\n      assert(stream._state === 'errored', 'state must be errored');\\r\\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\\r\\n      reader._closedPromise.catch(function () {});\\r\\n    }\\r\\n  }\\r\\n  function ReadableStreamReaderGenericCancel(reader, reason) {\\r\\n    var stream = reader._ownerReadableStream;\\r\\n    assert(stream !== undefined);\\r\\n    return ReadableStreamCancel(stream, reason);\\r\\n  }\\r\\n  function ReadableStreamReaderGenericRelease(reader) {\\r\\n    assert(reader._ownerReadableStream !== undefined);\\r\\n    assert(reader._ownerReadableStream._reader === reader);\\r\\n    if (reader._ownerReadableStream._state === 'readable') {\\r\\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\\\'s closedness'));\\r\\n    } else {\\r\\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\\\'s closedness'));\\r\\n    }\\r\\n    reader._closedPromise.catch(function () {});\\r\\n    reader._ownerReadableStream._reader = undefined;\\r\\n    reader._ownerReadableStream = undefined;\\r\\n  }\\r\\n  function ReadableStreamBYOBReaderRead(reader, view) {\\r\\n    var stream = reader._ownerReadableStream;\\r\\n    assert(stream !== undefined);\\r\\n    stream._disturbed = true;\\r\\n    if (stream._state === 'errored') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\\r\\n  }\\r\\n  function ReadableStreamDefaultReaderRead(reader) {\\r\\n    var stream = reader._ownerReadableStream;\\r\\n    assert(stream !== undefined);\\r\\n    stream._disturbed = true;\\r\\n    if (stream._state === 'closed') {\\r\\n      return Promise.resolve(CreateIterResultObject(undefined, true));\\r\\n    }\\r\\n    if (stream._state === 'errored') {\\r\\n      return Promise.reject(stream._storedError);\\r\\n    }\\r\\n    assert(stream._state === 'readable');\\r\\n    return stream._readableStreamController.__pullSteps();\\r\\n  }\\r\\n  var ReadableStreamDefaultController = function () {\\r\\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\\r\\n      _classCallCheck(this, ReadableStreamDefaultController);\\r\\n      if (IsReadableStream(stream) === false) {\\r\\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\\r\\n      }\\r\\n      if (stream._readableStreamController !== undefined) {\\r\\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\\r\\n      }\\r\\n      this._controlledReadableStream = stream;\\r\\n      this._underlyingSource = underlyingSource;\\r\\n      this._queue = undefined;\\r\\n      this._queueTotalSize = undefined;\\r\\n      ResetQueue(this);\\r\\n      this._started = false;\\r\\n      this._closeRequested = false;\\r\\n      this._pullAgain = false;\\r\\n      this._pulling = false;\\r\\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\\r\\n      this._strategySize = normalizedStrategy.size;\\r\\n      this._strategyHWM = normalizedStrategy.highWaterMark;\\r\\n      var controller = this;\\r\\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\\r\\n      Promise.resolve(startResult).then(function () {\\r\\n        controller._started = true;\\r\\n        assert(controller._pulling === false);\\r\\n        assert(controller._pullAgain === false);\\r\\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\r\\n      }, function (r) {\\r\\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\\r\\n      }).catch(rethrowAssertionErrorRejection);\\r\\n    }\\r\\n    _createClass(ReadableStreamDefaultController, [{\\r\\n      key: 'close',\\r\\n      value: function close() {\\r\\n        if (IsReadableStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('close');\\r\\n        }\\r\\n        if (this._closeRequested === true) {\\r\\n          throw new TypeError('The stream has already been closed; do not close it again!');\\r\\n        }\\r\\n        var state = this._controlledReadableStream._state;\\r\\n        if (state !== 'readable') {\\r\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\\r\\n        }\\r\\n        ReadableStreamDefaultControllerClose(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'enqueue',\\r\\n      value: function enqueue(chunk) {\\r\\n        if (IsReadableStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('enqueue');\\r\\n        }\\r\\n        if (this._closeRequested === true) {\\r\\n          throw new TypeError('stream is closed or draining');\\r\\n        }\\r\\n        var state = this._controlledReadableStream._state;\\r\\n        if (state !== 'readable') {\\r\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\\r\\n        }\\r\\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'error',\\r\\n      value: function error(e) {\\r\\n        if (IsReadableStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('error');\\r\\n        }\\r\\n        var stream = this._controlledReadableStream;\\r\\n        if (stream._state !== 'readable') {\\r\\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\\r\\n        }\\r\\n        ReadableStreamDefaultControllerError(this, e);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__cancelSteps',\\r\\n      value: function __cancelSteps(reason) {\\r\\n        ResetQueue(this);\\r\\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__pullSteps',\\r\\n      value: function __pullSteps() {\\r\\n        var stream = this._controlledReadableStream;\\r\\n        if (this._queue.length > 0) {\\r\\n          var chunk = DequeueValue(this);\\r\\n          if (this._closeRequested === true && this._queue.length === 0) {\\r\\n            ReadableStreamClose(stream);\\r\\n          } else {\\r\\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\\r\\n          }\\r\\n          return Promise.resolve(CreateIterResultObject(chunk, false));\\r\\n        }\\r\\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\\r\\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\\r\\n        return pendingPromise;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'desiredSize',\\r\\n      get: function get() {\\r\\n        if (IsReadableStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('desiredSize');\\r\\n        }\\r\\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\\r\\n      }\\r\\n    }]);\\r\\n    return ReadableStreamDefaultController;\\r\\n  }();\\r\\n  function IsReadableStreamDefaultController(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\\r\\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\\r\\n    if (shouldPull === false) {\\r\\n      return undefined;\\r\\n    }\\r\\n    if (controller._pulling === true) {\\r\\n      controller._pullAgain = true;\\r\\n      return undefined;\\r\\n    }\\r\\n    assert(controller._pullAgain === false);\\r\\n    controller._pulling = true;\\r\\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\\r\\n    pullPromise.then(function () {\\r\\n      controller._pulling = false;\\r\\n      if (controller._pullAgain === true) {\\r\\n        controller._pullAgain = false;\\r\\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\r\\n      }\\r\\n      return undefined;\\r\\n    }, function (e) {\\r\\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\\r\\n    }).catch(rethrowAssertionErrorRejection);\\r\\n    return undefined;\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    if (stream._state === 'closed' || stream._state === 'errored') {\\r\\n      return false;\\r\\n    }\\r\\n    if (controller._closeRequested === true) {\\r\\n      return false;\\r\\n    }\\r\\n    if (controller._started === false) {\\r\\n      return false;\\r\\n    }\\r\\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\r\\n      return true;\\r\\n    }\\r\\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\\r\\n    if (desiredSize > 0) {\\r\\n      return true;\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerClose(controller) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    assert(controller._closeRequested === false);\\r\\n    assert(stream._state === 'readable');\\r\\n    controller._closeRequested = true;\\r\\n    if (controller._queue.length === 0) {\\r\\n      ReadableStreamClose(stream);\\r\\n    }\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    assert(controller._closeRequested === false);\\r\\n    assert(stream._state === 'readable');\\r\\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\r\\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\\r\\n    } else {\\r\\n      var chunkSize = 1;\\r\\n      if (controller._strategySize !== undefined) {\\r\\n        var strategySize = controller._strategySize;\\r\\n        try {\\r\\n          chunkSize = strategySize(chunk);\\r\\n        } catch (chunkSizeE) {\\r\\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\\r\\n          throw chunkSizeE;\\r\\n        }\\r\\n      }\\r\\n      try {\\r\\n        EnqueueValueWithSize(controller, chunk, chunkSize);\\r\\n      } catch (enqueueE) {\\r\\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\\r\\n        throw enqueueE;\\r\\n      }\\r\\n    }\\r\\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\\r\\n    return undefined;\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerError(controller, e) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    assert(stream._state === 'readable');\\r\\n    ResetQueue(controller);\\r\\n    ReadableStreamError(stream, e);\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\\r\\n    if (controller._controlledReadableStream._state === 'readable') {\\r\\n      ReadableStreamDefaultControllerError(controller, e);\\r\\n    }\\r\\n  }\\r\\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    var state = stream._state;\\r\\n    if (state === 'errored') {\\r\\n      return null;\\r\\n    }\\r\\n    if (state === 'closed') {\\r\\n      return 0;\\r\\n    }\\r\\n    return controller._strategyHWM - controller._queueTotalSize;\\r\\n  }\\r\\n  var ReadableStreamBYOBRequest = function () {\\r\\n    function ReadableStreamBYOBRequest(controller, view) {\\r\\n      _classCallCheck(this, ReadableStreamBYOBRequest);\\r\\n      this._associatedReadableByteStreamController = controller;\\r\\n      this._view = view;\\r\\n    }\\r\\n    _createClass(ReadableStreamBYOBRequest, [{\\r\\n      key: 'respond',\\r\\n      value: function respond(bytesWritten) {\\r\\n        if (IsReadableStreamBYOBRequest(this) === false) {\\r\\n          throw byobRequestBrandCheckException('respond');\\r\\n        }\\r\\n        if (this._associatedReadableByteStreamController === undefined) {\\r\\n          throw new TypeError('This BYOB request has been invalidated');\\r\\n        }\\r\\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'respondWithNewView',\\r\\n      value: function respondWithNewView(view) {\\r\\n        if (IsReadableStreamBYOBRequest(this) === false) {\\r\\n          throw byobRequestBrandCheckException('respond');\\r\\n        }\\r\\n        if (this._associatedReadableByteStreamController === undefined) {\\r\\n          throw new TypeError('This BYOB request has been invalidated');\\r\\n        }\\r\\n        if (!ArrayBuffer.isView(view)) {\\r\\n          throw new TypeError('You can only respond with array buffer views');\\r\\n        }\\r\\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'view',\\r\\n      get: function get() {\\r\\n        return this._view;\\r\\n      }\\r\\n    }]);\\r\\n    return ReadableStreamBYOBRequest;\\r\\n  }();\\r\\n  var ReadableByteStreamController = function () {\\r\\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\\r\\n      _classCallCheck(this, ReadableByteStreamController);\\r\\n      if (IsReadableStream(stream) === false) {\\r\\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\\r\\n      }\\r\\n      if (stream._readableStreamController !== undefined) {\\r\\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\\r\\n      }\\r\\n      this._controlledReadableStream = stream;\\r\\n      this._underlyingByteSource = underlyingByteSource;\\r\\n      this._pullAgain = false;\\r\\n      this._pulling = false;\\r\\n      ReadableByteStreamControllerClearPendingPullIntos(this);\\r\\n     \";a.a+=\" this._queue = this._queueTotalSize = undefined;\\r\\n      ResetQueue(this);\\r\\n      this._closeRequested = false;\\r\\n      this._started = false;\\r\\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\\r\\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\\r\\n      if (autoAllocateChunkSize !== undefined) {\\r\\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\\r\\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\\r\\n        }\\r\\n      }\\r\\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\\r\\n      this._pendingPullIntos = [];\\r\\n      var controller = this;\\r\\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\\r\\n      Promise.resolve(startResult).then(function () {\\r\\n        controller._started = true;\\r\\n        assert(controller._pulling === false);\\r\\n        assert(controller._pullAgain === false);\\r\\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\\r\\n      }, function (r) {\\r\\n        if (stream._state === 'readable') {\\r\\n          ReadableByteStreamControllerError(controller, r);\\r\\n        }\\r\\n      }).catch(rethrowAssertionErrorRejection);\\r\\n    }\\r\\n    _createClass(ReadableByteStreamController, [{\\r\\n      key: 'close',\\r\\n      value: function close() {\\r\\n        if (IsReadableByteStreamController(this) === false) {\\r\\n          throw byteStreamControllerBrandCheckException('close');\\r\\n        }\\r\\n        if (this._closeRequested === true) {\\r\\n          throw new TypeError('The stream has already been closed; do not close it again!');\\r\\n        }\\r\\n        var state = this._controlledReadableStream._state;\\r\\n        if (state !== 'readable') {\\r\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\\r\\n        }\\r\\n        ReadableByteStreamControllerClose(this);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'enqueue',\\r\\n      value: function enqueue(chunk) {\\r\\n        if (IsReadableByteStreamController(this) === false) {\\r\\n          throw byteStreamControllerBrandCheckException('enqueue');\\r\\n        }\\r\\n        if (this._closeRequested === true) {\\r\\n          throw new TypeError('stream is closed or draining');\\r\\n        }\\r\\n        var state = this._controlledReadableStream._state;\\r\\n        if (state !== 'readable') {\\r\\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\\r\\n        }\\r\\n        if (!ArrayBuffer.isView(chunk)) {\\r\\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\\r\\n        }\\r\\n        ReadableByteStreamControllerEnqueue(this, chunk);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'error',\\r\\n      value: function error(e) {\\r\\n        if (IsReadableByteStreamController(this) === false) {\\r\\n          throw byteStreamControllerBrandCheckException('error');\\r\\n        }\\r\\n        var stream = this._controlledReadableStream;\\r\\n        if (stream._state !== 'readable') {\\r\\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\\r\\n        }\\r\\n        ReadableByteStreamControllerError(this, e);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__cancelSteps',\\r\\n      value: function __cancelSteps(reason) {\\r\\n        if (this._pendingPullIntos.length > 0) {\\r\\n          var firstDescriptor = this._pendingPullIntos[0];\\r\\n          firstDescriptor.bytesFilled = 0;\\r\\n        }\\r\\n        ResetQueue(this);\\r\\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\\r\\n      }\\r\\n    }, {\\r\\n      key: '__pullSteps',\\r\\n      value: function __pullSteps() {\\r\\n        var stream = this._controlledReadableStream;\\r\\n        assert(ReadableStreamHasDefaultReader(stream) === true);\\r\\n        if (this._queueTotalSize > 0) {\\r\\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\\r\\n          var entry = this._queue.shift();\\r\\n          this._queueTotalSize -= entry.byteLength;\\r\\n          ReadableByteStreamControllerHandleQueueDrain(this);\\r\\n          var view = void 0;\\r\\n          try {\\r\\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\\r\\n          } catch (viewE) {\\r\\n            return Promise.reject(viewE);\\r\\n          }\\r\\n          return Promise.resolve(CreateIterResultObject(view, false));\\r\\n        }\\r\\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\\r\\n        if (autoAllocateChunkSize !== undefined) {\\r\\n          var buffer = void 0;\\r\\n          try {\\r\\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\\r\\n          } catch (bufferE) {\\r\\n            return Promise.reject(bufferE);\\r\\n          }\\r\\n          var pullIntoDescriptor = {\\r\\n            buffer: buffer,\\r\\n            byteOffset: 0,\\r\\n            byteLength: autoAllocateChunkSize,\\r\\n            bytesFilled: 0,\\r\\n            elementSize: 1,\\r\\n            ctor: Uint8Array,\\r\\n            readerType: 'default'\\r\\n          };\\r\\n          this._pendingPullIntos.push(pullIntoDescriptor);\\r\\n        }\\r\\n        var promise = ReadableStreamAddReadRequest(stream);\\r\\n        ReadableByteStreamControllerCallPullIfNeeded(this);\\r\\n        return promise;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'byobRequest',\\r\\n      get: function get() {\\r\\n        if (IsReadableByteStreamController(this) === false) {\\r\\n          throw byteStreamControllerBrandCheckException('byobRequest');\\r\\n        }\\r\\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\\r\\n          var firstDescriptor = this._pendingPullIntos[0];\\r\\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\\r\\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\\r\\n        }\\r\\n        return this._byobRequest;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'desiredSize',\\r\\n      get: function get() {\\r\\n        if (IsReadableByteStreamController(this) === false) {\\r\\n          throw byteStreamControllerBrandCheckException('desiredSize');\\r\\n        }\\r\\n        return ReadableByteStreamControllerGetDesiredSize(this);\\r\\n      }\\r\\n    }]);\\r\\n    return ReadableByteStreamController;\\r\\n  }();\\r\\n  function IsReadableByteStreamController(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function IsReadableStreamBYOBRequest(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\\r\\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\\r\\n    if (shouldPull === false) {\\r\\n      return undefined;\\r\\n    }\\r\\n    if (controller._pulling === true) {\\r\\n      controller._pullAgain = true;\\r\\n      return undefined;\\r\\n    }\\r\\n    assert(controller._pullAgain === false);\\r\\n    controller._pulling = true;\\r\\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\\r\\n    pullPromise.then(function () {\\r\\n      controller._pulling = false;\\r\\n      if (controller._pullAgain === true) {\\r\\n        controller._pullAgain = false;\\r\\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\\r\\n      }\\r\\n    }, function (e) {\\r\\n      if (controller._controlledReadableStream._state === 'readable') {\\r\\n        ReadableByteStreamControllerError(controller, e);\\r\\n      }\\r\\n    }).catch(rethrowAssertionErrorRejection);\\r\\n    return undefined;\\r\\n  }\\r\\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\\r\\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\r\\n    controller._pendingPullIntos = [];\\r\\n  }\\r\\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\\r\\n    assert(stream._state !== 'errored', 'state must not be errored');\\r\\n    var done = false;\\r\\n    if (stream._state === 'closed') {\\r\\n      assert(pullIntoDescriptor.bytesFilled === 0);\\r\\n      done = true;\\r\\n    }\\r\\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\\r\\n    if (pullIntoDescriptor.readerType === 'default') {\\r\\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\\r\\n    } else {\\r\\n      assert(pullIntoDescriptor.readerType === 'byob');\\r\\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\\r\\n    }\\r\\n  }\\r\\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\\r\\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\\r\\n    var elementSize = pullIntoDescriptor.elementSize;\\r\\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\\r\\n    assert(bytesFilled % elementSize === 0);\\r\\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\\r\\n  }\\r\\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\\r\\n    controller._queue.push({\\r\\n      buffer: buffer,\\r\\n      byteOffset: byteOffset,\\r\\n      byteLength: byteLength\\r\\n    });\\r\\n    controller._queueTotalSize += byteLength;\\r\\n  }\\r\\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\\r\\n    var elementSize = pullIntoDescriptor.elementSize;\\r\\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\\r\\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\\r\\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\\r\\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\\r\\n    var totalBytesToCopyRemaining = maxBytesToCopy;\\r\\n    var ready = false;\\r\\n    if (maxAlignedBytes > currentAlignedBytes) {\\r\\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\\r\\n      ready = true;\\r\\n    }\\r\\n    var queue = controller._queue;\\r\\n    while (totalBytesToCopyRemaining > 0) {\\r\\n      var headOfQueue = queue[0];\\r\\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\\r\\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\\r\\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\\r\\n      if (headOfQueue.byteLength === bytesToCopy) {\\r\\n        queue.shift();\\r\\n      } else {\\r\\n        headOfQueue.byteOffset += bytesToCopy;\\r\\n        headOfQueue.byteLength -= bytesToCopy;\\r\\n      }\\r\\n      controller._queueTotalSize -= bytesToCopy;\\r\\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\\r\\n      totalBytesToCopyRemaining -= bytesToCopy;\\r\\n    }\\r\\n    if (ready === false) {\\r\\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\\r\\n      assert(pullIntoDescriptor.bytesFilled > 0);\\r\\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\\r\\n    }\\r\\n    return ready;\\r\\n  }\\r\\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\\r\\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\\r\\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\r\\n    pullIntoDescriptor.bytesFilled += size;\\r\\n  }\\r\\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\\r\\n    assert(controller._controlledReadableStream._state === 'readable');\\r\\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\\r\\n      ReadableStreamClose(controller._controlledReadableStream);\\r\\n    } else {\\r\\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\\r\\n    }\\r\\n  }\\r\\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\\r\\n    if (controller._byobRequest === undefined) {\\r\\n      return;\\r\\n    }\\r\\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\\r\\n    controller._byobRequest._view = undefined;\\r\\n    controller._byobRequest = undefined;\\r\\n  }\\r\\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\\r\\n    assert(controller._closeRequested === false);\\r\\n    while (controller._pendingPullIntos.length > 0) {\\r\\n      if (controller._queueTotalSize === 0) {\\r\\n        return;\\r\\n      }\\r\\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\\r\\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\\r\\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\\r\\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function ReadableByteStreamControllerPullInto(controller, view) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    var elementSize = 1;\\r\\n    if (view.constructor !== DataView) {\\r\\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\\r\\n    }\\r\\n    var ctor = view.constructor;\\r\\n    var pullIntoDescriptor = {\\r\\n      buffer: view.buffer,\\r\\n      byteOffset: view.byteOffset,\\r\\n      byteLength: view.byteLength,\\r\\n      bytesFilled: 0,\\r\\n      elementSize: elementSize,\\r\\n      ctor: ctor,\\r\\n      readerType: 'byob'\\r\\n    };\\r\\n    if (controller._pendingPullIntos.length > 0) {\\r\\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\r\\n      controller._pendingPullIntos.push(pullIntoDescriptor);\\r\\n      return ReadableStreamAddReadIntoRequest(stream);\\r\\n    }\\r\\n    if (stream._state === 'closed') {\\r\\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\\r\\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\\r\\n    }\\r\\n    if (controller._queueTotalSize > 0) {\\r\\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\\r\\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\\r\\n        ReadableByteStreamControllerHandleQueueDrain(controller);\\r\\n        return Promise.resolve(CreateIterResultObject(filledView, false));\\r\\n      }\\r\\n      if (controller._closeRequested === true) {\\r\\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\\r\\n        ReadableByteStreamControllerError(controller, e);\\r\\n        return Promise.reject(e);\\r\\n      }\\r\\n    }\\r\\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\\r\\n    controller._pendingPullIntos.push(pullIntoDescriptor);\\r\\n    var promise = ReadableStreamAddReadIntoRequest(stream);\\r\\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\\r\\n    return promise;\\r\\n  }\\r\\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\\r\\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\\r\\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    if (ReadableStreamHasBYOBReader(stream) === true) {\\r\\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\\r\\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\\r\\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\\r\\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\\r\\n      throw new RangeError('bytesWritten out of range');\\r\\n    }\\r\\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\\r\\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\\r\\n      return;\\r\\n    }\\r\\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\\r\\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\\r\\n    if (remainderSize > 0) {\\r\\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\\r\\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\\r\\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\\r\\n    }\\r\\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffe\";a.a+=\"r);\\r\\n    pullIntoDescriptor.bytesFilled -= remainderSize;\\r\\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\\r\\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\\r\\n  }\\r\\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\\r\\n    var firstDescriptor = controller._pendingPullIntos[0];\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    if (stream._state === 'closed') {\\r\\n      if (bytesWritten !== 0) {\\r\\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\\r\\n      }\\r\\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\\r\\n    } else {\\r\\n      assert(stream._state === 'readable');\\r\\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\\r\\n    }\\r\\n  }\\r\\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\\r\\n    var descriptor = controller._pendingPullIntos.shift();\\r\\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\\r\\n    return descriptor;\\r\\n  }\\r\\n  function ReadableByteStreamControllerShouldCallPull(controller) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    if (stream._state !== 'readable') {\\r\\n      return false;\\r\\n    }\\r\\n    if (controller._closeRequested === true) {\\r\\n      return false;\\r\\n    }\\r\\n    if (controller._started === false) {\\r\\n      return false;\\r\\n    }\\r\\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\\r\\n      return true;\\r\\n    }\\r\\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\\r\\n      return true;\\r\\n    }\\r\\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\\r\\n      return true;\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n  function ReadableByteStreamControllerClose(controller) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    assert(controller._closeRequested === false);\\r\\n    assert(stream._state === 'readable');\\r\\n    if (controller._queueTotalSize > 0) {\\r\\n      controller._closeRequested = true;\\r\\n      return;\\r\\n    }\\r\\n    if (controller._pendingPullIntos.length > 0) {\\r\\n      var firstPendingPullInto = controller._pendingPullIntos[0];\\r\\n      if (firstPendingPullInto.bytesFilled > 0) {\\r\\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\\r\\n        ReadableByteStreamControllerError(controller, e);\\r\\n        throw e;\\r\\n      }\\r\\n    }\\r\\n    ReadableStreamClose(stream);\\r\\n  }\\r\\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    assert(controller._closeRequested === false);\\r\\n    assert(stream._state === 'readable');\\r\\n    var buffer = chunk.buffer;\\r\\n    var byteOffset = chunk.byteOffset;\\r\\n    var byteLength = chunk.byteLength;\\r\\n    var transferredBuffer = TransferArrayBuffer(buffer);\\r\\n    if (ReadableStreamHasDefaultReader(stream) === true) {\\r\\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\\r\\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\r\\n      } else {\\r\\n        assert(controller._queue.length === 0);\\r\\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\\r\\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\\r\\n      }\\r\\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\\r\\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\r\\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\\r\\n    } else {\\r\\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\\r\\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\\r\\n    }\\r\\n  }\\r\\n  function ReadableByteStreamControllerError(controller, e) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    assert(stream._state === 'readable');\\r\\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\\r\\n    ResetQueue(controller);\\r\\n    ReadableStreamError(stream, e);\\r\\n  }\\r\\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\\r\\n    var stream = controller._controlledReadableStream;\\r\\n    var state = stream._state;\\r\\n    if (state === 'errored') {\\r\\n      return null;\\r\\n    }\\r\\n    if (state === 'closed') {\\r\\n      return 0;\\r\\n    }\\r\\n    return controller._strategyHWM - controller._queueTotalSize;\\r\\n  }\\r\\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\\r\\n    bytesWritten = Number(bytesWritten);\\r\\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\\r\\n      throw new RangeError('bytesWritten must be a finite');\\r\\n    }\\r\\n    assert(controller._pendingPullIntos.length > 0);\\r\\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\\r\\n  }\\r\\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\\r\\n    assert(controller._pendingPullIntos.length > 0);\\r\\n    var firstDescriptor = controller._pendingPullIntos[0];\\r\\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\\r\\n      throw new RangeError('The region specified by view does not match byobRequest');\\r\\n    }\\r\\n    if (firstDescriptor.byteLength !== view.byteLength) {\\r\\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\\r\\n    }\\r\\n    firstDescriptor.buffer = view.buffer;\\r\\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\\r\\n  }\\r\\n  function streamBrandCheckException(name) {\\r\\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\\r\\n  }\\r\\n  function readerLockException(name) {\\r\\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\\r\\n  }\\r\\n  function defaultReaderBrandCheckException(name) {\\r\\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\\r\\n  }\\r\\n  function defaultReaderClosedPromiseInitialize(reader) {\\r\\n    reader._closedPromise = new Promise(function (resolve, reject) {\\r\\n      reader._closedPromise_resolve = resolve;\\r\\n      reader._closedPromise_reject = reject;\\r\\n    });\\r\\n  }\\r\\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\\r\\n    reader._closedPromise = Promise.reject(reason);\\r\\n    reader._closedPromise_resolve = undefined;\\r\\n    reader._closedPromise_reject = undefined;\\r\\n  }\\r\\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\\r\\n    reader._closedPromise = Promise.resolve(undefined);\\r\\n    reader._closedPromise_resolve = undefined;\\r\\n    reader._closedPromise_reject = undefined;\\r\\n  }\\r\\n  function defaultReaderClosedPromiseReject(reader, reason) {\\r\\n    assert(reader._closedPromise_resolve !== undefined);\\r\\n    assert(reader._closedPromise_reject !== undefined);\\r\\n    reader._closedPromise_reject(reason);\\r\\n    reader._closedPromise_resolve = undefined;\\r\\n    reader._closedPromise_reject = undefined;\\r\\n  }\\r\\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\\r\\n    assert(reader._closedPromise_resolve === undefined);\\r\\n    assert(reader._closedPromise_reject === undefined);\\r\\n    reader._closedPromise = Promise.reject(reason);\\r\\n  }\\r\\n  function defaultReaderClosedPromiseResolve(reader) {\\r\\n    assert(reader._closedPromise_resolve !== undefined);\\r\\n    assert(reader._closedPromise_reject !== undefined);\\r\\n    reader._closedPromise_resolve(undefined);\\r\\n    reader._closedPromise_resolve = undefined;\\r\\n    reader._closedPromise_reject = undefined;\\r\\n  }\\r\\n  function byobReaderBrandCheckException(name) {\\r\\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\\r\\n  }\\r\\n  function defaultControllerBrandCheckException(name) {\\r\\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\\r\\n  }\\r\\n  function byobRequestBrandCheckException(name) {\\r\\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\\r\\n  }\\r\\n  function byteStreamControllerBrandCheckException(name) {\\r\\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\\r\\n  }\\r\\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\\r\\n    try {\\r\\n      Promise.prototype.then.call(promise, undefined, function () {});\\r\\n    } catch (e) {}\\r\\n  }\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var transformStream = __w_pdfjs_require__(6);\\r\\n  var readableStream = __w_pdfjs_require__(4);\\r\\n  var writableStream = __w_pdfjs_require__(2);\\r\\n  exports.TransformStream = transformStream.TransformStream;\\r\\n  exports.ReadableStream = readableStream.ReadableStream;\\r\\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\\r\\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\\r\\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\\r\\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\\r\\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\\r\\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\\r\\n  exports.IsWritableStream = writableStream.IsWritableStream;\\r\\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\\r\\n  exports.WritableStream = writableStream.WritableStream;\\r\\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\\r\\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\\r\\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\\r\\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\\r\\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  \\\"use strict\\\";\\r\\n\\r\\n  var _createClass = function () {\\r\\n    function defineProperties(target, props) {\\r\\n      for (var i = 0; i < props.length; i++) {\\r\\n        var descriptor = props[i];\\r\\n        descriptor.enumerable = descriptor.enumerable || false;\\r\\n        descriptor.configurable = true;\\r\\n        if (\\\"value\\\" in descriptor) descriptor.writable = true;\\r\\n        Object.defineProperty(target, descriptor.key, descriptor);\\r\\n      }\\r\\n    }\\r\\n    return function (Constructor, protoProps, staticProps) {\\r\\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\\r\\n      if (staticProps) defineProperties(Constructor, staticProps);\\r\\n      return Constructor;\\r\\n    };\\r\\n  }();\\r\\n  function _classCallCheck(instance, Constructor) {\\r\\n    if (!(instance instanceof Constructor)) {\\r\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\r\\n    }\\r\\n  }\\r\\n  var _require = __w_pdfjs_require__(1),\\r\\n      assert = _require.assert;\\r\\n  var _require2 = __w_pdfjs_require__(0),\\r\\n      InvokeOrNoop = _require2.InvokeOrNoop,\\r\\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\\r\\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\\r\\n      typeIsObject = _require2.typeIsObject;\\r\\n  var _require3 = __w_pdfjs_require__(4),\\r\\n      ReadableStream = _require3.ReadableStream,\\r\\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\\r\\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\\r\\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\\r\\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\\r\\n  var _require4 = __w_pdfjs_require__(2),\\r\\n      WritableStream = _require4.WritableStream,\\r\\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\\r\\n  function TransformStreamCloseReadable(transformStream) {\\r\\n    if (transformStream._errored === true) {\\r\\n      throw new TypeError('TransformStream is already errored');\\r\\n    }\\r\\n    if (transformStream._readableClosed === true) {\\r\\n      throw new TypeError('Readable side is already closed');\\r\\n    }\\r\\n    TransformStreamCloseReadableInternal(transformStream);\\r\\n  }\\r\\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\\r\\n    if (transformStream._errored === true) {\\r\\n      throw new TypeError('TransformStream is already errored');\\r\\n    }\\r\\n    if (transformStream._readableClosed === true) {\\r\\n      throw new TypeError('Readable side is already closed');\\r\\n    }\\r\\n    var controller = transformStream._readableController;\\r\\n    try {\\r\\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\\r\\n    } catch (e) {\\r\\n      transformStream._readableClosed = true;\\r\\n      TransformStreamErrorIfNeeded(transformStream, e);\\r\\n      throw transformStream._storedError;\\r\\n    }\\r\\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\\r\\n    var maybeBackpressure = desiredSize <= 0;\\r\\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\\r\\n      TransformStreamSetBackpressure(transformStream, true);\\r\\n    }\\r\\n  }\\r\\n  function TransformStreamError(transformStream, e) {\\r\\n    if (transformStream._errored === true) {\\r\\n      throw new TypeError('TransformStream is already errored');\\r\\n    }\\r\\n    TransformStreamErrorInternal(transformStream, e);\\r\\n  }\\r\\n  function TransformStreamCloseReadableInternal(transformStream) {\\r\\n    assert(transformStream._errored === false);\\r\\n    assert(transformStream._readableClosed === false);\\r\\n    try {\\r\\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\\r\\n    } catch (e) {\\r\\n      assert(false);\\r\\n    }\\r\\n    transformStream._readableClosed = true;\\r\\n  }\\r\\n  function TransformStreamErrorIfNeeded(transformStream, e) {\\r\\n    if (transformStream._errored === false) {\\r\\n      TransformStreamErrorInternal(transformStream, e);\\r\\n    }\\r\\n  }\\r\\n  function TransformStreamErrorInternal(transformStream, e) {\\r\\n    assert(transformStream._errored === false);\\r\\n    transformStream._errored = true;\\r\\n    transformStream._storedError = e;\\r\\n    if (transformStream._writableDone === false) {\\r\\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\\r\\n    }\\r\\n    if (transformStream._readableClosed === false) {\\r\\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\\r\\n    }\\r\\n  }\\r\\n  function TransformStreamReadableReadyPromise(transformStream) {\\r\\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\r\\n    if (transformStream._backpressure === false) {\\r\\n      return Promise.resolve();\\r\\n    }\\r\\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\\r\\n    return transformStream._backpressureChangePromise;\\r\\n  }\\r\\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\\r\\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\\r\\n    if (transformStream._backpressureChangePromise !== undefined) {\\r\\n      transformStream._backpressureChangePromise_resolve(backpressure);\\r\\n    }\\r\\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\\r\\n      transformStream._backpressureChangePromise_resolve = resolve;\\r\\n    });\\r\\n    transformStream._backpressureChangePromise.then(function (resolution) {\\r\\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\\r\\n    });\\r\\n    transformStream._backpressure = backpressure;\\r\\n  }\\r\\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\\r\\n    var transformStream = transformStreamController._controlledTransformStream;\\r\\n    TransformStreamEnqueueToReadable(transformStream, chunk);\\r\\n    return Promise.resolve();\\r\\n  }\\r\\n  function TransformStreamTransform(transformStream, chunk) {\\r\\n    assert(transformStream._errored === false)\";a.a+=\";\\r\\n    assert(transformStream._transforming === false);\\r\\n    assert(transformStream._backpressure === false);\\r\\n    transformStream._transforming = true;\\r\\n    var transformer = transformStream._transformer;\\r\\n    var controller = transformStream._transformStreamController;\\r\\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\\r\\n    return transformPromise.then(function () {\\r\\n      transformStream._transforming = false;\\r\\n      return TransformStreamReadableReadyPromise(transformStream);\\r\\n    }, function (e) {\\r\\n      TransformStreamErrorIfNeeded(transformStream, e);\\r\\n      return Promise.reject(e);\\r\\n    });\\r\\n  }\\r\\n  function IsTransformStreamDefaultController(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  function IsTransformStream(x) {\\r\\n    if (!typeIsObject(x)) {\\r\\n      return false;\\r\\n    }\\r\\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\\r\\n      return false;\\r\\n    }\\r\\n    return true;\\r\\n  }\\r\\n  var TransformStreamSink = function () {\\r\\n    function TransformStreamSink(transformStream, startPromise) {\\r\\n      _classCallCheck(this, TransformStreamSink);\\r\\n      this._transformStream = transformStream;\\r\\n      this._startPromise = startPromise;\\r\\n    }\\r\\n    _createClass(TransformStreamSink, [{\\r\\n      key: 'start',\\r\\n      value: function start(c) {\\r\\n        var transformStream = this._transformStream;\\r\\n        transformStream._writableController = c;\\r\\n        return this._startPromise.then(function () {\\r\\n          return TransformStreamReadableReadyPromise(transformStream);\\r\\n        });\\r\\n      }\\r\\n    }, {\\r\\n      key: 'write',\\r\\n      value: function write(chunk) {\\r\\n        var transformStream = this._transformStream;\\r\\n        return TransformStreamTransform(transformStream, chunk);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'abort',\\r\\n      value: function abort() {\\r\\n        var transformStream = this._transformStream;\\r\\n        transformStream._writableDone = true;\\r\\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\\r\\n      }\\r\\n    }, {\\r\\n      key: 'close',\\r\\n      value: function close() {\\r\\n        var transformStream = this._transformStream;\\r\\n        assert(transformStream._transforming === false);\\r\\n        transformStream._writableDone = true;\\r\\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\\r\\n        return flushPromise.then(function () {\\r\\n          if (transformStream._errored === true) {\\r\\n            return Promise.reject(transformStream._storedError);\\r\\n          }\\r\\n          if (transformStream._readableClosed === false) {\\r\\n            TransformStreamCloseReadableInternal(transformStream);\\r\\n          }\\r\\n          return Promise.resolve();\\r\\n        }).catch(function (r) {\\r\\n          TransformStreamErrorIfNeeded(transformStream, r);\\r\\n          return Promise.reject(transformStream._storedError);\\r\\n        });\\r\\n      }\\r\\n    }]);\\r\\n    return TransformStreamSink;\\r\\n  }();\\r\\n  var TransformStreamSource = function () {\\r\\n    function TransformStreamSource(transformStream, startPromise) {\\r\\n      _classCallCheck(this, TransformStreamSource);\\r\\n      this._transformStream = transformStream;\\r\\n      this._startPromise = startPromise;\\r\\n    }\\r\\n    _createClass(TransformStreamSource, [{\\r\\n      key: 'start',\\r\\n      value: function start(c) {\\r\\n        var transformStream = this._transformStream;\\r\\n        transformStream._readableController = c;\\r\\n        return this._startPromise.then(function () {\\r\\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\r\\n          if (transformStream._backpressure === true) {\\r\\n            return Promise.resolve();\\r\\n          }\\r\\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\\r\\n          return transformStream._backpressureChangePromise;\\r\\n        });\\r\\n      }\\r\\n    }, {\\r\\n      key: 'pull',\\r\\n      value: function pull() {\\r\\n        var transformStream = this._transformStream;\\r\\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\\r\\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\\r\\n        TransformStreamSetBackpressure(transformStream, false);\\r\\n        return transformStream._backpressureChangePromise;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'cancel',\\r\\n      value: function cancel() {\\r\\n        var transformStream = this._transformStream;\\r\\n        transformStream._readableClosed = true;\\r\\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\\r\\n      }\\r\\n    }]);\\r\\n    return TransformStreamSource;\\r\\n  }();\\r\\n  var TransformStreamDefaultController = function () {\\r\\n    function TransformStreamDefaultController(transformStream) {\\r\\n      _classCallCheck(this, TransformStreamDefaultController);\\r\\n      if (IsTransformStream(transformStream) === false) {\\r\\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\\r\\n      }\\r\\n      if (transformStream._transformStreamController !== undefined) {\\r\\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\\r\\n      }\\r\\n      this._controlledTransformStream = transformStream;\\r\\n    }\\r\\n    _createClass(TransformStreamDefaultController, [{\\r\\n      key: 'enqueue',\\r\\n      value: function enqueue(chunk) {\\r\\n        if (IsTransformStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('enqueue');\\r\\n        }\\r\\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'close',\\r\\n      value: function close() {\\r\\n        if (IsTransformStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('close');\\r\\n        }\\r\\n        TransformStreamCloseReadable(this._controlledTransformStream);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'error',\\r\\n      value: function error(reason) {\\r\\n        if (IsTransformStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('error');\\r\\n        }\\r\\n        TransformStreamError(this._controlledTransformStream, reason);\\r\\n      }\\r\\n    }, {\\r\\n      key: 'desiredSize',\\r\\n      get: function get() {\\r\\n        if (IsTransformStreamDefaultController(this) === false) {\\r\\n          throw defaultControllerBrandCheckException('desiredSize');\\r\\n        }\\r\\n        var transformStream = this._controlledTransformStream;\\r\\n        var readableController = transformStream._readableController;\\r\\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\\r\\n      }\\r\\n    }]);\\r\\n    return TransformStreamDefaultController;\\r\\n  }();\\r\\n  var TransformStream = function () {\\r\\n    function TransformStream() {\\r\\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\r\\n      _classCallCheck(this, TransformStream);\\r\\n      this._transformer = transformer;\\r\\n      var readableStrategy = transformer.readableStrategy,\\r\\n          writableStrategy = transformer.writableStrategy;\\r\\n      this._transforming = false;\\r\\n      this._errored = false;\\r\\n      this._storedError = undefined;\\r\\n      this._writableController = undefined;\\r\\n      this._readableController = undefined;\\r\\n      this._transformStreamController = undefined;\\r\\n      this._writableDone = false;\\r\\n      this._readableClosed = false;\\r\\n      this._backpressure = undefined;\\r\\n      this._backpressureChangePromise = undefined;\\r\\n      this._backpressureChangePromise_resolve = undefined;\\r\\n      this._transformStreamController = new TransformStreamDefaultController(this);\\r\\n      var startPromise_resolve = void 0;\\r\\n      var startPromise = new Promise(function (resolve) {\\r\\n        startPromise_resolve = resolve;\\r\\n      });\\r\\n      var source = new TransformStreamSource(this, startPromise);\\r\\n      this._readable = new ReadableStream(source, readableStrategy);\\r\\n      var sink = new TransformStreamSink(this, startPromise);\\r\\n      this._writable = new WritableStream(sink, writableStrategy);\\r\\n      assert(this._writableController !== undefined);\\r\\n      assert(this._readableController !== undefined);\\r\\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\\r\\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\\r\\n      var transformStream = this;\\r\\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\\r\\n      startPromise_resolve(startResult);\\r\\n      startPromise.catch(function (e) {\\r\\n        if (transformStream._errored === false) {\\r\\n          transformStream._errored = true;\\r\\n          transformStream._storedError = e;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n    _createClass(TransformStream, [{\\r\\n      key: 'readable',\\r\\n      get: function get() {\\r\\n        if (IsTransformStream(this) === false) {\\r\\n          throw streamBrandCheckException('readable');\\r\\n        }\\r\\n        return this._readable;\\r\\n      }\\r\\n    }, {\\r\\n      key: 'writable',\\r\\n      get: function get() {\\r\\n        if (IsTransformStream(this) === false) {\\r\\n          throw streamBrandCheckException('writable');\\r\\n        }\\r\\n        return this._writable;\\r\\n      }\\r\\n    }]);\\r\\n    return TransformStream;\\r\\n  }();\\r\\n  module.exports = { TransformStream: TransformStream };\\r\\n  function defaultControllerBrandCheckException(name) {\\r\\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\\r\\n  }\\r\\n  function streamBrandCheckException(name) {\\r\\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\\r\\n  }\\r\\n}, function (module, exports, __w_pdfjs_require__) {\\r\\n  module.exports = __w_pdfjs_require__(5);\\r\\n}]));\\r\\n\\r\\n/***/ }),\\r\\n/* 134 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PDFJS = exports.globalScope = undefined;\\r\\n\\r\\nvar _api = __w_pdfjs_require__(75);\\r\\n\\r\\nvar _dom_utils = __w_pdfjs_require__(17);\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _annotation_layer = __w_pdfjs_require__(88);\\r\\n\\r\\nvar _global_scope = __w_pdfjs_require__(22);\\r\\n\\r\\nvar _global_scope2 = _interopRequireDefault(_global_scope);\\r\\n\\r\\nvar _metadata = __w_pdfjs_require__(77);\\r\\n\\r\\nvar _text_layer = __w_pdfjs_require__(89);\\r\\n\\r\\nvar _svg = __w_pdfjs_require__(90);\\r\\n\\r\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\r\\n\\r\\nif (!_global_scope2.default.PDFJS) {\\r\\n  _global_scope2.default.PDFJS = {};\\r\\n}\\r\\nvar PDFJS = _global_scope2.default.PDFJS;\\r\\n{\\r\\n  PDFJS.version = '1.10.100';\\r\\n  PDFJS.build = 'ea29ec83';\\r\\n}\\r\\nPDFJS.pdfBug = false;\\r\\nif (PDFJS.verbosity !== undefined) {\\r\\n  (0, _util.setVerbosityLevel)(PDFJS.verbosity);\\r\\n}\\r\\ndelete PDFJS.verbosity;\\r\\nObject.defineProperty(PDFJS, 'verbosity', {\\r\\n  get: function get() {\\r\\n    return (0, _util.getVerbosityLevel)();\\r\\n  },\\r\\n  set: function set(level) {\\r\\n    (0, _util.setVerbosityLevel)(level);\\r\\n  },\\r\\n\\r\\n  enumerable: true,\\r\\n  configurable: true\\r\\n});\\r\\nPDFJS.VERBOSITY_LEVELS = _util.VERBOSITY_LEVELS;\\r\\nPDFJS.OPS = _util.OPS;\\r\\nPDFJS.UNSUPPORTED_FEATURES = _util.UNSUPPORTED_FEATURES;\\r\\nPDFJS.isValidUrl = _dom_utils.isValidUrl;\\r\\nPDFJS.shadow = _util.shadow;\\r\\nPDFJS.createBlob = _util.createBlob;\\r\\nPDFJS.createObjectURL = function PDFJS_createObjectURL(data, contentType) {\\r\\n  return (0, _util.createObjectURL)(data, contentType, PDFJS.disableCreateObjectURL);\\r\\n};\\r\\nObject.defineProperty(PDFJS, 'isLittleEndian', {\\r\\n  configurable: true,\\r\\n  get: function PDFJS_isLittleEndian() {\\r\\n    return (0, _util.shadow)(PDFJS, 'isLittleEndian', (0, _util.isLittleEndian)());\\r\\n  }\\r\\n});\\r\\nPDFJS.removeNullCharacters = _util.removeNullCharacters;\\r\\nPDFJS.PasswordResponses = _util.PasswordResponses;\\r\\nPDFJS.PasswordException = _util.PasswordException;\\r\\nPDFJS.UnknownErrorException = _util.UnknownErrorException;\\r\\nPDFJS.InvalidPDFException = _util.InvalidPDFException;\\r\\nPDFJS.MissingPDFException = _util.MissingPDFException;\\r\\nPDFJS.UnexpectedResponseException = _util.UnexpectedResponseException;\\r\\nPDFJS.Util = _util.Util;\\r\\nPDFJS.PageViewport = _util.PageViewport;\\r\\nPDFJS.createPromiseCapability = _util.createPromiseCapability;\\r\\nPDFJS.maxImageSize = PDFJS.maxImageSize === undefined ? -1 : PDFJS.maxImageSize;\\r\\nPDFJS.cMapUrl = PDFJS.cMapUrl === undefined ? null : PDFJS.cMapUrl;\\r\\nPDFJS.cMapPacked = PDFJS.cMapPacked === undefined ? false : PDFJS.cMapPacked;\\r\\nPDFJS.disableFontFace = PDFJS.disableFontFace === undefined ? false : PDFJS.disableFontFace;\\r\\nPDFJS.imageResourcesPath = PDFJS.imageResourcesPath === undefined ? '' : PDFJS.imageResourcesPath;\\r\\nPDFJS.disableWorker = PDFJS.disableWorker === undefined ? false : PDFJS.disableWorker;\\r\\nPDFJS.workerSrc = PDFJS.workerSrc === undefined ? null : PDFJS.workerSrc;\\r\\nPDFJS.workerPort = PDFJS.workerPort === undefined ? null : PDFJS.workerPort;\\r\\nPDFJS.disableRange = PDFJS.disableRange === undefined ? false : PDFJS.disableRange;\\r\\nPDFJS.disableStream = PDFJS.disableStream === undefined ? false : PDFJS.disableStream;\\r\\nPDFJS.disableAutoFetch = PDFJS.disableAutoFetch === undefined ? false : PDFJS.disableAutoFetch;\\r\\nPDFJS.pdfBug = PDFJS.pdfBug === undefined ? false : PDFJS.pdfBug;\\r\\nPDFJS.postMessageTransfers = PDFJS.postMessageTransfers === undefined ? true : PDFJS.postMessageTransfers;\\r\\nPDFJS.disableCreateObjectURL = PDFJS.disableCreateObjectURL === undefined ? false : PDFJS.disableCreateObjectURL;\\r\\nPDFJS.disableWebGL = PDFJS.disableWebGL === undefined ? true : PDFJS.disableWebGL;\\r\\nPDFJS.externalLinkTarget = PDFJS.externalLinkTarget === undefined ? _dom_utils.LinkTarget.NONE : PDFJS.externalLinkTarget;\\r\\nPDFJS.externalLinkRel = PDFJS.externalLinkRel === undefined ? _dom_utils.DEFAULT_LINK_REL : PDFJS.externalLinkRel;\\r\\nPDFJS.isEvalSupported = PDFJS.isEvalSupported === undefined ? true : PDFJS.isEvalSupported;\\r\\nPDFJS.pdfjsNext = PDFJS.pdfjsNext === undefined ? false : PDFJS.pdfjsNext;\\r\\n{\\r\\n  var savedOpenExternalLinksInNewWindow = PDFJS.openExternalLinksInNewWindow;\\r\\n  delete PDFJS.openExternalLinksInNewWindow;\\r\\n  Object.defineProperty(PDFJS, 'openExternalLinksInNewWindow', {\\r\\n    get: function get() {\\r\\n      return PDFJS.externalLinkTarget === _dom_utils.LinkTarget.BLANK;\\r\\n    },\\r\\n    set: function set(value) {\\r\\n      if (value) {\\r\\n        (0, _util.deprecated)('PDFJS.openExternalLinksInNewWindow, please use ' + '\\\"PDFJS.externalLinkTarget = PDFJS.LinkTarget.BLANK\\\" instead.');\\r\\n      }\\r\\n      if (PDFJS.externalLinkTarget !== _dom_utils.LinkTarget.NONE) {\\r\\n        (0, _util.warn)('PDFJS.externalLinkTarget is already initialized');\\r\\n        return;\\r\\n      }\\r\\n      PDFJS.externalLinkTarget = value ? _dom_utils.LinkTarget.BLANK : _dom_utils.LinkTarget.NONE;\\r\\n    },\\r\\n\\r\\n    enumerable: true,\\r\\n    configurable: true\\r\\n  });\\r\\n  if (savedOpenExternalLinksInNewWindow) {\\r\\n    PDFJS.openExternalLinksInNewWindow = savedOpenExternalLinksInNewWindow;\\r\\n  }\\r\\n}\\r\\nPDFJS.getDocument = _api.getDocument;\\r\\nPDFJS.LoopbackPort = _api.LoopbackPort;\\r\\nPDFJS.PDFDataRangeTransport = _api.PDFDataRangeTransport;\\r\\nPDFJS.PDFWorker = _api.PDFWorker;\\r\\nPDFJS.hasCanvasTypedArrays = true;\\r\\nPDFJS.CustomStyle = _dom_utils.CustomStyle;\\r\\nPDFJS.LinkTarget = _dom_utils.LinkTarget;\\r\\nPDFJS.addLinkAttributes = _dom_utils.addLinkAttributes;\\r\\nPDFJS.getFilenameFromUrl = _dom_utils.getFilenameFromUrl;\\r\\nPDFJS.isExternalLinkTargetSet = _dom_utils.isExternalLinkTargetSet;\\r\\nPDFJS.AnnotationLayer = _annotation_layer.AnnotationLayer;\\r\\nPDFJS.renderTextLayer = _text_layer.renderTextLayer;\\r\\nPDFJS.Metadata = _metadata.Metadata;\\r\\nPDFJS.SVGGraphics = _svg.SVGGraphics;\\r\\nPDFJS.UnsupportedManager = _api._UnsupportedManager;\\r\\nexports.globalScope = _global_scope2.default;\\r\\nexports.PDFJS = PDFJS;\\r\\n\\r\\n/***/ }),\\r\\n/* 135 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.FontLoader = exports.FontFaceObject = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0\";a.a+=\");\\r\\n\\r\\nfunction FontLoader(docId) {\\r\\n  this.docId = docId;\\r\\n  this.styleElement = null;\\r\\n  this.nativeFontFaces = [];\\r\\n  this.loadTestFontId = 0;\\r\\n  this.loadingContext = {\\r\\n    requests: [],\\r\\n    nextRequestId: 0\\r\\n  };\\r\\n}\\r\\nFontLoader.prototype = {\\r\\n  insertRule: function fontLoaderInsertRule(rule) {\\r\\n    var styleElement = this.styleElement;\\r\\n    if (!styleElement) {\\r\\n      styleElement = this.styleElement = document.createElement('style');\\r\\n      styleElement.id = 'PDFJS_FONT_STYLE_TAG_' + this.docId;\\r\\n      document.documentElement.getElementsByTagName('head')[0].appendChild(styleElement);\\r\\n    }\\r\\n    var styleSheet = styleElement.sheet;\\r\\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\\r\\n  },\\r\\n  clear: function fontLoaderClear() {\\r\\n    if (this.styleElement) {\\r\\n      this.styleElement.remove();\\r\\n      this.styleElement = null;\\r\\n    }\\r\\n    this.nativeFontFaces.forEach(function (nativeFontFace) {\\r\\n      document.fonts.delete(nativeFontFace);\\r\\n    });\\r\\n    this.nativeFontFaces.length = 0;\\r\\n  }\\r\\n};\\r\\n{\\r\\n  var getLoadTestFont = function getLoadTestFont() {\\r\\n    return atob('T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQ' + 'AABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwA' + 'AAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbm' + 'FtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAA' + 'AADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6A' + 'ABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAA' + 'MQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAA' + 'AAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAA' + 'AAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQ' + 'AAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMA' + 'AQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAA' + 'EAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAA' + 'AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' + 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAA' + 'AAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgc' + 'A/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWF' + 'hYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQA' + 'AAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAg' + 'ABAAAAAAAAAAAD6AAAAAAAAA==');\\r\\n  };\\r\\n  Object.defineProperty(FontLoader.prototype, 'loadTestFont', {\\r\\n    get: function get() {\\r\\n      return (0, _util.shadow)(this, 'loadTestFont', getLoadTestFont());\\r\\n    },\\r\\n\\r\\n    configurable: true\\r\\n  });\\r\\n  FontLoader.prototype.addNativeFontFace = function fontLoader_addNativeFontFace(nativeFontFace) {\\r\\n    this.nativeFontFaces.push(nativeFontFace);\\r\\n    document.fonts.add(nativeFontFace);\\r\\n  };\\r\\n  FontLoader.prototype.bind = function fontLoaderBind(fonts, callback) {\\r\\n    var rules = [];\\r\\n    var fontsToLoad = [];\\r\\n    var fontLoadPromises = [];\\r\\n    var getNativeFontPromise = function getNativeFontPromise(nativeFontFace) {\\r\\n      return nativeFontFace.loaded.catch(function (e) {\\r\\n        (0, _util.warn)('Failed to load font \\\"' + nativeFontFace.family + '\\\": ' + e);\\r\\n      });\\r\\n    };\\r\\n    var isFontLoadingAPISupported = FontLoader.isFontLoadingAPISupported && !FontLoader.isSyncFontLoadingSupported;\\r\\n    for (var i = 0, ii = fonts.length; i < ii; i++) {\\r\\n      var font = fonts[i];\\r\\n      if (font.attached || font.loading === false) {\\r\\n        continue;\\r\\n      }\\r\\n      font.attached = true;\\r\\n      if (isFontLoadingAPISupported) {\\r\\n        var nativeFontFace = font.createNativeFontFace();\\r\\n        if (nativeFontFace) {\\r\\n          this.addNativeFontFace(nativeFontFace);\\r\\n          fontLoadPromises.push(getNativeFontPromise(nativeFontFace));\\r\\n        }\\r\\n      } else {\\r\\n        var rule = font.createFontFaceRule();\\r\\n        if (rule) {\\r\\n          this.insertRule(rule);\\r\\n          rules.push(rule);\\r\\n          fontsToLoad.push(font);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    var request = this.queueLoadingCallback(callback);\\r\\n    if (isFontLoadingAPISupported) {\\r\\n      Promise.all(fontLoadPromises).then(function () {\\r\\n        request.complete();\\r\\n      });\\r\\n    } else if (rules.length > 0 && !FontLoader.isSyncFontLoadingSupported) {\\r\\n      this.prepareFontLoadEvent(rules, fontsToLoad, request);\\r\\n    } else {\\r\\n      request.complete();\\r\\n    }\\r\\n  };\\r\\n  FontLoader.prototype.queueLoadingCallback = function FontLoader_queueLoadingCallback(callback) {\\r\\n    function LoadLoader_completeRequest() {\\r\\n      (0, _util.assert)(!request.end, 'completeRequest() cannot be called twice');\\r\\n      request.end = Date.now();\\r\\n      while (context.requests.length > 0 && context.requests[0].end) {\\r\\n        var otherRequest = context.requests.shift();\\r\\n        setTimeout(otherRequest.callback, 0);\\r\\n      }\\r\\n    }\\r\\n    var context = this.loadingContext;\\r\\n    var requestId = 'pdfjs-font-loading-' + context.nextRequestId++;\\r\\n    var request = {\\r\\n      id: requestId,\\r\\n      complete: LoadLoader_completeRequest,\\r\\n      callback: callback,\\r\\n      started: Date.now()\\r\\n    };\\r\\n    context.requests.push(request);\\r\\n    return request;\\r\\n  };\\r\\n  FontLoader.prototype.prepareFontLoadEvent = function fontLoaderPrepareFontLoadEvent(rules, fonts, request) {\\r\\n    function int32(data, offset) {\\r\\n      return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\\r\\n    }\\r\\n    function spliceString(s, offset, remove, insert) {\\r\\n      var chunk1 = s.substr(0, offset);\\r\\n      var chunk2 = s.substr(offset + remove);\\r\\n      return chunk1 + insert + chunk2;\\r\\n    }\\r\\n    var i, ii;\\r\\n    var canvas = document.createElement('canvas');\\r\\n    canvas.width = 1;\\r\\n    canvas.height = 1;\\r\\n    var ctx = canvas.getContext('2d');\\r\\n    var called = 0;\\r\\n    function isFontReady(name, callback) {\\r\\n      called++;\\r\\n      if (called > 30) {\\r\\n        (0, _util.warn)('Load test font never loaded.');\\r\\n        callback();\\r\\n        return;\\r\\n      }\\r\\n      ctx.font = '30px ' + name;\\r\\n      ctx.fillText('.', 0, 20);\\r\\n      var imageData = ctx.getImageData(0, 0, 1, 1);\\r\\n      if (imageData.data[3] > 0) {\\r\\n        callback();\\r\\n        return;\\r\\n      }\\r\\n      setTimeout(isFontReady.bind(null, name, callback));\\r\\n    }\\r\\n    var loadTestFontId = 'lt' + Date.now() + this.loadTestFontId++;\\r\\n    var data = this.loadTestFont;\\r\\n    var COMMENT_OFFSET = 976;\\r\\n    data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\\r\\n    var CFF_CHECKSUM_OFFSET = 16;\\r\\n    var XXXX_VALUE = 0x58585858;\\r\\n    var checksum = int32(data, CFF_CHECKSUM_OFFSET);\\r\\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\\r\\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\\r\\n    }\\r\\n    if (i < loadTestFontId.length) {\\r\\n      checksum = checksum - XXXX_VALUE + int32(loadTestFontId + 'XXX', i) | 0;\\r\\n    }\\r\\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\\r\\n    var url = 'url(data:font/opentype;base64,' + btoa(data) + ');';\\r\\n    var rule = '@font-face { font-family:\\\"' + loadTestFontId + '\\\";src:' + url + '}';\\r\\n    this.insertRule(rule);\\r\\n    var names = [];\\r\\n    for (i = 0, ii = fonts.length; i < ii; i++) {\\r\\n      names.push(fonts[i].loadedName);\\r\\n    }\\r\\n    names.push(loadTestFontId);\\r\\n    var div = document.createElement('div');\\r\\n    div.setAttribute('style', 'visibility: hidden;' + 'width: 10px; height: 10px;' + 'position: absolute; top: 0px; left: 0px;');\\r\\n    for (i = 0, ii = names.length; i < ii; ++i) {\\r\\n      var span = document.createElement('span');\\r\\n      span.textContent = 'Hi';\\r\\n      span.style.fontFamily = names[i];\\r\\n      div.appendChild(span);\\r\\n    }\\r\\n    document.body.appendChild(div);\\r\\n    isFontReady(loadTestFontId, function () {\\r\\n      document.body.removeChild(div);\\r\\n      request.complete();\\r\\n    });\\r\\n  };\\r\\n}\\r\\n{\\r\\n  FontLoader.isFontLoadingAPISupported = typeof document !== 'undefined' && !!document.fonts;\\r\\n}\\r\\n{\\r\\n  var isSyncFontLoadingSupported = function isSyncFontLoadingSupported() {\\r\\n    if (typeof navigator === 'undefined') {\\r\\n      return true;\\r\\n    }\\r\\n    var supported = false;\\r\\n    var m = /Mozilla\\\\/5.0.*?rv:(\\\\d+).*? Gecko/.exec(navigator.userAgent);\\r\\n    if (m && m[1] >= 14) {\\r\\n      supported = true;\\r\\n    }\\r\\n    return supported;\\r\\n  };\\r\\n  Object.defineProperty(FontLoader, 'isSyncFontLoadingSupported', {\\r\\n    get: function get() {\\r\\n      return (0, _util.shadow)(FontLoader, 'isSyncFontLoadingSupported', isSyncFontLoadingSupported());\\r\\n    },\\r\\n\\r\\n    enumerable: true,\\r\\n    configurable: true\\r\\n  });\\r\\n}\\r\\nvar IsEvalSupportedCached = {\\r\\n  get value() {\\r\\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\\r\\n  }\\r\\n};\\r\\nvar FontFaceObject = function FontFaceObjectClosure() {\\r\\n  function FontFaceObject(translatedData, options) {\\r\\n    this.compiledGlyphs = Object.create(null);\\r\\n    for (var i in translatedData) {\\r\\n      this[i] = translatedData[i];\\r\\n    }\\r\\n    this.options = options;\\r\\n  }\\r\\n  FontFaceObject.prototype = {\\r\\n    createNativeFontFace: function FontFaceObject_createNativeFontFace() {\\r\\n      if (!this.data) {\\r\\n        return null;\\r\\n      }\\r\\n      if (this.options.disableFontFace) {\\r\\n        this.disableFontFace = true;\\r\\n        return null;\\r\\n      }\\r\\n      var nativeFontFace = new FontFace(this.loadedName, this.data, {});\\r\\n      if (this.options.fontRegistry) {\\r\\n        this.options.fontRegistry.registerFont(this);\\r\\n      }\\r\\n      return nativeFontFace;\\r\\n    },\\r\\n    createFontFaceRule: function FontFaceObject_createFontFaceRule() {\\r\\n      if (!this.data) {\\r\\n        return null;\\r\\n      }\\r\\n      if (this.options.disableFontFace) {\\r\\n        this.disableFontFace = true;\\r\\n        return null;\\r\\n      }\\r\\n      var data = (0, _util.bytesToString)(new Uint8Array(this.data));\\r\\n      var fontName = this.loadedName;\\r\\n      var url = 'url(data:' + this.mimetype + ';base64,' + btoa(data) + ');';\\r\\n      var rule = '@font-face { font-family:\\\"' + fontName + '\\\";src:' + url + '}';\\r\\n      if (this.options.fontRegistry) {\\r\\n        this.options.fontRegistry.registerFont(this, url);\\r\\n      }\\r\\n      return rule;\\r\\n    },\\r\\n    getPathGenerator: function FontFaceObject_getPathGenerator(objs, character) {\\r\\n      if (!(character in this.compiledGlyphs)) {\\r\\n        var cmds = objs.get(this.loadedName + '_path_' + character);\\r\\n        var current, i, len;\\r\\n        if (this.options.isEvalSupported && IsEvalSupportedCached.value) {\\r\\n          var args,\\r\\n              js = '';\\r\\n          for (i = 0, len = cmds.length; i < len; i++) {\\r\\n            current = cmds[i];\\r\\n            if (current.args !== undefined) {\\r\\n              args = current.args.join(',');\\r\\n            } else {\\r\\n              args = '';\\r\\n            }\\r\\n            js += 'c.' + current.cmd + '(' + args + ');\\\\n';\\r\\n          }\\r\\n          this.compiledGlyphs[character] = new Function('c', 'size', js);\\r\\n        } else {\\r\\n          this.compiledGlyphs[character] = function (c, size) {\\r\\n            for (i = 0, len = cmds.length; i < len; i++) {\\r\\n              current = cmds[i];\\r\\n              if (current.cmd === 'scale') {\\r\\n                current.args = [size, -size];\\r\\n              }\\r\\n              c[current.cmd].apply(c, current.args);\\r\\n            }\\r\\n          };\\r\\n        }\\r\\n      }\\r\\n      return this.compiledGlyphs[character];\\r\\n    }\\r\\n  };\\r\\n  return FontFaceObject;\\r\\n}();\\r\\nexports.FontFaceObject = FontFaceObject;\\r\\nexports.FontLoader = FontLoader;\\r\\n\\r\\n/***/ }),\\r\\n/* 136 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.CanvasGraphics = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _pattern_helper = __w_pdfjs_require__(137);\\r\\n\\r\\nvar _webgl = __w_pdfjs_require__(76);\\r\\n\\r\\nvar MIN_FONT_SIZE = 16;\\r\\nvar MAX_FONT_SIZE = 100;\\r\\nvar MAX_GROUP_SIZE = 4096;\\r\\nvar MIN_WIDTH_FACTOR = 0.65;\\r\\nvar COMPILE_TYPE3_GLYPHS = true;\\r\\nvar MAX_SIZE_TO_COMPILE = 1000;\\r\\nvar FULL_CHUNK_HEIGHT = 16;\\r\\nvar IsLittleEndianCached = {\\r\\n  get value() {\\r\\n    return (0, _util.shadow)(IsLittleEndianCached, 'value', (0, _util.isLittleEndian)());\\r\\n  }\\r\\n};\\r\\nfunction addContextCurrentTransform(ctx) {\\r\\n  if (!ctx.mozCurrentTransform) {\\r\\n    ctx._originalSave = ctx.save;\\r\\n    ctx._originalRestore = ctx.restore;\\r\\n    ctx._originalRotate = ctx.rotate;\\r\\n    ctx._originalScale = ctx.scale;\\r\\n    ctx._originalTranslate = ctx.translate;\\r\\n    ctx._originalTransform = ctx.transform;\\r\\n    ctx._originalSetTransform = ctx.setTransform;\\r\\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\\r\\n    ctx._transformStack = [];\\r\\n    Object.defineProperty(ctx, 'mozCurrentTransform', {\\r\\n      get: function getCurrentTransform() {\\r\\n        return this._transformMatrix;\\r\\n      }\\r\\n    });\\r\\n    Object.defineProperty(ctx, 'mozCurrentTransformInverse', {\\r\\n      get: function getCurrentTransformInverse() {\\r\\n        var m = this._transformMatrix;\\r\\n        var a = m[0],\\r\\n            b = m[1],\\r\\n            c = m[2],\\r\\n            d = m[3],\\r\\n            e = m[4],\\r\\n            f = m[5];\\r\\n        var ad_bc = a * d - b * c;\\r\\n        var bc_ad = b * c - a * d;\\r\\n        return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\\r\\n      }\\r\\n    });\\r\\n    ctx.save = function ctxSave() {\\r\\n      var old = this._transformMatrix;\\r\\n      this._transformStack.push(old);\\r\\n      this._transformMatrix = old.slice(0, 6);\\r\\n      this._originalSave();\\r\\n    };\\r\\n    ctx.restore = function ctxRestore() {\\r\\n      var prev = this._transformStack.pop();\\r\\n      if (prev) {\\r\\n        this._transformMatrix = prev;\\r\\n        this._originalRestore();\\r\\n      }\\r\\n    };\\r\\n    ctx.translate = function ctxTranslate(x, y) {\\r\\n      var m = this._transformMatrix;\\r\\n      m[4] = m[0] * x + m[2] * y + m[4];\\r\\n      m[5] = m[1] * x + m[3] * y + m[5];\\r\\n      this._originalTranslate(x, y);\\r\\n    };\\r\\n    ctx.scale = function ctxScale(x, y) {\\r\\n      var m = this._transformMatrix;\\r\\n      m[0] = m[0] * x;\\r\\n      m[1] = m[1] * x;\\r\\n      m[2] = m[2] * y;\\r\\n      m[3] = m[3] * y;\\r\\n      this._originalScale(x, y);\\r\\n    };\\r\\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\\r\\n      var m = this._transformMatrix;\\r\\n      this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\\r\\n      ctx._originalTransform(a, b, c, d, e, f);\\r\\n    };\\r\\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\\r\\n      this._transformMatrix = [a, b, c, d, e, f];\\r\\n      ctx._originalSetTransform(a, b, c, d, e, f);\\r\\n    };\\r\\n    ctx.rotate = function ctxRotate(angle) {\\r\\n      var cosValue = Math.cos(angle);\\r\\n      var sinValue = Math.sin(angle);\\r\\n      var m = this._transformMatrix;\\r\\n      this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\\r\\n      this._originalRotate(angle);\\r\\n    };\\r\\n  }\\r\\n}\\r\\nvar CachedCanvases = function CachedCanvasesClosure() {\\r\\n  function CachedCanvases(canvasFactory) {\\r\\n    this.canvasFactory = canvasFactory;\\r\\n    this.cache = Object.create(null);\\r\\n  }\\r\\n  CachedCanvases.prototype = {\\r\\n    getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\\r\\n      var canvasEntry;\\r\\n      if (this.cache[id] !== undefined) {\\r\\n        canvasEntry = this.cache[id];\\r\\n        this.canvasFactory.reset(canvasEntry, width, height);\\r\\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\\r\\n      } else {\\r\\n        canvasEntry = this.canvasFactory.create(width, height);\\r\\n        this.cache[id] = canvasEntry;\\r\\n      }\\r\\n      if (trackTransform) {\\r\\n        addContextCurrentTransform(canvasEntry.context);\\r\\n      }\\r\\n      return canvasEntry;\\r\\n    },\\r\\n    clear: function clear() {\\r\\n      for (var id in this.cache) {\\r\\n        var canvasEntry = this.cache[id];\\r\\n        this.canvasFactory.destroy(canvasEntry);\\r\\n        delete this.cache[id];\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return CachedCanvases;\\r\\n}();\\r\\nfunction compileType3Gl\";a.a+=\"yph(imgData) {\\r\\n  var POINT_TO_PROCESS_LIMIT = 1000;\\r\\n  var width = imgData.width,\\r\\n      height = imgData.height;\\r\\n  var i,\\r\\n      j,\\r\\n      j0,\\r\\n      width1 = width + 1;\\r\\n  var points = new Uint8Array(width1 * (height + 1));\\r\\n  var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\\r\\n  var lineSize = width + 7 & ~7,\\r\\n      data0 = imgData.data;\\r\\n  var data = new Uint8Array(lineSize * height),\\r\\n      pos = 0,\\r\\n      ii;\\r\\n  for (i = 0, ii = data0.length; i < ii; i++) {\\r\\n    var mask = 128,\\r\\n        elem = data0[i];\\r\\n    while (mask > 0) {\\r\\n      data[pos++] = elem & mask ? 0 : 255;\\r\\n      mask >>= 1;\\r\\n    }\\r\\n  }\\r\\n  var count = 0;\\r\\n  pos = 0;\\r\\n  if (data[pos] !== 0) {\\r\\n    points[0] = 1;\\r\\n    ++count;\\r\\n  }\\r\\n  for (j = 1; j < width; j++) {\\r\\n    if (data[pos] !== data[pos + 1]) {\\r\\n      points[j] = data[pos] ? 2 : 1;\\r\\n      ++count;\\r\\n    }\\r\\n    pos++;\\r\\n  }\\r\\n  if (data[pos] !== 0) {\\r\\n    points[j] = 2;\\r\\n    ++count;\\r\\n  }\\r\\n  for (i = 1; i < height; i++) {\\r\\n    pos = i * lineSize;\\r\\n    j0 = i * width1;\\r\\n    if (data[pos - lineSize] !== data[pos]) {\\r\\n      points[j0] = data[pos] ? 1 : 8;\\r\\n      ++count;\\r\\n    }\\r\\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\\r\\n    for (j = 1; j < width; j++) {\\r\\n      sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\\r\\n      if (POINT_TYPES[sum]) {\\r\\n        points[j0 + j] = POINT_TYPES[sum];\\r\\n        ++count;\\r\\n      }\\r\\n      pos++;\\r\\n    }\\r\\n    if (data[pos - lineSize] !== data[pos]) {\\r\\n      points[j0 + j] = data[pos] ? 2 : 4;\\r\\n      ++count;\\r\\n    }\\r\\n    if (count > POINT_TO_PROCESS_LIMIT) {\\r\\n      return null;\\r\\n    }\\r\\n  }\\r\\n  pos = lineSize * (height - 1);\\r\\n  j0 = i * width1;\\r\\n  if (data[pos] !== 0) {\\r\\n    points[j0] = 8;\\r\\n    ++count;\\r\\n  }\\r\\n  for (j = 1; j < width; j++) {\\r\\n    if (data[pos] !== data[pos + 1]) {\\r\\n      points[j0 + j] = data[pos] ? 4 : 8;\\r\\n      ++count;\\r\\n    }\\r\\n    pos++;\\r\\n  }\\r\\n  if (data[pos] !== 0) {\\r\\n    points[j0 + j] = 4;\\r\\n    ++count;\\r\\n  }\\r\\n  if (count > POINT_TO_PROCESS_LIMIT) {\\r\\n    return null;\\r\\n  }\\r\\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\\r\\n  var outlines = [];\\r\\n  for (i = 0; count && i <= height; i++) {\\r\\n    var p = i * width1;\\r\\n    var end = p + width;\\r\\n    while (p < end && !points[p]) {\\r\\n      p++;\\r\\n    }\\r\\n    if (p === end) {\\r\\n      continue;\\r\\n    }\\r\\n    var coords = [p % width1, i];\\r\\n    var type = points[p],\\r\\n        p0 = p,\\r\\n        pp;\\r\\n    do {\\r\\n      var step = steps[type];\\r\\n      do {\\r\\n        p += step;\\r\\n      } while (!points[p]);\\r\\n      pp = points[p];\\r\\n      if (pp !== 5 && pp !== 10) {\\r\\n        type = pp;\\r\\n        points[p] = 0;\\r\\n      } else {\\r\\n        type = pp & 0x33 * type >> 4;\\r\\n        points[p] &= type >> 2 | type << 2;\\r\\n      }\\r\\n      coords.push(p % width1);\\r\\n      coords.push(p / width1 | 0);\\r\\n      --count;\\r\\n    } while (p0 !== p);\\r\\n    outlines.push(coords);\\r\\n    --i;\\r\\n  }\\r\\n  var drawOutline = function drawOutline(c) {\\r\\n    c.save();\\r\\n    c.scale(1 / width, -1 / height);\\r\\n    c.translate(0, -height);\\r\\n    c.beginPath();\\r\\n    for (var i = 0, ii = outlines.length; i < ii; i++) {\\r\\n      var o = outlines[i];\\r\\n      c.moveTo(o[0], o[1]);\\r\\n      for (var j = 2, jj = o.length; j < jj; j += 2) {\\r\\n        c.lineTo(o[j], o[j + 1]);\\r\\n      }\\r\\n    }\\r\\n    c.fill();\\r\\n    c.beginPath();\\r\\n    c.restore();\\r\\n  };\\r\\n  return drawOutline;\\r\\n}\\r\\nvar CanvasExtraState = function CanvasExtraStateClosure() {\\r\\n  function CanvasExtraState() {\\r\\n    this.alphaIsShape = false;\\r\\n    this.fontSize = 0;\\r\\n    this.fontSizeScale = 1;\\r\\n    this.textMatrix = _util.IDENTITY_MATRIX;\\r\\n    this.textMatrixScale = 1;\\r\\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\\r\\n    this.leading = 0;\\r\\n    this.x = 0;\\r\\n    this.y = 0;\\r\\n    this.lineX = 0;\\r\\n    this.lineY = 0;\\r\\n    this.charSpacing = 0;\\r\\n    this.wordSpacing = 0;\\r\\n    this.textHScale = 1;\\r\\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\\r\\n    this.textRise = 0;\\r\\n    this.fillColor = '#000000';\\r\\n    this.strokeColor = '#000000';\\r\\n    this.patternFill = false;\\r\\n    this.fillAlpha = 1;\\r\\n    this.strokeAlpha = 1;\\r\\n    this.lineWidth = 1;\\r\\n    this.activeSMask = null;\\r\\n    this.resumeSMaskCtx = null;\\r\\n  }\\r\\n  CanvasExtraState.prototype = {\\r\\n    clone: function CanvasExtraState_clone() {\\r\\n      return Object.create(this);\\r\\n    },\\r\\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\\r\\n      this.x = x;\\r\\n      this.y = y;\\r\\n    }\\r\\n  };\\r\\n  return CanvasExtraState;\\r\\n}();\\r\\nvar CanvasGraphics = function CanvasGraphicsClosure() {\\r\\n  var EXECUTION_TIME = 15;\\r\\n  var EXECUTION_STEPS = 10;\\r\\n  function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, imageLayer) {\\r\\n    this.ctx = canvasCtx;\\r\\n    this.current = new CanvasExtraState();\\r\\n    this.stateStack = [];\\r\\n    this.pendingClip = null;\\r\\n    this.pendingEOFill = false;\\r\\n    this.res = null;\\r\\n    this.xobjs = null;\\r\\n    this.commonObjs = commonObjs;\\r\\n    this.objs = objs;\\r\\n    this.canvasFactory = canvasFactory;\\r\\n    this.imageLayer = imageLayer;\\r\\n    this.groupStack = [];\\r\\n    this.processingType3 = null;\\r\\n    this.baseTransform = null;\\r\\n    this.baseTransformStack = [];\\r\\n    this.groupLevel = 0;\\r\\n    this.smaskStack = [];\\r\\n    this.smaskCounter = 0;\\r\\n    this.tempSMask = null;\\r\\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\\r\\n    if (canvasCtx) {\\r\\n      addContextCurrentTransform(canvasCtx);\\r\\n    }\\r\\n    this.cachedGetSinglePixelWidth = null;\\r\\n  }\\r\\n  function putBinaryImageData(ctx, imgData) {\\r\\n    if (typeof ImageData !== 'undefined' && imgData instanceof ImageData) {\\r\\n      ctx.putImageData(imgData, 0, 0);\\r\\n      return;\\r\\n    }\\r\\n    var height = imgData.height,\\r\\n        width = imgData.width;\\r\\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\\r\\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\\r\\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\\r\\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\\r\\n    var srcPos = 0,\\r\\n        destPos;\\r\\n    var src = imgData.data;\\r\\n    var dest = chunkImgData.data;\\r\\n    var i, j, thisChunkHeight, elemsInThisChunk;\\r\\n    if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\\r\\n      var srcLength = src.byteLength;\\r\\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\\r\\n      var dest32DataLength = dest32.length;\\r\\n      var fullSrcDiff = width + 7 >> 3;\\r\\n      var white = 0xFFFFFFFF;\\r\\n      var black = IsLittleEndianCached.value ? 0xFF000000 : 0x000000FF;\\r\\n      for (i = 0; i < totalChunks; i++) {\\r\\n        thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\\r\\n        destPos = 0;\\r\\n        for (j = 0; j < thisChunkHeight; j++) {\\r\\n          var srcDiff = srcLength - srcPos;\\r\\n          var k = 0;\\r\\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\\r\\n          var kEndUnrolled = kEnd & ~7;\\r\\n          var mask = 0;\\r\\n          var srcByte = 0;\\r\\n          for (; k < kEndUnrolled; k += 8) {\\r\\n            srcByte = src[srcPos++];\\r\\n            dest32[destPos++] = srcByte & 128 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 64 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 32 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 16 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 8 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 4 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 2 ? white : black;\\r\\n            dest32[destPos++] = srcByte & 1 ? white : black;\\r\\n          }\\r\\n          for (; k < kEnd; k++) {\\r\\n            if (mask === 0) {\\r\\n              srcByte = src[srcPos++];\\r\\n              mask = 128;\\r\\n            }\\r\\n            dest32[destPos++] = srcByte & mask ? white : black;\\r\\n            mask >>= 1;\\r\\n          }\\r\\n        }\\r\\n        while (destPos < dest32DataLength) {\\r\\n          dest32[destPos++] = 0;\\r\\n        }\\r\\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\\r\\n      }\\r\\n    } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\\r\\n      j = 0;\\r\\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\\r\\n      for (i = 0; i < fullChunks; i++) {\\r\\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\\r\\n        srcPos += elemsInThisChunk;\\r\\n        ctx.putImageData(chunkImgData, 0, j);\\r\\n        j += FULL_CHUNK_HEIGHT;\\r\\n      }\\r\\n      if (i < totalChunks) {\\r\\n        elemsInThisChunk = width * partialChunkHeight * 4;\\r\\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\\r\\n        ctx.putImageData(chunkImgData, 0, j);\\r\\n      }\\r\\n    } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\\r\\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\\r\\n      elemsInThisChunk = width * thisChunkHeight;\\r\\n      for (i = 0; i < totalChunks; i++) {\\r\\n        if (i >= fullChunks) {\\r\\n          thisChunkHeight = partialChunkHeight;\\r\\n          elemsInThisChunk = width * thisChunkHeight;\\r\\n        }\\r\\n        destPos = 0;\\r\\n        for (j = elemsInThisChunk; j--;) {\\r\\n          dest[destPos++] = src[srcPos++];\\r\\n          dest[destPos++] = src[srcPos++];\\r\\n          dest[destPos++] = src[srcPos++];\\r\\n          dest[destPos++] = 255;\\r\\n        }\\r\\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\\r\\n      }\\r\\n    } else {\\r\\n      throw new Error('bad image kind: ' + imgData.kind);\\r\\n    }\\r\\n  }\\r\\n  function putBinaryImageMask(ctx, imgData) {\\r\\n    var height = imgData.height,\\r\\n        width = imgData.width;\\r\\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\\r\\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\\r\\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\\r\\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\\r\\n    var srcPos = 0;\\r\\n    var src = imgData.data;\\r\\n    var dest = chunkImgData.data;\\r\\n    for (var i = 0; i < totalChunks; i++) {\\r\\n      var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\\r\\n      var destPos = 3;\\r\\n      for (var j = 0; j < thisChunkHeight; j++) {\\r\\n        var mask = 0;\\r\\n        for (var k = 0; k < width; k++) {\\r\\n          if (!mask) {\\r\\n            var elem = src[srcPos++];\\r\\n            mask = 128;\\r\\n          }\\r\\n          dest[destPos] = elem & mask ? 0 : 255;\\r\\n          destPos += 4;\\r\\n          mask >>= 1;\\r\\n        }\\r\\n      }\\r\\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\\r\\n    }\\r\\n  }\\r\\n  function copyCtxState(sourceCtx, destCtx) {\\r\\n    var properties = ['strokeStyle', 'fillStyle', 'fillRule', 'globalAlpha', 'lineWidth', 'lineCap', 'lineJoin', 'miterLimit', 'globalCompositeOperation', 'font'];\\r\\n    for (var i = 0, ii = properties.length; i < ii; i++) {\\r\\n      var property = properties[i];\\r\\n      if (sourceCtx[property] !== undefined) {\\r\\n        destCtx[property] = sourceCtx[property];\\r\\n      }\\r\\n    }\\r\\n    if (sourceCtx.setLineDash !== undefined) {\\r\\n      destCtx.setLineDash(sourceCtx.getLineDash());\\r\\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\\r\\n    }\\r\\n  }\\r\\n  function resetCtxToDefault(ctx) {\\r\\n    ctx.strokeStyle = '#000000';\\r\\n    ctx.fillStyle = '#000000';\\r\\n    ctx.fillRule = 'nonzero';\\r\\n    ctx.globalAlpha = 1;\\r\\n    ctx.lineWidth = 1;\\r\\n    ctx.lineCap = 'butt';\\r\\n    ctx.lineJoin = 'miter';\\r\\n    ctx.miterLimit = 10;\\r\\n    ctx.globalCompositeOperation = 'source-over';\\r\\n    ctx.font = '10px sans-serif';\\r\\n    if (ctx.setLineDash !== undefined) {\\r\\n      ctx.setLineDash([]);\\r\\n      ctx.lineDashOffset = 0;\\r\\n    }\\r\\n  }\\r\\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\\r\\n    var length = bytes.length;\\r\\n    for (var i = 3; i < length; i += 4) {\\r\\n      var alpha = bytes[i];\\r\\n      if (alpha === 0) {\\r\\n        bytes[i - 3] = r0;\\r\\n        bytes[i - 2] = g0;\\r\\n        bytes[i - 1] = b0;\\r\\n      } else if (alpha < 255) {\\r\\n        var alpha_ = 255 - alpha;\\r\\n        bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\\r\\n        bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\\r\\n        bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\\r\\n    var length = maskData.length;\\r\\n    var scale = 1 / 255;\\r\\n    for (var i = 3; i < length; i += 4) {\\r\\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\\r\\n      layerData[i] = layerData[i] * alpha * scale | 0;\\r\\n    }\\r\\n  }\\r\\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\\r\\n    var length = maskData.length;\\r\\n    for (var i = 3; i < length; i += 4) {\\r\\n      var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\\r\\n      layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\\r\\n    }\\r\\n  }\\r\\n  function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\\r\\n    var hasBackdrop = !!backdrop;\\r\\n    var r0 = hasBackdrop ? backdrop[0] : 0;\\r\\n    var g0 = hasBackdrop ? backdrop[1] : 0;\\r\\n    var b0 = hasBackdrop ? backdrop[2] : 0;\\r\\n    var composeFn;\\r\\n    if (subtype === 'Luminosity') {\\r\\n      composeFn = composeSMaskLuminosity;\\r\\n    } else {\\r\\n      composeFn = composeSMaskAlpha;\\r\\n    }\\r\\n    var PIXELS_TO_PROCESS = 1048576;\\r\\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\\r\\n    for (var row = 0; row < height; row += chunkSize) {\\r\\n      var chunkHeight = Math.min(chunkSize, height - row);\\r\\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\\r\\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\\r\\n      if (hasBackdrop) {\\r\\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\\r\\n      }\\r\\n      composeFn(maskData.data, layerData.data, transferMap);\\r\\n      maskCtx.putImageData(layerData, 0, row);\\r\\n    }\\r\\n  }\\r\\n  function composeSMask(ctx, smask, layerCtx) {\\r\\n    var mask = smask.canvas;\\r\\n    var maskCtx = smask.context;\\r\\n    ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\\r\\n    var backdrop = smask.backdrop || null;\\r\\n    if (!smask.transferMap && _webgl.WebGLUtils.isEnabled) {\\r\\n      var composed = _webgl.WebGLUtils.composeSMask(layerCtx.canvas, mask, {\\r\\n        subtype: smask.subtype,\\r\\n        backdrop: backdrop\\r\\n      });\\r\\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\\r\\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\\r\\n      return;\\r\\n    }\\r\\n    genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\\r\\n    ctx.drawImage(mask, 0, 0);\\r\\n  }\\r\\n  var LINE_CAP_STYLES = ['butt', 'round', 'square'];\\r\\n  var LINE_JOIN_STYLES = ['miter', 'round', 'bevel'];\\r\\n  var NORMAL_CLIP = {};\\r\\n  var EO_CLIP = {};\\r\\n  CanvasGraphics.prototype = {\\r\\n    beginDrawing: function beginDrawing(_ref) {\\r\\n      var transform = _ref.transform,\\r\\n          viewport = _ref.viewport,\\r\\n          transparency = _ref.transparency,\\r\\n          _ref$background = _ref.background,\\r\\n          background = _ref$background === undefined ? null : _ref$background;\\r\\n\\r\\n      var width = this.ctx.canvas.width;\\r\\n      var height = this.ctx.canvas.height;\\r\\n      this.ctx.save();\\r\\n      this.ctx.fillStyle = background || 'rgb(255, 255, 255)';\\r\\n      this.ctx.fillRect(0, 0, width, height);\\r\\n      this.ctx.restore();\\r\\n      if (transparency) {\\r\\n        var transparentCanvas = this.cachedCanvases.getCanvas('transparent', width, height, true);\\r\\n        this.compositeCtx = this.ctx;\\r\\n        this.transparentCanvas = transparentCanvas.canvas;\\r\\n        this.ctx = transparentCanvas.context;\\r\\n        this.ctx.save();\\r\\n        this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\\r\\n      }\\r\\n      this.ctx.save();\\r\\n      resetCtxToDefault(this.ctx);\\r\\n      if (transform) {\\r\\n        this.ctx.transform.apply(this.ctx, transform);\\r\\n      }\\r\\n      this.ctx.transform.apply(this.ctx, viewport.transform);\\r\\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\\r\\n      if (this.imageLayer) {\\r\\n        this.imageLayer.beginLayout();\\r\\n      }\\r\\n    },\\r\\n\\r\\n    executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\\r\\n      var argsArray = operatorList.argsArray;\\r\\n      var fnArray = operatorList.fnArray;\\r\\n      var i = executionStartIdx || 0;\\r\\n      var argsArrayLen = argsArray.length;\\r\\n      if (argsArrayLen === i) {\\r\\n        return i;\\r\\n      }\\r\\n      var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === 'function';\\r\\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0\";a.a+=\";\\r\\n      var steps = 0;\\r\\n      var commonObjs = this.commonObjs;\\r\\n      var objs = this.objs;\\r\\n      var fnId;\\r\\n      while (true) {\\r\\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\\r\\n          stepper.breakIt(i, continueCallback);\\r\\n          return i;\\r\\n        }\\r\\n        fnId = fnArray[i];\\r\\n        if (fnId !== _util.OPS.dependency) {\\r\\n          this[fnId].apply(this, argsArray[i]);\\r\\n        } else {\\r\\n          var deps = argsArray[i];\\r\\n          for (var n = 0, nn = deps.length; n < nn; n++) {\\r\\n            var depObjId = deps[n];\\r\\n            var common = depObjId[0] === 'g' && depObjId[1] === '_';\\r\\n            var objsPool = common ? commonObjs : objs;\\r\\n            if (!objsPool.isResolved(depObjId)) {\\r\\n              objsPool.get(depObjId, continueCallback);\\r\\n              return i;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        i++;\\r\\n        if (i === argsArrayLen) {\\r\\n          return i;\\r\\n        }\\r\\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\\r\\n          if (Date.now() > endTime) {\\r\\n            continueCallback();\\r\\n            return i;\\r\\n          }\\r\\n          steps = 0;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    endDrawing: function CanvasGraphics_endDrawing() {\\r\\n      if (this.current.activeSMask !== null) {\\r\\n        this.endSMaskGroup();\\r\\n      }\\r\\n      this.ctx.restore();\\r\\n      if (this.transparentCanvas) {\\r\\n        this.ctx = this.compositeCtx;\\r\\n        this.ctx.save();\\r\\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\\r\\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\\r\\n        this.ctx.restore();\\r\\n        this.transparentCanvas = null;\\r\\n      }\\r\\n      this.cachedCanvases.clear();\\r\\n      _webgl.WebGLUtils.clear();\\r\\n      if (this.imageLayer) {\\r\\n        this.imageLayer.endLayout();\\r\\n      }\\r\\n    },\\r\\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\\r\\n      this.current.lineWidth = width;\\r\\n      this.ctx.lineWidth = width;\\r\\n    },\\r\\n    setLineCap: function CanvasGraphics_setLineCap(style) {\\r\\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\\r\\n    },\\r\\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\\r\\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\\r\\n    },\\r\\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\\r\\n      this.ctx.miterLimit = limit;\\r\\n    },\\r\\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\\r\\n      var ctx = this.ctx;\\r\\n      if (ctx.setLineDash !== undefined) {\\r\\n        ctx.setLineDash(dashArray);\\r\\n        ctx.lineDashOffset = dashPhase;\\r\\n      }\\r\\n    },\\r\\n    setRenderingIntent: function CanvasGraphics_setRenderingIntent(intent) {},\\r\\n    setFlatness: function CanvasGraphics_setFlatness(flatness) {},\\r\\n    setGState: function CanvasGraphics_setGState(states) {\\r\\n      for (var i = 0, ii = states.length; i < ii; i++) {\\r\\n        var state = states[i];\\r\\n        var key = state[0];\\r\\n        var value = state[1];\\r\\n        switch (key) {\\r\\n          case 'LW':\\r\\n            this.setLineWidth(value);\\r\\n            break;\\r\\n          case 'LC':\\r\\n            this.setLineCap(value);\\r\\n            break;\\r\\n          case 'LJ':\\r\\n            this.setLineJoin(value);\\r\\n            break;\\r\\n          case 'ML':\\r\\n            this.setMiterLimit(value);\\r\\n            break;\\r\\n          case 'D':\\r\\n            this.setDash(value[0], value[1]);\\r\\n            break;\\r\\n          case 'RI':\\r\\n            this.setRenderingIntent(value);\\r\\n            break;\\r\\n          case 'FL':\\r\\n            this.setFlatness(value);\\r\\n            break;\\r\\n          case 'Font':\\r\\n            this.setFont(value[0], value[1]);\\r\\n            break;\\r\\n          case 'CA':\\r\\n            this.current.strokeAlpha = state[1];\\r\\n            break;\\r\\n          case 'ca':\\r\\n            this.current.fillAlpha = state[1];\\r\\n            this.ctx.globalAlpha = state[1];\\r\\n            break;\\r\\n          case 'BM':\\r\\n            this.ctx.globalCompositeOperation = value;\\r\\n            break;\\r\\n          case 'SMask':\\r\\n            if (this.current.activeSMask) {\\r\\n              if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\\r\\n                this.suspendSMaskGroup();\\r\\n              } else {\\r\\n                this.endSMaskGroup();\\r\\n              }\\r\\n            }\\r\\n            this.current.activeSMask = value ? this.tempSMask : null;\\r\\n            if (this.current.activeSMask) {\\r\\n              this.beginSMaskGroup();\\r\\n            }\\r\\n            this.tempSMask = null;\\r\\n            break;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\\r\\n      var activeSMask = this.current.activeSMask;\\r\\n      var drawnWidth = activeSMask.canvas.width;\\r\\n      var drawnHeight = activeSMask.canvas.height;\\r\\n      var cacheId = 'smaskGroupAt' + this.groupLevel;\\r\\n      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\\r\\n      var currentCtx = this.ctx;\\r\\n      var currentTransform = currentCtx.mozCurrentTransform;\\r\\n      this.ctx.save();\\r\\n      var groupCtx = scratchCanvas.context;\\r\\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\\r\\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\\r\\n      groupCtx.transform.apply(groupCtx, currentTransform);\\r\\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\\r\\n      copyCtxState(currentCtx, groupCtx);\\r\\n      this.ctx = groupCtx;\\r\\n      this.setGState([['BM', 'source-over'], ['ca', 1], ['CA', 1]]);\\r\\n      this.groupStack.push(currentCtx);\\r\\n      this.groupLevel++;\\r\\n    },\\r\\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\\r\\n      var groupCtx = this.ctx;\\r\\n      this.groupLevel--;\\r\\n      this.ctx = this.groupStack.pop();\\r\\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\\r\\n      this.ctx.restore();\\r\\n      this.ctx.save();\\r\\n      copyCtxState(groupCtx, this.ctx);\\r\\n      this.current.resumeSMaskCtx = groupCtx;\\r\\n      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\\r\\n      this.ctx.transform.apply(this.ctx, deltaTransform);\\r\\n      groupCtx.save();\\r\\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\\r\\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\\r\\n      groupCtx.restore();\\r\\n    },\\r\\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\\r\\n      var groupCtx = this.current.resumeSMaskCtx;\\r\\n      var currentCtx = this.ctx;\\r\\n      this.ctx = groupCtx;\\r\\n      this.groupStack.push(currentCtx);\\r\\n      this.groupLevel++;\\r\\n    },\\r\\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\\r\\n      var groupCtx = this.ctx;\\r\\n      this.groupLevel--;\\r\\n      this.ctx = this.groupStack.pop();\\r\\n      composeSMask(this.ctx, this.current.activeSMask, groupCtx);\\r\\n      this.ctx.restore();\\r\\n      copyCtxState(groupCtx, this.ctx);\\r\\n      var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\\r\\n      this.ctx.transform.apply(this.ctx, deltaTransform);\\r\\n    },\\r\\n    save: function CanvasGraphics_save() {\\r\\n      this.ctx.save();\\r\\n      var old = this.current;\\r\\n      this.stateStack.push(old);\\r\\n      this.current = old.clone();\\r\\n      this.current.resumeSMaskCtx = null;\\r\\n    },\\r\\n    restore: function CanvasGraphics_restore() {\\r\\n      if (this.current.resumeSMaskCtx) {\\r\\n        this.resumeSMaskGroup();\\r\\n      }\\r\\n      if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\\r\\n        this.endSMaskGroup();\\r\\n      }\\r\\n      if (this.stateStack.length !== 0) {\\r\\n        this.current = this.stateStack.pop();\\r\\n        this.ctx.restore();\\r\\n        this.pendingClip = null;\\r\\n        this.cachedGetSinglePixelWidth = null;\\r\\n      }\\r\\n    },\\r\\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\\r\\n      this.ctx.transform(a, b, c, d, e, f);\\r\\n      this.cachedGetSinglePixelWidth = null;\\r\\n    },\\r\\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\\r\\n      var ctx = this.ctx;\\r\\n      var current = this.current;\\r\\n      var x = current.x,\\r\\n          y = current.y;\\r\\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\\r\\n        switch (ops[i] | 0) {\\r\\n          case _util.OPS.rectangle:\\r\\n            x = args[j++];\\r\\n            y = args[j++];\\r\\n            var width = args[j++];\\r\\n            var height = args[j++];\\r\\n            if (width === 0) {\\r\\n              width = this.getSinglePixelWidth();\\r\\n            }\\r\\n            if (height === 0) {\\r\\n              height = this.getSinglePixelWidth();\\r\\n            }\\r\\n            var xw = x + width;\\r\\n            var yh = y + height;\\r\\n            this.ctx.moveTo(x, y);\\r\\n            this.ctx.lineTo(xw, y);\\r\\n            this.ctx.lineTo(xw, yh);\\r\\n            this.ctx.lineTo(x, yh);\\r\\n            this.ctx.lineTo(x, y);\\r\\n            this.ctx.closePath();\\r\\n            break;\\r\\n          case _util.OPS.moveTo:\\r\\n            x = args[j++];\\r\\n            y = args[j++];\\r\\n            ctx.moveTo(x, y);\\r\\n            break;\\r\\n          case _util.OPS.lineTo:\\r\\n            x = args[j++];\\r\\n            y = args[j++];\\r\\n            ctx.lineTo(x, y);\\r\\n            break;\\r\\n          case _util.OPS.curveTo:\\r\\n            x = args[j + 4];\\r\\n            y = args[j + 5];\\r\\n            ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\\r\\n            j += 6;\\r\\n            break;\\r\\n          case _util.OPS.curveTo2:\\r\\n            ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\\r\\n            x = args[j + 2];\\r\\n            y = args[j + 3];\\r\\n            j += 4;\\r\\n            break;\\r\\n          case _util.OPS.curveTo3:\\r\\n            x = args[j + 2];\\r\\n            y = args[j + 3];\\r\\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\\r\\n            j += 4;\\r\\n            break;\\r\\n          case _util.OPS.closePath:\\r\\n            ctx.closePath();\\r\\n            break;\\r\\n        }\\r\\n      }\\r\\n      current.setCurrentPoint(x, y);\\r\\n    },\\r\\n    closePath: function CanvasGraphics_closePath() {\\r\\n      this.ctx.closePath();\\r\\n    },\\r\\n    stroke: function CanvasGraphics_stroke(consumePath) {\\r\\n      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;\\r\\n      var ctx = this.ctx;\\r\\n      var strokeColor = this.current.strokeColor;\\r\\n      ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\\r\\n      ctx.globalAlpha = this.current.strokeAlpha;\\r\\n      if (strokeColor && strokeColor.hasOwnProperty('type') && strokeColor.type === 'Pattern') {\\r\\n        ctx.save();\\r\\n        ctx.strokeStyle = strokeColor.getPattern(ctx, this);\\r\\n        ctx.stroke();\\r\\n        ctx.restore();\\r\\n      } else {\\r\\n        ctx.stroke();\\r\\n      }\\r\\n      if (consumePath) {\\r\\n        this.consumePath();\\r\\n      }\\r\\n      ctx.globalAlpha = this.current.fillAlpha;\\r\\n    },\\r\\n    closeStroke: function CanvasGraphics_closeStroke() {\\r\\n      this.closePath();\\r\\n      this.stroke();\\r\\n    },\\r\\n    fill: function CanvasGraphics_fill(consumePath) {\\r\\n      consumePath = typeof consumePath !== 'undefined' ? consumePath : true;\\r\\n      var ctx = this.ctx;\\r\\n      var fillColor = this.current.fillColor;\\r\\n      var isPatternFill = this.current.patternFill;\\r\\n      var needRestore = false;\\r\\n      if (isPatternFill) {\\r\\n        ctx.save();\\r\\n        if (this.baseTransform) {\\r\\n          ctx.setTransform.apply(ctx, this.baseTransform);\\r\\n        }\\r\\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\\r\\n        needRestore = true;\\r\\n      }\\r\\n      if (this.pendingEOFill) {\\r\\n        ctx.fill('evenodd');\\r\\n        this.pendingEOFill = false;\\r\\n      } else {\\r\\n        ctx.fill();\\r\\n      }\\r\\n      if (needRestore) {\\r\\n        ctx.restore();\\r\\n      }\\r\\n      if (consumePath) {\\r\\n        this.consumePath();\\r\\n      }\\r\\n    },\\r\\n    eoFill: function CanvasGraphics_eoFill() {\\r\\n      this.pendingEOFill = true;\\r\\n      this.fill();\\r\\n    },\\r\\n    fillStroke: function CanvasGraphics_fillStroke() {\\r\\n      this.fill(false);\\r\\n      this.stroke(false);\\r\\n      this.consumePath();\\r\\n    },\\r\\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\\r\\n      this.pendingEOFill = true;\\r\\n      this.fillStroke();\\r\\n    },\\r\\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\\r\\n      this.closePath();\\r\\n      this.fillStroke();\\r\\n    },\\r\\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\\r\\n      this.pendingEOFill = true;\\r\\n      this.closePath();\\r\\n      this.fillStroke();\\r\\n    },\\r\\n    endPath: function CanvasGraphics_endPath() {\\r\\n      this.consumePath();\\r\\n    },\\r\\n    clip: function CanvasGraphics_clip() {\\r\\n      this.pendingClip = NORMAL_CLIP;\\r\\n    },\\r\\n    eoClip: function CanvasGraphics_eoClip() {\\r\\n      this.pendingClip = EO_CLIP;\\r\\n    },\\r\\n    beginText: function CanvasGraphics_beginText() {\\r\\n      this.current.textMatrix = _util.IDENTITY_MATRIX;\\r\\n      this.current.textMatrixScale = 1;\\r\\n      this.current.x = this.current.lineX = 0;\\r\\n      this.current.y = this.current.lineY = 0;\\r\\n    },\\r\\n    endText: function CanvasGraphics_endText() {\\r\\n      var paths = this.pendingTextPaths;\\r\\n      var ctx = this.ctx;\\r\\n      if (paths === undefined) {\\r\\n        ctx.beginPath();\\r\\n        return;\\r\\n      }\\r\\n      ctx.save();\\r\\n      ctx.beginPath();\\r\\n      for (var i = 0; i < paths.length; i++) {\\r\\n        var path = paths[i];\\r\\n        ctx.setTransform.apply(ctx, path.transform);\\r\\n        ctx.translate(path.x, path.y);\\r\\n        path.addToPath(ctx, path.fontSize);\\r\\n      }\\r\\n      ctx.restore();\\r\\n      ctx.clip();\\r\\n      ctx.beginPath();\\r\\n      delete this.pendingTextPaths;\\r\\n    },\\r\\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\\r\\n      this.current.charSpacing = spacing;\\r\\n    },\\r\\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\\r\\n      this.current.wordSpacing = spacing;\\r\\n    },\\r\\n    setHScale: function CanvasGraphics_setHScale(scale) {\\r\\n      this.current.textHScale = scale / 100;\\r\\n    },\\r\\n    setLeading: function CanvasGraphics_setLeading(leading) {\\r\\n      this.current.leading = -leading;\\r\\n    },\\r\\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\\r\\n      var fontObj = this.commonObjs.get(fontRefName);\\r\\n      var current = this.current;\\r\\n      if (!fontObj) {\\r\\n        throw new Error('Can\\\\'t find font for ' + fontRefName);\\r\\n      }\\r\\n      current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\\r\\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\\r\\n        (0, _util.warn)('Invalid font matrix for font ' + fontRefName);\\r\\n      }\\r\\n      if (size < 0) {\\r\\n        size = -size;\\r\\n        current.fontDirection = -1;\\r\\n      } else {\\r\\n        current.fontDirection = 1;\\r\\n      }\\r\\n      this.current.font = fontObj;\\r\\n      this.current.fontSize = size;\\r\\n      if (fontObj.isType3Font) {\\r\\n        return;\\r\\n      }\\r\\n      var name = fontObj.loadedName || 'sans-serif';\\r\\n      var bold = fontObj.black ? '900' : fontObj.bold ? 'bold' : 'normal';\\r\\n      var italic = fontObj.italic ? 'italic' : 'normal';\\r\\n      var typeface = '\\\"' + name + '\\\", ' + fontObj.fallbackName;\\r\\n      var browserFontSize = size < MIN_FONT_SIZE ? MIN_FONT_SIZE : size > MAX_FONT_SIZE ? MAX_FONT_SIZE : size;\\r\\n      this.current.fontSizeScale = size / browserFontSize;\\r\\n      var rule = italic + ' ' + bold + ' ' + browserFontSize + 'px ' + typeface;\\r\\n      this.ctx.font = rule;\\r\\n    },\\r\\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\\r\\n      this.current.textRenderingMode = mode;\\r\\n    },\\r\\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\\r\\n      this.current.textRise = rise;\\r\\n    },\\r\\n    moveText: function CanvasGraphics_moveText(x, y) {\\r\\n      this.current.x = this.current.lineX += x;\\r\\n      this.current.y = this.current.lineY += y;\\r\\n    },\\r\\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\\r\\n      this.setLeading(-y);\\r\\n      this.moveText(x, y);\\r\\n    },\\r\\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\\r\\n      this.current.textMatrix = [a, b, c, d, e, f];\\r\\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\\r\\n      this.current.x = this.current.lineX = 0;\\r\\n      this.current.y = this.current.lineY = 0;\\r\\n    },\\r\\n    nextLine: function CanvasGraphics_nextLine() {\\r\\n      this.moveText(0, this.current.leading);\\r\\n    },\\r\\n    paintChar: function CanvasGraphics_paintChar(character, x, y) {\\r\\n      var ct\";a.a+=\"x = this.ctx;\\r\\n      var current = this.current;\\r\\n      var font = current.font;\\r\\n      var textRenderingMode = current.textRenderingMode;\\r\\n      var fontSize = current.fontSize / current.fontSizeScale;\\r\\n      var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\\r\\n      var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\\r\\n      var addToPath;\\r\\n      if (font.disableFontFace || isAddToPathSet) {\\r\\n        addToPath = font.getPathGenerator(this.commonObjs, character);\\r\\n      }\\r\\n      if (font.disableFontFace) {\\r\\n        ctx.save();\\r\\n        ctx.translate(x, y);\\r\\n        ctx.beginPath();\\r\\n        addToPath(ctx, fontSize);\\r\\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\\r\\n          ctx.fill();\\r\\n        }\\r\\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\\r\\n          ctx.stroke();\\r\\n        }\\r\\n        ctx.restore();\\r\\n      } else {\\r\\n        if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\\r\\n          ctx.fillText(character, x, y);\\r\\n        }\\r\\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\\r\\n          ctx.strokeText(character, x, y);\\r\\n        }\\r\\n      }\\r\\n      if (isAddToPathSet) {\\r\\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\\r\\n        paths.push({\\r\\n          transform: ctx.mozCurrentTransform,\\r\\n          x: x,\\r\\n          y: y,\\r\\n          fontSize: fontSize,\\r\\n          addToPath: addToPath\\r\\n        });\\r\\n      }\\r\\n    },\\r\\n    get isFontSubpixelAAEnabled() {\\r\\n      var ctx = this.canvasFactory.create(10, 10).context;\\r\\n      ctx.scale(1.5, 1);\\r\\n      ctx.fillText('I', 0, 10);\\r\\n      var data = ctx.getImageData(0, 0, 10, 10).data;\\r\\n      var enabled = false;\\r\\n      for (var i = 3; i < data.length; i += 4) {\\r\\n        if (data[i] > 0 && data[i] < 255) {\\r\\n          enabled = true;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'isFontSubpixelAAEnabled', enabled);\\r\\n    },\\r\\n    showText: function CanvasGraphics_showText(glyphs) {\\r\\n      var current = this.current;\\r\\n      var font = current.font;\\r\\n      if (font.isType3Font) {\\r\\n        return this.showType3Text(glyphs);\\r\\n      }\\r\\n      var fontSize = current.fontSize;\\r\\n      if (fontSize === 0) {\\r\\n        return;\\r\\n      }\\r\\n      var ctx = this.ctx;\\r\\n      var fontSizeScale = current.fontSizeScale;\\r\\n      var charSpacing = current.charSpacing;\\r\\n      var wordSpacing = current.wordSpacing;\\r\\n      var fontDirection = current.fontDirection;\\r\\n      var textHScale = current.textHScale * fontDirection;\\r\\n      var glyphsLength = glyphs.length;\\r\\n      var vertical = font.vertical;\\r\\n      var spacingDir = vertical ? 1 : -1;\\r\\n      var defaultVMetrics = font.defaultVMetrics;\\r\\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\\r\\n      var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace;\\r\\n      ctx.save();\\r\\n      ctx.transform.apply(ctx, current.textMatrix);\\r\\n      ctx.translate(current.x, current.y + current.textRise);\\r\\n      if (current.patternFill) {\\r\\n        ctx.fillStyle = current.fillColor.getPattern(ctx, this);\\r\\n      }\\r\\n      if (fontDirection > 0) {\\r\\n        ctx.scale(textHScale, -1);\\r\\n      } else {\\r\\n        ctx.scale(textHScale, 1);\\r\\n      }\\r\\n      var lineWidth = current.lineWidth;\\r\\n      var scale = current.textMatrixScale;\\r\\n      if (scale === 0 || lineWidth === 0) {\\r\\n        var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\\r\\n        if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\\r\\n          this.cachedGetSinglePixelWidth = null;\\r\\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\\r\\n        }\\r\\n      } else {\\r\\n        lineWidth /= scale;\\r\\n      }\\r\\n      if (fontSizeScale !== 1.0) {\\r\\n        ctx.scale(fontSizeScale, fontSizeScale);\\r\\n        lineWidth /= fontSizeScale;\\r\\n      }\\r\\n      ctx.lineWidth = lineWidth;\\r\\n      var x = 0,\\r\\n          i;\\r\\n      for (i = 0; i < glyphsLength; ++i) {\\r\\n        var glyph = glyphs[i];\\r\\n        if ((0, _util.isNum)(glyph)) {\\r\\n          x += spacingDir * glyph * fontSize / 1000;\\r\\n          continue;\\r\\n        }\\r\\n        var restoreNeeded = false;\\r\\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\\r\\n        var character = glyph.fontChar;\\r\\n        var accent = glyph.accent;\\r\\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\\r\\n        var width = glyph.width;\\r\\n        if (vertical) {\\r\\n          var vmetric, vx, vy;\\r\\n          vmetric = glyph.vmetric || defaultVMetrics;\\r\\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\\r\\n          vx = -vx * widthAdvanceScale;\\r\\n          vy = vmetric[2] * widthAdvanceScale;\\r\\n          width = vmetric ? -vmetric[0] : width;\\r\\n          scaledX = vx / fontSizeScale;\\r\\n          scaledY = (x + vy) / fontSizeScale;\\r\\n        } else {\\r\\n          scaledX = x / fontSizeScale;\\r\\n          scaledY = 0;\\r\\n        }\\r\\n        if (font.remeasure && width > 0) {\\r\\n          var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\\r\\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\\r\\n            var characterScaleX = width / measuredWidth;\\r\\n            restoreNeeded = true;\\r\\n            ctx.save();\\r\\n            ctx.scale(characterScaleX, 1);\\r\\n            scaledX /= characterScaleX;\\r\\n          } else if (width !== measuredWidth) {\\r\\n            scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\\r\\n          }\\r\\n        }\\r\\n        if (glyph.isInFont || font.missingFile) {\\r\\n          if (simpleFillText && !accent) {\\r\\n            ctx.fillText(character, scaledX, scaledY);\\r\\n          } else {\\r\\n            this.paintChar(character, scaledX, scaledY);\\r\\n            if (accent) {\\r\\n              scaledAccentX = scaledX + accent.offset.x / fontSizeScale;\\r\\n              scaledAccentY = scaledY - accent.offset.y / fontSizeScale;\\r\\n              this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY);\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        var charWidth = width * widthAdvanceScale + spacing * fontDirection;\\r\\n        x += charWidth;\\r\\n        if (restoreNeeded) {\\r\\n          ctx.restore();\\r\\n        }\\r\\n      }\\r\\n      if (vertical) {\\r\\n        current.y -= x * textHScale;\\r\\n      } else {\\r\\n        current.x += x * textHScale;\\r\\n      }\\r\\n      ctx.restore();\\r\\n    },\\r\\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\\r\\n      var ctx = this.ctx;\\r\\n      var current = this.current;\\r\\n      var font = current.font;\\r\\n      var fontSize = current.fontSize;\\r\\n      var fontDirection = current.fontDirection;\\r\\n      var spacingDir = font.vertical ? 1 : -1;\\r\\n      var charSpacing = current.charSpacing;\\r\\n      var wordSpacing = current.wordSpacing;\\r\\n      var textHScale = current.textHScale * fontDirection;\\r\\n      var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\r\\n      var glyphsLength = glyphs.length;\\r\\n      var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\\r\\n      var i, glyph, width, spacingLength;\\r\\n      if (isTextInvisible || fontSize === 0) {\\r\\n        return;\\r\\n      }\\r\\n      this.cachedGetSinglePixelWidth = null;\\r\\n      ctx.save();\\r\\n      ctx.transform.apply(ctx, current.textMatrix);\\r\\n      ctx.translate(current.x, current.y);\\r\\n      ctx.scale(textHScale, fontDirection);\\r\\n      for (i = 0; i < glyphsLength; ++i) {\\r\\n        glyph = glyphs[i];\\r\\n        if ((0, _util.isNum)(glyph)) {\\r\\n          spacingLength = spacingDir * glyph * fontSize / 1000;\\r\\n          this.ctx.translate(spacingLength, 0);\\r\\n          current.x += spacingLength * textHScale;\\r\\n          continue;\\r\\n        }\\r\\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\\r\\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\\r\\n        if (!operatorList) {\\r\\n          (0, _util.warn)('Type3 character \\\"' + glyph.operatorListId + '\\\" is not available.');\\r\\n          continue;\\r\\n        }\\r\\n        this.processingType3 = glyph;\\r\\n        this.save();\\r\\n        ctx.scale(fontSize, fontSize);\\r\\n        ctx.transform.apply(ctx, fontMatrix);\\r\\n        this.executeOperatorList(operatorList);\\r\\n        this.restore();\\r\\n        var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\\r\\n        width = transformed[0] * fontSize + spacing;\\r\\n        ctx.translate(width, 0);\\r\\n        current.x += width * textHScale;\\r\\n      }\\r\\n      ctx.restore();\\r\\n      this.processingType3 = null;\\r\\n    },\\r\\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\\r\\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\\r\\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\\r\\n      this.clip();\\r\\n      this.endPath();\\r\\n    },\\r\\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\\r\\n      var _this = this;\\r\\n\\r\\n      var pattern;\\r\\n      if (IR[0] === 'TilingPattern') {\\r\\n        var color = IR[1];\\r\\n        var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\\r\\n        var canvasGraphicsFactory = {\\r\\n          createCanvasGraphics: function createCanvasGraphics(ctx) {\\r\\n            return new CanvasGraphics(ctx, _this.commonObjs, _this.objs, _this.canvasFactory);\\r\\n          }\\r\\n        };\\r\\n        pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\\r\\n      } else {\\r\\n        pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\\r\\n      }\\r\\n      return pattern;\\r\\n    },\\r\\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\\r\\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\\r\\n    },\\r\\n    setFillColorN: function CanvasGraphics_setFillColorN() {\\r\\n      this.current.fillColor = this.getColorN_Pattern(arguments);\\r\\n      this.current.patternFill = true;\\r\\n    },\\r\\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\\r\\n      var color = _util.Util.makeCssRgb(r, g, b);\\r\\n      this.ctx.strokeStyle = color;\\r\\n      this.current.strokeColor = color;\\r\\n    },\\r\\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\\r\\n      var color = _util.Util.makeCssRgb(r, g, b);\\r\\n      this.ctx.fillStyle = color;\\r\\n      this.current.fillColor = color;\\r\\n      this.current.patternFill = false;\\r\\n    },\\r\\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\\r\\n      var ctx = this.ctx;\\r\\n      this.save();\\r\\n      var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\\r\\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\\r\\n      var inv = ctx.mozCurrentTransformInverse;\\r\\n      if (inv) {\\r\\n        var canvas = ctx.canvas;\\r\\n        var width = canvas.width;\\r\\n        var height = canvas.height;\\r\\n        var bl = _util.Util.applyTransform([0, 0], inv);\\r\\n        var br = _util.Util.applyTransform([0, height], inv);\\r\\n        var ul = _util.Util.applyTransform([width, 0], inv);\\r\\n        var ur = _util.Util.applyTransform([width, height], inv);\\r\\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\\r\\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\\r\\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\\r\\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\\r\\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\\r\\n      } else {\\r\\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\\r\\n      }\\r\\n      this.restore();\\r\\n    },\\r\\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\\r\\n      throw new Error('Should not call beginInlineImage');\\r\\n    },\\r\\n    beginImageData: function CanvasGraphics_beginImageData() {\\r\\n      throw new Error('Should not call beginImageData');\\r\\n    },\\r\\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\\r\\n      this.save();\\r\\n      this.baseTransformStack.push(this.baseTransform);\\r\\n      if (Array.isArray(matrix) && matrix.length === 6) {\\r\\n        this.transform.apply(this, matrix);\\r\\n      }\\r\\n      this.baseTransform = this.ctx.mozCurrentTransform;\\r\\n      if (Array.isArray(bbox) && bbox.length === 4) {\\r\\n        var width = bbox[2] - bbox[0];\\r\\n        var height = bbox[3] - bbox[1];\\r\\n        this.ctx.rect(bbox[0], bbox[1], width, height);\\r\\n        this.clip();\\r\\n        this.endPath();\\r\\n      }\\r\\n    },\\r\\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\\r\\n      this.restore();\\r\\n      this.baseTransform = this.baseTransformStack.pop();\\r\\n    },\\r\\n    beginGroup: function CanvasGraphics_beginGroup(group) {\\r\\n      this.save();\\r\\n      var currentCtx = this.ctx;\\r\\n      if (!group.isolated) {\\r\\n        (0, _util.info)('TODO: Support non-isolated groups.');\\r\\n      }\\r\\n      if (group.knockout) {\\r\\n        (0, _util.warn)('Knockout groups not supported.');\\r\\n      }\\r\\n      var currentTransform = currentCtx.mozCurrentTransform;\\r\\n      if (group.matrix) {\\r\\n        currentCtx.transform.apply(currentCtx, group.matrix);\\r\\n      }\\r\\n      if (!group.bbox) {\\r\\n        throw new Error('Bounding box is required.');\\r\\n      }\\r\\n      var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\\r\\n      var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\\r\\n      bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\\r\\n      var offsetX = Math.floor(bounds[0]);\\r\\n      var offsetY = Math.floor(bounds[1]);\\r\\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\\r\\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\\r\\n      var scaleX = 1,\\r\\n          scaleY = 1;\\r\\n      if (drawnWidth > MAX_GROUP_SIZE) {\\r\\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\\r\\n        drawnWidth = MAX_GROUP_SIZE;\\r\\n      }\\r\\n      if (drawnHeight > MAX_GROUP_SIZE) {\\r\\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\\r\\n        drawnHeight = MAX_GROUP_SIZE;\\r\\n      }\\r\\n      var cacheId = 'groupAt' + this.groupLevel;\\r\\n      if (group.smask) {\\r\\n        cacheId += '_smask_' + this.smaskCounter++ % 2;\\r\\n      }\\r\\n      var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\\r\\n      var groupCtx = scratchCanvas.context;\\r\\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\\r\\n      groupCtx.translate(-offsetX, -offsetY);\\r\\n      groupCtx.transform.apply(groupCtx, currentTransform);\\r\\n      if (group.smask) {\\r\\n        this.smaskStack.push({\\r\\n          canvas: scratchCanvas.canvas,\\r\\n          context: groupCtx,\\r\\n          offsetX: offsetX,\\r\\n          offsetY: offsetY,\\r\\n          scaleX: scaleX,\\r\\n          scaleY: scaleY,\\r\\n          subtype: group.smask.subtype,\\r\\n          backdrop: group.smask.backdrop,\\r\\n          transferMap: group.smask.transferMap || null,\\r\\n          startTransformInverse: null\\r\\n        });\\r\\n      } else {\\r\\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\\r\\n        currentCtx.translate(offsetX, offsetY);\\r\\n        currentCtx.scale(scaleX, scaleY);\\r\\n      }\\r\\n      copyCtxState(currentCtx, groupCtx);\\r\\n      this.ctx = groupCtx;\\r\\n      this.setGState([['BM', 'source-over'], ['ca', 1], ['CA', 1]]);\\r\\n      this.groupStack.push(currentCtx);\\r\\n      this.groupLevel++;\\r\\n      this.current.activeSMask = null;\\r\\n    },\\r\\n    endGroup: function CanvasGraphics_endGroup(group) {\\r\\n      this.groupLevel--;\\r\\n      var groupCtx = this.ctx;\\r\\n      this.ctx = this.groupStack.pop();\\r\\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\\r\\n        this.ctx.imageSmoothingEnabled = false;\\r\\n      } else {\\r\\n        this.ctx.mozImageSmoothingEnabled = false;\\r\\n      }\\r\\n      if (group.smask) {\\r\\n        this.tempSMask = this.smaskStack.pop();\\r\\n      } else {\\r\\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\\r\\n      }\\r\\n      this.restore();\\r\\n    },\\r\\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\\r\\n      this.save();\\r\\n      if (this.baseTransform) {\\r\\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\\r\\n      }\\r\\n    },\\r\\n    endAnnotations: function CanvasGraphics_endAnnotations() {\\r\\n      this.restore();\\r\\n    },\\r\\n    beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\\r\\n      this.save();\\r\\n      resetCtxToDefault(this.ctx);\\r\\n      this.current = new CanvasExtraState();\\r\\n      if (Array.isArray(rect) && r\";a.a+=\"ect.length === 4) {\\r\\n        var width = rect[2] - rect[0];\\r\\n        var height = rect[3] - rect[1];\\r\\n        this.ctx.rect(rect[0], rect[1], width, height);\\r\\n        this.clip();\\r\\n        this.endPath();\\r\\n      }\\r\\n      this.transform.apply(this, transform);\\r\\n      this.transform.apply(this, matrix);\\r\\n    },\\r\\n    endAnnotation: function CanvasGraphics_endAnnotation() {\\r\\n      this.restore();\\r\\n    },\\r\\n    paintJpegXObject: function CanvasGraphics_paintJpegXObject(objId, w, h) {\\r\\n      var domImage = this.objs.get(objId);\\r\\n      if (!domImage) {\\r\\n        (0, _util.warn)('Dependent image isn\\\\'t ready yet');\\r\\n        return;\\r\\n      }\\r\\n      this.save();\\r\\n      var ctx = this.ctx;\\r\\n      ctx.scale(1 / w, -1 / h);\\r\\n      ctx.drawImage(domImage, 0, 0, domImage.width, domImage.height, 0, -h, w, h);\\r\\n      if (this.imageLayer) {\\r\\n        var currentTransform = ctx.mozCurrentTransformInverse;\\r\\n        var position = this.getCanvasPosition(0, 0);\\r\\n        this.imageLayer.appendImage({\\r\\n          objId: objId,\\r\\n          left: position[0],\\r\\n          top: position[1],\\r\\n          width: w / currentTransform[0],\\r\\n          height: h / currentTransform[3]\\r\\n        });\\r\\n      }\\r\\n      this.restore();\\r\\n    },\\r\\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\\r\\n      var ctx = this.ctx;\\r\\n      var width = img.width,\\r\\n          height = img.height;\\r\\n      var fillColor = this.current.fillColor;\\r\\n      var isPatternFill = this.current.patternFill;\\r\\n      var glyph = this.processingType3;\\r\\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\\r\\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\\r\\n          glyph.compiled = compileType3Glyph({\\r\\n            data: img.data,\\r\\n            width: width,\\r\\n            height: height\\r\\n          });\\r\\n        } else {\\r\\n          glyph.compiled = null;\\r\\n        }\\r\\n      }\\r\\n      if (glyph && glyph.compiled) {\\r\\n        glyph.compiled(ctx);\\r\\n        return;\\r\\n      }\\r\\n      var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);\\r\\n      var maskCtx = maskCanvas.context;\\r\\n      maskCtx.save();\\r\\n      putBinaryImageMask(maskCtx, img);\\r\\n      maskCtx.globalCompositeOperation = 'source-in';\\r\\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\\r\\n      maskCtx.fillRect(0, 0, width, height);\\r\\n      maskCtx.restore();\\r\\n      this.paintInlineImageXObject(maskCanvas.canvas);\\r\\n    },\\r\\n    paintImageMaskXObjectRepeat: function CanvasGraphics_paintImageMaskXObjectRepeat(imgData, scaleX, scaleY, positions) {\\r\\n      var width = imgData.width;\\r\\n      var height = imgData.height;\\r\\n      var fillColor = this.current.fillColor;\\r\\n      var isPatternFill = this.current.patternFill;\\r\\n      var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);\\r\\n      var maskCtx = maskCanvas.context;\\r\\n      maskCtx.save();\\r\\n      putBinaryImageMask(maskCtx, imgData);\\r\\n      maskCtx.globalCompositeOperation = 'source-in';\\r\\n      maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\\r\\n      maskCtx.fillRect(0, 0, width, height);\\r\\n      maskCtx.restore();\\r\\n      var ctx = this.ctx;\\r\\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\\r\\n        ctx.save();\\r\\n        ctx.transform(scaleX, 0, 0, scaleY, positions[i], positions[i + 1]);\\r\\n        ctx.scale(1, -1);\\r\\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\\r\\n        ctx.restore();\\r\\n      }\\r\\n    },\\r\\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\\r\\n      var ctx = this.ctx;\\r\\n      var fillColor = this.current.fillColor;\\r\\n      var isPatternFill = this.current.patternFill;\\r\\n      for (var i = 0, ii = images.length; i < ii; i++) {\\r\\n        var image = images[i];\\r\\n        var width = image.width,\\r\\n            height = image.height;\\r\\n        var maskCanvas = this.cachedCanvases.getCanvas('maskCanvas', width, height);\\r\\n        var maskCtx = maskCanvas.context;\\r\\n        maskCtx.save();\\r\\n        putBinaryImageMask(maskCtx, image);\\r\\n        maskCtx.globalCompositeOperation = 'source-in';\\r\\n        maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\\r\\n        maskCtx.fillRect(0, 0, width, height);\\r\\n        maskCtx.restore();\\r\\n        ctx.save();\\r\\n        ctx.transform.apply(ctx, image.transform);\\r\\n        ctx.scale(1, -1);\\r\\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\\r\\n        ctx.restore();\\r\\n      }\\r\\n    },\\r\\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\\r\\n      var imgData = this.objs.get(objId);\\r\\n      if (!imgData) {\\r\\n        (0, _util.warn)('Dependent image isn\\\\'t ready yet');\\r\\n        return;\\r\\n      }\\r\\n      this.paintInlineImageXObject(imgData);\\r\\n    },\\r\\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\\r\\n      var imgData = this.objs.get(objId);\\r\\n      if (!imgData) {\\r\\n        (0, _util.warn)('Dependent image isn\\\\'t ready yet');\\r\\n        return;\\r\\n      }\\r\\n      var width = imgData.width;\\r\\n      var height = imgData.height;\\r\\n      var map = [];\\r\\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\\r\\n        map.push({\\r\\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\\r\\n          x: 0,\\r\\n          y: 0,\\r\\n          w: width,\\r\\n          h: height\\r\\n        });\\r\\n      }\\r\\n      this.paintInlineImageXObjectGroup(imgData, map);\\r\\n    },\\r\\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\\r\\n      var width = imgData.width;\\r\\n      var height = imgData.height;\\r\\n      var ctx = this.ctx;\\r\\n      this.save();\\r\\n      ctx.scale(1 / width, -1 / height);\\r\\n      var currentTransform = ctx.mozCurrentTransformInverse;\\r\\n      var a = currentTransform[0],\\r\\n          b = currentTransform[1];\\r\\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\\r\\n      var c = currentTransform[2],\\r\\n          d = currentTransform[3];\\r\\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\\r\\n      var imgToPaint, tmpCanvas;\\r\\n      if (imgData instanceof HTMLElement || !imgData.data) {\\r\\n        imgToPaint = imgData;\\r\\n      } else {\\r\\n        tmpCanvas = this.cachedCanvases.getCanvas('inlineImage', width, height);\\r\\n        var tmpCtx = tmpCanvas.context;\\r\\n        putBinaryImageData(tmpCtx, imgData);\\r\\n        imgToPaint = tmpCanvas.canvas;\\r\\n      }\\r\\n      var paintWidth = width,\\r\\n          paintHeight = height;\\r\\n      var tmpCanvasId = 'prescale1';\\r\\n      while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\\r\\n        var newWidth = paintWidth,\\r\\n            newHeight = paintHeight;\\r\\n        if (widthScale > 2 && paintWidth > 1) {\\r\\n          newWidth = Math.ceil(paintWidth / 2);\\r\\n          widthScale /= paintWidth / newWidth;\\r\\n        }\\r\\n        if (heightScale > 2 && paintHeight > 1) {\\r\\n          newHeight = Math.ceil(paintHeight / 2);\\r\\n          heightScale /= paintHeight / newHeight;\\r\\n        }\\r\\n        tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\\r\\n        tmpCtx = tmpCanvas.context;\\r\\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\\r\\n        tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\\r\\n        imgToPaint = tmpCanvas.canvas;\\r\\n        paintWidth = newWidth;\\r\\n        paintHeight = newHeight;\\r\\n        tmpCanvasId = tmpCanvasId === 'prescale1' ? 'prescale2' : 'prescale1';\\r\\n      }\\r\\n      ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\\r\\n      if (this.imageLayer) {\\r\\n        var position = this.getCanvasPosition(0, -height);\\r\\n        this.imageLayer.appendImage({\\r\\n          imgData: imgData,\\r\\n          left: position[0],\\r\\n          top: position[1],\\r\\n          width: width / currentTransform[0],\\r\\n          height: height / currentTransform[3]\\r\\n        });\\r\\n      }\\r\\n      this.restore();\\r\\n    },\\r\\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\\r\\n      var ctx = this.ctx;\\r\\n      var w = imgData.width;\\r\\n      var h = imgData.height;\\r\\n      var tmpCanvas = this.cachedCanvases.getCanvas('inlineImage', w, h);\\r\\n      var tmpCtx = tmpCanvas.context;\\r\\n      putBinaryImageData(tmpCtx, imgData);\\r\\n      for (var i = 0, ii = map.length; i < ii; i++) {\\r\\n        var entry = map[i];\\r\\n        ctx.save();\\r\\n        ctx.transform.apply(ctx, entry.transform);\\r\\n        ctx.scale(1, -1);\\r\\n        ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\\r\\n        if (this.imageLayer) {\\r\\n          var position = this.getCanvasPosition(entry.x, entry.y);\\r\\n          this.imageLayer.appendImage({\\r\\n            imgData: imgData,\\r\\n            left: position[0],\\r\\n            top: position[1],\\r\\n            width: w,\\r\\n            height: h\\r\\n          });\\r\\n        }\\r\\n        ctx.restore();\\r\\n      }\\r\\n    },\\r\\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\\r\\n      this.ctx.fillRect(0, 0, 1, 1);\\r\\n    },\\r\\n    paintXObject: function CanvasGraphics_paintXObject() {\\r\\n      (0, _util.warn)('Unsupported \\\\'paintXObject\\\\' command.');\\r\\n    },\\r\\n    markPoint: function CanvasGraphics_markPoint(tag) {},\\r\\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\\r\\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {},\\r\\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {},\\r\\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {},\\r\\n    beginCompat: function CanvasGraphics_beginCompat() {},\\r\\n    endCompat: function CanvasGraphics_endCompat() {},\\r\\n    consumePath: function CanvasGraphics_consumePath() {\\r\\n      var ctx = this.ctx;\\r\\n      if (this.pendingClip) {\\r\\n        if (this.pendingClip === EO_CLIP) {\\r\\n          ctx.clip('evenodd');\\r\\n        } else {\\r\\n          ctx.clip();\\r\\n        }\\r\\n        this.pendingClip = null;\\r\\n      }\\r\\n      ctx.beginPath();\\r\\n    },\\r\\n    getSinglePixelWidth: function CanvasGraphics_getSinglePixelWidth(scale) {\\r\\n      if (this.cachedGetSinglePixelWidth === null) {\\r\\n        this.ctx.save();\\r\\n        var inverse = this.ctx.mozCurrentTransformInverse;\\r\\n        this.ctx.restore();\\r\\n        this.cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\\r\\n      }\\r\\n      return this.cachedGetSinglePixelWidth;\\r\\n    },\\r\\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\\r\\n      var transform = this.ctx.mozCurrentTransform;\\r\\n      return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\\r\\n    }\\r\\n  };\\r\\n  for (var op in _util.OPS) {\\r\\n    CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\\r\\n  }\\r\\n  return CanvasGraphics;\\r\\n}();\\r\\nexports.CanvasGraphics = CanvasGraphics;\\r\\n\\r\\n/***/ }),\\r\\n/* 137 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.TilingPattern = exports.getShadingPatternFromIR = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _webgl = __w_pdfjs_require__(76);\\r\\n\\r\\nvar ShadingIRs = {};\\r\\nShadingIRs.RadialAxial = {\\r\\n  fromIR: function RadialAxial_fromIR(raw) {\\r\\n    var type = raw[1];\\r\\n    var colorStops = raw[2];\\r\\n    var p0 = raw[3];\\r\\n    var p1 = raw[4];\\r\\n    var r0 = raw[5];\\r\\n    var r1 = raw[6];\\r\\n    return {\\r\\n      type: 'Pattern',\\r\\n      getPattern: function RadialAxial_getPattern(ctx) {\\r\\n        var grad;\\r\\n        if (type === 'axial') {\\r\\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\\r\\n        } else if (type === 'radial') {\\r\\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\\r\\n        }\\r\\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\\r\\n          var c = colorStops[i];\\r\\n          grad.addColorStop(c[0], c[1]);\\r\\n        }\\r\\n        return grad;\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n};\\r\\nvar createMeshCanvas = function createMeshCanvasClosure() {\\r\\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\\r\\n    var coords = context.coords,\\r\\n        colors = context.colors;\\r\\n    var bytes = data.data,\\r\\n        rowSize = data.width * 4;\\r\\n    var tmp;\\r\\n    if (coords[p1 + 1] > coords[p2 + 1]) {\\r\\n      tmp = p1;\\r\\n      p1 = p2;\\r\\n      p2 = tmp;\\r\\n      tmp = c1;\\r\\n      c1 = c2;\\r\\n      c2 = tmp;\\r\\n    }\\r\\n    if (coords[p2 + 1] > coords[p3 + 1]) {\\r\\n      tmp = p2;\\r\\n      p2 = p3;\\r\\n      p3 = tmp;\\r\\n      tmp = c2;\\r\\n      c2 = c3;\\r\\n      c3 = tmp;\\r\\n    }\\r\\n    if (coords[p1 + 1] > coords[p2 + 1]) {\\r\\n      tmp = p1;\\r\\n      p1 = p2;\\r\\n      p2 = tmp;\\r\\n      tmp = c1;\\r\\n      c1 = c2;\\r\\n      c2 = tmp;\\r\\n    }\\r\\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\\r\\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\\r\\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\\r\\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\\r\\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\\r\\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\\r\\n    if (y1 >= y3) {\\r\\n      return;\\r\\n    }\\r\\n    var c1r = colors[c1],\\r\\n        c1g = colors[c1 + 1],\\r\\n        c1b = colors[c1 + 2];\\r\\n    var c2r = colors[c2],\\r\\n        c2g = colors[c2 + 1],\\r\\n        c2b = colors[c2 + 2];\\r\\n    var c3r = colors[c3],\\r\\n        c3g = colors[c3 + 1],\\r\\n        c3b = colors[c3 + 2];\\r\\n    var minY = Math.round(y1),\\r\\n        maxY = Math.round(y3);\\r\\n    var xa, car, cag, cab;\\r\\n    var xb, cbr, cbg, cbb;\\r\\n    var k;\\r\\n    for (var y = minY; y <= maxY; y++) {\\r\\n      if (y < y2) {\\r\\n        k = y < y1 ? 0 : y1 === y2 ? 1 : (y1 - y) / (y1 - y2);\\r\\n        xa = x1 - (x1 - x2) * k;\\r\\n        car = c1r - (c1r - c2r) * k;\\r\\n        cag = c1g - (c1g - c2g) * k;\\r\\n        cab = c1b - (c1b - c2b) * k;\\r\\n      } else {\\r\\n        k = y > y3 ? 1 : y2 === y3 ? 0 : (y2 - y) / (y2 - y3);\\r\\n        xa = x2 - (x2 - x3) * k;\\r\\n        car = c2r - (c2r - c3r) * k;\\r\\n        cag = c2g - (c2g - c3g) * k;\\r\\n        cab = c2b - (c2b - c3b) * k;\\r\\n      }\\r\\n      k = y < y1 ? 0 : y > y3 ? 1 : (y1 - y) / (y1 - y3);\\r\\n      xb = x1 - (x1 - x3) * k;\\r\\n      cbr = c1r - (c1r - c3r) * k;\\r\\n      cbg = c1g - (c1g - c3g) * k;\\r\\n      cbb = c1b - (c1b - c3b) * k;\\r\\n      var x1_ = Math.round(Math.min(xa, xb));\\r\\n      var x2_ = Math.round(Math.max(xa, xb));\\r\\n      var j = rowSize * y + x1_ * 4;\\r\\n      for (var x = x1_; x <= x2_; x++) {\\r\\n        k = (xa - x) / (xa - xb);\\r\\n        k = k < 0 ? 0 : k > 1 ? 1 : k;\\r\\n        bytes[j++] = car - (car - cbr) * k | 0;\\r\\n        bytes[j++] = cag - (cag - cbg) * k | 0;\\r\\n        bytes[j++] = cab - (cab - cbb) * k | 0;\\r\\n        bytes[j++] = 255;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function drawFigure(data, figure, context) {\\r\\n    var ps = figure.coords;\\r\\n    var cs = figure.colors;\\r\\n    var i, ii;\\r\\n    switch (figure.type) {\\r\\n      case 'lattice':\\r\\n        var verticesPerRow = figure.verticesPerRow;\\r\\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\\r\\n        var cols = verticesPerRow - 1;\\r\\n        for (i = 0; i < rows; i++) {\\r\\n          var q = i * verticesPerRow;\\r\\n          for (var j = 0; j < cols; j++, q++) {\\r\\n            drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\\r\\n            drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\\r\\n          }\\r\\n        }\\r\\n        break;\\r\\n      case 'triangles':\\r\\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\\r\\n          drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\\r\\n        }\\r\\n        break;\\r\\n      default:\\r\\n        throw new Error('illegal figure');\\r\\n    }\\r\\n  }\\r\\n  function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases) {\\r\\n    var EXPECTED_SCALE = 1.1;\\r\\n    var MAX_PATTERN_SIZE = 3000;\\r\\n    var BORDER_SIZE = 2;\\r\\n    var offsetX = Math.floor(bounds[0]);\\r\\n    var offsetY = Math.floor(bounds[1]);\\r\\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\\r\\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\\r\\n    var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\\r\\n    var height = Math.min(Math.ceil(Math.abs(bound\";a.a+=\"sHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\\r\\n    var scaleX = boundsWidth / width;\\r\\n    var scaleY = boundsHeight / height;\\r\\n    var context = {\\r\\n      coords: coords,\\r\\n      colors: colors,\\r\\n      offsetX: -offsetX,\\r\\n      offsetY: -offsetY,\\r\\n      scaleX: 1 / scaleX,\\r\\n      scaleY: 1 / scaleY\\r\\n    };\\r\\n    var paddedWidth = width + BORDER_SIZE * 2;\\r\\n    var paddedHeight = height + BORDER_SIZE * 2;\\r\\n    var canvas, tmpCanvas, i, ii;\\r\\n    if (_webgl.WebGLUtils.isEnabled) {\\r\\n      canvas = _webgl.WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\\r\\n      tmpCanvas = cachedCanvases.getCanvas('mesh', paddedWidth, paddedHeight, false);\\r\\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\\r\\n      canvas = tmpCanvas.canvas;\\r\\n    } else {\\r\\n      tmpCanvas = cachedCanvases.getCanvas('mesh', paddedWidth, paddedHeight, false);\\r\\n      var tmpCtx = tmpCanvas.context;\\r\\n      var data = tmpCtx.createImageData(width, height);\\r\\n      if (backgroundColor) {\\r\\n        var bytes = data.data;\\r\\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\\r\\n          bytes[i] = backgroundColor[0];\\r\\n          bytes[i + 1] = backgroundColor[1];\\r\\n          bytes[i + 2] = backgroundColor[2];\\r\\n          bytes[i + 3] = 255;\\r\\n        }\\r\\n      }\\r\\n      for (i = 0; i < figures.length; i++) {\\r\\n        drawFigure(data, figures[i], context);\\r\\n      }\\r\\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\\r\\n      canvas = tmpCanvas.canvas;\\r\\n    }\\r\\n    return {\\r\\n      canvas: canvas,\\r\\n      offsetX: offsetX - BORDER_SIZE * scaleX,\\r\\n      offsetY: offsetY - BORDER_SIZE * scaleY,\\r\\n      scaleX: scaleX,\\r\\n      scaleY: scaleY\\r\\n    };\\r\\n  }\\r\\n  return createMeshCanvas;\\r\\n}();\\r\\nShadingIRs.Mesh = {\\r\\n  fromIR: function Mesh_fromIR(raw) {\\r\\n    var coords = raw[2];\\r\\n    var colors = raw[3];\\r\\n    var figures = raw[4];\\r\\n    var bounds = raw[5];\\r\\n    var matrix = raw[6];\\r\\n    var background = raw[8];\\r\\n    return {\\r\\n      type: 'Pattern',\\r\\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\\r\\n        var scale;\\r\\n        if (shadingFill) {\\r\\n          scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\\r\\n        } else {\\r\\n          scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\\r\\n          if (matrix) {\\r\\n            var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\\r\\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\\r\\n          }\\r\\n        }\\r\\n        var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases);\\r\\n        if (!shadingFill) {\\r\\n          ctx.setTransform.apply(ctx, owner.baseTransform);\\r\\n          if (matrix) {\\r\\n            ctx.transform.apply(ctx, matrix);\\r\\n          }\\r\\n        }\\r\\n        ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\\r\\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\\r\\n        return ctx.createPattern(temporaryPatternCanvas.canvas, 'no-repeat');\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n};\\r\\nShadingIRs.Dummy = {\\r\\n  fromIR: function Dummy_fromIR() {\\r\\n    return {\\r\\n      type: 'Pattern',\\r\\n      getPattern: function Dummy_fromIR_getPattern() {\\r\\n        return 'hotpink';\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n};\\r\\nfunction getShadingPatternFromIR(raw) {\\r\\n  var shadingIR = ShadingIRs[raw[0]];\\r\\n  if (!shadingIR) {\\r\\n    throw new Error('Unknown IR type: ' + raw[0]);\\r\\n  }\\r\\n  return shadingIR.fromIR(raw);\\r\\n}\\r\\nvar TilingPattern = function TilingPatternClosure() {\\r\\n  var PaintType = {\\r\\n    COLORED: 1,\\r\\n    UNCOLORED: 2\\r\\n  };\\r\\n  var MAX_PATTERN_SIZE = 3000;\\r\\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\\r\\n    this.operatorList = IR[2];\\r\\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\\r\\n    this.bbox = IR[4];\\r\\n    this.xstep = IR[5];\\r\\n    this.ystep = IR[6];\\r\\n    this.paintType = IR[7];\\r\\n    this.tilingType = IR[8];\\r\\n    this.color = color;\\r\\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\\r\\n    this.baseTransform = baseTransform;\\r\\n    this.type = 'Pattern';\\r\\n    this.ctx = ctx;\\r\\n  }\\r\\n  TilingPattern.prototype = {\\r\\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\\r\\n      var operatorList = this.operatorList;\\r\\n      var bbox = this.bbox;\\r\\n      var xstep = this.xstep;\\r\\n      var ystep = this.ystep;\\r\\n      var paintType = this.paintType;\\r\\n      var tilingType = this.tilingType;\\r\\n      var color = this.color;\\r\\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\\r\\n      (0, _util.info)('TilingType: ' + tilingType);\\r\\n      var x0 = bbox[0],\\r\\n          y0 = bbox[1],\\r\\n          x1 = bbox[2],\\r\\n          y1 = bbox[3];\\r\\n      var topLeft = [x0, y0];\\r\\n      var botRight = [x0 + xstep, y0 + ystep];\\r\\n      var width = botRight[0] - topLeft[0];\\r\\n      var height = botRight[1] - topLeft[1];\\r\\n      var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\\r\\n      var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\\r\\n      var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\\r\\n      width = Math.min(Math.ceil(Math.abs(width * combinedScale[0])), MAX_PATTERN_SIZE);\\r\\n      height = Math.min(Math.ceil(Math.abs(height * combinedScale[1])), MAX_PATTERN_SIZE);\\r\\n      var tmpCanvas = owner.cachedCanvases.getCanvas('pattern', width, height, true);\\r\\n      var tmpCtx = tmpCanvas.context;\\r\\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\\r\\n      graphics.groupLevel = owner.groupLevel;\\r\\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\\r\\n      this.setScale(width, height, xstep, ystep);\\r\\n      this.transformToScale(graphics);\\r\\n      var tmpTranslate = [1, 0, 0, 1, -topLeft[0], -topLeft[1]];\\r\\n      graphics.transform.apply(graphics, tmpTranslate);\\r\\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\\r\\n      graphics.executeOperatorList(operatorList);\\r\\n      return tmpCanvas.canvas;\\r\\n    },\\r\\n    setScale: function TilingPattern_setScale(width, height, xstep, ystep) {\\r\\n      this.scale = [width / xstep, height / ystep];\\r\\n    },\\r\\n    transformToScale: function TilingPattern_transformToScale(graphics) {\\r\\n      var scale = this.scale;\\r\\n      var tmpScale = [scale[0], 0, 0, scale[1], 0, 0];\\r\\n      graphics.transform.apply(graphics, tmpScale);\\r\\n    },\\r\\n    scaleToContext: function TilingPattern_scaleToContext() {\\r\\n      var scale = this.scale;\\r\\n      this.ctx.scale(1 / scale[0], 1 / scale[1]);\\r\\n    },\\r\\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\\r\\n      if (Array.isArray(bbox) && bbox.length === 4) {\\r\\n        var bboxWidth = x1 - x0;\\r\\n        var bboxHeight = y1 - y0;\\r\\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\\r\\n        graphics.clip();\\r\\n        graphics.endPath();\\r\\n      }\\r\\n    },\\r\\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\\r\\n      var context = graphics.ctx,\\r\\n          current = graphics.current;\\r\\n      switch (paintType) {\\r\\n        case PaintType.COLORED:\\r\\n          var ctx = this.ctx;\\r\\n          context.fillStyle = ctx.fillStyle;\\r\\n          context.strokeStyle = ctx.strokeStyle;\\r\\n          current.fillColor = ctx.fillStyle;\\r\\n          current.strokeColor = ctx.strokeStyle;\\r\\n          break;\\r\\n        case PaintType.UNCOLORED:\\r\\n          var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\\r\\n          context.fillStyle = cssColor;\\r\\n          context.strokeStyle = cssColor;\\r\\n          current.fillColor = cssColor;\\r\\n          current.strokeColor = cssColor;\\r\\n          break;\\r\\n        default:\\r\\n          throw new _util.FormatError('Unsupported paint type: ' + paintType);\\r\\n      }\\r\\n    },\\r\\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\\r\\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\\r\\n      ctx = this.ctx;\\r\\n      ctx.setTransform.apply(ctx, this.baseTransform);\\r\\n      ctx.transform.apply(ctx, this.matrix);\\r\\n      this.scaleToContext();\\r\\n      return ctx.createPattern(temporaryPatternCanvas, 'repeat');\\r\\n    }\\r\\n  };\\r\\n  return TilingPattern;\\r\\n}();\\r\\nexports.getShadingPatternFromIR = getShadingPatternFromIR;\\r\\nexports.TilingPattern = TilingPattern;\\r\\n\\r\\n/***/ }),\\r\\n/* 138 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\n\\r\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\r\\n\\r\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\r\\n\\r\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar XMLParserErrorCode = {\\r\\n  NoError: 0,\\r\\n  EndOfDocument: -1,\\r\\n  UnterminatedCdat: -2,\\r\\n  UnterminatedXmlDeclaration: -3,\\r\\n  UnterminatedDoctypeDeclaration: -4,\\r\\n  UnterminatedComment: -5,\\r\\n  MalformedElement: -6,\\r\\n  OutOfMemory: -7,\\r\\n  UnterminatedAttributeValue: -8,\\r\\n  UnterminatedElement: -9,\\r\\n  ElementNeverBegun: -10\\r\\n};\\r\\nfunction isWhitespace(s, index) {\\r\\n  var ch = s[index];\\r\\n  return ch === ' ' || ch === '\\\\n' || ch === '\\\\r' || ch === '\\\\t';\\r\\n}\\r\\nfunction isWhitespaceString(s) {\\r\\n  for (var i = 0, ii = s.length; i < ii; i++) {\\r\\n    if (!isWhitespace(s, i)) {\\r\\n      return false;\\r\\n    }\\r\\n  }\\r\\n  return true;\\r\\n}\\r\\n\\r\\nvar XMLParserBase = function () {\\r\\n  function XMLParserBase() {\\r\\n    _classCallCheck(this, XMLParserBase);\\r\\n  }\\r\\n\\r\\n  _createClass(XMLParserBase, [{\\r\\n    key: '_resolveEntities',\\r\\n    value: function _resolveEntities(s) {\\r\\n      return s.replace(/&([^;]+);/g, function (all, entity) {\\r\\n        if (entity.substring(0, 2) === '#x') {\\r\\n          return String.fromCharCode(parseInt(entity.substring(2), 16));\\r\\n        } else if (entity.substring(0, 1) === '#') {\\r\\n          return String.fromCharCode(parseInt(entity.substring(1), 10));\\r\\n        }\\r\\n        switch (entity) {\\r\\n          case 'lt':\\r\\n            return '<';\\r\\n          case 'gt':\\r\\n            return '>';\\r\\n          case 'amp':\\r\\n            return '&';\\r\\n          case 'quot':\\r\\n            return '\\\\\\\"';\\r\\n        }\\r\\n        return this.onResolveEntity(entity);\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: '_parseContent',\\r\\n    value: function _parseContent(s, start) {\\r\\n      var pos = start,\\r\\n          name = void 0,\\r\\n          attributes = [];\\r\\n      function skipWs() {\\r\\n        while (pos < s.length && isWhitespace(s, pos)) {\\r\\n          ++pos;\\r\\n        }\\r\\n      }\\r\\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== '>' && s[pos] !== '/') {\\r\\n        ++pos;\\r\\n      }\\r\\n      name = s.substring(start, pos);\\r\\n      skipWs();\\r\\n      while (pos < s.length && s[pos] !== '>' && s[pos] !== '/' && s[pos] !== '?') {\\r\\n        skipWs();\\r\\n        var attrName = '',\\r\\n            attrValue = '';\\r\\n        while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== '=') {\\r\\n          attrName += s[pos];\\r\\n          ++pos;\\r\\n        }\\r\\n        skipWs();\\r\\n        if (s[pos] !== '=') {\\r\\n          return null;\\r\\n        }\\r\\n        ++pos;\\r\\n        skipWs();\\r\\n        var attrEndChar = s[pos];\\r\\n        if (attrEndChar !== '\\\\\\\"' && attrEndChar !== '\\\\'') {\\r\\n          return null;\\r\\n        }\\r\\n        var attrEndIndex = s.indexOf(attrEndChar, ++pos);\\r\\n        if (attrEndIndex < 0) {\\r\\n          return null;\\r\\n        }\\r\\n        attrValue = s.substring(pos, attrEndIndex);\\r\\n        attributes.push({\\r\\n          name: attrName,\\r\\n          value: this._resolveEntities(attrValue)\\r\\n        });\\r\\n        pos = attrEndIndex + 1;\\r\\n        skipWs();\\r\\n      }\\r\\n      return {\\r\\n        name: name,\\r\\n        attributes: attributes,\\r\\n        parsed: pos - start\\r\\n      };\\r\\n    }\\r\\n  }, {\\r\\n    key: '_parseProcessingInstruction',\\r\\n    value: function _parseProcessingInstruction(s, start) {\\r\\n      var pos = start,\\r\\n          name = void 0,\\r\\n          value = void 0;\\r\\n      function skipWs() {\\r\\n        while (pos < s.length && isWhitespace(s, pos)) {\\r\\n          ++pos;\\r\\n        }\\r\\n      }\\r\\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== '>' && s[pos] !== '/') {\\r\\n        ++pos;\\r\\n      }\\r\\n      name = s.substring(start, pos);\\r\\n      skipWs();\\r\\n      var attrStart = pos;\\r\\n      while (pos < s.length && (s[pos] !== '?' || s[pos + 1] !== '>')) {\\r\\n        ++pos;\\r\\n      }\\r\\n      value = s.substring(attrStart, pos);\\r\\n      return {\\r\\n        name: name,\\r\\n        value: value,\\r\\n        parsed: pos - start\\r\\n      };\\r\\n    }\\r\\n  }, {\\r\\n    key: 'parseXml',\\r\\n    value: function parseXml(s) {\\r\\n      var i = 0;\\r\\n      while (i < s.length) {\\r\\n        var ch = s[i];\\r\\n        var j = i;\\r\\n        if (ch === '<') {\\r\\n          ++j;\\r\\n          var ch2 = s[j];\\r\\n          var q = void 0;\\r\\n          switch (ch2) {\\r\\n            case '/':\\r\\n              ++j;\\r\\n              q = s.indexOf('>', j);\\r\\n              if (q < 0) {\\r\\n                this.onError(XMLParserErrorCode.UnterminatedElement);\\r\\n                return;\\r\\n              }\\r\\n              this.onEndElement(s.substring(j, q));\\r\\n              j = q + 1;\\r\\n              break;\\r\\n            case '?':\\r\\n              ++j;\\r\\n              var pi = this._parseProcessingInstruction(s, j);\\r\\n              if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== '?>') {\\r\\n                this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\\r\\n                return;\\r\\n              }\\r\\n              this.onPi(pi.name, pi.value);\\r\\n              j += pi.parsed + 2;\\r\\n              break;\\r\\n            case '!':\\r\\n              if (s.substring(j + 1, j + 3) === '--') {\\r\\n                q = s.indexOf('-->', j + 3);\\r\\n                if (q < 0) {\\r\\n                  this.onError(XMLParserErrorCode.UnterminatedComment);\\r\\n                  return;\\r\\n                }\\r\\n                this.onComment(s.substring(j + 3, q));\\r\\n                j = q + 3;\\r\\n              } else if (s.substring(j + 1, j + 8) === '[CDATA[') {\\r\\n                q = s.indexOf(']]>', j + 8);\\r\\n                if (q < 0) {\\r\\n                  this.onError(XMLParserErrorCode.UnterminatedCdat);\\r\\n                  return;\\r\\n                }\\r\\n             \";a.a+=\"   this.onCdata(s.substring(j + 8, q));\\r\\n                j = q + 3;\\r\\n              } else if (s.substring(j + 1, j + 8) === 'DOCTYPE') {\\r\\n                var q2 = s.indexOf('[', j + 8);\\r\\n                var complexDoctype = false;\\r\\n                q = s.indexOf('>', j + 8);\\r\\n                if (q < 0) {\\r\\n                  this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\\r\\n                  return;\\r\\n                }\\r\\n                if (q2 > 0 && q > q2) {\\r\\n                  q = s.indexOf(']>', j + 8);\\r\\n                  if (q < 0) {\\r\\n                    this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\\r\\n                    return;\\r\\n                  }\\r\\n                  complexDoctype = true;\\r\\n                }\\r\\n                var doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\\r\\n                this.onDoctype(doctypeContent);\\r\\n                j = q + (complexDoctype ? 2 : 1);\\r\\n              } else {\\r\\n                this.onError(XMLParserErrorCode.MalformedElement);\\r\\n                return;\\r\\n              }\\r\\n              break;\\r\\n            default:\\r\\n              var content = this._parseContent(s, j);\\r\\n              if (content === null) {\\r\\n                this.onError(XMLParserErrorCode.MalformedElement);\\r\\n                return;\\r\\n              }\\r\\n              var isClosed = false;\\r\\n              if (s.substring(j + content.parsed, j + content.parsed + 2) === '/>') {\\r\\n                isClosed = true;\\r\\n              } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== '>') {\\r\\n                this.onError(XMLParserErrorCode.UnterminatedElement);\\r\\n                return;\\r\\n              }\\r\\n              this.onBeginElement(content.name, content.attributes, isClosed);\\r\\n              j += content.parsed + (isClosed ? 2 : 1);\\r\\n              break;\\r\\n          }\\r\\n        } else {\\r\\n          while (j < s.length && s[j] !== '<') {\\r\\n            j++;\\r\\n          }\\r\\n          var text = s.substring(i, j);\\r\\n          this.onText(this._resolveEntities(text));\\r\\n        }\\r\\n        i = j;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onResolveEntity',\\r\\n    value: function onResolveEntity(name) {\\r\\n      return '&' + name + ';';\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onPi',\\r\\n    value: function onPi(name, value) {}\\r\\n  }, {\\r\\n    key: 'onComment',\\r\\n    value: function onComment(text) {}\\r\\n  }, {\\r\\n    key: 'onCdata',\\r\\n    value: function onCdata(text) {}\\r\\n  }, {\\r\\n    key: 'onDoctype',\\r\\n    value: function onDoctype(doctypeContent) {}\\r\\n  }, {\\r\\n    key: 'onText',\\r\\n    value: function onText(text) {}\\r\\n  }, {\\r\\n    key: 'onBeginElement',\\r\\n    value: function onBeginElement(name, attributes, isEmpty) {}\\r\\n  }, {\\r\\n    key: 'onEndElement',\\r\\n    value: function onEndElement(name) {}\\r\\n  }, {\\r\\n    key: 'onError',\\r\\n    value: function onError(code) {}\\r\\n  }]);\\r\\n\\r\\n  return XMLParserBase;\\r\\n}();\\r\\n\\r\\nvar SimpleDOMNode = function () {\\r\\n  function SimpleDOMNode(nodeName, nodeValue) {\\r\\n    _classCallCheck(this, SimpleDOMNode);\\r\\n\\r\\n    this.nodeName = nodeName;\\r\\n    this.nodeValue = nodeValue;\\r\\n    Object.defineProperty(this, 'parentNode', {\\r\\n      value: null,\\r\\n      writable: true\\r\\n    });\\r\\n  }\\r\\n\\r\\n  _createClass(SimpleDOMNode, [{\\r\\n    key: 'hasChildNodes',\\r\\n    value: function hasChildNodes() {\\r\\n      return this.childNodes && this.childNodes.length > 0;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'firstChild',\\r\\n    get: function get() {\\r\\n      return this.childNodes[0];\\r\\n    }\\r\\n  }, {\\r\\n    key: 'nextSibling',\\r\\n    get: function get() {\\r\\n      var index = this.parentNode.childNodes.indexOf(this);\\r\\n      return this.parentNode.childNodes[index + 1];\\r\\n    }\\r\\n  }, {\\r\\n    key: 'textContent',\\r\\n    get: function get() {\\r\\n      if (!this.childNodes) {\\r\\n        return this.nodeValue || '';\\r\\n      }\\r\\n      return this.childNodes.map(function (child) {\\r\\n        return child.textContent;\\r\\n      }).join('');\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return SimpleDOMNode;\\r\\n}();\\r\\n\\r\\nvar SimpleXMLParser = function (_XMLParserBase) {\\r\\n  _inherits(SimpleXMLParser, _XMLParserBase);\\r\\n\\r\\n  function SimpleXMLParser() {\\r\\n    _classCallCheck(this, SimpleXMLParser);\\r\\n\\r\\n    var _this = _possibleConstructorReturn(this, (SimpleXMLParser.__proto__ || Object.getPrototypeOf(SimpleXMLParser)).call(this));\\r\\n\\r\\n    _this._currentFragment = null;\\r\\n    _this._stack = null;\\r\\n    _this._errorCode = XMLParserErrorCode.NoError;\\r\\n    return _this;\\r\\n  }\\r\\n\\r\\n  _createClass(SimpleXMLParser, [{\\r\\n    key: 'parseFromString',\\r\\n    value: function parseFromString(data) {\\r\\n      this._currentFragment = [];\\r\\n      this._stack = [];\\r\\n      this._errorCode = XMLParserErrorCode.NoError;\\r\\n      this.parseXml(data);\\r\\n      if (this._errorCode !== XMLParserErrorCode.NoError) {\\r\\n        return undefined;\\r\\n      }\\r\\n\\r\\n      var _currentFragment = _slicedToArray(this._currentFragment, 1),\\r\\n          documentElement = _currentFragment[0];\\r\\n\\r\\n      return { documentElement: documentElement };\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onResolveEntity',\\r\\n    value: function onResolveEntity(name) {\\r\\n      switch (name) {\\r\\n        case 'apos':\\r\\n          return '\\\\'';\\r\\n      }\\r\\n      return _get(SimpleXMLParser.prototype.__proto__ || Object.getPrototypeOf(SimpleXMLParser.prototype), 'onResolveEntity', this).call(this, name);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onText',\\r\\n    value: function onText(text) {\\r\\n      if (isWhitespaceString(text)) {\\r\\n        return;\\r\\n      }\\r\\n      var node = new SimpleDOMNode('#text', text);\\r\\n      this._currentFragment.push(node);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onCdata',\\r\\n    value: function onCdata(text) {\\r\\n      var node = new SimpleDOMNode('#text', text);\\r\\n      this._currentFragment.push(node);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onBeginElement',\\r\\n    value: function onBeginElement(name, attributes, isEmpty) {\\r\\n      var node = new SimpleDOMNode(name);\\r\\n      node.childNodes = [];\\r\\n      this._currentFragment.push(node);\\r\\n      if (isEmpty) {\\r\\n        return;\\r\\n      }\\r\\n      this._stack.push(this._currentFragment);\\r\\n      this._currentFragment = node.childNodes;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onEndElement',\\r\\n    value: function onEndElement(name) {\\r\\n      this._currentFragment = this._stack.pop();\\r\\n      var lastElement = this._currentFragment[this._currentFragment.length - 1];\\r\\n      for (var i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\\r\\n        lastElement.childNodes[i].parentNode = lastElement;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'onError',\\r\\n    value: function onError(code) {\\r\\n      this._errorCode = code;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return SimpleXMLParser;\\r\\n}(XMLParserBase);\\r\\n\\r\\nexports.SimpleXMLParser = SimpleXMLParser;\\r\\n\\r\\n/***/ }),\\r\\n/* 139 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PDFDataTransportStream = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar PDFDataTransportStream = function PDFDataTransportStreamClosure() {\\r\\n  function PDFDataTransportStream(params, pdfDataRangeTransport) {\\r\\n    var _this = this;\\r\\n\\r\\n    (0, _util.assert)(pdfDataRangeTransport);\\r\\n    this._queuedChunks = [];\\r\\n    var initialData = params.initialData;\\r\\n    if (initialData && initialData.length > 0) {\\r\\n      var buffer = new Uint8Array(initialData).buffer;\\r\\n      this._queuedChunks.push(buffer);\\r\\n    }\\r\\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\\r\\n    this._isRangeSupported = !params.disableRange;\\r\\n    this._isStreamingSupported = !params.disableStream;\\r\\n    this._contentLength = params.length;\\r\\n    this._fullRequestReader = null;\\r\\n    this._rangeReaders = [];\\r\\n    this._pdfDataRangeTransport.addRangeListener(function (begin, chunk) {\\r\\n      _this._onReceiveData({\\r\\n        begin: begin,\\r\\n        chunk: chunk\\r\\n      });\\r\\n    });\\r\\n    this._pdfDataRangeTransport.addProgressListener(function (loaded) {\\r\\n      _this._onProgress({ loaded: loaded });\\r\\n    });\\r\\n    this._pdfDataRangeTransport.addProgressiveReadListener(function (chunk) {\\r\\n      _this._onReceiveData({ chunk: chunk });\\r\\n    });\\r\\n    this._pdfDataRangeTransport.transportReady();\\r\\n  }\\r\\n  PDFDataTransportStream.prototype = {\\r\\n    _onReceiveData: function PDFDataTransportStream_onReceiveData(args) {\\r\\n      var buffer = new Uint8Array(args.chunk).buffer;\\r\\n      if (args.begin === undefined) {\\r\\n        if (this._fullRequestReader) {\\r\\n          this._fullRequestReader._enqueue(buffer);\\r\\n        } else {\\r\\n          this._queuedChunks.push(buffer);\\r\\n        }\\r\\n      } else {\\r\\n        var found = this._rangeReaders.some(function (rangeReader) {\\r\\n          if (rangeReader._begin !== args.begin) {\\r\\n            return false;\\r\\n          }\\r\\n          rangeReader._enqueue(buffer);\\r\\n          return true;\\r\\n        });\\r\\n        (0, _util.assert)(found);\\r\\n      }\\r\\n    },\\r\\n    _onProgress: function PDFDataTransportStream_onDataProgress(evt) {\\r\\n      if (this._rangeReaders.length > 0) {\\r\\n        var firstReader = this._rangeReaders[0];\\r\\n        if (firstReader.onProgress) {\\r\\n          firstReader.onProgress({ loaded: evt.loaded });\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    _removeRangeReader: function PDFDataTransportStream_removeRangeReader(reader) {\\r\\n      var i = this._rangeReaders.indexOf(reader);\\r\\n      if (i >= 0) {\\r\\n        this._rangeReaders.splice(i, 1);\\r\\n      }\\r\\n    },\\r\\n    getFullReader: function PDFDataTransportStream_getFullReader() {\\r\\n      (0, _util.assert)(!this._fullRequestReader);\\r\\n      var queuedChunks = this._queuedChunks;\\r\\n      this._queuedChunks = null;\\r\\n      return new PDFDataTransportStreamReader(this, queuedChunks);\\r\\n    },\\r\\n    getRangeReader: function PDFDataTransportStream_getRangeReader(begin, end) {\\r\\n      var reader = new PDFDataTransportStreamRangeReader(this, begin, end);\\r\\n      this._pdfDataRangeTransport.requestDataRange(begin, end);\\r\\n      this._rangeReaders.push(reader);\\r\\n      return reader;\\r\\n    },\\r\\n    cancelAllRequests: function PDFDataTransportStream_cancelAllRequests(reason) {\\r\\n      if (this._fullRequestReader) {\\r\\n        this._fullRequestReader.cancel(reason);\\r\\n      }\\r\\n      var readers = this._rangeReaders.slice(0);\\r\\n      readers.forEach(function (rangeReader) {\\r\\n        rangeReader.cancel(reason);\\r\\n      });\\r\\n      this._pdfDataRangeTransport.abort();\\r\\n    }\\r\\n  };\\r\\n  function PDFDataTransportStreamReader(stream, queuedChunks) {\\r\\n    this._stream = stream;\\r\\n    this._done = false;\\r\\n    this._queuedChunks = queuedChunks || [];\\r\\n    this._requests = [];\\r\\n    this._headersReady = Promise.resolve();\\r\\n    stream._fullRequestReader = this;\\r\\n    this.onProgress = null;\\r\\n  }\\r\\n  PDFDataTransportStreamReader.prototype = {\\r\\n    _enqueue: function PDFDataTransportStreamReader_enqueue(chunk) {\\r\\n      if (this._done) {\\r\\n        return;\\r\\n      }\\r\\n      if (this._requests.length > 0) {\\r\\n        var requestCapability = this._requests.shift();\\r\\n        requestCapability.resolve({\\r\\n          value: chunk,\\r\\n          done: false\\r\\n        });\\r\\n        return;\\r\\n      }\\r\\n      this._queuedChunks.push(chunk);\\r\\n    },\\r\\n    get headersReady() {\\r\\n      return this._headersReady;\\r\\n    },\\r\\n    get isRangeSupported() {\\r\\n      return this._stream._isRangeSupported;\\r\\n    },\\r\\n    get isStreamingSupported() {\\r\\n      return this._stream._isStreamingSupported;\\r\\n    },\\r\\n    get contentLength() {\\r\\n      return this._stream._contentLength;\\r\\n    },\\r\\n    read: function PDFDataTransportStreamReader_read() {\\r\\n      if (this._queuedChunks.length > 0) {\\r\\n        var chunk = this._queuedChunks.shift();\\r\\n        return Promise.resolve({\\r\\n          value: chunk,\\r\\n          done: false\\r\\n        });\\r\\n      }\\r\\n      if (this._done) {\\r\\n        return Promise.resolve({\\r\\n          value: undefined,\\r\\n          done: true\\r\\n        });\\r\\n      }\\r\\n      var requestCapability = (0, _util.createPromiseCapability)();\\r\\n      this._requests.push(requestCapability);\\r\\n      return requestCapability.promise;\\r\\n    },\\r\\n    cancel: function PDFDataTransportStreamReader_cancel(reason) {\\r\\n      this._done = true;\\r\\n      this._requests.forEach(function (requestCapability) {\\r\\n        requestCapability.resolve({\\r\\n          value: undefined,\\r\\n          done: true\\r\\n        });\\r\\n      });\\r\\n      this._requests = [];\\r\\n    }\\r\\n  };\\r\\n  function PDFDataTransportStreamRangeReader(stream, begin, end) {\\r\\n    this._stream = stream;\\r\\n    this._begin = begin;\\r\\n    this._end = end;\\r\\n    this._queuedChunk = null;\\r\\n    this._requests = [];\\r\\n    this._done = false;\\r\\n    this.onProgress = null;\\r\\n  }\\r\\n  PDFDataTransportStreamRangeReader.prototype = {\\r\\n    _enqueue: function PDFDataTransportStreamRangeReader_enqueue(chunk) {\\r\\n      if (this._done) {\\r\\n        return;\\r\\n      }\\r\\n      if (this._requests.length === 0) {\\r\\n        this._queuedChunk = chunk;\\r\\n      } else {\\r\\n        var requestsCapability = this._requests.shift();\\r\\n        requestsCapability.resolve({\\r\\n          value: chunk,\\r\\n          done: false\\r\\n        });\\r\\n        this._requests.forEach(function (requestCapability) {\\r\\n          requestCapability.resolve({\\r\\n            value: undefined,\\r\\n            done: true\\r\\n          });\\r\\n        });\\r\\n        this._requests = [];\\r\\n      }\\r\\n      this._done = true;\\r\\n      this._stream._removeRangeReader(this);\\r\\n    },\\r\\n    get isStreamingSupported() {\\r\\n      return false;\\r\\n    },\\r\\n    read: function PDFDataTransportStreamRangeReader_read() {\\r\\n      if (this._queuedChunk) {\\r\\n        var chunk = this._queuedChunk;\\r\\n        this._queuedChunk = null;\\r\\n        return Promise.resolve({\\r\\n          value: chunk,\\r\\n          done: false\\r\\n        });\\r\\n      }\\r\\n      if (this._done) {\\r\\n        return Promise.resolve({\\r\\n          value: undefined,\\r\\n          done: true\\r\\n        });\\r\\n      }\\r\\n      var requestCapability = (0, _util.createPromiseCapability)();\\r\\n      this._requests.push(requestCapability);\\r\\n      return requestCapability.promise;\\r\\n    },\\r\\n    cancel: function PDFDataTransportStreamRangeReader_cancel(reason) {\\r\\n      this._done = true;\\r\\n      this._requests.forEach(function (requestCapability) {\\r\\n        requestCapability.resolve({\\r\\n          value: undefined,\\r\\n          done: true\\r\\n        });\\r\\n      });\\r\\n      this._requests = [];\\r\\n      this._stream._removeRangeReader(this);\\r\\n    }\\r\\n  };\\r\\n  return PDFDataTransportStream;\\r\\n}();\\r\\nexports.PDFDataTransportStream = PDFDataTransportStream;\\r\\n\\r\\n/***/ }),\\r\\n/* 140 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _pdf_manager = __w_pdfjs_require__(141);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar WorkerTask = function WorkerTaskClosure() {\\r\\n  function WorkerTask(name) {\\r\\n    this.name = name;\\r\\n    this.terminated = false;\\r\\n    this._capability = (0, _util.createPromiseCapability)();\\r\\n  }\\r\\n  WorkerTask.prototype = {\\r\\n    get finished() {\\r\\n      return this._capability.promise;\\r\\n    },\\r\\n    finish: function finish() {\\r\\n      this._capability.resolve();\\r\\n    },\\r\\n    terminate: function terminate() {\\r\\n      this.terminated = true;\\r\\n    },\\r\\n    ensureNotTerminated: function ensureNotTerminated() {\\r\\n      if (this.terminated) {\\r\\n        throw new Error('Worker task was terminated');\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return WorkerTask;\\r\\n}();\\r\\n;\\r\\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\\r\\n  function PDFWorkerStream(msgHandler) {\\r\\n    this._msgHandler = msgHandler;\\r\\n    this._contentLength = null;\\r\\n    this._fullRequestReader = null;\\r\\n    this._rangeRequestReaders = [];\\r\\n  }\\r\\n  PDFWorkerStream.prototype = {\\r\\n    getFullReader: function getFullReader() {\\r\\n      (0, _util.assert)(!this._fullRequestReader);\\r\\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\\r\\n      return this._fullRequestReader;\\r\\n    },\\r\\n    getRangeReader: function getRangeReader(begin, end) {\\r\\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\\r\\n      this._rangeRequestReaders.push(reader);\\r\\n      return reader;\\r\\n    },\\r\\n    cancelAllRequests: function cancelAllRequests(reason) {\\r\\n      if (this._fullRequestReader) {\\r\\n        this._fullRequestReader.cancel(reason);\\r\\n      }\\r\\n      var readers = this._rangeRequestReaders.slice(0);\\r\\n      r\";a.a+=\"eaders.forEach(function (reader) {\\r\\n        reader.cancel(reason);\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n  function PDFWorkerStreamReader(msgHandler) {\\r\\n    var _this = this;\\r\\n\\r\\n    this._msgHandler = msgHandler;\\r\\n    this._contentLength = null;\\r\\n    this._isRangeSupported = false;\\r\\n    this._isStreamingSupported = false;\\r\\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\\r\\n    this._reader = readableStream.getReader();\\r\\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\\r\\n      _this._isStreamingSupported = data.isStreamingSupported;\\r\\n      _this._isRangeSupported = data.isRangeSupported;\\r\\n      _this._contentLength = data.contentLength;\\r\\n    });\\r\\n  }\\r\\n  PDFWorkerStreamReader.prototype = {\\r\\n    get headersReady() {\\r\\n      return this._headersReady;\\r\\n    },\\r\\n    get contentLength() {\\r\\n      return this._contentLength;\\r\\n    },\\r\\n    get isStreamingSupported() {\\r\\n      return this._isStreamingSupported;\\r\\n    },\\r\\n    get isRangeSupported() {\\r\\n      return this._isRangeSupported;\\r\\n    },\\r\\n    read: function read() {\\r\\n      return this._reader.read().then(function (_ref) {\\r\\n        var value = _ref.value,\\r\\n            done = _ref.done;\\r\\n\\r\\n        if (done) {\\r\\n          return {\\r\\n            value: undefined,\\r\\n            done: true\\r\\n          };\\r\\n        }\\r\\n        return {\\r\\n          value: value.buffer,\\r\\n          done: false\\r\\n        };\\r\\n      });\\r\\n    },\\r\\n    cancel: function cancel(reason) {\\r\\n      this._reader.cancel(reason);\\r\\n    }\\r\\n  };\\r\\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\\r\\n    this._msgHandler = msgHandler;\\r\\n    this.onProgress = null;\\r\\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\\r\\n      begin: begin,\\r\\n      end: end\\r\\n    });\\r\\n    this._reader = readableStream.getReader();\\r\\n  }\\r\\n  PDFWorkerStreamRangeReader.prototype = {\\r\\n    get isStreamingSupported() {\\r\\n      return false;\\r\\n    },\\r\\n    read: function read() {\\r\\n      return this._reader.read().then(function (_ref2) {\\r\\n        var value = _ref2.value,\\r\\n            done = _ref2.done;\\r\\n\\r\\n        if (done) {\\r\\n          return {\\r\\n            value: undefined,\\r\\n            done: true\\r\\n          };\\r\\n        }\\r\\n        return {\\r\\n          value: value.buffer,\\r\\n          done: false\\r\\n        };\\r\\n      });\\r\\n    },\\r\\n    cancel: function cancel(reason) {\\r\\n      this._reader.cancel(reason);\\r\\n    }\\r\\n  };\\r\\n  return PDFWorkerStream;\\r\\n}();\\r\\nvar WorkerMessageHandler = {\\r\\n  setup: function setup(handler, port) {\\r\\n    var testMessageProcessed = false;\\r\\n    handler.on('test', function wphSetupTest(data) {\\r\\n      if (testMessageProcessed) {\\r\\n        return;\\r\\n      }\\r\\n      testMessageProcessed = true;\\r\\n      if (!(data instanceof Uint8Array)) {\\r\\n        handler.send('test', 'main', false);\\r\\n        return;\\r\\n      }\\r\\n      var supportTransfers = data[0] === 255;\\r\\n      handler.postMessageTransfers = supportTransfers;\\r\\n      var xhr = new XMLHttpRequest();\\r\\n      var responseExists = 'response' in xhr;\\r\\n      try {\\r\\n        xhr.responseType;\\r\\n      } catch (e) {\\r\\n        responseExists = false;\\r\\n      }\\r\\n      if (!responseExists) {\\r\\n        handler.send('test', false);\\r\\n        return;\\r\\n      }\\r\\n      handler.send('test', {\\r\\n        supportTypedArray: true,\\r\\n        supportTransfers: supportTransfers\\r\\n      });\\r\\n    });\\r\\n    handler.on('configure', function wphConfigure(data) {\\r\\n      (0, _util.setVerbosityLevel)(data.verbosity);\\r\\n    });\\r\\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\\r\\n      return WorkerMessageHandler.createDocumentHandler(data, port);\\r\\n    });\\r\\n  },\\r\\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\\r\\n    var pdfManager;\\r\\n    var terminated = false;\\r\\n    var cancelXHRs = null;\\r\\n    var WorkerTasks = [];\\r\\n    var apiVersion = docParams.apiVersion;\\r\\n    var workerVersion = '1.10.100';\\r\\n    if (apiVersion !== null && apiVersion !== workerVersion) {\\r\\n      throw new Error('The API version \\\"' + apiVersion + '\\\" does not match ' + ('the Worker version \\\"' + workerVersion + '\\\".'));\\r\\n    }\\r\\n    var docId = docParams.docId;\\r\\n    var docBaseUrl = docParams.docBaseUrl;\\r\\n    var workerHandlerName = docParams.docId + '_worker';\\r\\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\\r\\n    handler.postMessageTransfers = docParams.postMessageTransfers;\\r\\n    function ensureNotTerminated() {\\r\\n      if (terminated) {\\r\\n        throw new Error('Worker was terminated');\\r\\n      }\\r\\n    }\\r\\n    function startWorkerTask(task) {\\r\\n      WorkerTasks.push(task);\\r\\n    }\\r\\n    function finishWorkerTask(task) {\\r\\n      task.finish();\\r\\n      var i = WorkerTasks.indexOf(task);\\r\\n      WorkerTasks.splice(i, 1);\\r\\n    }\\r\\n    function loadDocument(recoveryMode) {\\r\\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\\r\\n      var parseSuccess = function parseSuccess() {\\r\\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\\r\\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\\r\\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\\r\\n        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\\r\\n          var doc = {\\r\\n            numPages: results[0],\\r\\n            fingerprint: results[1],\\r\\n            encrypted: !!results[2]\\r\\n          };\\r\\n          loadDocumentCapability.resolve(doc);\\r\\n        }, parseFailure);\\r\\n      };\\r\\n      var parseFailure = function parseFailure(e) {\\r\\n        loadDocumentCapability.reject(e);\\r\\n      };\\r\\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\\r\\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\\r\\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\\r\\n        }, parseFailure);\\r\\n      }, parseFailure);\\r\\n      return loadDocumentCapability.promise;\\r\\n    }\\r\\n    function getPdfManager(data, evaluatorOptions) {\\r\\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\\r\\n      var pdfManager;\\r\\n      var source = data.source;\\r\\n      if (source.data) {\\r\\n        try {\\r\\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\\r\\n          pdfManagerCapability.resolve(pdfManager);\\r\\n        } catch (ex) {\\r\\n          pdfManagerCapability.reject(ex);\\r\\n        }\\r\\n        return pdfManagerCapability.promise;\\r\\n      }\\r\\n      var pdfStream,\\r\\n          cachedChunks = [];\\r\\n      try {\\r\\n        pdfStream = new PDFWorkerStream(handler);\\r\\n      } catch (ex) {\\r\\n        pdfManagerCapability.reject(ex);\\r\\n        return pdfManagerCapability.promise;\\r\\n      }\\r\\n      var fullRequest = pdfStream.getFullReader();\\r\\n      fullRequest.headersReady.then(function () {\\r\\n        if (!fullRequest.isRangeSupported) {\\r\\n          return;\\r\\n        }\\r\\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\\r\\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\\r\\n          msgHandler: handler,\\r\\n          url: source.url,\\r\\n          password: source.password,\\r\\n          length: fullRequest.contentLength,\\r\\n          disableAutoFetch: disableAutoFetch,\\r\\n          rangeChunkSize: source.rangeChunkSize\\r\\n        }, evaluatorOptions, docBaseUrl);\\r\\n        for (var i = 0; i < cachedChunks.length; i++) {\\r\\n          pdfManager.sendProgressiveData(cachedChunks[i]);\\r\\n        }\\r\\n        cachedChunks = [];\\r\\n        pdfManagerCapability.resolve(pdfManager);\\r\\n        cancelXHRs = null;\\r\\n      }).catch(function (reason) {\\r\\n        pdfManagerCapability.reject(reason);\\r\\n        cancelXHRs = null;\\r\\n      });\\r\\n      var loaded = 0;\\r\\n      var flushChunks = function flushChunks() {\\r\\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\\r\\n        if (source.length && pdfFile.length !== source.length) {\\r\\n          (0, _util.warn)('reported HTTP length is different from actual');\\r\\n        }\\r\\n        try {\\r\\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\\r\\n          pdfManagerCapability.resolve(pdfManager);\\r\\n        } catch (ex) {\\r\\n          pdfManagerCapability.reject(ex);\\r\\n        }\\r\\n        cachedChunks = [];\\r\\n      };\\r\\n      var readPromise = new Promise(function (resolve, reject) {\\r\\n        var readChunk = function readChunk(chunk) {\\r\\n          try {\\r\\n            ensureNotTerminated();\\r\\n            if (chunk.done) {\\r\\n              if (!pdfManager) {\\r\\n                flushChunks();\\r\\n              }\\r\\n              cancelXHRs = null;\\r\\n              return;\\r\\n            }\\r\\n            var data = chunk.value;\\r\\n            loaded += (0, _util.arrayByteLength)(data);\\r\\n            if (!fullRequest.isStreamingSupported) {\\r\\n              handler.send('DocProgress', {\\r\\n                loaded: loaded,\\r\\n                total: Math.max(loaded, fullRequest.contentLength || 0)\\r\\n              });\\r\\n            }\\r\\n            if (pdfManager) {\\r\\n              pdfManager.sendProgressiveData(data);\\r\\n            } else {\\r\\n              cachedChunks.push(data);\\r\\n            }\\r\\n            fullRequest.read().then(readChunk, reject);\\r\\n          } catch (e) {\\r\\n            reject(e);\\r\\n          }\\r\\n        };\\r\\n        fullRequest.read().then(readChunk, reject);\\r\\n      });\\r\\n      readPromise.catch(function (e) {\\r\\n        pdfManagerCapability.reject(e);\\r\\n        cancelXHRs = null;\\r\\n      });\\r\\n      cancelXHRs = function cancelXHRs() {\\r\\n        pdfStream.cancelAllRequests('abort');\\r\\n      };\\r\\n      return pdfManagerCapability.promise;\\r\\n    }\\r\\n    function setupDoc(data) {\\r\\n      function onSuccess(doc) {\\r\\n        ensureNotTerminated();\\r\\n        handler.send('GetDoc', { pdfInfo: doc });\\r\\n      }\\r\\n      function onFailure(e) {\\r\\n        ensureNotTerminated();\\r\\n        if (e instanceof _util.PasswordException) {\\r\\n          var task = new WorkerTask('PasswordException: response ' + e.code);\\r\\n          startWorkerTask(task);\\r\\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\\r\\n            finishWorkerTask(task);\\r\\n            pdfManager.updatePassword(data.password);\\r\\n            pdfManagerReady();\\r\\n          }).catch(function (ex) {\\r\\n            finishWorkerTask(task);\\r\\n            handler.send('PasswordException', ex);\\r\\n          }.bind(null, e));\\r\\n        } else if (e instanceof _util.InvalidPDFException) {\\r\\n          handler.send('InvalidPDF', e);\\r\\n        } else if (e instanceof _util.MissingPDFException) {\\r\\n          handler.send('MissingPDF', e);\\r\\n        } else if (e instanceof _util.UnexpectedResponseException) {\\r\\n          handler.send('UnexpectedResponse', e);\\r\\n        } else {\\r\\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\\r\\n        }\\r\\n      }\\r\\n      function pdfManagerReady() {\\r\\n        ensureNotTerminated();\\r\\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\\r\\n          ensureNotTerminated();\\r\\n          if (!(ex instanceof _util.XRefParseException)) {\\r\\n            onFailure(ex);\\r\\n            return;\\r\\n          }\\r\\n          pdfManager.requestLoadedStream();\\r\\n          pdfManager.onLoadedStream().then(function () {\\r\\n            ensureNotTerminated();\\r\\n            loadDocument(true).then(onSuccess, onFailure);\\r\\n          });\\r\\n        }, onFailure);\\r\\n      }\\r\\n      ensureNotTerminated();\\r\\n      var evaluatorOptions = {\\r\\n        forceDataSchema: data.disableCreateObjectURL,\\r\\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\\r\\n        disableFontFace: data.disableFontFace,\\r\\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\\r\\n        ignoreErrors: data.ignoreErrors,\\r\\n        isEvalSupported: data.isEvalSupported\\r\\n      };\\r\\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\\r\\n        if (terminated) {\\r\\n          newPdfManager.terminate();\\r\\n          throw new Error('Worker was terminated');\\r\\n        }\\r\\n        pdfManager = newPdfManager;\\r\\n        handler.send('PDFManagerReady', null);\\r\\n        pdfManager.onLoadedStream().then(function (stream) {\\r\\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\\r\\n        });\\r\\n      }).then(pdfManagerReady, onFailure);\\r\\n    }\\r\\n    handler.on('GetPage', function wphSetupGetPage(data) {\\r\\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\\r\\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\\r\\n        var refPromise = pdfManager.ensure(page, 'ref');\\r\\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\\r\\n        var viewPromise = pdfManager.ensure(page, 'view');\\r\\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\\r\\n          return {\\r\\n            rotate: results[0],\\r\\n            ref: results[1],\\r\\n            userUnit: results[2],\\r\\n            view: results[3]\\r\\n          };\\r\\n        });\\r\\n      });\\r\\n    });\\r\\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\\r\\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\\r\\n      var catalog = pdfManager.pdfDocument.catalog;\\r\\n      return catalog.getPageIndex(ref);\\r\\n    });\\r\\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\\r\\n      return pdfManager.ensureCatalog('destinations');\\r\\n    });\\r\\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\\r\\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\\r\\n    });\\r\\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\\r\\n      return pdfManager.ensureCatalog('pageLabels');\\r\\n    });\\r\\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\\r\\n      return pdfManager.ensureCatalog('pageMode');\\r\\n    });\\r\\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\\r\\n      return pdfManager.ensureCatalog('attachments');\\r\\n    });\\r\\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\\r\\n      return pdfManager.ensureCatalog('javaScript');\\r\\n    });\\r\\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\\r\\n      return pdfManager.ensureCatalog('documentOutline');\\r\\n    });\\r\\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\\r\\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\\r\\n    });\\r\\n    handler.on('GetData', function wphSetupGetData(data) {\\r\\n      pdfManager.requestLoadedStream();\\r\\n      return pdfManager.onLoadedStream().then(function (stream) {\\r\\n        return stream.bytes;\\r\\n      });\\r\\n    });\\r\\n    handler.on('GetStats', function wphSetupGetStats(data) {\\r\\n      return pdfManager.pdfDocument.xref.stats;\\r\\n    });\\r\\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\\r\\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\\r\\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\\r\\n      });\\r\\n    });\\r\\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\\r\\n      var pageIndex = data.pageIndex;\\r\\n      pdfManager.getPage(pageIndex).then(function (page) {\\r\\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\\r\\n        startWorkerTask(task);\\r\\n        var pageNum = pageIndex + 1;\\r\\n        var start = Date.now();\\r\\n        page.getOperatorList({\\r\\n          handler: handler,\\r\\n          task: task,\\r\\n          intent: data.intent,\\r\\n          renderInteractiveForms: data.renderInteractiveForms\\r\\n        }).then(function (operatorList) {\\r\\n          finishWorkerTask(task);\\r\\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\\r\\n        }, function (e) {\\r\\n          finishWorkerTask(task);\\r\\n          if (task.terminated) {\\r\\n            return;\\r\\n          }\\r\\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\\r\\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\\r\\n          var wrappedException;\\r\\n          if (typeof e === 'string') {\\r\\n            wrappedException = {\\r\\n              message: e,\\r\\n              stack: minimumStackMessage\\r\\n            };\\r\\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\\r\\n            wrappedException = {\\r\\n              message: e.message || e.toString(),\\r\\n              stack: e.stack || minimumStackMessage\\r\\n            };\\r\\n          } else {\\r\\n            wrapp\";a.a+=\"edException = {\\r\\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\\r\\n              stack: minimumStackMessage\\r\\n            };\\r\\n          }\\r\\n          handler.send('PageError', {\\r\\n            pageNum: pageNum,\\r\\n            error: wrappedException,\\r\\n            intent: data.intent\\r\\n          });\\r\\n        });\\r\\n      });\\r\\n    }, this);\\r\\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\\r\\n      var pageIndex = data.pageIndex;\\r\\n      sink.onPull = function (desiredSize) {};\\r\\n      sink.onCancel = function (reason) {};\\r\\n      pdfManager.getPage(pageIndex).then(function (page) {\\r\\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\\r\\n        startWorkerTask(task);\\r\\n        var pageNum = pageIndex + 1;\\r\\n        var start = Date.now();\\r\\n        page.extractTextContent({\\r\\n          handler: handler,\\r\\n          task: task,\\r\\n          sink: sink,\\r\\n          normalizeWhitespace: data.normalizeWhitespace,\\r\\n          combineTextItems: data.combineTextItems\\r\\n        }).then(function () {\\r\\n          finishWorkerTask(task);\\r\\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\\r\\n          sink.close();\\r\\n        }, function (reason) {\\r\\n          finishWorkerTask(task);\\r\\n          if (task.terminated) {\\r\\n            return;\\r\\n          }\\r\\n          sink.error(reason);\\r\\n          throw reason;\\r\\n        });\\r\\n      });\\r\\n    });\\r\\n    handler.on('Cleanup', function wphCleanup(data) {\\r\\n      return pdfManager.cleanup();\\r\\n    });\\r\\n    handler.on('Terminate', function wphTerminate(data) {\\r\\n      terminated = true;\\r\\n      if (pdfManager) {\\r\\n        pdfManager.terminate();\\r\\n        pdfManager = null;\\r\\n      }\\r\\n      if (cancelXHRs) {\\r\\n        cancelXHRs();\\r\\n      }\\r\\n      var waitOn = [];\\r\\n      WorkerTasks.forEach(function (task) {\\r\\n        waitOn.push(task.finished);\\r\\n        task.terminate();\\r\\n      });\\r\\n      return Promise.all(waitOn).then(function () {\\r\\n        handler.destroy();\\r\\n        handler = null;\\r\\n      });\\r\\n    });\\r\\n    handler.on('Ready', function wphReady(data) {\\r\\n      setupDoc(docParams);\\r\\n      docParams = null;\\r\\n    });\\r\\n    return workerHandlerName;\\r\\n  },\\r\\n  initializeFromPort: function initializeFromPort(port) {\\r\\n    var handler = new _util.MessageHandler('worker', 'main', port);\\r\\n    WorkerMessageHandler.setup(handler, port);\\r\\n    handler.send('ready', null);\\r\\n  }\\r\\n};\\r\\nfunction isMessagePort(maybePort) {\\r\\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\\r\\n}\\r\\nif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\\r\\n  WorkerMessageHandler.initializeFromPort(self);\\r\\n}\\r\\nexports.WorkerTask = WorkerTask;\\r\\nexports.WorkerMessageHandler = WorkerMessageHandler;\\r\\n\\r\\n/***/ }),\\r\\n/* 141 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _chunked_stream = __w_pdfjs_require__(78);\\r\\n\\r\\nvar _document = __w_pdfjs_require__(142);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar BasePdfManager = function BasePdfManagerClosure() {\\r\\n  function BasePdfManager() {\\r\\n    throw new Error('Cannot initialize BaseManagerManager');\\r\\n  }\\r\\n  BasePdfManager.prototype = {\\r\\n    get docId() {\\r\\n      return this._docId;\\r\\n    },\\r\\n    get password() {\\r\\n      return this._password;\\r\\n    },\\r\\n    get docBaseUrl() {\\r\\n      var docBaseUrl = null;\\r\\n      if (this._docBaseUrl) {\\r\\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\\r\\n        if (absoluteUrl) {\\r\\n          docBaseUrl = absoluteUrl.href;\\r\\n        } else {\\r\\n          (0, _util.warn)('Invalid absolute docBaseUrl: \\\"' + this._docBaseUrl + '\\\".');\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\\r\\n    },\\r\\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\\r\\n      throw new _util.NotImplementedException();\\r\\n    },\\r\\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\\r\\n      return this.ensure(this.pdfDocument, prop, args);\\r\\n    },\\r\\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\\r\\n      return this.ensure(this.pdfDocument.xref, prop, args);\\r\\n    },\\r\\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\\r\\n      return this.ensure(this.pdfDocument.catalog, prop, args);\\r\\n    },\\r\\n    getPage: function BasePdfManager_getPage(pageIndex) {\\r\\n      return this.pdfDocument.getPage(pageIndex);\\r\\n    },\\r\\n    cleanup: function BasePdfManager_cleanup() {\\r\\n      return this.pdfDocument.cleanup();\\r\\n    },\\r\\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\\r\\n      return new _util.NotImplementedException();\\r\\n    },\\r\\n    requestRange: function BasePdfManager_requestRange(begin, end) {\\r\\n      return new _util.NotImplementedException();\\r\\n    },\\r\\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\\r\\n      return new _util.NotImplementedException();\\r\\n    },\\r\\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\\r\\n      return new _util.NotImplementedException();\\r\\n    },\\r\\n    updatePassword: function BasePdfManager_updatePassword(password) {\\r\\n      this._password = password;\\r\\n    },\\r\\n    terminate: function BasePdfManager_terminate() {\\r\\n      return new _util.NotImplementedException();\\r\\n    }\\r\\n  };\\r\\n  return BasePdfManager;\\r\\n}();\\r\\nvar LocalPdfManager = function LocalPdfManagerClosure() {\\r\\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\\r\\n    this._docId = docId;\\r\\n    this._password = password;\\r\\n    this._docBaseUrl = docBaseUrl;\\r\\n    this.evaluatorOptions = evaluatorOptions;\\r\\n    var stream = new _stream.Stream(data);\\r\\n    this.pdfDocument = new _document.PDFDocument(this, stream);\\r\\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\\r\\n    this._loadedStreamCapability.resolve(stream);\\r\\n  }\\r\\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\\r\\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\\r\\n      return new Promise(function (resolve, reject) {\\r\\n        try {\\r\\n          var value = obj[prop];\\r\\n          var result;\\r\\n          if (typeof value === 'function') {\\r\\n            result = value.apply(obj, args);\\r\\n          } else {\\r\\n            result = value;\\r\\n          }\\r\\n          resolve(result);\\r\\n        } catch (e) {\\r\\n          reject(e);\\r\\n        }\\r\\n      });\\r\\n    },\\r\\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\\r\\n      return Promise.resolve();\\r\\n    },\\r\\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\\r\\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\\r\\n      return this._loadedStreamCapability.promise;\\r\\n    },\\r\\n    terminate: function LocalPdfManager_terminate() {}\\r\\n  });\\r\\n  return LocalPdfManager;\\r\\n}();\\r\\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\\r\\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\\r\\n    this._docId = docId;\\r\\n    this._password = args.password;\\r\\n    this._docBaseUrl = docBaseUrl;\\r\\n    this.msgHandler = args.msgHandler;\\r\\n    this.evaluatorOptions = evaluatorOptions;\\r\\n    var params = {\\r\\n      msgHandler: args.msgHandler,\\r\\n      url: args.url,\\r\\n      length: args.length,\\r\\n      disableAutoFetch: args.disableAutoFetch,\\r\\n      rangeChunkSize: args.rangeChunkSize\\r\\n    };\\r\\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\\r\\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\\r\\n  }\\r\\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\\r\\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\\r\\n      var pdfManager = this;\\r\\n      return new Promise(function (resolve, reject) {\\r\\n        function ensureHelper() {\\r\\n          try {\\r\\n            var result;\\r\\n            var value = obj[prop];\\r\\n            if (typeof value === 'function') {\\r\\n              result = value.apply(obj, args);\\r\\n            } else {\\r\\n              result = value;\\r\\n            }\\r\\n            resolve(result);\\r\\n          } catch (e) {\\r\\n            if (!(e instanceof _util.MissingDataException)) {\\r\\n              reject(e);\\r\\n              return;\\r\\n            }\\r\\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\\r\\n          }\\r\\n        }\\r\\n        ensureHelper();\\r\\n      });\\r\\n    },\\r\\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\\r\\n      return this.streamManager.requestRange(begin, end);\\r\\n    },\\r\\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\\r\\n      this.streamManager.requestAllChunks();\\r\\n    },\\r\\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\\r\\n      this.streamManager.onReceiveData({ chunk: chunk });\\r\\n    },\\r\\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\\r\\n      return this.streamManager.onLoadedStream();\\r\\n    },\\r\\n    terminate: function NetworkPdfManager_terminate() {\\r\\n      this.streamManager.abort();\\r\\n    }\\r\\n  });\\r\\n  return NetworkPdfManager;\\r\\n}();\\r\\nexports.LocalPdfManager = LocalPdfManager;\\r\\nexports.NetworkPdfManager = NetworkPdfManager;\\r\\n\\r\\n/***/ }),\\r\\n/* 142 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PDFDocument = exports.Page = undefined;\\r\\n\\r\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\r\\n\\r\\nvar _obj = __w_pdfjs_require__(79);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar _evaluator = __w_pdfjs_require__(83);\\r\\n\\r\\nvar _annotation = __w_pdfjs_require__(159);\\r\\n\\r\\nvar _crypto = __w_pdfjs_require__(82);\\r\\n\\r\\nvar _parser = __w_pdfjs_require__(36);\\r\\n\\r\\nvar _function = __w_pdfjs_require__(87);\\r\\n\\r\\nvar Page = function PageClosure() {\\r\\n  var DEFAULT_USER_UNIT = 1.0;\\r\\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\\r\\n  function isAnnotationRenderable(annotation, intent) {\\r\\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\\r\\n  }\\r\\n  function Page(_ref) {\\r\\n    var pdfManager = _ref.pdfManager,\\r\\n        xref = _ref.xref,\\r\\n        pageIndex = _ref.pageIndex,\\r\\n        pageDict = _ref.pageDict,\\r\\n        ref = _ref.ref,\\r\\n        fontCache = _ref.fontCache,\\r\\n        builtInCMapCache = _ref.builtInCMapCache,\\r\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\r\\n\\r\\n    this.pdfManager = pdfManager;\\r\\n    this.pageIndex = pageIndex;\\r\\n    this.pageDict = pageDict;\\r\\n    this.xref = xref;\\r\\n    this.ref = ref;\\r\\n    this.fontCache = fontCache;\\r\\n    this.builtInCMapCache = builtInCMapCache;\\r\\n    this.pdfFunctionFactory = pdfFunctionFactory;\\r\\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\\r\\n    this.resourcesPromise = null;\\r\\n    var uniquePrefix = 'p' + this.pageIndex + '_';\\r\\n    var idCounters = { obj: 0 };\\r\\n    this.idFactory = {\\r\\n      createObjId: function createObjId() {\\r\\n        return uniquePrefix + ++idCounters.obj;\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n  Page.prototype = {\\r\\n    getPageProp: function Page_getPageProp(key) {\\r\\n      return this.pageDict.get(key);\\r\\n    },\\r\\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\\r\\n      var dict = this.pageDict,\\r\\n          valueArray = null,\\r\\n          loopCount = 0;\\r\\n      var MAX_LOOP_COUNT = 100;\\r\\n      getArray = getArray || false;\\r\\n      while (dict) {\\r\\n        var value = getArray ? dict.getArray(key) : dict.get(key);\\r\\n        if (value !== undefined) {\\r\\n          if (!valueArray) {\\r\\n            valueArray = [];\\r\\n          }\\r\\n          valueArray.push(value);\\r\\n        }\\r\\n        if (++loopCount > MAX_LOOP_COUNT) {\\r\\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\\r\\n          return valueArray ? valueArray[0] : undefined;\\r\\n        }\\r\\n        dict = dict.get('Parent');\\r\\n      }\\r\\n      if (!valueArray) {\\r\\n        return undefined;\\r\\n      }\\r\\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\\r\\n        return valueArray[0];\\r\\n      }\\r\\n      return _primitives.Dict.merge(this.xref, valueArray);\\r\\n    },\\r\\n    get content() {\\r\\n      return this.getPageProp('Contents');\\r\\n    },\\r\\n    get resources() {\\r\\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\\r\\n    },\\r\\n    get mediaBox() {\\r\\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\\r\\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\\r\\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\\r\\n    },\\r\\n    get cropBox() {\\r\\n      var cropBox = this.getInheritedPageProp('CropBox', true);\\r\\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\\r\\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\\r\\n    },\\r\\n    get userUnit() {\\r\\n      var obj = this.getPageProp('UserUnit');\\r\\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\\r\\n        obj = DEFAULT_USER_UNIT;\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'userUnit', obj);\\r\\n    },\\r\\n    get view() {\\r\\n      var mediaBox = this.mediaBox,\\r\\n          cropBox = this.cropBox;\\r\\n      if (mediaBox === cropBox) {\\r\\n        return (0, _util.shadow)(this, 'view', mediaBox);\\r\\n      }\\r\\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\\r\\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\\r\\n    },\\r\\n    get rotate() {\\r\\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\\r\\n      if (rotate % 90 !== 0) {\\r\\n        rotate = 0;\\r\\n      } else if (rotate >= 360) {\\r\\n        rotate = rotate % 360;\\r\\n      } else if (rotate < 0) {\\r\\n        rotate = (rotate % 360 + 360) % 360;\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'rotate', rotate);\\r\\n    },\\r\\n    getContentStream: function Page_getContentStream() {\\r\\n      var content = this.content;\\r\\n      var stream;\\r\\n      if (Array.isArray(content)) {\\r\\n        var xref = this.xref;\\r\\n        var i,\\r\\n            n = content.length;\\r\\n        var streams = [];\\r\\n        for (i = 0; i < n; ++i) {\\r\\n          streams.push(xref.fetchIfRef(content[i]));\\r\\n        }\\r\\n        stream = new _stream.StreamsSequenceStream(streams);\\r\\n      } else if ((0, _primitives.isStream)(content)) {\\r\\n        stream = content;\\r\\n      } else {\\r\\n        stream = new _stream.NullStream();\\r\\n      }\\r\\n      return stream;\\r\\n    },\\r\\n    loadResources: function Page_loadResources(keys) {\\r\\n      var _this = this;\\r\\n\\r\\n      if (!this.resourcesPromise) {\\r\\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\\r\\n      }\\r\\n      return this.resourcesPromise.then(function () {\\r\\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\\r\\n        return objectLoader.load();\\r\\n      });\\r\\n    },\\r\\n    getOperatorList: function getOperatorList(_ref2) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      var handler = _ref2.handler,\\r\\n          task = _ref2.task,\\r\\n          intent = _ref2.intent,\\r\\n          renderInteractiveForms = _ref2.renderInteractiveForms;\\r\\n\\r\\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\r\\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\r\\n      var partialEvaluator = new _evaluator.PartialEvaluator({\\r\\n        pdfManager: this.pdfManager,\\r\\n        xref: this.xref,\\r\\n        handler: handler,\\r\\n        pageIndex: this.pageIndex,\\r\\n        idFactory: this.idFactory,\\r\\n        fontCache: this.fontCache,\\r\\n        builtInCMapCache: this.builtInCMap\";a.a+=\"Cache,\\r\\n        options: this.evaluatorOptions,\\r\\n        pdfFunctionFactory: this.pdfFunctionFactory\\r\\n      });\\r\\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\r\\n      var pageListPromise = dataPromises.then(function (_ref3) {\\r\\n        var _ref4 = _slicedToArray(_ref3, 1),\\r\\n            contentStream = _ref4[0];\\r\\n\\r\\n        var opList = new _evaluator.OperatorList(intent, handler, _this2.pageIndex);\\r\\n        handler.send('StartRenderPage', {\\r\\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\\r\\n          pageIndex: _this2.pageIndex,\\r\\n          intent: intent\\r\\n        });\\r\\n        return partialEvaluator.getOperatorList({\\r\\n          stream: contentStream,\\r\\n          task: task,\\r\\n          resources: _this2.resources,\\r\\n          operatorList: opList\\r\\n        }).then(function () {\\r\\n          return opList;\\r\\n        });\\r\\n      });\\r\\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\\r\\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\\r\\n        var _ref6 = _slicedToArray(_ref5, 2),\\r\\n            pageOpList = _ref6[0],\\r\\n            annotations = _ref6[1];\\r\\n\\r\\n        if (annotations.length === 0) {\\r\\n          pageOpList.flush(true);\\r\\n          return pageOpList;\\r\\n        }\\r\\n        var i,\\r\\n            ii,\\r\\n            opListPromises = [];\\r\\n        for (i = 0, ii = annotations.length; i < ii; i++) {\\r\\n          if (isAnnotationRenderable(annotations[i], intent)) {\\r\\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\\r\\n          }\\r\\n        }\\r\\n        return Promise.all(opListPromises).then(function (opLists) {\\r\\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\\r\\n          for (i = 0, ii = opLists.length; i < ii; i++) {\\r\\n            pageOpList.addOpList(opLists[i]);\\r\\n          }\\r\\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\\r\\n          pageOpList.flush(true);\\r\\n          return pageOpList;\\r\\n        });\\r\\n      });\\r\\n    },\\r\\n    extractTextContent: function extractTextContent(_ref7) {\\r\\n      var _this3 = this;\\r\\n\\r\\n      var handler = _ref7.handler,\\r\\n          task = _ref7.task,\\r\\n          normalizeWhitespace = _ref7.normalizeWhitespace,\\r\\n          sink = _ref7.sink,\\r\\n          combineTextItems = _ref7.combineTextItems;\\r\\n\\r\\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\\r\\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\\r\\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\\r\\n      return dataPromises.then(function (_ref8) {\\r\\n        var _ref9 = _slicedToArray(_ref8, 1),\\r\\n            contentStream = _ref9[0];\\r\\n\\r\\n        var partialEvaluator = new _evaluator.PartialEvaluator({\\r\\n          pdfManager: _this3.pdfManager,\\r\\n          xref: _this3.xref,\\r\\n          handler: handler,\\r\\n          pageIndex: _this3.pageIndex,\\r\\n          idFactory: _this3.idFactory,\\r\\n          fontCache: _this3.fontCache,\\r\\n          builtInCMapCache: _this3.builtInCMapCache,\\r\\n          options: _this3.evaluatorOptions,\\r\\n          pdfFunctionFactory: _this3.pdfFunctionFactory\\r\\n        });\\r\\n        return partialEvaluator.getTextContent({\\r\\n          stream: contentStream,\\r\\n          task: task,\\r\\n          resources: _this3.resources,\\r\\n          normalizeWhitespace: normalizeWhitespace,\\r\\n          combineTextItems: combineTextItems,\\r\\n          sink: sink\\r\\n        });\\r\\n      });\\r\\n    },\\r\\n\\r\\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\\r\\n      var annotations = this.annotations;\\r\\n      var annotationsData = [];\\r\\n      for (var i = 0, n = annotations.length; i < n; ++i) {\\r\\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\\r\\n          annotationsData.push(annotations[i].data);\\r\\n        }\\r\\n      }\\r\\n      return annotationsData;\\r\\n    },\\r\\n    get annotations() {\\r\\n      var annotations = [];\\r\\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\\r\\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\\r\\n        var annotationRef = annotationRefs[i];\\r\\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\\r\\n        if (annotation) {\\r\\n          annotations.push(annotation);\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'annotations', annotations);\\r\\n    }\\r\\n  };\\r\\n  return Page;\\r\\n}();\\r\\nvar PDFDocument = function PDFDocumentClosure() {\\r\\n  var FINGERPRINT_FIRST_BYTES = 1024;\\r\\n  var EMPTY_FINGERPRINT = '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00';\\r\\n  function PDFDocument(pdfManager, arg) {\\r\\n    var stream;\\r\\n    if ((0, _primitives.isStream)(arg)) {\\r\\n      stream = arg;\\r\\n    } else if ((0, _util.isArrayBuffer)(arg)) {\\r\\n      stream = new _stream.Stream(arg);\\r\\n    } else {\\r\\n      throw new Error('PDFDocument: Unknown argument type');\\r\\n    }\\r\\n    if (stream.length <= 0) {\\r\\n      throw new Error('PDFDocument: stream must have data');\\r\\n    }\\r\\n    this.pdfManager = pdfManager;\\r\\n    this.stream = stream;\\r\\n    this.xref = new _obj.XRef(stream, pdfManager);\\r\\n    var evaluatorOptions = pdfManager.evaluatorOptions;\\r\\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\\r\\n      xref: this.xref,\\r\\n      isEvalSupported: evaluatorOptions.isEvalSupported\\r\\n    });\\r\\n  }\\r\\n  function find(stream, needle, limit, backwards) {\\r\\n    var pos = stream.pos;\\r\\n    var end = stream.end;\\r\\n    var strBuf = [];\\r\\n    if (pos + limit > end) {\\r\\n      limit = end - pos;\\r\\n    }\\r\\n    for (var n = 0; n < limit; ++n) {\\r\\n      strBuf.push(String.fromCharCode(stream.getByte()));\\r\\n    }\\r\\n    var str = strBuf.join('');\\r\\n    stream.pos = pos;\\r\\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\\r\\n    if (index === -1) {\\r\\n      return false;\\r\\n    }\\r\\n    stream.pos += index;\\r\\n    return true;\\r\\n  }\\r\\n  var DocumentInfoValidators = {\\r\\n    get entries() {\\r\\n      return (0, _util.shadow)(this, 'entries', {\\r\\n        Title: _util.isString,\\r\\n        Author: _util.isString,\\r\\n        Subject: _util.isString,\\r\\n        Keywords: _util.isString,\\r\\n        Creator: _util.isString,\\r\\n        Producer: _util.isString,\\r\\n        CreationDate: _util.isString,\\r\\n        ModDate: _util.isString,\\r\\n        Trapped: _primitives.isName\\r\\n      });\\r\\n    }\\r\\n  };\\r\\n  PDFDocument.prototype = {\\r\\n    parse: function PDFDocument_parse(recoveryMode) {\\r\\n      this.setup(recoveryMode);\\r\\n      var version = this.catalog.catDict.get('Version');\\r\\n      if ((0, _primitives.isName)(version)) {\\r\\n        this.pdfFormatVersion = version.name;\\r\\n      }\\r\\n      try {\\r\\n        this.acroForm = this.catalog.catDict.get('AcroForm');\\r\\n        if (this.acroForm) {\\r\\n          this.xfa = this.acroForm.get('XFA');\\r\\n          var fields = this.acroForm.get('Fields');\\r\\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\\r\\n            this.acroForm = null;\\r\\n          }\\r\\n        }\\r\\n      } catch (ex) {\\r\\n        if (ex instanceof _util.MissingDataException) {\\r\\n          throw ex;\\r\\n        }\\r\\n        (0, _util.info)('Something wrong with AcroForm entry');\\r\\n        this.acroForm = null;\\r\\n      }\\r\\n    },\\r\\n    get linearization() {\\r\\n      var linearization = null;\\r\\n      if (this.stream.length) {\\r\\n        try {\\r\\n          linearization = _parser.Linearization.create(this.stream);\\r\\n        } catch (err) {\\r\\n          if (err instanceof _util.MissingDataException) {\\r\\n            throw err;\\r\\n          }\\r\\n          (0, _util.info)(err);\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'linearization', linearization);\\r\\n    },\\r\\n    get startXRef() {\\r\\n      var stream = this.stream;\\r\\n      var startXRef = 0;\\r\\n      var linearization = this.linearization;\\r\\n      if (linearization) {\\r\\n        stream.reset();\\r\\n        if (find(stream, 'endobj', 1024)) {\\r\\n          startXRef = stream.pos + 6;\\r\\n        }\\r\\n      } else {\\r\\n        var step = 1024;\\r\\n        var found = false,\\r\\n            pos = stream.end;\\r\\n        while (!found && pos > 0) {\\r\\n          pos -= step - 'startxref'.length;\\r\\n          if (pos < 0) {\\r\\n            pos = 0;\\r\\n          }\\r\\n          stream.pos = pos;\\r\\n          found = find(stream, 'startxref', step, true);\\r\\n        }\\r\\n        if (found) {\\r\\n          stream.skip(9);\\r\\n          var ch;\\r\\n          do {\\r\\n            ch = stream.getByte();\\r\\n          } while ((0, _util.isSpace)(ch));\\r\\n          var str = '';\\r\\n          while (ch >= 0x20 && ch <= 0x39) {\\r\\n            str += String.fromCharCode(ch);\\r\\n            ch = stream.getByte();\\r\\n          }\\r\\n          startXRef = parseInt(str, 10);\\r\\n          if (isNaN(startXRef)) {\\r\\n            startXRef = 0;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\\r\\n    },\\r\\n    get mainXRefEntriesOffset() {\\r\\n      var mainXRefEntriesOffset = 0;\\r\\n      var linearization = this.linearization;\\r\\n      if (linearization) {\\r\\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\\r\\n    },\\r\\n    checkHeader: function PDFDocument_checkHeader() {\\r\\n      var stream = this.stream;\\r\\n      stream.reset();\\r\\n      if (find(stream, '%PDF-', 1024)) {\\r\\n        stream.moveStart();\\r\\n        var MAX_VERSION_LENGTH = 12;\\r\\n        var version = '',\\r\\n            ch;\\r\\n        while ((ch = stream.getByte()) > 0x20) {\\r\\n          if (version.length >= MAX_VERSION_LENGTH) {\\r\\n            break;\\r\\n          }\\r\\n          version += String.fromCharCode(ch);\\r\\n        }\\r\\n        if (!this.pdfFormatVersion) {\\r\\n          this.pdfFormatVersion = version.substring(5);\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n    },\\r\\n    parseStartXRef: function PDFDocument_parseStartXRef() {\\r\\n      var startXRef = this.startXRef;\\r\\n      this.xref.setStartXRef(startXRef);\\r\\n    },\\r\\n    setup: function PDFDocument_setup(recoveryMode) {\\r\\n      var _this4 = this;\\r\\n\\r\\n      this.xref.parse(recoveryMode);\\r\\n      var pageFactory = {\\r\\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\\r\\n          return new Page({\\r\\n            pdfManager: _this4.pdfManager,\\r\\n            xref: _this4.xref,\\r\\n            pageIndex: pageIndex,\\r\\n            pageDict: dict,\\r\\n            ref: ref,\\r\\n            fontCache: fontCache,\\r\\n            builtInCMapCache: builtInCMapCache,\\r\\n            pdfFunctionFactory: _this4.pdfFunctionFactory\\r\\n          });\\r\\n        }\\r\\n      };\\r\\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\\r\\n    },\\r\\n    get numPages() {\\r\\n      var linearization = this.linearization;\\r\\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\\r\\n      return (0, _util.shadow)(this, 'numPages', num);\\r\\n    },\\r\\n    get documentInfo() {\\r\\n      var docInfo = {\\r\\n        PDFFormatVersion: this.pdfFormatVersion,\\r\\n        IsAcroFormPresent: !!this.acroForm,\\r\\n        IsXFAPresent: !!this.xfa\\r\\n      };\\r\\n      var infoDict;\\r\\n      try {\\r\\n        infoDict = this.xref.trailer.get('Info');\\r\\n      } catch (err) {\\r\\n        if (err instanceof _util.MissingDataException) {\\r\\n          throw err;\\r\\n        }\\r\\n        (0, _util.info)('The document information dictionary is invalid.');\\r\\n      }\\r\\n      if (infoDict) {\\r\\n        var validEntries = DocumentInfoValidators.entries;\\r\\n        for (var key in validEntries) {\\r\\n          if (infoDict.has(key)) {\\r\\n            var value = infoDict.get(key);\\r\\n            if (validEntries[key](value)) {\\r\\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\\r\\n            } else {\\r\\n              (0, _util.info)('Bad value in document info for \\\"' + key + '\\\"');\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\\r\\n    },\\r\\n    get fingerprint() {\\r\\n      var xref = this.xref,\\r\\n          hash,\\r\\n          fileID = '';\\r\\n      var idArray = xref.trailer.get('ID');\\r\\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\\r\\n        hash = (0, _util.stringToBytes)(idArray[0]);\\r\\n      } else {\\r\\n        if (this.stream.ensureRange) {\\r\\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\\r\\n        }\\r\\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\\r\\n      }\\r\\n      for (var i = 0, n = hash.length; i < n; i++) {\\r\\n        var hex = hash[i].toString(16);\\r\\n        fileID += hex.length === 1 ? '0' + hex : hex;\\r\\n      }\\r\\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\\r\\n    },\\r\\n    getPage: function PDFDocument_getPage(pageIndex) {\\r\\n      return this.catalog.getPage(pageIndex);\\r\\n    },\\r\\n    cleanup: function PDFDocument_cleanup() {\\r\\n      return this.catalog.cleanup();\\r\\n    }\\r\\n  };\\r\\n  return PDFDocument;\\r\\n}();\\r\\nexports.Page = Page;\\r\\nexports.PDFDocument = PDFDocument;\\r\\n\\r\\n/***/ }),\\r\\n/* 143 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.JpegImage = undefined;\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar JpegError = function JpegErrorClosure() {\\r\\n  function JpegError(msg) {\\r\\n    this.message = 'JPEG error: ' + msg;\\r\\n  }\\r\\n  JpegError.prototype = new Error();\\r\\n  JpegError.prototype.name = 'JpegError';\\r\\n  JpegError.constructor = JpegError;\\r\\n  return JpegError;\\r\\n}();\\r\\nvar JpegImage = function JpegImageClosure() {\\r\\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\\r\\n  var dctCos1 = 4017;\\r\\n  var dctSin1 = 799;\\r\\n  var dctCos3 = 3406;\\r\\n  var dctSin3 = 2276;\\r\\n  var dctCos6 = 1567;\\r\\n  var dctSin6 = 3784;\\r\\n  var dctSqrt2 = 5793;\\r\\n  var dctSqrt1d2 = 2896;\\r\\n  function JpegImage() {\\r\\n    this.decodeTransform = null;\\r\\n    this.colorTransform = -1;\\r\\n  }\\r\\n  function buildHuffmanTable(codeLengths, values) {\\r\\n    var k = 0,\\r\\n        code = [],\\r\\n        i,\\r\\n        j,\\r\\n        length = 16;\\r\\n    while (length > 0 && !codeLengths[length - 1]) {\\r\\n      length--;\\r\\n    }\\r\\n    code.push({\\r\\n      children: [],\\r\\n      index: 0\\r\\n    });\\r\\n    var p = code[0],\\r\\n        q;\\r\\n    for (i = 0; i < length; i++) {\\r\\n      for (j = 0; j < codeLengths[i]; j++) {\\r\\n        p = code.pop();\\r\\n        p.children[p.index] = values[k];\\r\\n        while (p.index > 0) {\\r\\n          p = code.pop();\\r\\n        }\\r\\n        p.index++;\\r\\n        code.push(p);\\r\\n        while (code.length <= i) {\\r\\n          code.push(q = {\\r\\n            children: [],\\r\\n            index: 0\\r\\n          });\\r\\n          p.children[p.index] = q.children;\\r\\n          p = q;\\r\\n        }\\r\\n        k++;\\r\\n      }\\r\\n      if (i + 1 < length) {\\r\\n        code.push(q = {\\r\\n          children: [],\\r\\n          index: 0\\r\\n        });\\r\\n        p.children[p.index] = q.children;\\r\\n        p = q;\\r\\n      }\\r\\n    }\\r\\n    return code[0].children;\\r\\n  }\\r\\n  function getBlockBufferOffset(component, row, col) {\\r\\n    return 64 * ((component.blocksPerLine + 1) * row + col);\\r\\n  }\\r\\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\\r\\n    var mcusPerLine = frame.mcusPerLine;\\r\\n    var progressive = frame.progressive;\\r\\n    var startOffset = offset,\\r\\n        bitsData = 0,\\r\\n        bitsCount = 0;\\r\\n    function readBit() {\\r\\n      if (bitsCount > 0) {\\r\\n        bitsCount--;\\r\\n        return bitsData >> bitsCount & 1;\\r\\n      }\\r\\n      bitsData = data[offset++];\\r\\n      if (bitsData === 0xFF) {\\r\\n        var nextByte = data[offset++];\\r\\n        if (nextByte) {\\r\\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\\r\\n        }\\r\\n      }\\r\\n      bitsCount = 7;\\r\\n      return bitsData >>> 7;\\r\\n    }\\r\\n    function decodeHuffman(tree) {\\r\\n      var node = tree;\\r\\n      while (true) {\\r\\n        node = node[readBit()];\\r\\n        if (typeof node === 'number') {\\r\\n          return node;\\r\\n    \";a.a+=\"    }\\r\\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\\r\\n          throw new JpegError('invalid huffman sequence');\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    function receive(length) {\\r\\n      var n = 0;\\r\\n      while (length > 0) {\\r\\n        n = n << 1 | readBit();\\r\\n        length--;\\r\\n      }\\r\\n      return n;\\r\\n    }\\r\\n    function receiveAndExtend(length) {\\r\\n      if (length === 1) {\\r\\n        return readBit() === 1 ? 1 : -1;\\r\\n      }\\r\\n      var n = receive(length);\\r\\n      if (n >= 1 << length - 1) {\\r\\n        return n;\\r\\n      }\\r\\n      return n + (-1 << length) + 1;\\r\\n    }\\r\\n    function decodeBaseline(component, offset) {\\r\\n      var t = decodeHuffman(component.huffmanTableDC);\\r\\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\\r\\n      component.blockData[offset] = component.pred += diff;\\r\\n      var k = 1;\\r\\n      while (k < 64) {\\r\\n        var rs = decodeHuffman(component.huffmanTableAC);\\r\\n        var s = rs & 15,\\r\\n            r = rs >> 4;\\r\\n        if (s === 0) {\\r\\n          if (r < 15) {\\r\\n            break;\\r\\n          }\\r\\n          k += 16;\\r\\n          continue;\\r\\n        }\\r\\n        k += r;\\r\\n        var z = dctZigZag[k];\\r\\n        component.blockData[offset + z] = receiveAndExtend(s);\\r\\n        k++;\\r\\n      }\\r\\n    }\\r\\n    function decodeDCFirst(component, offset) {\\r\\n      var t = decodeHuffman(component.huffmanTableDC);\\r\\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\\r\\n      component.blockData[offset] = component.pred += diff;\\r\\n    }\\r\\n    function decodeDCSuccessive(component, offset) {\\r\\n      component.blockData[offset] |= readBit() << successive;\\r\\n    }\\r\\n    var eobrun = 0;\\r\\n    function decodeACFirst(component, offset) {\\r\\n      if (eobrun > 0) {\\r\\n        eobrun--;\\r\\n        return;\\r\\n      }\\r\\n      var k = spectralStart,\\r\\n          e = spectralEnd;\\r\\n      while (k <= e) {\\r\\n        var rs = decodeHuffman(component.huffmanTableAC);\\r\\n        var s = rs & 15,\\r\\n            r = rs >> 4;\\r\\n        if (s === 0) {\\r\\n          if (r < 15) {\\r\\n            eobrun = receive(r) + (1 << r) - 1;\\r\\n            break;\\r\\n          }\\r\\n          k += 16;\\r\\n          continue;\\r\\n        }\\r\\n        k += r;\\r\\n        var z = dctZigZag[k];\\r\\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\\r\\n        k++;\\r\\n      }\\r\\n    }\\r\\n    var successiveACState = 0,\\r\\n        successiveACNextValue;\\r\\n    function decodeACSuccessive(component, offset) {\\r\\n      var k = spectralStart;\\r\\n      var e = spectralEnd;\\r\\n      var r = 0;\\r\\n      var s;\\r\\n      var rs;\\r\\n      while (k <= e) {\\r\\n        var z = dctZigZag[k];\\r\\n        switch (successiveACState) {\\r\\n          case 0:\\r\\n            rs = decodeHuffman(component.huffmanTableAC);\\r\\n            s = rs & 15;\\r\\n            r = rs >> 4;\\r\\n            if (s === 0) {\\r\\n              if (r < 15) {\\r\\n                eobrun = receive(r) + (1 << r);\\r\\n                successiveACState = 4;\\r\\n              } else {\\r\\n                r = 16;\\r\\n                successiveACState = 1;\\r\\n              }\\r\\n            } else {\\r\\n              if (s !== 1) {\\r\\n                throw new JpegError('invalid ACn encoding');\\r\\n              }\\r\\n              successiveACNextValue = receiveAndExtend(s);\\r\\n              successiveACState = r ? 2 : 3;\\r\\n            }\\r\\n            continue;\\r\\n          case 1:\\r\\n          case 2:\\r\\n            if (component.blockData[offset + z]) {\\r\\n              component.blockData[offset + z] += readBit() << successive;\\r\\n            } else {\\r\\n              r--;\\r\\n              if (r === 0) {\\r\\n                successiveACState = successiveACState === 2 ? 3 : 0;\\r\\n              }\\r\\n            }\\r\\n            break;\\r\\n          case 3:\\r\\n            if (component.blockData[offset + z]) {\\r\\n              component.blockData[offset + z] += readBit() << successive;\\r\\n            } else {\\r\\n              component.blockData[offset + z] = successiveACNextValue << successive;\\r\\n              successiveACState = 0;\\r\\n            }\\r\\n            break;\\r\\n          case 4:\\r\\n            if (component.blockData[offset + z]) {\\r\\n              component.blockData[offset + z] += readBit() << successive;\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        k++;\\r\\n      }\\r\\n      if (successiveACState === 4) {\\r\\n        eobrun--;\\r\\n        if (eobrun === 0) {\\r\\n          successiveACState = 0;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    function decodeMcu(component, decode, mcu, row, col) {\\r\\n      var mcuRow = mcu / mcusPerLine | 0;\\r\\n      var mcuCol = mcu % mcusPerLine;\\r\\n      var blockRow = mcuRow * component.v + row;\\r\\n      var blockCol = mcuCol * component.h + col;\\r\\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\\r\\n      decode(component, offset);\\r\\n    }\\r\\n    function decodeBlock(component, decode, mcu) {\\r\\n      var blockRow = mcu / component.blocksPerLine | 0;\\r\\n      var blockCol = mcu % component.blocksPerLine;\\r\\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\\r\\n      decode(component, offset);\\r\\n    }\\r\\n    var componentsLength = components.length;\\r\\n    var component, i, j, k, n;\\r\\n    var decodeFn;\\r\\n    if (progressive) {\\r\\n      if (spectralStart === 0) {\\r\\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\\r\\n      } else {\\r\\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\\r\\n      }\\r\\n    } else {\\r\\n      decodeFn = decodeBaseline;\\r\\n    }\\r\\n    var mcu = 0,\\r\\n        fileMarker;\\r\\n    var mcuExpected;\\r\\n    if (componentsLength === 1) {\\r\\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\\r\\n    } else {\\r\\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\\r\\n    }\\r\\n    var h, v;\\r\\n    while (mcu < mcuExpected) {\\r\\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\\r\\n      for (i = 0; i < componentsLength; i++) {\\r\\n        components[i].pred = 0;\\r\\n      }\\r\\n      eobrun = 0;\\r\\n      if (componentsLength === 1) {\\r\\n        component = components[0];\\r\\n        for (n = 0; n < mcuToRead; n++) {\\r\\n          decodeBlock(component, decodeFn, mcu);\\r\\n          mcu++;\\r\\n        }\\r\\n      } else {\\r\\n        for (n = 0; n < mcuToRead; n++) {\\r\\n          for (i = 0; i < componentsLength; i++) {\\r\\n            component = components[i];\\r\\n            h = component.h;\\r\\n            v = component.v;\\r\\n            for (j = 0; j < v; j++) {\\r\\n              for (k = 0; k < h; k++) {\\r\\n                decodeMcu(component, decodeFn, mcu, j, k);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n          mcu++;\\r\\n        }\\r\\n      }\\r\\n      bitsCount = 0;\\r\\n      fileMarker = findNextFileMarker(data, offset);\\r\\n      if (fileMarker && fileMarker.invalid) {\\r\\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\\r\\n        offset = fileMarker.offset;\\r\\n      }\\r\\n      var marker = fileMarker && fileMarker.marker;\\r\\n      if (!marker || marker <= 0xFF00) {\\r\\n        throw new JpegError('marker was not found');\\r\\n      }\\r\\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\\r\\n        offset += 2;\\r\\n      } else {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    fileMarker = findNextFileMarker(data, offset);\\r\\n    if (fileMarker && fileMarker.invalid) {\\r\\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\\r\\n      offset = fileMarker.offset;\\r\\n    }\\r\\n    return offset - startOffset;\\r\\n  }\\r\\n  function quantizeAndInverse(component, blockBufferOffset, p) {\\r\\n    var qt = component.quantizationTable,\\r\\n        blockData = component.blockData;\\r\\n    var v0, v1, v2, v3, v4, v5, v6, v7;\\r\\n    var p0, p1, p2, p3, p4, p5, p6, p7;\\r\\n    var t;\\r\\n    if (!qt) {\\r\\n      throw new JpegError('missing required Quantization Table.');\\r\\n    }\\r\\n    for (var row = 0; row < 64; row += 8) {\\r\\n      p0 = blockData[blockBufferOffset + row];\\r\\n      p1 = blockData[blockBufferOffset + row + 1];\\r\\n      p2 = blockData[blockBufferOffset + row + 2];\\r\\n      p3 = blockData[blockBufferOffset + row + 3];\\r\\n      p4 = blockData[blockBufferOffset + row + 4];\\r\\n      p5 = blockData[blockBufferOffset + row + 5];\\r\\n      p6 = blockData[blockBufferOffset + row + 6];\\r\\n      p7 = blockData[blockBufferOffset + row + 7];\\r\\n      p0 *= qt[row];\\r\\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\r\\n        t = dctSqrt2 * p0 + 512 >> 10;\\r\\n        p[row] = t;\\r\\n        p[row + 1] = t;\\r\\n        p[row + 2] = t;\\r\\n        p[row + 3] = t;\\r\\n        p[row + 4] = t;\\r\\n        p[row + 5] = t;\\r\\n        p[row + 6] = t;\\r\\n        p[row + 7] = t;\\r\\n        continue;\\r\\n      }\\r\\n      p1 *= qt[row + 1];\\r\\n      p2 *= qt[row + 2];\\r\\n      p3 *= qt[row + 3];\\r\\n      p4 *= qt[row + 4];\\r\\n      p5 *= qt[row + 5];\\r\\n      p6 *= qt[row + 6];\\r\\n      p7 *= qt[row + 7];\\r\\n      v0 = dctSqrt2 * p0 + 128 >> 8;\\r\\n      v1 = dctSqrt2 * p4 + 128 >> 8;\\r\\n      v2 = p2;\\r\\n      v3 = p6;\\r\\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\\r\\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\\r\\n      v5 = p3 << 4;\\r\\n      v6 = p5 << 4;\\r\\n      v0 = v0 + v1 + 1 >> 1;\\r\\n      v1 = v0 - v1;\\r\\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\\r\\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\\r\\n      v3 = t;\\r\\n      v4 = v4 + v6 + 1 >> 1;\\r\\n      v6 = v4 - v6;\\r\\n      v7 = v7 + v5 + 1 >> 1;\\r\\n      v5 = v7 - v5;\\r\\n      v0 = v0 + v3 + 1 >> 1;\\r\\n      v3 = v0 - v3;\\r\\n      v1 = v1 + v2 + 1 >> 1;\\r\\n      v2 = v1 - v2;\\r\\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\r\\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\r\\n      v7 = t;\\r\\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\r\\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\r\\n      v6 = t;\\r\\n      p[row] = v0 + v7;\\r\\n      p[row + 7] = v0 - v7;\\r\\n      p[row + 1] = v1 + v6;\\r\\n      p[row + 6] = v1 - v6;\\r\\n      p[row + 2] = v2 + v5;\\r\\n      p[row + 5] = v2 - v5;\\r\\n      p[row + 3] = v3 + v4;\\r\\n      p[row + 4] = v3 - v4;\\r\\n    }\\r\\n    for (var col = 0; col < 8; ++col) {\\r\\n      p0 = p[col];\\r\\n      p1 = p[col + 8];\\r\\n      p2 = p[col + 16];\\r\\n      p3 = p[col + 24];\\r\\n      p4 = p[col + 32];\\r\\n      p5 = p[col + 40];\\r\\n      p6 = p[col + 48];\\r\\n      p7 = p[col + 56];\\r\\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\\r\\n        t = dctSqrt2 * p0 + 8192 >> 14;\\r\\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\\r\\n        blockData[blockBufferOffset + col] = t;\\r\\n        blockData[blockBufferOffset + col + 8] = t;\\r\\n        blockData[blockBufferOffset + col + 16] = t;\\r\\n        blockData[blockBufferOffset + col + 24] = t;\\r\\n        blockData[blockBufferOffset + col + 32] = t;\\r\\n        blockData[blockBufferOffset + col + 40] = t;\\r\\n        blockData[blockBufferOffset + col + 48] = t;\\r\\n        blockData[blockBufferOffset + col + 56] = t;\\r\\n        continue;\\r\\n      }\\r\\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\\r\\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\\r\\n      v2 = p2;\\r\\n      v3 = p6;\\r\\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\\r\\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\\r\\n      v5 = p3;\\r\\n      v6 = p5;\\r\\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\\r\\n      v1 = v0 - v1;\\r\\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\\r\\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\\r\\n      v3 = t;\\r\\n      v4 = v4 + v6 + 1 >> 1;\\r\\n      v6 = v4 - v6;\\r\\n      v7 = v7 + v5 + 1 >> 1;\\r\\n      v5 = v7 - v5;\\r\\n      v0 = v0 + v3 + 1 >> 1;\\r\\n      v3 = v0 - v3;\\r\\n      v1 = v1 + v2 + 1 >> 1;\\r\\n      v2 = v1 - v2;\\r\\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\\r\\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\\r\\n      v7 = t;\\r\\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\\r\\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\\r\\n      v6 = t;\\r\\n      p0 = v0 + v7;\\r\\n      p7 = v0 - v7;\\r\\n      p1 = v1 + v6;\\r\\n      p6 = v1 - v6;\\r\\n      p2 = v2 + v5;\\r\\n      p5 = v2 - v5;\\r\\n      p3 = v3 + v4;\\r\\n      p4 = v3 - v4;\\r\\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\\r\\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\\r\\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\\r\\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\\r\\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\\r\\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\\r\\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\\r\\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\\r\\n      blockData[blockBufferOffset + col] = p0;\\r\\n      blockData[blockBufferOffset + col + 8] = p1;\\r\\n      blockData[blockBufferOffset + col + 16] = p2;\\r\\n      blockData[blockBufferOffset + col + 24] = p3;\\r\\n      blockData[blockBufferOffset + col + 32] = p4;\\r\\n      blockData[blockBufferOffset + col + 40] = p5;\\r\\n      blockData[blockBufferOffset + col + 48] = p6;\\r\\n      blockData[blockBufferOffset + col + 56] = p7;\\r\\n    }\\r\\n  }\\r\\n  function buildComponentData(frame, component) {\\r\\n    var blocksPerLine = component.blocksPerLine;\\r\\n    var blocksPerColumn = component.blocksPerColumn;\\r\\n    var computationBuffer = new Int16Array(64);\\r\\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\\r\\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\\r\\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\\r\\n        quantizeAndInverse(component, offset, computationBuffer);\\r\\n      }\\r\\n    }\\r\\n    return component.blockData;\\r\\n  }\\r\\n  function findNextFileMarker(data, currentPos, startPos) {\\r\\n    function peekUint16(pos) {\\r\\n      return data[pos] << 8 | data[pos + 1];\\r\\n    }\\r\\n    var maxPos = data.length - 1;\\r\\n    var newPos = startPos < currentPos ? startPos : currentPos;\\r\\n    if (currentPos >= maxPos) {\\r\\n      return null;\\r\\n    }\\r\\n    var currentMarker = peekUint16(currentPos);\\r\\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\\r\\n      return {\\r\\n        invalid: null,\\r\\n        marker: currentMarker,\\r\\n        offset: currentPos\\r\\n      };\\r\\n    }\\r\\n    var newMarker = peekUint16(newPos);\\r\\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\\r\\n      if (++newPos >= maxPos) {\\r\\n        return null;\\r\\n      }\\r\\n      newMarker = peekUint16(newPos);\\r\\n    }\\r\\n    return {\\r\\n      invalid: currentMarker.toString(16),\\r\\n      marker: newMarker,\\r\\n      offset: newPos\\r\\n    };\\r\\n  }\\r\\n  JpegImage.prototype = {\\r\\n    parse: function parse(data) {\\r\\n      function readUint16() {\\r\\n        var value = data[offset] << 8 | data[offset + 1];\\r\\n        offset += 2;\\r\\n        return value;\\r\\n      }\\r\\n      function readDataBlock() {\\r\\n        var length = readUint16();\\r\\n        var endOffset = offset + length - 2;\\r\\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\\r\\n        if (fileMarker && fileMarker.invalid) {\\r\\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\\r\\n          endOffset = fileMarker.offset;\\r\\n        }\\r\\n        var array = data.subarray(offset, endOffset);\\r\\n        offset += array.length;\\r\\n        return array;\\r\\n      }\\r\\n      function prepareComponents(frame) {\\r\\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\\r\\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\\r\\n        for (var i = 0; i < frame.components.length; i++) {\\r\\n          component = frame.components[i];\\r\\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\\r\\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\\r\\n          var blocksPerLineForMcu = mcusPerLine * component.h;\\r\\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\\r\\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\\r\\n          component.blockData = new Int16Array(blocksBufferSize);\\r\\n          component.blocksPerLine = blocksPerLine;\\r\\n          component.blocksPerColumn = blocksPerColumn;\\r\\n        }\\r\\n        frame.mcusPerLine = mcusPerLine;\\r\\n        frame.mcusPerColumn = mcusPerColumn;\\r\\n      }\\r\\n      var offset = 0;\\r\\n      var jfif = null;\\r\\n      var adobe = null;\\r\\n      var frame, resetInterval;\\r\\n      var quantizationTables = [];\\r\\n      var huffmanTablesAC = [],\\r\\n          huffmanTablesDC = [];\\r\\n      var fileMarker = readUint16();\\r\\n      if (fileMarker !== 0xFFD8) {\\r\\n        throw new JpegError('SOI not found');\\r\\n      }\\r\\n      fileMarker = readUint16();\\r\\n      while (fileMarker !== 0xFFD9) {\\r\\n        var i, j, l;\\r\\n        switch (fileMarker) {\\r\\n          case 0xFFE0:\\r\\n          case 0xFFE1:\\r\\n          case 0xFFE2:\\r\\n          case 0xFFE3:\\r\\n          case 0xFFE4:\\r\\n          case 0xFFE5:\\r\\n          case 0xFFE6:\\r\\n          case 0xFFE7:\\r\\n          case 0xFFE8:\\r\\n          case 0xFFE9:\\r\\n          case 0xFFEA:\\r\\n          case 0xFFEB:\\r\\n          case 0xFFEC:\\r\\n  \";a.a+=\"        case 0xFFED:\\r\\n          case 0xFFEE:\\r\\n          case 0xFFEF:\\r\\n          case 0xFFFE:\\r\\n            var appData = readDataBlock();\\r\\n            if (fileMarker === 0xFFE0) {\\r\\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\\r\\n                jfif = {\\r\\n                  version: {\\r\\n                    major: appData[5],\\r\\n                    minor: appData[6]\\r\\n                  },\\r\\n                  densityUnits: appData[7],\\r\\n                  xDensity: appData[8] << 8 | appData[9],\\r\\n                  yDensity: appData[10] << 8 | appData[11],\\r\\n                  thumbWidth: appData[12],\\r\\n                  thumbHeight: appData[13],\\r\\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\\r\\n                };\\r\\n              }\\r\\n            }\\r\\n            if (fileMarker === 0xFFEE) {\\r\\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\\r\\n                adobe = {\\r\\n                  version: appData[5] << 8 | appData[6],\\r\\n                  flags0: appData[7] << 8 | appData[8],\\r\\n                  flags1: appData[9] << 8 | appData[10],\\r\\n                  transformCode: appData[11]\\r\\n                };\\r\\n              }\\r\\n            }\\r\\n            break;\\r\\n          case 0xFFDB:\\r\\n            var quantizationTablesLength = readUint16();\\r\\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\\r\\n            var z;\\r\\n            while (offset < quantizationTablesEnd) {\\r\\n              var quantizationTableSpec = data[offset++];\\r\\n              var tableData = new Uint16Array(64);\\r\\n              if (quantizationTableSpec >> 4 === 0) {\\r\\n                for (j = 0; j < 64; j++) {\\r\\n                  z = dctZigZag[j];\\r\\n                  tableData[z] = data[offset++];\\r\\n                }\\r\\n              } else if (quantizationTableSpec >> 4 === 1) {\\r\\n                for (j = 0; j < 64; j++) {\\r\\n                  z = dctZigZag[j];\\r\\n                  tableData[z] = readUint16();\\r\\n                }\\r\\n              } else {\\r\\n                throw new JpegError('DQT - invalid table spec');\\r\\n              }\\r\\n              quantizationTables[quantizationTableSpec & 15] = tableData;\\r\\n            }\\r\\n            break;\\r\\n          case 0xFFC0:\\r\\n          case 0xFFC1:\\r\\n          case 0xFFC2:\\r\\n            if (frame) {\\r\\n              throw new JpegError('Only single frame JPEGs supported');\\r\\n            }\\r\\n            readUint16();\\r\\n            frame = {};\\r\\n            frame.extended = fileMarker === 0xFFC1;\\r\\n            frame.progressive = fileMarker === 0xFFC2;\\r\\n            frame.precision = data[offset++];\\r\\n            frame.scanLines = readUint16();\\r\\n            frame.samplesPerLine = readUint16();\\r\\n            frame.components = [];\\r\\n            frame.componentIds = {};\\r\\n            var componentsCount = data[offset++],\\r\\n                componentId;\\r\\n            var maxH = 0,\\r\\n                maxV = 0;\\r\\n            for (i = 0; i < componentsCount; i++) {\\r\\n              componentId = data[offset];\\r\\n              var h = data[offset + 1] >> 4;\\r\\n              var v = data[offset + 1] & 15;\\r\\n              if (maxH < h) {\\r\\n                maxH = h;\\r\\n              }\\r\\n              if (maxV < v) {\\r\\n                maxV = v;\\r\\n              }\\r\\n              var qId = data[offset + 2];\\r\\n              l = frame.components.push({\\r\\n                h: h,\\r\\n                v: v,\\r\\n                quantizationId: qId,\\r\\n                quantizationTable: null\\r\\n              });\\r\\n              frame.componentIds[componentId] = l - 1;\\r\\n              offset += 3;\\r\\n            }\\r\\n            frame.maxH = maxH;\\r\\n            frame.maxV = maxV;\\r\\n            prepareComponents(frame);\\r\\n            break;\\r\\n          case 0xFFC4:\\r\\n            var huffmanLength = readUint16();\\r\\n            for (i = 2; i < huffmanLength;) {\\r\\n              var huffmanTableSpec = data[offset++];\\r\\n              var codeLengths = new Uint8Array(16);\\r\\n              var codeLengthSum = 0;\\r\\n              for (j = 0; j < 16; j++, offset++) {\\r\\n                codeLengthSum += codeLengths[j] = data[offset];\\r\\n              }\\r\\n              var huffmanValues = new Uint8Array(codeLengthSum);\\r\\n              for (j = 0; j < codeLengthSum; j++, offset++) {\\r\\n                huffmanValues[j] = data[offset];\\r\\n              }\\r\\n              i += 17 + codeLengthSum;\\r\\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\\r\\n            }\\r\\n            break;\\r\\n          case 0xFFDD:\\r\\n            readUint16();\\r\\n            resetInterval = readUint16();\\r\\n            break;\\r\\n          case 0xFFDA:\\r\\n            readUint16();\\r\\n            var selectorsCount = data[offset++];\\r\\n            var components = [],\\r\\n                component;\\r\\n            for (i = 0; i < selectorsCount; i++) {\\r\\n              var componentIndex = frame.componentIds[data[offset++]];\\r\\n              component = frame.components[componentIndex];\\r\\n              var tableSpec = data[offset++];\\r\\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\\r\\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\\r\\n              components.push(component);\\r\\n            }\\r\\n            var spectralStart = data[offset++];\\r\\n            var spectralEnd = data[offset++];\\r\\n            var successiveApproximation = data[offset++];\\r\\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\\r\\n            offset += processed;\\r\\n            break;\\r\\n          case 0xFFFF:\\r\\n            if (data[offset] !== 0xFF) {\\r\\n              offset--;\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\\r\\n              offset -= 3;\\r\\n              break;\\r\\n            }\\r\\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\\r\\n        }\\r\\n        fileMarker = readUint16();\\r\\n      }\\r\\n      this.width = frame.samplesPerLine;\\r\\n      this.height = frame.scanLines;\\r\\n      this.jfif = jfif;\\r\\n      this.adobe = adobe;\\r\\n      this.components = [];\\r\\n      for (i = 0; i < frame.components.length; i++) {\\r\\n        component = frame.components[i];\\r\\n        var quantizationTable = quantizationTables[component.quantizationId];\\r\\n        if (quantizationTable) {\\r\\n          component.quantizationTable = quantizationTable;\\r\\n        }\\r\\n        this.components.push({\\r\\n          output: buildComponentData(frame, component),\\r\\n          scaleX: component.h / frame.maxH,\\r\\n          scaleY: component.v / frame.maxV,\\r\\n          blocksPerLine: component.blocksPerLine,\\r\\n          blocksPerColumn: component.blocksPerColumn\\r\\n        });\\r\\n      }\\r\\n      this.numComponents = this.components.length;\\r\\n    },\\r\\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\\r\\n      var scaleX = this.width / width,\\r\\n          scaleY = this.height / height;\\r\\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\\r\\n      var x, y, i, j, k;\\r\\n      var index;\\r\\n      var offset = 0;\\r\\n      var output;\\r\\n      var numComponents = this.components.length;\\r\\n      var dataLength = width * height * numComponents;\\r\\n      var data = new Uint8ClampedArray(dataLength);\\r\\n      var xScaleBlockOffset = new Uint32Array(width);\\r\\n      var mask3LSB = 0xfffffff8;\\r\\n      for (i = 0; i < numComponents; i++) {\\r\\n        component = this.components[i];\\r\\n        componentScaleX = component.scaleX * scaleX;\\r\\n        componentScaleY = component.scaleY * scaleY;\\r\\n        offset = i;\\r\\n        output = component.output;\\r\\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\\r\\n        for (x = 0; x < width; x++) {\\r\\n          j = 0 | x * componentScaleX;\\r\\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\\r\\n        }\\r\\n        for (y = 0; y < height; y++) {\\r\\n          j = 0 | y * componentScaleY;\\r\\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\\r\\n          for (x = 0; x < width; x++) {\\r\\n            data[offset] = output[index + xScaleBlockOffset[x]];\\r\\n            offset += numComponents;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      var transform = this.decodeTransform;\\r\\n      if (transform) {\\r\\n        for (i = 0; i < dataLength;) {\\r\\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\\r\\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return data;\\r\\n    },\\r\\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\\r\\n      if (this.adobe) {\\r\\n        return !!this.adobe.transformCode;\\r\\n      }\\r\\n      if (this.numComponents === 3) {\\r\\n        if (this.colorTransform === 0) {\\r\\n          return false;\\r\\n        }\\r\\n        return true;\\r\\n      }\\r\\n      if (this.colorTransform === 1) {\\r\\n        return true;\\r\\n      }\\r\\n      return false;\\r\\n    },\\r\\n\\r\\n    _convertYccToRgb: function convertYccToRgb(data) {\\r\\n      var Y, Cb, Cr;\\r\\n      for (var i = 0, length = data.length; i < length; i += 3) {\\r\\n        Y = data[i];\\r\\n        Cb = data[i + 1];\\r\\n        Cr = data[i + 2];\\r\\n        data[i] = Y - 179.456 + 1.402 * Cr;\\r\\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\\r\\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\\r\\n      }\\r\\n      return data;\\r\\n    },\\r\\n    _convertYcckToRgb: function convertYcckToRgb(data) {\\r\\n      var Y, Cb, Cr, k;\\r\\n      var offset = 0;\\r\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\r\\n        Y = data[i];\\r\\n        Cb = data[i + 1];\\r\\n        Cr = data[i + 2];\\r\\n        k = data[i + 3];\\r\\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\\r\\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\\r\\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\\r\\n      }\\r\\n      return data;\\r\\n    },\\r\\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\\r\\n      var Y, Cb, Cr;\\r\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\r\\n        Y = data[i];\\r\\n        Cb = data[i + 1];\\r\\n        Cr = data[i + 2];\\r\\n        data[i] = 434.456 - Y - 1.402 * Cr;\\r\\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\\r\\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\\r\\n      }\\r\\n      return data;\\r\\n    },\\r\\n    _convertCmykToRgb: function convertCmykToRgb(data) {\\r\\n      var c, m, y, k;\\r\\n      var offset = 0;\\r\\n      var scale = 1 / 255;\\r\\n      for (var i = 0, length = data.length; i < length; i += 4) {\\r\\n        c = data[i] * scale;\\r\\n        m = data[i + 1] * scale;\\r\\n        y = data[i + 2] * scale;\\r\\n        k = data[i + 3] * scale;\\r\\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\\r\\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\\r\\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\\r\\n      }\\r\\n      return data;\\r\\n    },\\r\\n    getData: function getData(width, height, forceRGBoutput) {\\r\\n      if (this.numComponents > 4) {\\r\\n        throw new JpegError('Unsupported color mode');\\r\\n      }\\r\\n      var data = this._getLinearizedBlockData(width, height);\\r\\n      if (this.numComponents === 1 && forceRGBoutput) {\\r\\n        var dataLength = data.length;\\r\\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\\r\\n        var offset = 0;\\r\\n        for (var i = 0; i < dataLength; i++) {\\r\\n          var grayColor = data[i];\\r\\n          rgbData[offset++] = grayColor;\\r\\n          rgbData[offset++] = grayColor;\\r\\n          rgbData[offset++] = grayColor;\\r\\n        }\\r\\n        return rgbData;\\r\\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\\r\\n        return this._convertYccToRgb(data);\\r\\n      } else if (this.numComponents === 4) {\\r\\n        if (this._isColorConversionNeeded()) {\\r\\n          if (forceRGBoutput) {\\r\\n            return this._convertYcckToRgb(data);\\r\\n          }\\r\\n          return this._convertYcckToCmyk(data);\\r\\n        } else if (forceRGBoutput) {\\r\\n          return this._convertCmykToRgb(data);\\r\\n        }\\r\\n      }\\r\\n      return data;\\r\\n    }\\r\\n  };\\r\\n  return JpegImage;\\r\\n}();\\r\\nexports.JpegImage = JpegImage;\\r\\n\\r\\n/***/ }),\\r\\n/* 144 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.CCITTFaxStream = undefined;\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _ccitt = __w_pdfjs_require__(145);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\\r\\n  function CCITTFaxStream(str, maybeLength, params) {\\r\\n    this.str = str;\\r\\n    this.dict = str.dict;\\r\\n    if (!(0, _primitives.isDict)(params)) {\\r\\n      params = _primitives.Dict.empty;\\r\\n    }\\r\\n    var source = {\\r\\n      next: function next() {\\r\\n        return str.getByte();\\r\\n      }\\r\\n    };\\r\\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\\r\\n      K: params.get('K'),\\r\\n      EndOfLine: params.get('EndOfLine'),\\r\\n      EncodedByteAlign: params.get('EncodedByteAlign'),\\r\\n      Columns: params.get('Columns'),\\r\\n      Rows: params.get('Rows'),\\r\\n      EndOfBlock: params.get('EndOfBlock'),\\r\\n      BlackIs1: params.get('BlackIs1')\\r\\n    });\\r\\n    _stream.DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\\r\\n  CCITTFaxStream.prototype.readBlock = function () {\\r\\n    while (!this.eof) {\\r\\n      var c = this.ccittFaxDecoder.readNextChar();\\r\\n      if (c === -1) {\\r\\n        this.eof = true;\\r\\n        return;\\r\\n      }\\r\\n      this.ensureBuffer(this.bufferLength + 1);\\r\\n      this.buffer[this.bufferLength++] = c;\\r\\n    }\\r\\n  };\\r\\n  return CCITTFaxStream;\\r\\n}();\\r\\nexports.CCITTFaxStream = CCITTFaxStream;\\r\\n\\r\\n/***/ }),\\r\\n/* 145 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.CCITTFaxDecoder = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\\r\\n  var ccittEOL = -2;\\r\\n  var ccittEOF = -1;\\r\\n  var twoDimPass = 0;\\r\\n  var twoDimHoriz = 1;\\r\\n  var twoDimVert0 = 2;\\r\\n  var twoDimVertR1 = 3;\\r\\n  var twoDimVertL1 = 4;\\r\\n  var twoDimVertR2 = 5;\\r\\n  var twoDimVertL2 = 6;\\r\\n  var twoDimVertR3 = 7;\\r\\n  var twoDimVertL3 = 8;\\r\\n  var twoDimTable = [[-1, -1], [-1, \";a.a+=\"-1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\\r\\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\\r\\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\\r\\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\\r\\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\\r\\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\\r\\n  function CCITTFaxDecoder(source) {\\r\\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\r\\n\\r\\n    if (!source || typeof source.next !== 'function') {\\r\\n      throw new Error('CCITTFaxDecoder - invalid \\\"source\\\" parameter.');\\r\\n    }\\r\\n    this.source = source;\\r\\n    this.eof = false;\\r\\n    this.encoding = options['K'] || 0;\\r\\n    this.eoline = options['EndOfLine'] || false;\\r\\n    this.byteAlign = options['EncodedByteAlign'] || false;\\r\\n    this.columns = options['Columns'] || 1728;\\r\\n    this.rows = options['Rows'] || 0;\\r\\n    var eoblock = options['EndOfBlock'];\\r\\n    if (eoblock === null || eoblock === undefined) {\\r\\n      eoblock = true;\\r\\n    }\\r\\n    this.eoblock = eoblock;\\r\\n    this.black = options['BlackIs1'] || false;\\r\\n    this.codingLine = new Uint32Array(this.columns + 1);\\r\\n    this.refLine = new Uint32Array(this.columns + 2);\\r\\n    this.codingLine[0] = this.columns;\\r\\n    this.codingPos = 0;\\r\\n    this.row = 0;\\r\\n    this.nextLine2D = this.encoding < 0;\\r\\n    this.inputBits = 0;\\r\\n    this.inputBuf = 0;\\r\\n    this.outputBits = 0;\\r\\n    this.rowsDone = false;\\r\\n    var code1 = void 0;\\r\\n    while ((code1 = this._lookBits(12)) === 0) {\\r\\n      this._eatBits(1);\\r\\n    }\\r\\n    if (code1 === 1) {\\r\\n      this._eatBits(12);\\r\\n    }\\r\\n    if (this.encoding > 0) {\\r\\n      this.nextLine2D = !this._lookBits(1);\\r\\n      this._eatBits(1);\\r\\n    }\\r\\n  }\\r\\n  CCITTFaxDecoder.prototype = {\\r\\n    readNextChar: function readNextChar() {\\r\\n      if (this.eof) {\\r\\n        return -1;\\r\\n      }\\r\\n      var refLine = this.refLine;\\r\\n      var codingLine = this.codingLine;\\r\\n      var columns = this.columns;\\r\\n      var refPos = void 0,\\r\\n          blackPixels = void 0,\\r\\n          bits = void 0,\\r\\n          i = void 0;\\r\\n      if (this.outputBits === 0) {\\r\\n        if (this.rowsDone) {\\r\\n          this.eof = true;\\r\\n        }\\r\\n        if (this.eof) {\\r\\n          return -1;\\r\\n        }\\r\\n        this.err = false;\\r\\n        var code1 = void 0,\\r\\n            code2 = void 0,\\r\\n            code3 = void 0;\\r\\n        if (this.nextLine2D) {\\r\\n          for (i = 0; codingLine[i] < columns; ++i) {\\r\\n            refLine[i] = codingLine[i];\\r\\n          }\\r\\n          refLine[i++] = columns;\\r\\n          refLine[i] = columns;\\r\\n          codingLine[0] = 0;\\r\\n          this.codingPos = 0;\\r\\n          refPos = 0;\\r\\n          blackPixels = 0;\\r\\n          while (codingLine[this.codingPos] < columns) {\\r\\n            code1 = this._getTwoDimCode();\\r\\n            switch (code1) {\\r\\n              case twoDimPass:\\r\\n                this._addPixels(refLine[refPos + 1], blackPixels);\\r\\n                if (refLine[refPos + 1] < columns) {\\r\\n                  refPos += 2;\\r\\n                }\\r\\n                break;\\r\\n              case twoDimHoriz:\\r\\n                code1 = code2 = 0;\\r\\n                if (blackPixels) {\\r\\n                  do {\\r\\n                    code1 += code3 = this._getBlackCode();\\r\\n                  } while (code3 >= 64);\\r\\n                  do {\\r\\n                    code2 += code3 = this._getWhiteCode();\\r\\n                  } while (code3 >= 64);\\r\\n                } else {\\r\\n                  do {\\r\\n                    code1 += code3 = this._getWhiteCode();\\r\\n                  } while (code3 >= 64);\\r\\n                  do {\\r\\n                    code2 += code3 = this._getBlackCode();\\r\\n                  } while (code3 >= 64);\\r\\n                }\\r\\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\\r\\n                }\\r\\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                  refPos += 2;\\r\\n                }\\r\\n                break;\\r\\n              case twoDimVertR3:\\r\\n                this._addPixels(refLine[refPos] + 3, blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  ++refPos;\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n                }\\r\\n                break;\\r\\n              case twoDimVertR2:\\r\\n                this._addPixels(refLine[refPos] + 2, blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  ++refPos;\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n                }\\r\\n                break;\\r\\n              case twoDimVertR1:\\r\\n                this._addPixels(refLine[refPos] + 1, blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  ++refPos;\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n                }\\r\\n                break;\\r\\n              case twoDimVert0:\\r\\n                this._addPixels(refLine[refPos], blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  ++refPos;\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n          \";a.a+=\"      }\\r\\n                break;\\r\\n              case twoDimVertL3:\\r\\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  if (refPos > 0) {\\r\\n                    --refPos;\\r\\n                  } else {\\r\\n                    ++refPos;\\r\\n                  }\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n                }\\r\\n                break;\\r\\n              case twoDimVertL2:\\r\\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  if (refPos > 0) {\\r\\n                    --refPos;\\r\\n                  } else {\\r\\n                    ++refPos;\\r\\n                  }\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n                }\\r\\n                break;\\r\\n              case twoDimVertL1:\\r\\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\\r\\n                blackPixels ^= 1;\\r\\n                if (codingLine[this.codingPos] < columns) {\\r\\n                  if (refPos > 0) {\\r\\n                    --refPos;\\r\\n                  } else {\\r\\n                    ++refPos;\\r\\n                  }\\r\\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\\r\\n                    refPos += 2;\\r\\n                  }\\r\\n                }\\r\\n                break;\\r\\n              case ccittEOF:\\r\\n                this._addPixels(columns, 0);\\r\\n                this.eof = true;\\r\\n                break;\\r\\n              default:\\r\\n                (0, _util.info)('bad 2d code');\\r\\n                this._addPixels(columns, 0);\\r\\n                this.err = true;\\r\\n            }\\r\\n          }\\r\\n        } else {\\r\\n          codingLine[0] = 0;\\r\\n          this.codingPos = 0;\\r\\n          blackPixels = 0;\\r\\n          while (codingLine[this.codingPos] < columns) {\\r\\n            code1 = 0;\\r\\n            if (blackPixels) {\\r\\n              do {\\r\\n                code1 += code3 = this._getBlackCode();\\r\\n              } while (code3 >= 64);\\r\\n            } else {\\r\\n              do {\\r\\n                code1 += code3 = this._getWhiteCode();\\r\\n              } while (code3 >= 64);\\r\\n            }\\r\\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\\r\\n            blackPixels ^= 1;\\r\\n          }\\r\\n        }\\r\\n        var gotEOL = false;\\r\\n        if (this.byteAlign) {\\r\\n          this.inputBits &= ~7;\\r\\n        }\\r\\n        if (!this.eoblock && this.row === this.rows - 1) {\\r\\n          this.rowsDone = true;\\r\\n        } else {\\r\\n          code1 = this._lookBits(12);\\r\\n          if (this.eoline) {\\r\\n            while (code1 !== ccittEOF && code1 !== 1) {\\r\\n              this._eatBits(1);\\r\\n              code1 = this._lookBits(12);\\r\\n            }\\r\\n          } else {\\r\\n            while (code1 === 0) {\\r\\n              this._eatBits(1);\\r\\n              code1 = this._lookBits(12);\\r\\n            }\\r\\n          }\\r\\n          if (code1 === 1) {\\r\\n            this._eatBits(12);\\r\\n            gotEOL = true;\\r\\n          } else if (code1 === ccittEOF) {\\r\\n            this.eof = true;\\r\\n          }\\r\\n        }\\r\\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\\r\\n          this.nextLine2D = !this._lookBits(1);\\r\\n          this._eatBits(1);\\r\\n        }\\r\\n        if (this.eoblock && gotEOL && this.byteAlign) {\\r\\n          code1 = this._lookBits(12);\\r\\n          if (code1 === 1) {\\r\\n            this._eatBits(12);\\r\\n            if (this.encoding > 0) {\\r\\n              this._lookBits(1);\\r\\n              this._eatBits(1);\\r\\n            }\\r\\n            if (this.encoding >= 0) {\\r\\n              for (i = 0; i < 4; ++i) {\\r\\n                code1 = this._lookBits(12);\\r\\n                if (code1 !== 1) {\\r\\n                  (0, _util.info)('bad rtc code: ' + code1);\\r\\n                }\\r\\n                this._eatBits(12);\\r\\n                if (this.encoding > 0) {\\r\\n                  this._lookBits(1);\\r\\n                  this._eatBits(1);\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n            this.eof = true;\\r\\n          }\\r\\n        } else if (this.err && this.eoline) {\\r\\n          while (true) {\\r\\n            code1 = this._lookBits(13);\\r\\n            if (code1 === ccittEOF) {\\r\\n              this.eof = true;\\r\\n              return -1;\\r\\n            }\\r\\n            if (code1 >> 1 === 1) {\\r\\n              break;\\r\\n            }\\r\\n            this._eatBits(1);\\r\\n          }\\r\\n          this._eatBits(12);\\r\\n          if (this.encoding > 0) {\\r\\n            this._eatBits(1);\\r\\n            this.nextLine2D = !(code1 & 1);\\r\\n          }\\r\\n        }\\r\\n        if (codingLine[0] > 0) {\\r\\n          this.outputBits = codingLine[this.codingPos = 0];\\r\\n        } else {\\r\\n          this.outputBits = codingLine[this.codingPos = 1];\\r\\n        }\\r\\n        this.row++;\\r\\n      }\\r\\n      var c = void 0;\\r\\n      if (this.outputBits >= 8) {\\r\\n        c = this.codingPos & 1 ? 0 : 0xFF;\\r\\n        this.outputBits -= 8;\\r\\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\\r\\n          this.codingPos++;\\r\\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\r\\n        }\\r\\n      } else {\\r\\n        bits = 8;\\r\\n        c = 0;\\r\\n        do {\\r\\n          if (this.outputBits > bits) {\\r\\n            c <<= bits;\\r\\n            if (!(this.codingPos & 1)) {\\r\\n              c |= 0xFF >> 8 - bits;\\r\\n            }\\r\\n            this.outputBits -= bits;\\r\\n            bits = 0;\\r\\n          } else {\\r\\n            c <<= this.outputBits;\\r\\n            if (!(this.codingPos & 1)) {\\r\\n              c |= 0xFF >> 8 - this.outputBits;\\r\\n            }\\r\\n            bits -= this.outputBits;\\r\\n            this.outputBits = 0;\\r\\n            if (codingLine[this.codingPos] < columns) {\\r\\n              this.codingPos++;\\r\\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\\r\\n            } else if (bits > 0) {\\r\\n              c <<= bits;\\r\\n              bits = 0;\\r\\n            }\\r\\n          }\\r\\n        } while (bits);\\r\\n      }\\r\\n      if (this.black) {\\r\\n        c ^= 0xFF;\\r\\n      }\\r\\n      return c;\\r\\n    },\\r\\n    _addPixels: function _addPixels(a1, blackPixels) {\\r\\n      var codingLine = this.codingLine;\\r\\n      var codingPos = this.codingPos;\\r\\n      if (a1 > codingLine[codingPos]) {\\r\\n        if (a1 > this.columns) {\\r\\n          (0, _util.info)('row is wrong length');\\r\\n          this.err = true;\\r\\n          a1 = this.columns;\\r\\n        }\\r\\n        if (codingPos & 1 ^ blackPixels) {\\r\\n          ++codingPos;\\r\\n        }\\r\\n        codingLine[codingPos] = a1;\\r\\n      }\\r\\n      this.codingPos = codingPos;\\r\\n    },\\r\\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\\r\\n      var codingLine = this.codingLine;\\r\\n      var codingPos = this.codingPos;\\r\\n      if (a1 > codingLine[codingPos]) {\\r\\n        if (a1 > this.columns) {\\r\\n          (0, _util.info)('row is wrong length');\\r\\n          this.err = true;\\r\\n          a1 = this.columns;\\r\\n        }\\r\\n        if (codingPos & 1 ^ blackPixels) {\\r\\n          ++codingPos;\\r\\n        }\\r\\n        codingLine[codingPos] = a1;\\r\\n      } else if (a1 < codingLine[codingPos]) {\\r\\n        if (a1 < 0) {\\r\\n          (0, _util.info)('invalid code');\\r\\n          this.err = true;\\r\\n          a1 = 0;\\r\\n        }\\r\\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\\r\\n          --codingPos;\\r\\n        }\\r\\n        codingLine[codingPos] = a1;\\r\\n      }\\r\\n      this.codingPos = codingPos;\\r\\n    },\\r\\n    _findTableCode: function _findTableCode(start, end, table, limit) {\\r\\n      var limitValue = limit || 0;\\r\\n      for (var i = start; i <= end; ++i) {\\r\\n        var code = this._lookBits(i);\\r\\n        if (code === ccittEOF) {\\r\\n          return [true, 1, false];\\r\\n        }\\r\\n        if (i < end) {\\r\\n          code <<= end - i;\\r\\n        }\\r\\n        if (!limitValue || code >= limitValue) {\\r\\n          var p = table[code - limitValue];\\r\\n          if (p[0] === i) {\\r\\n            this._eatBits(i);\\r\\n            return [true, p[1], true];\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return [false, 0, false];\\r\\n    },\\r\\n    _getTwoDimCode: function _getTwoDimCode() {\\r\\n      var code = 0;\\r\\n      var p = void 0;\\r\\n      if (this.eoblock) {\\r\\n        code = this._lookBits(7);\\r\\n        p = twoDimTable[code];\\r\\n        if (p && p[0] > 0) {\\r\\n          this._eatBits(p[0]);\\r\\n          return p[1];\\r\\n        }\\r\\n      } else {\\r\\n        var result = this._findTableCode(1, 7, twoDimTable);\\r\\n        if (result[0] && result[2]) {\\r\\n          return result[1];\\r\\n        }\\r\\n      }\\r\\n      (0, _util.info)('Bad two dim code');\\r\\n      return ccittEOF;\\r\\n    },\\r\\n    _getWhiteCode: function _getWhiteCode() {\\r\\n      var code = 0;\\r\\n      var p = void 0;\\r\\n      if (this.eoblock) {\\r\\n        code = this._lookBits(12);\\r\\n        if (code === ccittEOF) {\\r\\n          return 1;\\r\\n        }\\r\\n        if (code >> 5 === 0) {\\r\\n          p = whiteTable1[code];\\r\\n        } else {\\r\\n          p = whiteTable2[code >> 3];\\r\\n        }\\r\\n        if (p[0] > 0) {\\r\\n          this._eatBits(p[0]);\\r\\n          return p[1];\\r\\n        }\\r\\n      } else {\\r\\n        var result = this._findTableCode(1, 9, whiteTable2);\\r\\n        if (result[0]) {\\r\\n          return result[1];\\r\\n        }\\r\\n        result = this._findTableCode(11, 12, whiteTable1);\\r\\n        if (result[0]) {\\r\\n          return result[1];\\r\\n        }\\r\\n      }\\r\\n      (0, _util.info)('bad white code');\\r\\n      this._eatBits(1);\\r\\n      return 1;\\r\\n    },\\r\\n    _getBlackCode: function _getBlackCode() {\\r\\n      var code = void 0,\\r\\n          p = void 0;\\r\\n      if (this.eoblock) {\\r\\n        code = this._lookBits(13);\\r\\n        if (code === ccittEOF) {\\r\\n          return 1;\\r\\n        }\\r\\n        if (code >> 7 === 0) {\\r\\n          p = blackTable1[code];\\r\\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\\r\\n          p = blackTable2[(code >> 1) - 64];\\r\\n        } else {\\r\\n          p = blackTable3[code >> 7];\\r\\n        }\\r\\n        if (p[0] > 0) {\\r\\n          this._eatBits(p[0]);\\r\\n          return p[1];\\r\\n        }\\r\\n      } else {\\r\\n        var result = this._findTableCode(2, 6, blackTable3);\\r\\n        if (result[0]) {\\r\\n          return result[1];\\r\\n        }\\r\\n        result = this._findTableCode(7, 12, blackTable2, 64);\\r\\n        if (result[0]) {\\r\\n          return result[1];\\r\\n        }\\r\\n        result = this._findTableCode(10, 13, blackTable1);\\r\\n        if (result[0]) {\\r\\n          return result[1];\\r\\n        }\\r\\n      }\\r\\n      (0, _util.info)('bad black code');\\r\\n      this._eatBits(1);\\r\\n      return 1;\\r\\n    },\\r\\n    _lookBits: function _lookBits(n) {\\r\\n      var c = void 0;\\r\\n      while (this.inputBits < n) {\\r\\n        if ((c = this.source.next()) === -1) {\\r\\n          if (this.inputBits === 0) {\\r\\n            return ccittEOF;\\r\\n          }\\r\\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\\r\\n        }\\r\\n        this.inputBuf = this.inputBuf << 8 | c;\\r\\n        this.inputBits += 8;\\r\\n      }\\r\\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\\r\\n    },\\r\\n    _eatBits: function _eatBits(n) {\\r\\n      if ((this.inputBits -= n) < 0) {\\r\\n        this.inputBits = 0;\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return CCITTFaxDecoder;\\r\\n}();\\r\\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\\r\\n\\r\\n/***/ }),\\r\\n/* 146 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.Jbig2Stream = undefined;\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar _jbig = __w_pdfjs_require__(147);\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar Jbig2Stream = function Jbig2StreamClosure() {\\r\\n  function Jbig2Stream(stream, maybeLength, dict, params) {\\r\\n    this.stream = stream;\\r\\n    this.maybeLength = maybeLength;\\r\\n    this.dict = dict;\\r\\n    this.params = params;\\r\\n    _stream.DecodeStream.call(this, maybeLength);\\r\\n  }\\r\\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\\r\\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\\r\\n    get: function get() {\\r\\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\\r\\n    },\\r\\n\\r\\n    configurable: true\\r\\n  });\\r\\n  Jbig2Stream.prototype.ensureBuffer = function (req) {\\r\\n    if (this.bufferLength) {\\r\\n      return;\\r\\n    }\\r\\n    var jbig2Image = new _jbig.Jbig2Image();\\r\\n    var chunks = [];\\r\\n    if ((0, _primitives.isDict)(this.params)) {\\r\\n      var globalsStream = this.params.get('JBIG2Globals');\\r\\n      if ((0, _primitives.isStream)(globalsStream)) {\\r\\n        var globals = globalsStream.getBytes();\\r\\n        chunks.push({\\r\\n          data: globals,\\r\\n          start: 0,\\r\\n          end: globals.length\\r\\n        });\\r\\n      }\\r\\n    }\\r\\n    chunks.push({\\r\\n      data: this.bytes,\\r\\n      start: 0,\\r\\n      end: this.bytes.length\\r\\n    });\\r\\n    var data = jbig2Image.parseChunks(chunks);\\r\\n    var dataLength = data.length;\\r\\n    for (var i = 0; i < dataLength; i++) {\\r\\n      data[i] ^= 0xFF;\\r\\n    }\\r\\n    this.buffer = data;\\r\\n    this.bufferLength = dataLength;\\r\\n    this.eof = true;\\r\\n  };\\r\\n  return Jbig2Stream;\\r\\n}();\\r\\nexports.Jbig2Stream = Jbig2Stream;\\r\\n\\r\\n/***/ }),\\r\\n/* 147 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.Jbig2Image = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _arithmetic_decoder = __w_pdfjs_require__(81);\\r\\n\\r\\nvar Jbig2Error = function Jbig2ErrorClosure() {\\r\\n  function Jbig2Error(msg) {\\r\\n    this.message = 'JBIG2 error: ' + msg;\\r\\n  }\\r\\n  Jbig2Error.prototype = new Error();\\r\\n  Jbig2Error.prototype.name = 'Jbig2Error';\\r\\n  Jbig2Error.constructor = Jbig2Error;\\r\\n  return Jbig2Error;\\r\\n}();\\r\\nvar Jbig2Image = function Jbig2ImageClosure() {\\r\\n  function ContextCache() {}\\r\\n  ContextCache.prototype = {\\r\\n    getContexts: function getContexts(id) {\\r\\n      if (id in this) {\\r\\n        return this[id];\\r\\n      }\\r\\n      return this[id] = new Int8Array(1 << 16);\\r\\n    }\\r\\n  };\\r\\n  function DecodingContext(data, start, end) {\\r\\n    this.data = data;\\r\\n    this.start = start;\\r\\n    this.end = end;\\r\\n  }\\r\\n  DecodingContext.prototype = {\\r\\n    get decoder() {\\r\\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\\r\\n      return (0, _util.shadow)(this, 'decoder', decoder);\\r\\n    },\\r\\n    get contextCache() {\\r\\n      var cache = new ContextCache();\\r\\n      return (0, _util.shadow)(this, 'contextCache', cache);\\r\\n    }\\r\\n  };\\r\\n  function decodeInteger(contextCache, procedure, decoder) {\\r\\n    var contexts = contextCache.getContexts(procedure);\\r\\n    var prev = 1;\\r\\n    function readBits(length) {\\r\\n      var v = 0;\\r\\n      for (var i = 0; i < length; i++) {\\r\\n        var bit = decoder.readBit(contexts, prev);\\r\\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\\r\\n        v = v << 1 | bit;\\r\\n      }\\r\\n      return v >>> 0;\\r\\n    }\\r\\n    var sign = readBits(1);\\r\\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\\r\\n    return sign === 0 ? value : value > 0 ? -value : null;\\r\\n  }\\r\\n  function decodeIAID(contextCache, decoder, codeLength) {\\r\\n    var contexts = contextCache.getContexts('IAID');\\r\\n    var prev = 1;\\r\\n    for (var i = 0; i < codeLength; i++) {\\r\\n      var bit = decoder.readBit(contexts, prev);\\r\\n      prev = prev << 1 | bit;\\r\\n    }\\r\\n    if (codeLength < 31) {\\r\\n      return prev & (1 << codeLength) - 1;\\r\\n    }\\r\\n    return prev & 0x7FFFFFFF;\\r\\n  }\\r\\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, \";a.a+=\"null, null, null, null, null, 'Extension'];\\r\\n  var CodingTemplates = [[{\\r\\n    x: -1,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 2,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -4,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -3,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: 0\\r\\n  }], [{\\r\\n    x: -1,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 2,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 2,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -3,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: 0\\r\\n  }], [{\\r\\n    x: -1,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -2\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: 0\\r\\n  }], [{\\r\\n    x: -3,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 0,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: 1,\\r\\n    y: -1\\r\\n  }, {\\r\\n    x: -4,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -3,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -2,\\r\\n    y: 0\\r\\n  }, {\\r\\n    x: -1,\\r\\n    y: 0\\r\\n  }]];\\r\\n  var RefinementTemplates = [{\\r\\n    coding: [{\\r\\n      x: 0,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: -1,\\r\\n      y: 0\\r\\n    }],\\r\\n    reference: [{\\r\\n      x: 0,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: -1,\\r\\n      y: 0\\r\\n    }, {\\r\\n      x: 0,\\r\\n      y: 0\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: 0\\r\\n    }, {\\r\\n      x: -1,\\r\\n      y: 1\\r\\n    }, {\\r\\n      x: 0,\\r\\n      y: 1\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: 1\\r\\n    }]\\r\\n  }, {\\r\\n    coding: [{\\r\\n      x: -1,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: 0,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: -1,\\r\\n      y: 0\\r\\n    }],\\r\\n    reference: [{\\r\\n      x: 0,\\r\\n      y: -1\\r\\n    }, {\\r\\n      x: -1,\\r\\n      y: 0\\r\\n    }, {\\r\\n      x: 0,\\r\\n      y: 0\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: 0\\r\\n    }, {\\r\\n      x: 0,\\r\\n      y: 1\\r\\n    }, {\\r\\n      x: 1,\\r\\n      y: 1\\r\\n    }]\\r\\n  }];\\r\\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\\r\\n  var RefinementReusedContexts = [0x0020, 0x0008];\\r\\n  function decodeBitmapTemplate0(width, height, decodingContext) {\\r\\n    var decoder = decodingContext.decoder;\\r\\n    var contexts = decodingContext.contextCache.getContexts('GB');\\r\\n    var contextLabel,\\r\\n        i,\\r\\n        j,\\r\\n        pixel,\\r\\n        row,\\r\\n        row1,\\r\\n        row2,\\r\\n        bitmap = [];\\r\\n    var OLD_PIXEL_MASK = 0x7BF7;\\r\\n    for (i = 0; i < height; i++) {\\r\\n      row = bitmap[i] = new Uint8Array(width);\\r\\n      row1 = i < 1 ? row : bitmap[i - 1];\\r\\n      row2 = i < 2 ? row : bitmap[i - 2];\\r\\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\\r\\n      for (j = 0; j < width; j++) {\\r\\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\\r\\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\\r\\n      }\\r\\n    }\\r\\n    return bitmap;\\r\\n  }\\r\\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\\r\\n    if (mmr) {\\r\\n      throw new Jbig2Error('MMR encoding is not supported');\\r\\n    }\\r\\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\\r\\n      return decodeBitmapTemplate0(width, height, decodingContext);\\r\\n    }\\r\\n    var useskip = !!skip;\\r\\n    var template = CodingTemplates[templateIndex].concat(at);\\r\\n    template.sort(function (a, b) {\\r\\n      return a.y - b.y || a.x - b.x;\\r\\n    });\\r\\n    var templateLength = template.length;\\r\\n    var templateX = new Int8Array(templateLength);\\r\\n    var templateY = new Int8Array(templateLength);\\r\\n    var changingTemplateEntries = [];\\r\\n    var reuseMask = 0,\\r\\n        minX = 0,\\r\\n        maxX = 0,\\r\\n        minY = 0;\\r\\n    var c, k;\\r\\n    for (k = 0; k < templateLength; k++) {\\r\\n      templateX[k] = template[k].x;\\r\\n      templateY[k] = template[k].y;\\r\\n      minX = Math.min(minX, template[k].x);\\r\\n      maxX = Math.max(maxX, template[k].x);\\r\\n      minY = Math.min(minY, template[k].y);\\r\\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\\r\\n        reuseMask |= 1 << templateLength - 1 - k;\\r\\n      } else {\\r\\n        changingTemplateEntries.push(k);\\r\\n      }\\r\\n    }\\r\\n    var changingEntriesLength = changingTemplateEntries.length;\\r\\n    var changingTemplateX = new Int8Array(changingEntriesLength);\\r\\n    var changingTemplateY = new Int8Array(changingEntriesLength);\\r\\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\\r\\n    for (c = 0; c < changingEntriesLength; c++) {\\r\\n      k = changingTemplateEntries[c];\\r\\n      changingTemplateX[c] = template[k].x;\\r\\n      changingTemplateY[c] = template[k].y;\\r\\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\\r\\n    }\\r\\n    var sbb_left = -minX;\\r\\n    var sbb_top = -minY;\\r\\n    var sbb_right = width - maxX;\\r\\n    var pseudoPixelContext = ReusedContexts[templateIndex];\\r\\n    var row = new Uint8Array(width);\\r\\n    var bitmap = [];\\r\\n    var decoder = decodingContext.decoder;\\r\\n    var contexts = decodingContext.contextCache.getContexts('GB');\\r\\n    var ltp = 0,\\r\\n        j,\\r\\n        i0,\\r\\n        j0,\\r\\n        contextLabel = 0,\\r\\n        bit,\\r\\n        shift;\\r\\n    for (var i = 0; i < height; i++) {\\r\\n      if (prediction) {\\r\\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\\r\\n        ltp ^= sltp;\\r\\n        if (ltp) {\\r\\n          bitmap.push(row);\\r\\n          continue;\\r\\n        }\\r\\n      }\\r\\n      row = new Uint8Array(row);\\r\\n      bitmap.push(row);\\r\\n      for (j = 0; j < width; j++) {\\r\\n        if (useskip && skip[i][j]) {\\r\\n          row[j] = 0;\\r\\n          continue;\\r\\n        }\\r\\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\\r\\n          contextLabel = contextLabel << 1 & reuseMask;\\r\\n          for (k = 0; k < changingEntriesLength; k++) {\\r\\n            i0 = i + changingTemplateY[k];\\r\\n            j0 = j + changingTemplateX[k];\\r\\n            bit = bitmap[i0][j0];\\r\\n            if (bit) {\\r\\n              bit = changingTemplateBit[k];\\r\\n              contextLabel |= bit;\\r\\n            }\\r\\n          }\\r\\n        } else {\\r\\n          contextLabel = 0;\\r\\n          shift = templateLength - 1;\\r\\n          for (k = 0; k < templateLength; k++, shift--) {\\r\\n            j0 = j + templateX[k];\\r\\n            if (j0 >= 0 && j0 < width) {\\r\\n              i0 = i + templateY[k];\\r\\n              if (i0 >= 0) {\\r\\n                bit = bitmap[i0][j0];\\r\\n                if (bit) {\\r\\n                  contextLabel |= bit << shift;\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        var pixel = decoder.readBit(contexts, contextLabel);\\r\\n        row[j] = pixel;\\r\\n      }\\r\\n    }\\r\\n    return bitmap;\\r\\n  }\\r\\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\\r\\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\\r\\n    if (templateIndex === 0) {\\r\\n      codingTemplate = codingTemplate.concat([at[0]]);\\r\\n    }\\r\\n    var codingTemplateLength = codingTemplate.length;\\r\\n    var codingTemplateX = new Int32Array(codingTemplateLength);\\r\\n    var codingTemplateY = new Int32Array(codingTemplateLength);\\r\\n    var k;\\r\\n    for (k = 0; k < codingTemplateLength; k++) {\\r\\n      codingTemplateX[k] = codingTemplate[k].x;\\r\\n      codingTemplateY[k] = codingTemplate[k].y;\\r\\n    }\\r\\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\\r\\n    if (templateIndex === 0) {\\r\\n      referenceTemplate = referenceTemplate.concat([at[1]]);\\r\\n    }\\r\\n    var referenceTemplateLength = referenceTemplate.length;\\r\\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\\r\\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\\r\\n    for (k = 0; k < referenceTemplateLength; k++) {\\r\\n      referenceTemplateX[k] = referenceTemplate[k].x;\\r\\n      referenceTemplateY[k] = referenceTemplate[k].y;\\r\\n    }\\r\\n    var referenceWidth = referenceBitmap[0].length;\\r\\n    var referenceHeight = referenceBitmap.length;\\r\\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\\r\\n    var bitmap = [];\\r\\n    var decoder = decodingContext.decoder;\\r\\n    var contexts = decodingContext.contextCache.getContexts('GR');\\r\\n    var ltp = 0;\\r\\n    for (var i = 0; i < height; i++) {\\r\\n      if (prediction) {\\r\\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\\r\\n        ltp ^= sltp;\\r\\n        if (ltp) {\\r\\n          throw new Jbig2Error('prediction is not supported');\\r\\n        }\\r\\n      }\\r\\n      var row = new Uint8Array(width);\\r\\n      bitmap.push(row);\\r\\n      for (var j = 0; j < width; j++) {\\r\\n        var i0, j0;\\r\\n        var contextLabel = 0;\\r\\n        for (k = 0; k < codingTemplateLength; k++) {\\r\\n          i0 = i + codingTemplateY[k];\\r\\n          j0 = j + codingTemplateX[k];\\r\\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\\r\\n            contextLabel <<= 1;\\r\\n          } else {\\r\\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\\r\\n          }\\r\\n        }\\r\\n        for (k = 0; k < referenceTemplateLength; k++) {\\r\\n          i0 = i + referenceTemplateY[k] - offsetY;\\r\\n          j0 = j + referenceTemplateX[k] - offsetX;\\r\\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\\r\\n            contextLabel <<= 1;\\r\\n          } else {\\r\\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\\r\\n          }\\r\\n        }\\r\\n        var pixel = decoder.readBit(contexts, contextLabel);\\r\\n        row[j] = pixel;\\r\\n      }\\r\\n    }\\r\\n    return bitmap;\\r\\n  }\\r\\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\\r\\n    if (huffman) {\\r\\n      throw new Jbig2Error('huffman is not supported');\\r\\n    }\\r\\n    var newSymbols = [];\\r\\n    var currentHeight = 0;\\r\\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\\r\\n    var decoder = decodingContext.decoder;\\r\\n    var contextCache = decodingContext.contextCache;\\r\\n    while (newSymbols.length < numberOfNewSymbols) {\\r\\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\\r\\n      currentHeight += deltaHeight;\\r\\n      var currentWidth = 0;\\r\\n      while (true) {\\r\\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\\r\\n        if (deltaWidth === null) {\\r\\n          break;\\r\\n        }\\r\\n        currentWidth += deltaWidth;\\r\\n        var bitmap;\\r\\n        if (refinement) {\\r\\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\\r\\n          if (numberOfInstances > 1) {\\r\\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\\r\\n          } else {\\r\\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\\r\\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\r\\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\r\\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\\r\\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\\r\\n          }\\r\\n        } else {\\r\\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\\r\\n        }\\r\\n        newSymbols.push(bitmap);\\r\\n      }\\r\\n    }\\r\\n    var exportedSymbols = [];\\r\\n    var flags = [],\\r\\n        currentFlag = false;\\r\\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\\r\\n    while (flags.length < totalSymbolsLength) {\\r\\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\\r\\n      while (runLength--) {\\r\\n        flags.push(currentFlag);\\r\\n      }\\r\\n      currentFlag = !currentFlag;\\r\\n    }\\r\\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\\r\\n      if (flags[i]) {\\r\\n        exportedSymbols.push(symbols[i]);\\r\\n      }\\r\\n    }\\r\\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\\r\\n      if (flags[i]) {\\r\\n        exportedSymbols.push(newSymbols[j]);\\r\\n      }\\r\\n    }\\r\\n    return exportedSymbols;\\r\\n  }\\r\\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\\r\\n    if (huffman) {\\r\\n      throw new Jbig2Error('huffman is not supported');\\r\\n    }\\r\\n    var bitmap = [];\\r\\n    var i, row;\\r\\n    for (i = 0; i < height; i++) {\\r\\n      row = new Uint8Array(width);\\r\\n      if (defaultPixelValue) {\\r\\n        for (var j = 0; j < width; j++) {\\r\\n          row[j] = defaultPixelValue;\\r\\n        }\\r\\n      }\\r\\n      bitmap.push(row);\\r\\n    }\\r\\n    var decoder = decodingContext.decoder;\\r\\n    var contextCache = decodingContext.contextCache;\\r\\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\\r\\n    var firstS = 0;\\r\\n    i = 0;\\r\\n    while (i < numberOfSymbolInstances) {\\r\\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\\r\\n      stripT += deltaT;\\r\\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\\r\\n      firstS += deltaFirstS;\\r\\n      var currentS = firstS;\\r\\n      do {\\r\\n        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\\r\\n        var t = stripSize * stripT + currentT;\\r\\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\\r\\n        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\\r\\n        var symbolBitmap = inputSymbols[symbolId];\\r\\n        var symbolWidth = symbolBitmap[0].length;\\r\\n        var symbolHeight = symbolBitmap.length;\\r\\n        if (applyRefinement) {\\r\\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\\r\\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\\r\\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\\r\\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\\r\\n          symbolWidth += rdw;\\r\\n          symbolHeight += rdh;\\r\\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\\r\\n        }\\r\\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\\r\\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\\r\\n        var s2, t2, symbolRow;\\r\\n        if (transposed) {\\r\\n          for (s2 = 0; s2 < symbolHeight; s2++) {\\r\\n            row = bitmap[offsetS + s2];\\r\\n            if (!row) {\\r\\n              continue;\\r\\n            }\\r\\n            symbolRow = symbolBitmap[s2];\\r\\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\\r\\n            switch (combinationOperator) {\\r\\n              case 0:\\r\\n                for (t2 = 0; t2 < maxWidth; t2++) {\\r\\n                  row[offsetT + t2] |= symbolRow[t2];\\r\\n                }\\r\\n                break;\\r\\n              case 2:\\r\\n                for (t2 = 0; t2 < maxWidth; t2++) {\\r\\n                  row[offsetT + t2] ^= symbolRow[t2];\\r\\n                }\\r\\n                break;\\r\\n              default:\\r\\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\r\\n            }\\r\\n          }\\r\\n          currentS += symbolHeight - 1;\\r\\n        } else {\\r\\n          for (t2 = 0; t2 < symbolHeight; t2++) {\\r\\n            row = bitmap[offsetT + t2];\\r\\n            if (!row) {\\r\\n              continue;\\r\\n            }\\r\\n            symbolRow = symbolBitmap[t2];\\r\\n            switch (combinationOperator) {\\r\\n              case 0:\\r\\n                for (s2 = 0; s2 < symbolWidth; s2++) {\\r\\n                  row[offsetS + s2] |= symbolRow[s2];\\r\\n                }\\r\\n                break;\\r\\n              case 2:\\r\\n                for (s2 = 0; s2 < symbolWidth; s2++) {\\r\\n                  row[of\";a.a+=\"fsetS + s2] ^= symbolRow[s2];\\r\\n                }\\r\\n                break;\\r\\n              default:\\r\\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\r\\n            }\\r\\n          }\\r\\n          currentS += symbolWidth - 1;\\r\\n        }\\r\\n        i++;\\r\\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\\r\\n        if (deltaS === null) {\\r\\n          break;\\r\\n        }\\r\\n        currentS += deltaS + dsOffset;\\r\\n      } while (true);\\r\\n    }\\r\\n    return bitmap;\\r\\n  }\\r\\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\\r\\n    var at = [];\\r\\n    at.push({\\r\\n      x: -patternWidth,\\r\\n      y: 0\\r\\n    });\\r\\n    if (template === 0) {\\r\\n      at.push({\\r\\n        x: -3,\\r\\n        y: -1\\r\\n      });\\r\\n      at.push({\\r\\n        x: 2,\\r\\n        y: -2\\r\\n      });\\r\\n      at.push({\\r\\n        x: -2,\\r\\n        y: -2\\r\\n      });\\r\\n    }\\r\\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\\r\\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\\r\\n    var patterns = [],\\r\\n        i = 0,\\r\\n        patternBitmap = void 0,\\r\\n        xMin = void 0,\\r\\n        xMax = void 0,\\r\\n        y = void 0;\\r\\n    while (i <= maxPatternIndex) {\\r\\n      patternBitmap = [];\\r\\n      xMin = patternWidth * i;\\r\\n      xMax = xMin + patternWidth;\\r\\n      for (y = 0; y < patternHeight; y++) {\\r\\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\\r\\n      }\\r\\n      patterns.push(patternBitmap);\\r\\n      i++;\\r\\n    }\\r\\n    return patterns;\\r\\n  }\\r\\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\\r\\n    var skip = null;\\r\\n    if (enableSkip) {\\r\\n      throw new Jbig2Error('skip is not supported');\\r\\n    }\\r\\n    if (combinationOperator !== 0) {\\r\\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\\r\\n    }\\r\\n    var regionBitmap = [];\\r\\n    var i = void 0,\\r\\n        j = void 0,\\r\\n        row = void 0;\\r\\n    for (i = 0; i < regionHeight; i++) {\\r\\n      row = new Uint8Array(regionWidth);\\r\\n      if (defaultPixelValue) {\\r\\n        for (j = 0; j < regionWidth; j++) {\\r\\n          row[j] = defaultPixelValue;\\r\\n        }\\r\\n      }\\r\\n      regionBitmap.push(row);\\r\\n    }\\r\\n    var numberOfPatterns = patterns.length;\\r\\n    var pattern0 = patterns[0];\\r\\n    var patternWidth = pattern0[0].length,\\r\\n        patternHeight = pattern0.length;\\r\\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\\r\\n    var at = [];\\r\\n    at.push({\\r\\n      x: template <= 1 ? 3 : 2,\\r\\n      y: -1\\r\\n    });\\r\\n    if (template === 0) {\\r\\n      at.push({\\r\\n        x: -3,\\r\\n        y: -1\\r\\n      });\\r\\n      at.push({\\r\\n        x: 2,\\r\\n        y: -2\\r\\n      });\\r\\n      at.push({\\r\\n        x: -2,\\r\\n        y: -2\\r\\n      });\\r\\n    }\\r\\n    var grayScaleBitPlanes = [];\\r\\n    for (i = bitsPerValue - 1; i >= 0; i--) {\\r\\n      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\\r\\n    }\\r\\n    var mg = void 0,\\r\\n        ng = void 0,\\r\\n        bit = void 0,\\r\\n        patternIndex = void 0,\\r\\n        patternBitmap = void 0,\\r\\n        x = void 0,\\r\\n        y = void 0,\\r\\n        patternRow = void 0,\\r\\n        regionRow = void 0;\\r\\n    for (mg = 0; mg < gridHeight; mg++) {\\r\\n      for (ng = 0; ng < gridWidth; ng++) {\\r\\n        bit = 0;\\r\\n        patternIndex = 0;\\r\\n        for (j = bitsPerValue - 1; j >= 0; j--) {\\r\\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\\r\\n          patternIndex |= bit << j;\\r\\n        }\\r\\n        patternBitmap = patterns[patternIndex];\\r\\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\\r\\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\\r\\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\\r\\n          for (i = 0; i < patternHeight; i++) {\\r\\n            regionRow = regionBitmap[y + i];\\r\\n            patternRow = patternBitmap[i];\\r\\n            for (j = 0; j < patternWidth; j++) {\\r\\n              regionRow[x + j] |= patternRow[j];\\r\\n            }\\r\\n          }\\r\\n        } else {\\r\\n          var regionX = void 0,\\r\\n              regionY = void 0;\\r\\n          for (i = 0; i < patternHeight; i++) {\\r\\n            regionY = y + i;\\r\\n            if (regionY < 0 || regionY >= regionHeight) {\\r\\n              continue;\\r\\n            }\\r\\n            regionRow = regionBitmap[regionY];\\r\\n            patternRow = patternBitmap[i];\\r\\n            for (j = 0; j < patternWidth; j++) {\\r\\n              regionX = x + j;\\r\\n              if (regionX >= 0 && regionX < regionWidth) {\\r\\n                regionRow[regionX] |= patternRow[j];\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    return regionBitmap;\\r\\n  }\\r\\n  function readSegmentHeader(data, start) {\\r\\n    var segmentHeader = {};\\r\\n    segmentHeader.number = (0, _util.readUint32)(data, start);\\r\\n    var flags = data[start + 4];\\r\\n    var segmentType = flags & 0x3F;\\r\\n    if (!SegmentTypes[segmentType]) {\\r\\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\\r\\n    }\\r\\n    segmentHeader.type = segmentType;\\r\\n    segmentHeader.typeName = SegmentTypes[segmentType];\\r\\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\\r\\n    var pageAssociationFieldSize = !!(flags & 0x40);\\r\\n    var referredFlags = data[start + 5];\\r\\n    var referredToCount = referredFlags >> 5 & 7;\\r\\n    var retainBits = [referredFlags & 31];\\r\\n    var position = start + 6;\\r\\n    if (referredFlags === 7) {\\r\\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\\r\\n      position += 3;\\r\\n      var bytes = referredToCount + 7 >> 3;\\r\\n      retainBits[0] = data[position++];\\r\\n      while (--bytes > 0) {\\r\\n        retainBits.push(data[position++]);\\r\\n      }\\r\\n    } else if (referredFlags === 5 || referredFlags === 6) {\\r\\n      throw new Jbig2Error('invalid referred-to flags');\\r\\n    }\\r\\n    segmentHeader.retainBits = retainBits;\\r\\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\\r\\n    var referredTo = [];\\r\\n    var i, ii;\\r\\n    for (i = 0; i < referredToCount; i++) {\\r\\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\\r\\n      referredTo.push(number);\\r\\n      position += referredToSegmentNumberSize;\\r\\n    }\\r\\n    segmentHeader.referredTo = referredTo;\\r\\n    if (!pageAssociationFieldSize) {\\r\\n      segmentHeader.pageAssociation = data[position++];\\r\\n    } else {\\r\\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\\r\\n      position += 4;\\r\\n    }\\r\\n    segmentHeader.length = (0, _util.readUint32)(data, position);\\r\\n    position += 4;\\r\\n    if (segmentHeader.length === 0xFFFFFFFF) {\\r\\n      if (segmentType === 38) {\\r\\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\\r\\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\\r\\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\\r\\n        var searchPatternLength = 6;\\r\\n        var searchPattern = new Uint8Array(searchPatternLength);\\r\\n        if (!genericRegionMmr) {\\r\\n          searchPattern[0] = 0xFF;\\r\\n          searchPattern[1] = 0xAC;\\r\\n        }\\r\\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\\r\\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\\r\\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\\r\\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\\r\\n        for (i = position, ii = data.length; i < ii; i++) {\\r\\n          var j = 0;\\r\\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\\r\\n            j++;\\r\\n          }\\r\\n          if (j === searchPatternLength) {\\r\\n            segmentHeader.length = i + searchPatternLength;\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        if (segmentHeader.length === 0xFFFFFFFF) {\\r\\n          throw new Jbig2Error('segment end was not found');\\r\\n        }\\r\\n      } else {\\r\\n        throw new Jbig2Error('invalid unknown segment length');\\r\\n      }\\r\\n    }\\r\\n    segmentHeader.headerEnd = position;\\r\\n    return segmentHeader;\\r\\n  }\\r\\n  function readSegments(header, data, start, end) {\\r\\n    var segments = [];\\r\\n    var position = start;\\r\\n    while (position < end) {\\r\\n      var segmentHeader = readSegmentHeader(data, position);\\r\\n      position = segmentHeader.headerEnd;\\r\\n      var segment = {\\r\\n        header: segmentHeader,\\r\\n        data: data\\r\\n      };\\r\\n      if (!header.randomAccess) {\\r\\n        segment.start = position;\\r\\n        position += segmentHeader.length;\\r\\n        segment.end = position;\\r\\n      }\\r\\n      segments.push(segment);\\r\\n      if (segmentHeader.type === 51) {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    if (header.randomAccess) {\\r\\n      for (var i = 0, ii = segments.length; i < ii; i++) {\\r\\n        segments[i].start = position;\\r\\n        position += segments[i].header.length;\\r\\n        segments[i].end = position;\\r\\n      }\\r\\n    }\\r\\n    return segments;\\r\\n  }\\r\\n  function readRegionSegmentInformation(data, start) {\\r\\n    return {\\r\\n      width: (0, _util.readUint32)(data, start),\\r\\n      height: (0, _util.readUint32)(data, start + 4),\\r\\n      x: (0, _util.readUint32)(data, start + 8),\\r\\n      y: (0, _util.readUint32)(data, start + 12),\\r\\n      combinationOperator: data[start + 16] & 7\\r\\n    };\\r\\n  }\\r\\n  var RegionSegmentInformationFieldLength = 17;\\r\\n  function processSegment(segment, visitor) {\\r\\n    var header = segment.header;\\r\\n    var data = segment.data,\\r\\n        position = segment.start,\\r\\n        end = segment.end;\\r\\n    var args, at, i, atLength;\\r\\n    switch (header.type) {\\r\\n      case 0:\\r\\n        var dictionary = {};\\r\\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\\r\\n        dictionary.huffman = !!(dictionaryFlags & 1);\\r\\n        dictionary.refinement = !!(dictionaryFlags & 2);\\r\\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\\r\\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\\r\\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\\r\\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\\r\\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\\r\\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\\r\\n        dictionary.template = dictionaryFlags >> 10 & 3;\\r\\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\\r\\n        position += 2;\\r\\n        if (!dictionary.huffman) {\\r\\n          atLength = dictionary.template === 0 ? 4 : 1;\\r\\n          at = [];\\r\\n          for (i = 0; i < atLength; i++) {\\r\\n            at.push({\\r\\n              x: (0, _util.readInt8)(data, position),\\r\\n              y: (0, _util.readInt8)(data, position + 1)\\r\\n            });\\r\\n            position += 2;\\r\\n          }\\r\\n          dictionary.at = at;\\r\\n        }\\r\\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\\r\\n          at = [];\\r\\n          for (i = 0; i < 2; i++) {\\r\\n            at.push({\\r\\n              x: (0, _util.readInt8)(data, position),\\r\\n              y: (0, _util.readInt8)(data, position + 1)\\r\\n            });\\r\\n            position += 2;\\r\\n          }\\r\\n          dictionary.refinementAt = at;\\r\\n        }\\r\\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\\r\\n        position += 4;\\r\\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\\r\\n        position += 4;\\r\\n        args = [dictionary, header.number, header.referredTo, data, position, end];\\r\\n        break;\\r\\n      case 6:\\r\\n      case 7:\\r\\n        var textRegion = {};\\r\\n        textRegion.info = readRegionSegmentInformation(data, position);\\r\\n        position += RegionSegmentInformationFieldLength;\\r\\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\\r\\n        position += 2;\\r\\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\\r\\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\\r\\n        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\\r\\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\\r\\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\\r\\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\\r\\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\\r\\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\\r\\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\\r\\n        if (textRegion.huffman) {\\r\\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\\r\\n          position += 2;\\r\\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\\r\\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\\r\\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\\r\\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\\r\\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\\r\\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\\r\\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\\r\\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\\r\\n        }\\r\\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\\r\\n          at = [];\\r\\n          for (i = 0; i < 2; i++) {\\r\\n            at.push({\\r\\n              x: (0, _util.readInt8)(data, position),\\r\\n              y: (0, _util.readInt8)(data, position + 1)\\r\\n            });\\r\\n            position += 2;\\r\\n          }\\r\\n          textRegion.refinementAt = at;\\r\\n        }\\r\\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\\r\\n        position += 4;\\r\\n        if (textRegion.huffman) {\\r\\n          throw new Jbig2Error('huffman is not supported');\\r\\n        }\\r\\n        args = [textRegion, header.referredTo, data, position, end];\\r\\n        break;\\r\\n      case 16:\\r\\n        var patternDictionary = {};\\r\\n        var patternDictionaryFlags = data[position++];\\r\\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\\r\\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\\r\\n        patternDictionary.patternWidth = data[position++];\\r\\n        patternDictionary.patternHeight = data[position++];\\r\\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\\r\\n        position += 4;\\r\\n        args = [patternDictionary, header.number, data, position, end];\\r\\n        break;\\r\\n      case 22:\\r\\n      case 23:\\r\\n        var halftoneRegion = {};\\r\\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\\r\\n        position += RegionSegmentInformationFieldLength;\\r\\n        var halftoneRegionFlags = data[position++];\\r\\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\\r\\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\\r\\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\\r\\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\\r\\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\\r\\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\\r\\n        position += 4;\\r\\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\\r\\n        position += 4;\\r\\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\r\\n        position += 4;\\r\\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\\r\\n        position += 4;\\r\\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\\r\\n        position += 2;\\r\\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\\r\\n        position += 2;\\r\\n        args = [halftoneRegion, header.referredTo, data, position, end];\\r\\n        break;\\r\\n      case 38:\\r\\n      case 39:\\r\\n        var genericRegion = {};\\r\\n        genericRegion.info = readRegionSegmentInformation(data, position);\\r\\n        position += RegionSegmentInformationFieldLength;\\r\\n        var genericRegionSegmentFlags = data[position++];\\r\\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\\r\\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\\r\\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\\r\\n        if (!genericRegion.mmr) {\\r\\n      \";a.a+=\"    atLength = genericRegion.template === 0 ? 4 : 1;\\r\\n          at = [];\\r\\n          for (i = 0; i < atLength; i++) {\\r\\n            at.push({\\r\\n              x: (0, _util.readInt8)(data, position),\\r\\n              y: (0, _util.readInt8)(data, position + 1)\\r\\n            });\\r\\n            position += 2;\\r\\n          }\\r\\n          genericRegion.at = at;\\r\\n        }\\r\\n        args = [genericRegion, data, position, end];\\r\\n        break;\\r\\n      case 48:\\r\\n        var pageInfo = {\\r\\n          width: (0, _util.readUint32)(data, position),\\r\\n          height: (0, _util.readUint32)(data, position + 4),\\r\\n          resolutionX: (0, _util.readUint32)(data, position + 8),\\r\\n          resolutionY: (0, _util.readUint32)(data, position + 12)\\r\\n        };\\r\\n        if (pageInfo.height === 0xFFFFFFFF) {\\r\\n          delete pageInfo.height;\\r\\n        }\\r\\n        var pageSegmentFlags = data[position + 16];\\r\\n        (0, _util.readUint16)(data, position + 17);\\r\\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\\r\\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\\r\\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\\r\\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\\r\\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\\r\\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\\r\\n        args = [pageInfo];\\r\\n        break;\\r\\n      case 49:\\r\\n        break;\\r\\n      case 50:\\r\\n        break;\\r\\n      case 51:\\r\\n        break;\\r\\n      case 62:\\r\\n        break;\\r\\n      default:\\r\\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\\r\\n    }\\r\\n    var callbackName = 'on' + header.typeName;\\r\\n    if (callbackName in visitor) {\\r\\n      visitor[callbackName].apply(visitor, args);\\r\\n    }\\r\\n  }\\r\\n  function processSegments(segments, visitor) {\\r\\n    for (var i = 0, ii = segments.length; i < ii; i++) {\\r\\n      processSegment(segments[i], visitor);\\r\\n    }\\r\\n  }\\r\\n  function parseJbig2(data, start, end) {\\r\\n    var position = start;\\r\\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\\r\\n      throw new Jbig2Error('invalid header');\\r\\n    }\\r\\n    var header = {};\\r\\n    position += 8;\\r\\n    var flags = data[position++];\\r\\n    header.randomAccess = !(flags & 1);\\r\\n    if (!(flags & 2)) {\\r\\n      header.numberOfPages = (0, _util.readUint32)(data, position);\\r\\n      position += 4;\\r\\n    }\\r\\n    readSegments(header, data, position, end);\\r\\n    throw new Error('Not implemented');\\r\\n  }\\r\\n  function parseJbig2Chunks(chunks) {\\r\\n    var visitor = new SimpleSegmentVisitor();\\r\\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\\r\\n      var chunk = chunks[i];\\r\\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\\r\\n      processSegments(segments, visitor);\\r\\n    }\\r\\n    return visitor.buffer;\\r\\n  }\\r\\n  function SimpleSegmentVisitor() {}\\r\\n  SimpleSegmentVisitor.prototype = {\\r\\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\\r\\n      this.currentPageInfo = info;\\r\\n      var rowSize = info.width + 7 >> 3;\\r\\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\\r\\n      if (info.defaultPixelValue) {\\r\\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\\r\\n          buffer[i] = 0xFF;\\r\\n        }\\r\\n      }\\r\\n      this.buffer = buffer;\\r\\n    },\\r\\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\\r\\n      var pageInfo = this.currentPageInfo;\\r\\n      var width = regionInfo.width,\\r\\n          height = regionInfo.height;\\r\\n      var rowSize = pageInfo.width + 7 >> 3;\\r\\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\\r\\n      var buffer = this.buffer;\\r\\n      var mask0 = 128 >> (regionInfo.x & 7);\\r\\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\\r\\n      var i, j, mask, offset;\\r\\n      switch (combinationOperator) {\\r\\n        case 0:\\r\\n          for (i = 0; i < height; i++) {\\r\\n            mask = mask0;\\r\\n            offset = offset0;\\r\\n            for (j = 0; j < width; j++) {\\r\\n              if (bitmap[i][j]) {\\r\\n                buffer[offset] |= mask;\\r\\n              }\\r\\n              mask >>= 1;\\r\\n              if (!mask) {\\r\\n                mask = 128;\\r\\n                offset++;\\r\\n              }\\r\\n            }\\r\\n            offset0 += rowSize;\\r\\n          }\\r\\n          break;\\r\\n        case 2:\\r\\n          for (i = 0; i < height; i++) {\\r\\n            mask = mask0;\\r\\n            offset = offset0;\\r\\n            for (j = 0; j < width; j++) {\\r\\n              if (bitmap[i][j]) {\\r\\n                buffer[offset] ^= mask;\\r\\n              }\\r\\n              mask >>= 1;\\r\\n              if (!mask) {\\r\\n                mask = 128;\\r\\n                offset++;\\r\\n              }\\r\\n            }\\r\\n            offset0 += rowSize;\\r\\n          }\\r\\n          break;\\r\\n        default:\\r\\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\\r\\n      }\\r\\n    },\\r\\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\\r\\n      var regionInfo = region.info;\\r\\n      var decodingContext = new DecodingContext(data, start, end);\\r\\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\\r\\n      this.drawBitmap(regionInfo, bitmap);\\r\\n    },\\r\\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\\r\\n      this.onImmediateGenericRegion.apply(this, arguments);\\r\\n    },\\r\\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\\r\\n      var huffmanTables;\\r\\n      if (dictionary.huffman) {\\r\\n        throw new Jbig2Error('huffman is not supported');\\r\\n      }\\r\\n      var symbols = this.symbols;\\r\\n      if (!symbols) {\\r\\n        this.symbols = symbols = {};\\r\\n      }\\r\\n      var inputSymbols = [];\\r\\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\r\\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\\r\\n      }\\r\\n      var decodingContext = new DecodingContext(data, start, end);\\r\\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\\r\\n    },\\r\\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\\r\\n      var regionInfo = region.info;\\r\\n      var huffmanTables;\\r\\n      var symbols = this.symbols;\\r\\n      var inputSymbols = [];\\r\\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\\r\\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\\r\\n      }\\r\\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\\r\\n      var decodingContext = new DecodingContext(data, start, end);\\r\\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\\r\\n      this.drawBitmap(regionInfo, bitmap);\\r\\n    },\\r\\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\\r\\n      this.onImmediateTextRegion.apply(this, arguments);\\r\\n    },\\r\\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\\r\\n      var patterns = this.patterns;\\r\\n      if (!patterns) {\\r\\n        this.patterns = patterns = {};\\r\\n      }\\r\\n      var decodingContext = new DecodingContext(data, start, end);\\r\\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\\r\\n    },\\r\\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\\r\\n      var patterns = this.patterns[referredSegments[0]];\\r\\n      var regionInfo = region.info;\\r\\n      var decodingContext = new DecodingContext(data, start, end);\\r\\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\\r\\n      this.drawBitmap(regionInfo, bitmap);\\r\\n    },\\r\\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\\r\\n      this.onImmediateHalftoneRegion.apply(this, arguments);\\r\\n    }\\r\\n  };\\r\\n  function Jbig2Image() {}\\r\\n  Jbig2Image.prototype = {\\r\\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\\r\\n      return parseJbig2Chunks(chunks);\\r\\n    }\\r\\n  };\\r\\n  return Jbig2Image;\\r\\n}();\\r\\nexports.Jbig2Image = Jbig2Image;\\r\\n\\r\\n/***/ }),\\r\\n/* 148 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _parser = __w_pdfjs_require__(36);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\\r\\nvar CMap = function CMapClosure() {\\r\\n  function CMap(builtInCMap) {\\r\\n    this.codespaceRanges = [[], [], [], []];\\r\\n    this.numCodespaceRanges = 0;\\r\\n    this._map = [];\\r\\n    this.name = '';\\r\\n    this.vertical = false;\\r\\n    this.useCMap = null;\\r\\n    this.builtInCMap = builtInCMap;\\r\\n  }\\r\\n  CMap.prototype = {\\r\\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\\r\\n      this.codespaceRanges[n - 1].push(low, high);\\r\\n      this.numCodespaceRanges++;\\r\\n    },\\r\\n    mapCidRange: function mapCidRange(low, high, dstLow) {\\r\\n      while (low <= high) {\\r\\n        this._map[low++] = dstLow++;\\r\\n      }\\r\\n    },\\r\\n    mapBfRange: function mapBfRange(low, high, dstLow) {\\r\\n      var lastByte = dstLow.length - 1;\\r\\n      while (low <= high) {\\r\\n        this._map[low++] = dstLow;\\r\\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\\r\\n      }\\r\\n    },\\r\\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\\r\\n      var i = 0,\\r\\n          ii = array.length;\\r\\n      while (low <= high && i < ii) {\\r\\n        this._map[low] = array[i++];\\r\\n        ++low;\\r\\n      }\\r\\n    },\\r\\n    mapOne: function mapOne(src, dst) {\\r\\n      this._map[src] = dst;\\r\\n    },\\r\\n    lookup: function lookup(code) {\\r\\n      return this._map[code];\\r\\n    },\\r\\n    contains: function contains(code) {\\r\\n      return this._map[code] !== undefined;\\r\\n    },\\r\\n    forEach: function forEach(callback) {\\r\\n      var map = this._map;\\r\\n      var length = map.length;\\r\\n      if (length <= 0x10000) {\\r\\n        for (var i = 0; i < length; i++) {\\r\\n          if (map[i] !== undefined) {\\r\\n            callback(i, map[i]);\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        for (var _i in map) {\\r\\n          callback(_i, map[_i]);\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    charCodeOf: function charCodeOf(value) {\\r\\n      var map = this._map;\\r\\n      if (map.length <= 0x10000) {\\r\\n        return map.indexOf(value);\\r\\n      }\\r\\n      for (var charCode in map) {\\r\\n        if (map[charCode] === value) {\\r\\n          return charCode | 0;\\r\\n        }\\r\\n      }\\r\\n      return -1;\\r\\n    },\\r\\n    getMap: function getMap() {\\r\\n      return this._map;\\r\\n    },\\r\\n    readCharCode: function readCharCode(str, offset, out) {\\r\\n      var c = 0;\\r\\n      var codespaceRanges = this.codespaceRanges;\\r\\n      var codespaceRangesLen = this.codespaceRanges.length;\\r\\n      for (var n = 0; n < codespaceRangesLen; n++) {\\r\\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\\r\\n        var codespaceRange = codespaceRanges[n];\\r\\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\\r\\n          var low = codespaceRange[k++];\\r\\n          var high = codespaceRange[k++];\\r\\n          if (c >= low && c <= high) {\\r\\n            out.charcode = c;\\r\\n            out.length = n + 1;\\r\\n            return;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      out.charcode = 0;\\r\\n      out.length = 1;\\r\\n    },\\r\\n\\r\\n    get length() {\\r\\n      return this._map.length;\\r\\n    },\\r\\n    get isIdentityCMap() {\\r\\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\\r\\n        return false;\\r\\n      }\\r\\n      if (this._map.length !== 0x10000) {\\r\\n        return false;\\r\\n      }\\r\\n      for (var i = 0; i < 0x10000; i++) {\\r\\n        if (this._map[i] !== i) {\\r\\n          return false;\\r\\n        }\\r\\n      }\\r\\n      return true;\\r\\n    }\\r\\n  };\\r\\n  return CMap;\\r\\n}();\\r\\nvar IdentityCMap = function IdentityCMapClosure() {\\r\\n  function IdentityCMap(vertical, n) {\\r\\n    CMap.call(this);\\r\\n    this.vertical = vertical;\\r\\n    this.addCodespaceRange(n, 0, 0xffff);\\r\\n  }\\r\\n  _util.Util.inherit(IdentityCMap, CMap, {});\\r\\n  IdentityCMap.prototype = {\\r\\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\\r\\n    mapCidRange: function mapCidRange(low, high, dstLow) {\\r\\n      throw new Error('should not call mapCidRange');\\r\\n    },\\r\\n    mapBfRange: function mapBfRange(low, high, dstLow) {\\r\\n      throw new Error('should not call mapBfRange');\\r\\n    },\\r\\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\\r\\n      throw new Error('should not call mapBfRangeToArray');\\r\\n    },\\r\\n    mapOne: function mapOne(src, dst) {\\r\\n      throw new Error('should not call mapCidOne');\\r\\n    },\\r\\n    lookup: function look\";a.a+=\"up(code) {\\r\\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\\r\\n    },\\r\\n    contains: function contains(code) {\\r\\n      return Number.isInteger(code) && code <= 0xffff;\\r\\n    },\\r\\n    forEach: function forEach(callback) {\\r\\n      for (var i = 0; i <= 0xffff; i++) {\\r\\n        callback(i, i);\\r\\n      }\\r\\n    },\\r\\n    charCodeOf: function charCodeOf(value) {\\r\\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\\r\\n    },\\r\\n    getMap: function getMap() {\\r\\n      var map = new Array(0x10000);\\r\\n      for (var i = 0; i <= 0xffff; i++) {\\r\\n        map[i] = i;\\r\\n      }\\r\\n      return map;\\r\\n    },\\r\\n\\r\\n    readCharCode: CMap.prototype.readCharCode,\\r\\n    get length() {\\r\\n      return 0x10000;\\r\\n    },\\r\\n    get isIdentityCMap() {\\r\\n      throw new Error('should not access .isIdentityCMap');\\r\\n    }\\r\\n  };\\r\\n  return IdentityCMap;\\r\\n}();\\r\\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\\r\\n  function hexToInt(a, size) {\\r\\n    var n = 0;\\r\\n    for (var i = 0; i <= size; i++) {\\r\\n      n = n << 8 | a[i];\\r\\n    }\\r\\n    return n >>> 0;\\r\\n  }\\r\\n  function hexToStr(a, size) {\\r\\n    if (size === 1) {\\r\\n      return String.fromCharCode(a[0], a[1]);\\r\\n    }\\r\\n    if (size === 3) {\\r\\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\\r\\n    }\\r\\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\\r\\n  }\\r\\n  function addHex(a, b, size) {\\r\\n    var c = 0;\\r\\n    for (var i = size; i >= 0; i--) {\\r\\n      c += a[i] + b[i];\\r\\n      a[i] = c & 255;\\r\\n      c >>= 8;\\r\\n    }\\r\\n  }\\r\\n  function incHex(a, size) {\\r\\n    var c = 1;\\r\\n    for (var i = size; i >= 0 && c > 0; i--) {\\r\\n      c += a[i];\\r\\n      a[i] = c & 255;\\r\\n      c >>= 8;\\r\\n    }\\r\\n  }\\r\\n  var MAX_NUM_SIZE = 16;\\r\\n  var MAX_ENCODED_NUM_SIZE = 19;\\r\\n  function BinaryCMapStream(data) {\\r\\n    this.buffer = data;\\r\\n    this.pos = 0;\\r\\n    this.end = data.length;\\r\\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\\r\\n  }\\r\\n  BinaryCMapStream.prototype = {\\r\\n    readByte: function readByte() {\\r\\n      if (this.pos >= this.end) {\\r\\n        return -1;\\r\\n      }\\r\\n      return this.buffer[this.pos++];\\r\\n    },\\r\\n    readNumber: function readNumber() {\\r\\n      var n = 0;\\r\\n      var last;\\r\\n      do {\\r\\n        var b = this.readByte();\\r\\n        if (b < 0) {\\r\\n          throw new _util.FormatError('unexpected EOF in bcmap');\\r\\n        }\\r\\n        last = !(b & 0x80);\\r\\n        n = n << 7 | b & 0x7F;\\r\\n      } while (!last);\\r\\n      return n;\\r\\n    },\\r\\n    readSigned: function readSigned() {\\r\\n      var n = this.readNumber();\\r\\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\\r\\n    },\\r\\n    readHex: function readHex(num, size) {\\r\\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\\r\\n      this.pos += size + 1;\\r\\n    },\\r\\n    readHexNumber: function readHexNumber(num, size) {\\r\\n      var last;\\r\\n      var stack = this.tmpBuf,\\r\\n          sp = 0;\\r\\n      do {\\r\\n        var b = this.readByte();\\r\\n        if (b < 0) {\\r\\n          throw new _util.FormatError('unexpected EOF in bcmap');\\r\\n        }\\r\\n        last = !(b & 0x80);\\r\\n        stack[sp++] = b & 0x7F;\\r\\n      } while (!last);\\r\\n      var i = size,\\r\\n          buffer = 0,\\r\\n          bufferSize = 0;\\r\\n      while (i >= 0) {\\r\\n        while (bufferSize < 8 && stack.length > 0) {\\r\\n          buffer = stack[--sp] << bufferSize | buffer;\\r\\n          bufferSize += 7;\\r\\n        }\\r\\n        num[i] = buffer & 255;\\r\\n        i--;\\r\\n        buffer >>= 8;\\r\\n        bufferSize -= 8;\\r\\n      }\\r\\n    },\\r\\n    readHexSigned: function readHexSigned(num, size) {\\r\\n      this.readHexNumber(num, size);\\r\\n      var sign = num[size] & 1 ? 255 : 0;\\r\\n      var c = 0;\\r\\n      for (var i = 0; i <= size; i++) {\\r\\n        c = (c & 1) << 8 | num[i];\\r\\n        num[i] = c >> 1 ^ sign;\\r\\n      }\\r\\n    },\\r\\n    readString: function readString() {\\r\\n      var len = this.readNumber();\\r\\n      var s = '';\\r\\n      for (var i = 0; i < len; i++) {\\r\\n        s += String.fromCharCode(this.readNumber());\\r\\n      }\\r\\n      return s;\\r\\n    }\\r\\n  };\\r\\n  function processBinaryCMap(data, cMap, extend) {\\r\\n    return new Promise(function (resolve, reject) {\\r\\n      var stream = new BinaryCMapStream(data);\\r\\n      var header = stream.readByte();\\r\\n      cMap.vertical = !!(header & 1);\\r\\n      var useCMap = null;\\r\\n      var start = new Uint8Array(MAX_NUM_SIZE);\\r\\n      var end = new Uint8Array(MAX_NUM_SIZE);\\r\\n      var char = new Uint8Array(MAX_NUM_SIZE);\\r\\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\\r\\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\\r\\n      var code;\\r\\n      var b;\\r\\n      while ((b = stream.readByte()) >= 0) {\\r\\n        var type = b >> 5;\\r\\n        if (type === 7) {\\r\\n          switch (b & 0x1F) {\\r\\n            case 0:\\r\\n              stream.readString();\\r\\n              break;\\r\\n            case 1:\\r\\n              useCMap = stream.readString();\\r\\n              break;\\r\\n          }\\r\\n          continue;\\r\\n        }\\r\\n        var sequence = !!(b & 0x10);\\r\\n        var dataSize = b & 15;\\r\\n        if (dataSize + 1 > MAX_NUM_SIZE) {\\r\\n          throw new Error('processBinaryCMap: Invalid dataSize.');\\r\\n        }\\r\\n        var ucs2DataSize = 1;\\r\\n        var subitemsCount = stream.readNumber();\\r\\n        var i;\\r\\n        switch (type) {\\r\\n          case 0:\\r\\n            stream.readHex(start, dataSize);\\r\\n            stream.readHexNumber(end, dataSize);\\r\\n            addHex(end, start, dataSize);\\r\\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\r\\n            for (i = 1; i < subitemsCount; i++) {\\r\\n              incHex(end, dataSize);\\r\\n              stream.readHexNumber(start, dataSize);\\r\\n              addHex(start, end, dataSize);\\r\\n              stream.readHexNumber(end, dataSize);\\r\\n              addHex(end, start, dataSize);\\r\\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\\r\\n            }\\r\\n            break;\\r\\n          case 1:\\r\\n            stream.readHex(start, dataSize);\\r\\n            stream.readHexNumber(end, dataSize);\\r\\n            addHex(end, start, dataSize);\\r\\n            code = stream.readNumber();\\r\\n            for (i = 1; i < subitemsCount; i++) {\\r\\n              incHex(end, dataSize);\\r\\n              stream.readHexNumber(start, dataSize);\\r\\n              addHex(start, end, dataSize);\\r\\n              stream.readHexNumber(end, dataSize);\\r\\n              addHex(end, start, dataSize);\\r\\n              code = stream.readNumber();\\r\\n            }\\r\\n            break;\\r\\n          case 2:\\r\\n            stream.readHex(char, dataSize);\\r\\n            code = stream.readNumber();\\r\\n            cMap.mapOne(hexToInt(char, dataSize), code);\\r\\n            for (i = 1; i < subitemsCount; i++) {\\r\\n              incHex(char, dataSize);\\r\\n              if (!sequence) {\\r\\n                stream.readHexNumber(tmp, dataSize);\\r\\n                addHex(char, tmp, dataSize);\\r\\n              }\\r\\n              code = stream.readSigned() + (code + 1);\\r\\n              cMap.mapOne(hexToInt(char, dataSize), code);\\r\\n            }\\r\\n            break;\\r\\n          case 3:\\r\\n            stream.readHex(start, dataSize);\\r\\n            stream.readHexNumber(end, dataSize);\\r\\n            addHex(end, start, dataSize);\\r\\n            code = stream.readNumber();\\r\\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\r\\n            for (i = 1; i < subitemsCount; i++) {\\r\\n              incHex(end, dataSize);\\r\\n              if (!sequence) {\\r\\n                stream.readHexNumber(start, dataSize);\\r\\n                addHex(start, end, dataSize);\\r\\n              } else {\\r\\n                start.set(end);\\r\\n              }\\r\\n              stream.readHexNumber(end, dataSize);\\r\\n              addHex(end, start, dataSize);\\r\\n              code = stream.readNumber();\\r\\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\\r\\n            }\\r\\n            break;\\r\\n          case 4:\\r\\n            stream.readHex(char, ucs2DataSize);\\r\\n            stream.readHex(charCode, dataSize);\\r\\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\r\\n            for (i = 1; i < subitemsCount; i++) {\\r\\n              incHex(char, ucs2DataSize);\\r\\n              if (!sequence) {\\r\\n                stream.readHexNumber(tmp, ucs2DataSize);\\r\\n                addHex(char, tmp, ucs2DataSize);\\r\\n              }\\r\\n              incHex(charCode, dataSize);\\r\\n              stream.readHexSigned(tmp, dataSize);\\r\\n              addHex(charCode, tmp, dataSize);\\r\\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\\r\\n            }\\r\\n            break;\\r\\n          case 5:\\r\\n            stream.readHex(start, ucs2DataSize);\\r\\n            stream.readHexNumber(end, ucs2DataSize);\\r\\n            addHex(end, start, ucs2DataSize);\\r\\n            stream.readHex(charCode, dataSize);\\r\\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\r\\n            for (i = 1; i < subitemsCount; i++) {\\r\\n              incHex(end, ucs2DataSize);\\r\\n              if (!sequence) {\\r\\n                stream.readHexNumber(start, ucs2DataSize);\\r\\n                addHex(start, end, ucs2DataSize);\\r\\n              } else {\\r\\n                start.set(end);\\r\\n              }\\r\\n              stream.readHexNumber(end, ucs2DataSize);\\r\\n              addHex(end, start, ucs2DataSize);\\r\\n              stream.readHex(charCode, dataSize);\\r\\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\\r\\n            return;\\r\\n        }\\r\\n      }\\r\\n      if (useCMap) {\\r\\n        resolve(extend(useCMap));\\r\\n        return;\\r\\n      }\\r\\n      resolve(cMap);\\r\\n    });\\r\\n  }\\r\\n  function BinaryCMapReader() {}\\r\\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\\r\\n  return BinaryCMapReader;\\r\\n}();\\r\\nvar CMapFactory = function CMapFactoryClosure() {\\r\\n  function strToInt(str) {\\r\\n    var a = 0;\\r\\n    for (var i = 0; i < str.length; i++) {\\r\\n      a = a << 8 | str.charCodeAt(i);\\r\\n    }\\r\\n    return a >>> 0;\\r\\n  }\\r\\n  function expectString(obj) {\\r\\n    if (!(0, _util.isString)(obj)) {\\r\\n      throw new _util.FormatError('Malformed CMap: expected string.');\\r\\n    }\\r\\n  }\\r\\n  function expectInt(obj) {\\r\\n    if (!Number.isInteger(obj)) {\\r\\n      throw new _util.FormatError('Malformed CMap: expected int.');\\r\\n    }\\r\\n  }\\r\\n  function parseBfChar(cMap, lexer) {\\r\\n    while (true) {\\r\\n      var obj = lexer.getObj();\\r\\n      if ((0, _primitives.isEOF)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\\r\\n        return;\\r\\n      }\\r\\n      expectString(obj);\\r\\n      var src = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      expectString(obj);\\r\\n      var dst = obj;\\r\\n      cMap.mapOne(src, dst);\\r\\n    }\\r\\n  }\\r\\n  function parseBfRange(cMap, lexer) {\\r\\n    while (true) {\\r\\n      var obj = lexer.getObj();\\r\\n      if ((0, _primitives.isEOF)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\\r\\n        return;\\r\\n      }\\r\\n      expectString(obj);\\r\\n      var low = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      expectString(obj);\\r\\n      var high = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\\r\\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\\r\\n        cMap.mapBfRange(low, high, dstLow);\\r\\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\\r\\n        obj = lexer.getObj();\\r\\n        var array = [];\\r\\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\\r\\n          array.push(obj);\\r\\n          obj = lexer.getObj();\\r\\n        }\\r\\n        cMap.mapBfRangeToArray(low, high, array);\\r\\n      } else {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    throw new _util.FormatError('Invalid bf range.');\\r\\n  }\\r\\n  function parseCidChar(cMap, lexer) {\\r\\n    while (true) {\\r\\n      var obj = lexer.getObj();\\r\\n      if ((0, _primitives.isEOF)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\\r\\n        return;\\r\\n      }\\r\\n      expectString(obj);\\r\\n      var src = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      expectInt(obj);\\r\\n      var dst = obj;\\r\\n      cMap.mapOne(src, dst);\\r\\n    }\\r\\n  }\\r\\n  function parseCidRange(cMap, lexer) {\\r\\n    while (true) {\\r\\n      var obj = lexer.getObj();\\r\\n      if ((0, _primitives.isEOF)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\\r\\n        return;\\r\\n      }\\r\\n      expectString(obj);\\r\\n      var low = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      expectString(obj);\\r\\n      var high = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      expectInt(obj);\\r\\n      var dstLow = obj;\\r\\n      cMap.mapCidRange(low, high, dstLow);\\r\\n    }\\r\\n  }\\r\\n  function parseCodespaceRange(cMap, lexer) {\\r\\n    while (true) {\\r\\n      var obj = lexer.getObj();\\r\\n      if ((0, _primitives.isEOF)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\\r\\n        return;\\r\\n      }\\r\\n      if (!(0, _util.isString)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      var low = strToInt(obj);\\r\\n      obj = lexer.getObj();\\r\\n      if (!(0, _util.isString)(obj)) {\\r\\n        break;\\r\\n      }\\r\\n      var high = strToInt(obj);\\r\\n      cMap.addCodespaceRange(obj.length, low, high);\\r\\n    }\\r\\n    throw new _util.FormatError('Invalid codespace range.');\\r\\n  }\\r\\n  function parseWMode(cMap, lexer) {\\r\\n    var obj = lexer.getObj();\\r\\n    if (Number.isInteger(obj)) {\\r\\n      cMap.vertical = !!obj;\\r\\n    }\\r\\n  }\\r\\n  function parseCMapName(cMap, lexer) {\\r\\n    var obj = lexer.getObj();\\r\\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\\r\\n      cMap.name = obj.name;\\r\\n    }\\r\\n  }\\r\\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\\r\\n    var previous;\\r\\n    var embededUseCMap;\\r\\n    objLoop: while (true) {\\r\\n      try {\\r\\n        var obj = lexer.getObj();\\r\\n        if ((0, _primitives.isEOF)(obj)) {\\r\\n          break;\\r\\n        } else if ((0, _primitives.isName)(obj)) {\\r\\n          if (obj.name === 'WMode') {\\r\\n            parseWMode(cMap, lexer);\\r\\n          } else if (obj.name === 'CMapName') {\\r\\n            parseCMapName(cMap, lexer);\\r\\n          }\\r\\n          previous = obj;\\r\\n        } else if ((0, _primitives.isCmd)(obj)) {\\r\\n          switch (obj.cmd) {\\r\\n            case 'endcmap':\\r\\n              break objLoop;\\r\\n            case 'usecmap':\\r\\n              if ((0, _primitives.isName)(previous)) {\\r\\n                embededUseCMap = previous.name;\\r\\n              }\\r\\n              break;\\r\\n            case 'begincodespacerange':\\r\\n              parseCodespaceRange(cMap, lexer);\\r\\n              break;\\r\\n            case 'beginbfchar':\\r\\n              parseBfChar(cMap, lexer);\\r\\n              break;\\r\\n            case 'begincidchar':\\r\\n              parseCidChar(cMap, lexer);\\r\\n              break;\\r\\n            case 'beginbfrange':\\r\\n              parseBfRange(cMap, lexer);\\r\\n              break;\\r\\n            case 'begincidrange':\\r\\n              parseCidRange(cMap, lexer);\\r\\n              break;\\r\\n          }\\r\\n        }\\r\\n      } catch (ex) {\\r\\n        if (ex instanceof _util.MissingDataException) {\\r\\n          throw ex;\\r\\n        }\\r\\n        (0, _util.warn)('Invalid cMap data: ' + ex);\\r\\n        continue;\\r\\n      }\\r\\n    }\\r\\n    if (!useCMap && embededUseCMap) {\\r\\n      useCMap = embededUseCMap;\\r\\n    }\\r\\n    if (useCMap) {\\r\\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\r\\n    }\\r\\n    return Promise.resolve(cMap);\\r\\n  }\\r\\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\\r\\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\\r\\n      cMap.useCMap = newCMap;\\r\\n      if (cMap.numCodespaceRanges === 0) {\\r\\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\\r\\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\\r\\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\\r\\n        }\\r\\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\\r\\n      }\\r\\n      cMap.useCMap.forEach(function (key, value) {\\r\\n        if (!cMap.contains(key)) {\\r\\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\\r\\n        }\\r\\n      });\\r\\n      return cMap;\\r\\n    });\\r\\n  }\\r\\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\\r\\n    if (name === 'Identity-H') {\\r\\n      return Promise.resolve(new IdentityCMap(false, 2));\\r\\n    } else if (name === 'Identity-V') {\\r\\n      return Promise.resolve(new IdentityCMap(true, 2));\\r\\n    }\\r\\n    if (BUILT_IN_CM\";a.a+=\"APS.indexOf(name) === -1) {\\r\\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\\r\\n    }\\r\\n    if (!fetchBuiltInCMap) {\\r\\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\\r\\n    }\\r\\n    return fetchBuiltInCMap(name).then(function (data) {\\r\\n      var cMapData = data.cMapData,\\r\\n          compressionType = data.compressionType;\\r\\n      var cMap = new CMap(true);\\r\\n      if (compressionType === _util.CMapCompressionType.BINARY) {\\r\\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\\r\\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\\r\\n        });\\r\\n      }\\r\\n      if (compressionType === _util.CMapCompressionType.NONE) {\\r\\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\\r\\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\\r\\n      }\\r\\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\\r\\n    });\\r\\n  }\\r\\n  return {\\r\\n    create: function create(params) {\\r\\n      var encoding = params.encoding;\\r\\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\\r\\n      var useCMap = params.useCMap;\\r\\n      if ((0, _primitives.isName)(encoding)) {\\r\\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\\r\\n      } else if ((0, _primitives.isStream)(encoding)) {\\r\\n        var cMap = new CMap();\\r\\n        var lexer = new _parser.Lexer(encoding);\\r\\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\\r\\n          if (parsedCMap.isIdentityCMap) {\\r\\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\\r\\n          }\\r\\n          return parsedCMap;\\r\\n        });\\r\\n      }\\r\\n      return Promise.reject(new Error('Encoding required.'));\\r\\n    }\\r\\n  };\\r\\n}();\\r\\nexports.CMap = CMap;\\r\\nexports.IdentityCMap = IdentityCMap;\\r\\nexports.CMapFactory = CMapFactory;\\r\\n\\r\\n/***/ }),\\r\\n/* 149 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _cff_parser = __w_pdfjs_require__(84);\\r\\n\\r\\nvar _glyphlist = __w_pdfjs_require__(49);\\r\\n\\r\\nvar _encodings = __w_pdfjs_require__(30);\\r\\n\\r\\nvar _standard_fonts = __w_pdfjs_require__(85);\\r\\n\\r\\nvar _unicode = __w_pdfjs_require__(86);\\r\\n\\r\\nvar _font_renderer = __w_pdfjs_require__(151);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar _type1_parser = __w_pdfjs_require__(152);\\r\\n\\r\\nvar PRIVATE_USE_OFFSET_START = 0xE000;\\r\\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\\r\\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\\r\\nvar PDF_GLYPH_SPACE_UNITS = 1000;\\r\\nvar SEAC_ANALYSIS_ENABLED = false;\\r\\nvar FontFlags = {\\r\\n  FixedPitch: 1,\\r\\n  Serif: 2,\\r\\n  Symbolic: 4,\\r\\n  Script: 8,\\r\\n  Nonsymbolic: 32,\\r\\n  Italic: 64,\\r\\n  AllCap: 65536,\\r\\n  SmallCap: 131072,\\r\\n  ForceBold: 262144\\r\\n};\\r\\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\\r\\nfunction adjustWidths(properties) {\\r\\n  if (!properties.fontMatrix) {\\r\\n    return;\\r\\n  }\\r\\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\\r\\n    return;\\r\\n  }\\r\\n  var scale = 0.001 / properties.fontMatrix[0];\\r\\n  var glyphsWidths = properties.widths;\\r\\n  for (var glyph in glyphsWidths) {\\r\\n    glyphsWidths[glyph] *= scale;\\r\\n  }\\r\\n  properties.defaultWidth *= scale;\\r\\n}\\r\\nfunction adjustToUnicode(properties, builtInEncoding) {\\r\\n  if (properties.hasIncludedToUnicodeMap) {\\r\\n    return;\\r\\n  }\\r\\n  if (properties.hasEncoding) {\\r\\n    return;\\r\\n  }\\r\\n  if (builtInEncoding === properties.defaultEncoding) {\\r\\n    return;\\r\\n  }\\r\\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\\r\\n    return;\\r\\n  }\\r\\n  var toUnicode = [],\\r\\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\r\\n  for (var charCode in builtInEncoding) {\\r\\n    var glyphName = builtInEncoding[charCode];\\r\\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\r\\n    if (unicode !== -1) {\\r\\n      toUnicode[charCode] = String.fromCharCode(unicode);\\r\\n    }\\r\\n  }\\r\\n  properties.toUnicode.amend(toUnicode);\\r\\n}\\r\\nfunction getFontType(type, subtype) {\\r\\n  switch (type) {\\r\\n    case 'Type1':\\r\\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\\r\\n    case 'CIDFontType0':\\r\\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\\r\\n    case 'OpenType':\\r\\n      return _util.FontType.OPENTYPE;\\r\\n    case 'TrueType':\\r\\n      return _util.FontType.TRUETYPE;\\r\\n    case 'CIDFontType2':\\r\\n      return _util.FontType.CIDFONTTYPE2;\\r\\n    case 'MMType1':\\r\\n      return _util.FontType.MMTYPE1;\\r\\n    case 'Type0':\\r\\n      return _util.FontType.TYPE0;\\r\\n    default:\\r\\n      return _util.FontType.UNKNOWN;\\r\\n  }\\r\\n}\\r\\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\\r\\n  if (glyphsUnicodeMap[name] !== undefined) {\\r\\n    return name;\\r\\n  }\\r\\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\\r\\n  if (unicode !== -1) {\\r\\n    for (var key in glyphsUnicodeMap) {\\r\\n      if (glyphsUnicodeMap[key] === unicode) {\\r\\n        return key;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\\r\\n  return name;\\r\\n}\\r\\nvar Glyph = function GlyphClosure() {\\r\\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\r\\n    this.fontChar = fontChar;\\r\\n    this.unicode = unicode;\\r\\n    this.accent = accent;\\r\\n    this.width = width;\\r\\n    this.vmetric = vmetric;\\r\\n    this.operatorListId = operatorListId;\\r\\n    this.isSpace = isSpace;\\r\\n    this.isInFont = isInFont;\\r\\n  }\\r\\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\\r\\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\\r\\n  };\\r\\n  return Glyph;\\r\\n}();\\r\\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\\r\\n  function ToUnicodeMap(cmap) {\\r\\n    this._map = cmap;\\r\\n  }\\r\\n  ToUnicodeMap.prototype = {\\r\\n    get length() {\\r\\n      return this._map.length;\\r\\n    },\\r\\n    forEach: function forEach(callback) {\\r\\n      for (var charCode in this._map) {\\r\\n        callback(charCode, this._map[charCode].charCodeAt(0));\\r\\n      }\\r\\n    },\\r\\n    has: function has(i) {\\r\\n      return this._map[i] !== undefined;\\r\\n    },\\r\\n    get: function get(i) {\\r\\n      return this._map[i];\\r\\n    },\\r\\n    charCodeOf: function charCodeOf(value) {\\r\\n      var map = this._map;\\r\\n      if (map.length <= 0x10000) {\\r\\n        return map.indexOf(value);\\r\\n      }\\r\\n      for (var charCode in map) {\\r\\n        if (map[charCode] === value) {\\r\\n          return charCode | 0;\\r\\n        }\\r\\n      }\\r\\n      return -1;\\r\\n    },\\r\\n    amend: function amend(map) {\\r\\n      for (var charCode in map) {\\r\\n        this._map[charCode] = map[charCode];\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return ToUnicodeMap;\\r\\n}();\\r\\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\\r\\n  function IdentityToUnicodeMap(firstChar, lastChar) {\\r\\n    this.firstChar = firstChar;\\r\\n    this.lastChar = lastChar;\\r\\n  }\\r\\n  IdentityToUnicodeMap.prototype = {\\r\\n    get length() {\\r\\n      return this.lastChar + 1 - this.firstChar;\\r\\n    },\\r\\n    forEach: function forEach(callback) {\\r\\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\\r\\n        callback(i, i);\\r\\n      }\\r\\n    },\\r\\n    has: function has(i) {\\r\\n      return this.firstChar <= i && i <= this.lastChar;\\r\\n    },\\r\\n    get: function get(i) {\\r\\n      if (this.firstChar <= i && i <= this.lastChar) {\\r\\n        return String.fromCharCode(i);\\r\\n      }\\r\\n      return undefined;\\r\\n    },\\r\\n    charCodeOf: function charCodeOf(v) {\\r\\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\\r\\n    },\\r\\n    amend: function amend(map) {\\r\\n      throw new Error('Should not call amend()');\\r\\n    }\\r\\n  };\\r\\n  return IdentityToUnicodeMap;\\r\\n}();\\r\\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\\r\\n  function writeInt16(dest, offset, num) {\\r\\n    dest[offset] = num >> 8 & 0xFF;\\r\\n    dest[offset + 1] = num & 0xFF;\\r\\n  }\\r\\n  function writeInt32(dest, offset, num) {\\r\\n    dest[offset] = num >> 24 & 0xFF;\\r\\n    dest[offset + 1] = num >> 16 & 0xFF;\\r\\n    dest[offset + 2] = num >> 8 & 0xFF;\\r\\n    dest[offset + 3] = num & 0xFF;\\r\\n  }\\r\\n  function writeData(dest, offset, data) {\\r\\n    var i, ii;\\r\\n    if (data instanceof Uint8Array) {\\r\\n      dest.set(data, offset);\\r\\n    } else if (typeof data === 'string') {\\r\\n      for (i = 0, ii = data.length; i < ii; i++) {\\r\\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\\r\\n      }\\r\\n    } else {\\r\\n      for (i = 0, ii = data.length; i < ii; i++) {\\r\\n        dest[offset++] = data[i] & 0xFF;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function OpenTypeFileBuilder(sfnt) {\\r\\n    this.sfnt = sfnt;\\r\\n    this.tables = Object.create(null);\\r\\n  }\\r\\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\\r\\n    var maxPower2 = 1,\\r\\n        log2 = 0;\\r\\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\\r\\n      maxPower2 <<= 1;\\r\\n      log2++;\\r\\n    }\\r\\n    var searchRange = maxPower2 * entrySize;\\r\\n    return {\\r\\n      range: searchRange,\\r\\n      entry: log2,\\r\\n      rangeShift: entrySize * entriesCount - searchRange\\r\\n    };\\r\\n  };\\r\\n  var OTF_HEADER_SIZE = 12;\\r\\n  var OTF_TABLE_ENTRY_SIZE = 16;\\r\\n  OpenTypeFileBuilder.prototype = {\\r\\n    toArray: function OpenTypeFileBuilder_toArray() {\\r\\n      var sfnt = this.sfnt;\\r\\n      var tables = this.tables;\\r\\n      var tablesNames = Object.keys(tables);\\r\\n      tablesNames.sort();\\r\\n      var numTables = tablesNames.length;\\r\\n      var i, j, jj, table, tableName;\\r\\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\\r\\n      var tableOffsets = [offset];\\r\\n      for (i = 0; i < numTables; i++) {\\r\\n        table = tables[tablesNames[i]];\\r\\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\\r\\n        offset += paddedLength;\\r\\n        tableOffsets.push(offset);\\r\\n      }\\r\\n      var file = new Uint8Array(offset);\\r\\n      for (i = 0; i < numTables; i++) {\\r\\n        table = tables[tablesNames[i]];\\r\\n        writeData(file, tableOffsets[i], table);\\r\\n      }\\r\\n      if (sfnt === 'true') {\\r\\n        sfnt = (0, _util.string32)(0x00010000);\\r\\n      }\\r\\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\\r\\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\\r\\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\\r\\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\\r\\n      writeInt16(file, 4, numTables);\\r\\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\\r\\n      writeInt16(file, 6, searchParams.range);\\r\\n      writeInt16(file, 8, searchParams.entry);\\r\\n      writeInt16(file, 10, searchParams.rangeShift);\\r\\n      offset = OTF_HEADER_SIZE;\\r\\n      for (i = 0; i < numTables; i++) {\\r\\n        tableName = tablesNames[i];\\r\\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\\r\\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\\r\\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\\r\\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\\r\\n        var checksum = 0;\\r\\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\\r\\n          var quad = (0, _util.readUint32)(file, j);\\r\\n          checksum = checksum + quad >>> 0;\\r\\n        }\\r\\n        writeInt32(file, offset + 4, checksum);\\r\\n        writeInt32(file, offset + 8, tableOffsets[i]);\\r\\n        writeInt32(file, offset + 12, tables[tableName].length);\\r\\n        offset += OTF_TABLE_ENTRY_SIZE;\\r\\n      }\\r\\n      return file;\\r\\n    },\\r\\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\\r\\n      if (tag in this.tables) {\\r\\n        throw new Error('Table ' + tag + ' already exists');\\r\\n      }\\r\\n      this.tables[tag] = data;\\r\\n    }\\r\\n  };\\r\\n  return OpenTypeFileBuilder;\\r\\n}();\\r\\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\\r\\nvar Font = function FontClosure() {\\r\\n  function Font(name, file, properties) {\\r\\n    var charCode;\\r\\n    this.name = name;\\r\\n    this.loadedName = properties.loadedName;\\r\\n    this.isType3Font = properties.isType3Font;\\r\\n    this.sizes = [];\\r\\n    this.missingFile = false;\\r\\n    this.glyphCache = Object.create(null);\\r\\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\\r\\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\r\\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\\r\\n    var type = properties.type;\\r\\n    var subtype = properties.subtype;\\r\\n    this.type = type;\\r\\n    this.subtype = subtype;\\r\\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\\r\\n    this.differences = properties.differences;\\r\\n    this.widths = properties.widths;\\r\\n    this.defaultWidth = properties.defaultWidth;\\r\\n    this.composite = properties.composite;\\r\\n    this.wideChars = properties.wideChars;\\r\\n    this.cMap = properties.cMap;\\r\\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\\r\\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\\r\\n    this.fontMatrix = properties.fontMatrix;\\r\\n    this.bbox = properties.bbox;\\r\\n    this.defaultEncoding = properties.defaultEncoding;\\r\\n    this.toUnicode = properties.toUnicode;\\r\\n    this.toFontChar = [];\\r\\n    if (properties.type === 'Type3') {\\r\\n      for (charCode = 0; charCode < 256; charCode++) {\\r\\n        this.toFontChar[charCode] = this.differences[charCode] || pro\";a.a+=\"perties.defaultEncoding[charCode];\\r\\n      }\\r\\n      this.fontType = _util.FontType.TYPE3;\\r\\n      return;\\r\\n    }\\r\\n    this.cidEncoding = properties.cidEncoding;\\r\\n    this.vertical = properties.vertical;\\r\\n    if (this.vertical) {\\r\\n      this.vmetrics = properties.vmetrics;\\r\\n      this.defaultVMetrics = properties.defaultVMetrics;\\r\\n    }\\r\\n    if (!file || file.isEmpty) {\\r\\n      if (file) {\\r\\n        (0, _util.warn)('Font file is empty in \\\"' + name + '\\\" (' + this.loadedName + ')');\\r\\n      }\\r\\n      this.fallbackToSystemFont();\\r\\n      return;\\r\\n    }\\r\\n    if (subtype === 'Type1C') {\\r\\n      if (type !== 'Type1' && type !== 'MMType1') {\\r\\n        if (isTrueTypeFile(file)) {\\r\\n          subtype = 'TrueType';\\r\\n        } else {\\r\\n          type = 'Type1';\\r\\n        }\\r\\n      } else if (isOpenTypeFile(file)) {\\r\\n        subtype = 'OpenType';\\r\\n      }\\r\\n    }\\r\\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\\r\\n      type = 'CIDFontType0';\\r\\n    }\\r\\n    if (type === 'CIDFontType0') {\\r\\n      if (isType1File(file)) {\\r\\n        subtype = 'CIDFontType0';\\r\\n      } else if (isOpenTypeFile(file)) {\\r\\n        subtype = 'OpenType';\\r\\n      } else {\\r\\n        subtype = 'CIDFontType0C';\\r\\n      }\\r\\n    }\\r\\n    if (subtype === 'OpenType' && type !== 'OpenType') {\\r\\n      type = 'OpenType';\\r\\n    }\\r\\n    try {\\r\\n      var data;\\r\\n      switch (type) {\\r\\n        case 'MMType1':\\r\\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\\r\\n        case 'Type1':\\r\\n        case 'CIDFontType0':\\r\\n          this.mimetype = 'font/opentype';\\r\\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\\r\\n          adjustWidths(properties);\\r\\n          data = this.convert(name, cff, properties);\\r\\n          break;\\r\\n        case 'OpenType':\\r\\n        case 'TrueType':\\r\\n        case 'CIDFontType2':\\r\\n          this.mimetype = 'font/opentype';\\r\\n          data = this.checkAndRepair(name, file, properties);\\r\\n          if (this.isOpenType) {\\r\\n            adjustWidths(properties);\\r\\n            type = 'OpenType';\\r\\n          }\\r\\n          break;\\r\\n        default:\\r\\n          throw new _util.FormatError('Font ' + type + ' is not supported');\\r\\n      }\\r\\n    } catch (e) {\\r\\n      if (!(e instanceof _util.FormatError)) {\\r\\n        throw e;\\r\\n      }\\r\\n      (0, _util.warn)(e);\\r\\n      this.fallbackToSystemFont();\\r\\n      return;\\r\\n    }\\r\\n    this.data = data;\\r\\n    this.fontType = getFontType(type, subtype);\\r\\n    this.fontMatrix = properties.fontMatrix;\\r\\n    this.widths = properties.widths;\\r\\n    this.defaultWidth = properties.defaultWidth;\\r\\n    this.toUnicode = properties.toUnicode;\\r\\n    this.encoding = properties.baseEncoding;\\r\\n    this.seacMap = properties.seacMap;\\r\\n    this.loading = true;\\r\\n  }\\r\\n  Font.getFontID = function () {\\r\\n    var ID = 1;\\r\\n    return function Font_getFontID() {\\r\\n      return String(ID++);\\r\\n    };\\r\\n  }();\\r\\n  function int16(b0, b1) {\\r\\n    return (b0 << 8) + b1;\\r\\n  }\\r\\n  function writeSignedInt16(bytes, index, value) {\\r\\n    bytes[index + 1] = value;\\r\\n    bytes[index] = value >>> 8;\\r\\n  }\\r\\n  function signedInt16(b0, b1) {\\r\\n    var value = (b0 << 8) + b1;\\r\\n    return value & 1 << 15 ? value - 0x10000 : value;\\r\\n  }\\r\\n  function int32(b0, b1, b2, b3) {\\r\\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\\r\\n  }\\r\\n  function string16(value) {\\r\\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\r\\n  }\\r\\n  function safeString16(value) {\\r\\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\\r\\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\\r\\n  }\\r\\n  function isTrueTypeFile(file) {\\r\\n    var header = file.peekBytes(4);\\r\\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\\r\\n  }\\r\\n  function isOpenTypeFile(file) {\\r\\n    var header = file.peekBytes(4);\\r\\n    return (0, _util.bytesToString)(header) === 'OTTO';\\r\\n  }\\r\\n  function isType1File(file) {\\r\\n    var header = file.peekBytes(2);\\r\\n    if (header[0] === 0x25 && header[1] === 0x21) {\\r\\n      return true;\\r\\n    }\\r\\n    if (header[0] === 0x80 && header[1] === 0x01) {\\r\\n      return true;\\r\\n    }\\r\\n    return false;\\r\\n  }\\r\\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\\r\\n    var toFontChar = [],\\r\\n        unicode;\\r\\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\\r\\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\\r\\n      if (unicode !== -1) {\\r\\n        toFontChar[i] = unicode;\\r\\n      }\\r\\n    }\\r\\n    for (var charCode in differences) {\\r\\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\\r\\n      if (unicode !== -1) {\\r\\n        toFontChar[+charCode] = unicode;\\r\\n      }\\r\\n    }\\r\\n    return toFontChar;\\r\\n  }\\r\\n  function isProblematicUnicodeLocation(code) {\\r\\n    var i = 0,\\r\\n        j = ProblematicCharRanges.length - 1;\\r\\n    while (i < j) {\\r\\n      var c = i + j + 1 >> 1;\\r\\n      if (code < ProblematicCharRanges[c]) {\\r\\n        j = c - 1;\\r\\n      } else {\\r\\n        i = c;\\r\\n      }\\r\\n    }\\r\\n    return !(i & 1);\\r\\n  }\\r\\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\\r\\n    var toUnicode = properties.toUnicode;\\r\\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\\r\\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\\r\\n    var newMap = Object.create(null);\\r\\n    var toFontChar = [];\\r\\n    var usedFontCharCodes = [];\\r\\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\\r\\n    for (var originalCharCode in charCodeToGlyphId) {\\r\\n      originalCharCode |= 0;\\r\\n      var glyphId = charCodeToGlyphId[originalCharCode];\\r\\n      if (missingGlyphs[glyphId]) {\\r\\n        continue;\\r\\n      }\\r\\n      var fontCharCode = originalCharCode;\\r\\n      var hasUnicodeValue = false;\\r\\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\\r\\n        hasUnicodeValue = true;\\r\\n        var unicode = toUnicode.get(fontCharCode);\\r\\n        if (unicode.length === 1) {\\r\\n          fontCharCode = unicode.charCodeAt(0);\\r\\n        }\\r\\n      }\\r\\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\\r\\n        do {\\r\\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\\r\\n            (0, _util.warn)('Ran out of space in font private use area.');\\r\\n            break;\\r\\n          }\\r\\n          fontCharCode = nextAvailableFontCharCode++;\\r\\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\\r\\n            fontCharCode = 0xF020;\\r\\n            nextAvailableFontCharCode = fontCharCode + 1;\\r\\n          }\\r\\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\\r\\n      }\\r\\n      newMap[fontCharCode] = glyphId;\\r\\n      toFontChar[originalCharCode] = fontCharCode;\\r\\n      usedFontCharCodes[fontCharCode] = true;\\r\\n    }\\r\\n    return {\\r\\n      toFontChar: toFontChar,\\r\\n      charCodeToGlyphId: newMap,\\r\\n      nextAvailableFontCharCode: nextAvailableFontCharCode\\r\\n    };\\r\\n  }\\r\\n  function getRanges(glyphs, numGlyphs) {\\r\\n    var codes = [];\\r\\n    for (var charCode in glyphs) {\\r\\n      if (glyphs[charCode] >= numGlyphs) {\\r\\n        continue;\\r\\n      }\\r\\n      codes.push({\\r\\n        fontCharCode: charCode | 0,\\r\\n        glyphId: glyphs[charCode]\\r\\n      });\\r\\n    }\\r\\n    if (codes.length === 0) {\\r\\n      codes.push({\\r\\n        fontCharCode: 0,\\r\\n        glyphId: 0\\r\\n      });\\r\\n    }\\r\\n    codes.sort(function fontGetRangesSort(a, b) {\\r\\n      return a.fontCharCode - b.fontCharCode;\\r\\n    });\\r\\n    var ranges = [];\\r\\n    var length = codes.length;\\r\\n    for (var n = 0; n < length;) {\\r\\n      var start = codes[n].fontCharCode;\\r\\n      var codeIndices = [codes[n].glyphId];\\r\\n      ++n;\\r\\n      var end = start;\\r\\n      while (n < length && end + 1 === codes[n].fontCharCode) {\\r\\n        codeIndices.push(codes[n].glyphId);\\r\\n        ++end;\\r\\n        ++n;\\r\\n        if (end === 0xFFFF) {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      ranges.push([start, end, codeIndices]);\\r\\n    }\\r\\n    return ranges;\\r\\n  }\\r\\n  function createCmapTable(glyphs, numGlyphs) {\\r\\n    var ranges = getRanges(glyphs, numGlyphs);\\r\\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\\r\\n    var cmap = '\\\\x00\\\\x00' + string16(numTables) + '\\\\x00\\\\x03' + '\\\\x00\\\\x01' + (0, _util.string32)(4 + numTables * 8);\\r\\n    var i, ii, j, jj;\\r\\n    for (i = ranges.length - 1; i >= 0; --i) {\\r\\n      if (ranges[i][0] <= 0xFFFF) {\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    var bmpLength = i + 1;\\r\\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\\r\\n      ranges[i][1] = 0xFFFE;\\r\\n    }\\r\\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\\r\\n    var segCount = bmpLength + trailingRangesCount;\\r\\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\\r\\n    var startCount = '';\\r\\n    var endCount = '';\\r\\n    var idDeltas = '';\\r\\n    var idRangeOffsets = '';\\r\\n    var glyphsIds = '';\\r\\n    var bias = 0;\\r\\n    var range, start, end, codes;\\r\\n    for (i = 0, ii = bmpLength; i < ii; i++) {\\r\\n      range = ranges[i];\\r\\n      start = range[0];\\r\\n      end = range[1];\\r\\n      startCount += string16(start);\\r\\n      endCount += string16(end);\\r\\n      codes = range[2];\\r\\n      var contiguous = true;\\r\\n      for (j = 1, jj = codes.length; j < jj; ++j) {\\r\\n        if (codes[j] !== codes[j - 1] + 1) {\\r\\n          contiguous = false;\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      if (!contiguous) {\\r\\n        var offset = (segCount - i) * 2 + bias * 2;\\r\\n        bias += end - start + 1;\\r\\n        idDeltas += string16(0);\\r\\n        idRangeOffsets += string16(offset);\\r\\n        for (j = 0, jj = codes.length; j < jj; ++j) {\\r\\n          glyphsIds += string16(codes[j]);\\r\\n        }\\r\\n      } else {\\r\\n        var startCode = codes[0];\\r\\n        idDeltas += string16(startCode - start & 0xFFFF);\\r\\n        idRangeOffsets += string16(0);\\r\\n      }\\r\\n    }\\r\\n    if (trailingRangesCount > 0) {\\r\\n      endCount += '\\\\xFF\\\\xFF';\\r\\n      startCount += '\\\\xFF\\\\xFF';\\r\\n      idDeltas += '\\\\x00\\\\x01';\\r\\n      idRangeOffsets += '\\\\x00\\\\x00';\\r\\n    }\\r\\n    var format314 = '\\\\x00\\\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\\\x00\\\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\\r\\n    var format31012 = '';\\r\\n    var header31012 = '';\\r\\n    if (numTables > 1) {\\r\\n      cmap += '\\\\x00\\\\x03' + '\\\\x00\\\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\\r\\n      format31012 = '';\\r\\n      for (i = 0, ii = ranges.length; i < ii; i++) {\\r\\n        range = ranges[i];\\r\\n        start = range[0];\\r\\n        codes = range[2];\\r\\n        var code = codes[0];\\r\\n        for (j = 1, jj = codes.length; j < jj; ++j) {\\r\\n          if (codes[j] !== codes[j - 1] + 1) {\\r\\n            end = range[0] + j - 1;\\r\\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\\r\\n            start = end + 1;\\r\\n            code = codes[j];\\r\\n          }\\r\\n        }\\r\\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\\r\\n      }\\r\\n      header31012 = '\\\\x00\\\\x0C' + '\\\\x00\\\\x00' + (0, _util.string32)(format31012.length + 16) + '\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(format31012.length / 12);\\r\\n    }\\r\\n    return cmap + '\\\\x00\\\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\\r\\n  }\\r\\n  function validateOS2Table(os2) {\\r\\n    var stream = new _stream.Stream(os2.data);\\r\\n    var version = stream.getUint16();\\r\\n    stream.getBytes(60);\\r\\n    var selection = stream.getUint16();\\r\\n    if (version < 4 && selection & 0x0300) {\\r\\n      return false;\\r\\n    }\\r\\n    var firstChar = stream.getUint16();\\r\\n    var lastChar = stream.getUint16();\\r\\n    if (firstChar > lastChar) {\\r\\n      return false;\\r\\n    }\\r\\n    stream.getBytes(6);\\r\\n    var usWinAscent = stream.getUint16();\\r\\n    if (usWinAscent === 0) {\\r\\n      return false;\\r\\n    }\\r\\n    os2.data[8] = os2.data[9] = 0;\\r\\n    return true;\\r\\n  }\\r\\n  function createOS2Table(properties, charstrings, override) {\\r\\n    override = override || {\\r\\n      unitsPerEm: 0,\\r\\n      yMax: 0,\\r\\n      yMin: 0,\\r\\n      ascent: 0,\\r\\n      descent: 0\\r\\n    };\\r\\n    var ulUnicodeRange1 = 0;\\r\\n    var ulUnicodeRange2 = 0;\\r\\n    var ulUnicodeRange3 = 0;\\r\\n    var ulUnicodeRange4 = 0;\\r\\n    var firstCharIndex = null;\\r\\n    var lastCharIndex = 0;\\r\\n    if (charstrings) {\\r\\n      for (var code in charstrings) {\\r\\n        code |= 0;\\r\\n        if (firstCharIndex > code || !firstCharIndex) {\\r\\n          firstCharIndex = code;\\r\\n        }\\r\\n        if (lastCharIndex < code) {\\r\\n          lastCharIndex = code;\\r\\n        }\\r\\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\\r\\n        if (position < 32) {\\r\\n          ulUnicodeRange1 |= 1 << position;\\r\\n        } else if (position < 64) {\\r\\n          ulUnicodeRange2 |= 1 << position - 32;\\r\\n        } else if (position < 96) {\\r\\n          ulUnicodeRange3 |= 1 << position - 64;\\r\\n        } else if (position < 123) {\\r\\n          ulUnicodeRange4 |= 1 << position - 96;\\r\\n        } else {\\r\\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\\r\\n        }\\r\\n      }\\r\\n    } else {\\r\\n      firstCharIndex = 0;\\r\\n      lastCharIndex = 255;\\r\\n    }\\r\\n    var bbox = properties.bbox || [0, 0, 0, 0];\\r\\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\r\\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\\r\\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\\r\\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\\r\\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\\r\\n      typoDescent = -typoDescent;\\r\\n    }\\r\\n    var winAscent = override.yMax || typoAscent;\\r\\n    var winDescent = -override.yMin || -typoDescent;\\r\\n    return '\\\\x00\\\\x03' + '\\\\x02\\\\x24' + '\\\\x01\\\\xF4' + '\\\\x00\\\\x05' + '\\\\x00\\\\x00' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x00\\\\x8C' + '\\\\x02\\\\x8A' + '\\\\x02\\\\xBB' + '\\\\x00\\\\x00' + '\\\\x01\\\\xDF' + '\\\\x00\\\\x31' + '\\\\x01\\\\x02' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\\\x2A\\\\x32\\\\x31\\\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\\\x00\\\\x64' + string16(winAscent) + string16(winDescent) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\\\x00\\\\x03';\\r\\n  }\\r\\n  function createPostTable(properties) {\\r\\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\\r\\n    return '\\\\x00\\\\x03\\\\x00\\\\x00' + (0, _util.string32)(angle) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00';\\r\\n  }\\r\\n  function createNameTable(name, proto) {\\r\\n    if (!proto) {\\r\\n      proto = [[], []];\\r\\n    }\\r\\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\\r\\n    var stringsUnicode = [];\\r\\n    var i, ii, j, jj, str;\\r\\n    for (i = 0, ii = strings.length; i < ii; i++) {\\r\\n      str = proto[1][i] || strings[i];\\r\\n      var strBufUnicode = [];\\r\\n      for (j = 0, jj = str.length; j < jj; j++) {\\r\\n        strBufUnicode.push(string16(str.charCodeAt(j)));\\r\\n      }\\r\\n      stringsUnicode.push(strBufUnicode.join(''));\\r\\n    }\\r\\n    var names = [strings, stringsUnicode];\\r\\n    var platforms = ['\\\\x00\\\\x01', '\\\\x00\\\\x03'];\\r\\n    var encodings = ['\\\\x00\\\\x00', '\\\\x00\\\\x01'];\\r\\n    var languages = ['\\\\x00\\\\x00', '\\\\x04\\\\x09'];\\r\\n    var namesRecordCount = strings.length * platforms.length;\\r\\n    var nameTable = '\\\\x00\\\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\\r\\n    var strOffset = 0;\\r\\n    for (i = 0, ii = platforms.length; i < ii; i++) {\\r\\n      var strs = names[i];\\r\\n      for (j = 0, jj = strs.length; j < jj; j++) {\\r\\n        str = strs[j];\\r\\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.lengt\";a.a+=\"h) + string16(strOffset);\\r\\n        nameTable += nameRecord;\\r\\n        strOffset += str.length;\\r\\n      }\\r\\n    }\\r\\n    nameTable += strings.join('') + stringsUnicode.join('');\\r\\n    return nameTable;\\r\\n  }\\r\\n  Font.prototype = {\\r\\n    name: null,\\r\\n    font: null,\\r\\n    mimetype: null,\\r\\n    encoding: null,\\r\\n    get renderer() {\\r\\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\\r\\n      return (0, _util.shadow)(this, 'renderer', renderer);\\r\\n    },\\r\\n    exportData: function Font_exportData() {\\r\\n      var data = {};\\r\\n      for (var i in this) {\\r\\n        if (this.hasOwnProperty(i)) {\\r\\n          data[i] = this[i];\\r\\n        }\\r\\n      }\\r\\n      return data;\\r\\n    },\\r\\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\\r\\n      var _this = this;\\r\\n\\r\\n      this.missingFile = true;\\r\\n      var charCode, unicode;\\r\\n      var name = this.name;\\r\\n      var type = this.type;\\r\\n      var subtype = this.subtype;\\r\\n      var fontName = name.replace(/[,_]/g, '-');\\r\\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\\r\\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\\r\\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\\r\\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\\r\\n      this.bold = fontName.search(/bold/gi) !== -1;\\r\\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\\r\\n      this.black = name.search(/Black/g) !== -1;\\r\\n      this.remeasure = Object.keys(this.widths).length > 0;\\r\\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\\r\\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\\r\\n        var map = [];\\r\\n        for (charCode in GlyphMapForStandardFonts) {\\r\\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\\r\\n        }\\r\\n        if (/Arial-?Black/i.test(name)) {\\r\\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\\r\\n          for (charCode in SupplementalGlyphMapForArialBlack) {\\r\\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\\r\\n          }\\r\\n        }\\r\\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\\r\\n        if (!isIdentityUnicode) {\\r\\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\r\\n            map[+charCode] = unicodeCharCode;\\r\\n          });\\r\\n        }\\r\\n        this.toFontChar = map;\\r\\n        this.toUnicode = new ToUnicodeMap(map);\\r\\n      } else if (/Symbol/i.test(fontName)) {\\r\\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\r\\n      } else if (/Dingbats/i.test(fontName)) {\\r\\n        if (/Wingdings/i.test(name)) {\\r\\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\\r\\n        }\\r\\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\\r\\n      } else if (isStandardFont) {\\r\\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\\r\\n      } else {\\r\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\r\\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\\r\\n          if (!_this.composite) {\\r\\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\\r\\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\\r\\n            if (unicode !== -1) {\\r\\n              unicodeCharCode = unicode;\\r\\n            }\\r\\n          }\\r\\n          _this.toFontChar[charCode] = unicodeCharCode;\\r\\n        });\\r\\n      }\\r\\n      this.loadedName = fontName.split('-')[0];\\r\\n      this.loading = false;\\r\\n      this.fontType = getFontType(type, subtype);\\r\\n    },\\r\\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\\r\\n      function readTableEntry(file) {\\r\\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\\r\\n        var checksum = file.getInt32() >>> 0;\\r\\n        var offset = file.getInt32() >>> 0;\\r\\n        var length = file.getInt32() >>> 0;\\r\\n        var previousPosition = file.pos;\\r\\n        file.pos = file.start ? file.start : 0;\\r\\n        file.skip(offset);\\r\\n        var data = file.getBytes(length);\\r\\n        file.pos = previousPosition;\\r\\n        if (tag === 'head') {\\r\\n          data[8] = data[9] = data[10] = data[11] = 0;\\r\\n          data[17] |= 0x20;\\r\\n        }\\r\\n        return {\\r\\n          tag: tag,\\r\\n          checksum: checksum,\\r\\n          length: length,\\r\\n          offset: offset,\\r\\n          data: data\\r\\n        };\\r\\n      }\\r\\n      function readOpenTypeHeader(ttf) {\\r\\n        return {\\r\\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\\r\\n          numTables: ttf.getUint16(),\\r\\n          searchRange: ttf.getUint16(),\\r\\n          entrySelector: ttf.getUint16(),\\r\\n          rangeShift: ttf.getUint16()\\r\\n        };\\r\\n      }\\r\\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\\r\\n        if (!cmap) {\\r\\n          (0, _util.warn)('No cmap table available.');\\r\\n          return {\\r\\n            platformId: -1,\\r\\n            encodingId: -1,\\r\\n            mappings: [],\\r\\n            hasShortCmap: false\\r\\n          };\\r\\n        }\\r\\n        var segment;\\r\\n        var start = (font.start ? font.start : 0) + cmap.offset;\\r\\n        font.pos = start;\\r\\n        font.getUint16();\\r\\n        var numTables = font.getUint16();\\r\\n        var potentialTable;\\r\\n        var canBreak = false;\\r\\n        for (var i = 0; i < numTables; i++) {\\r\\n          var platformId = font.getUint16();\\r\\n          var encodingId = font.getUint16();\\r\\n          var offset = font.getInt32() >>> 0;\\r\\n          var useTable = false;\\r\\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\\r\\n            continue;\\r\\n          }\\r\\n          if (platformId === 0 && encodingId === 0) {\\r\\n            useTable = true;\\r\\n          } else if (platformId === 1 && encodingId === 0) {\\r\\n            useTable = true;\\r\\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\\r\\n            useTable = true;\\r\\n            if (!isSymbolicFont) {\\r\\n              canBreak = true;\\r\\n            }\\r\\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\\r\\n            useTable = true;\\r\\n            canBreak = true;\\r\\n          }\\r\\n          if (useTable) {\\r\\n            potentialTable = {\\r\\n              platformId: platformId,\\r\\n              encodingId: encodingId,\\r\\n              offset: offset\\r\\n            };\\r\\n          }\\r\\n          if (canBreak) {\\r\\n            break;\\r\\n          }\\r\\n        }\\r\\n        if (potentialTable) {\\r\\n          font.pos = start + potentialTable.offset;\\r\\n        }\\r\\n        if (!potentialTable || font.peekByte() === -1) {\\r\\n          (0, _util.warn)('Could not find a preferred cmap table.');\\r\\n          return {\\r\\n            platformId: -1,\\r\\n            encodingId: -1,\\r\\n            mappings: [],\\r\\n            hasShortCmap: false\\r\\n          };\\r\\n        }\\r\\n        var format = font.getUint16();\\r\\n        font.getUint16();\\r\\n        font.getUint16();\\r\\n        var hasShortCmap = false;\\r\\n        var mappings = [];\\r\\n        var j, glyphId;\\r\\n        if (format === 0) {\\r\\n          for (j = 0; j < 256; j++) {\\r\\n            var index = font.getByte();\\r\\n            if (!index) {\\r\\n              continue;\\r\\n            }\\r\\n            mappings.push({\\r\\n              charCode: j,\\r\\n              glyphId: index\\r\\n            });\\r\\n          }\\r\\n          hasShortCmap = true;\\r\\n        } else if (format === 4) {\\r\\n          var segCount = font.getUint16() >> 1;\\r\\n          font.getBytes(6);\\r\\n          var segIndex,\\r\\n              segments = [];\\r\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\r\\n            segments.push({ end: font.getUint16() });\\r\\n          }\\r\\n          font.getUint16();\\r\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\r\\n            segments[segIndex].start = font.getUint16();\\r\\n          }\\r\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\r\\n            segments[segIndex].delta = font.getUint16();\\r\\n          }\\r\\n          var offsetsCount = 0;\\r\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\r\\n            segment = segments[segIndex];\\r\\n            var rangeOffset = font.getUint16();\\r\\n            if (!rangeOffset) {\\r\\n              segment.offsetIndex = -1;\\r\\n              continue;\\r\\n            }\\r\\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\\r\\n            segment.offsetIndex = offsetIndex;\\r\\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\\r\\n          }\\r\\n          var offsets = [];\\r\\n          for (j = 0; j < offsetsCount; j++) {\\r\\n            offsets.push(font.getUint16());\\r\\n          }\\r\\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\\r\\n            segment = segments[segIndex];\\r\\n            start = segment.start;\\r\\n            var end = segment.end;\\r\\n            var delta = segment.delta;\\r\\n            offsetIndex = segment.offsetIndex;\\r\\n            for (j = start; j <= end; j++) {\\r\\n              if (j === 0xFFFF) {\\r\\n                continue;\\r\\n              }\\r\\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\\r\\n              glyphId = glyphId + delta & 0xFFFF;\\r\\n              mappings.push({\\r\\n                charCode: j,\\r\\n                glyphId: glyphId\\r\\n              });\\r\\n            }\\r\\n          }\\r\\n        } else if (format === 6) {\\r\\n          var firstCode = font.getUint16();\\r\\n          var entryCount = font.getUint16();\\r\\n          for (j = 0; j < entryCount; j++) {\\r\\n            glyphId = font.getUint16();\\r\\n            var charCode = firstCode + j;\\r\\n            mappings.push({\\r\\n              charCode: charCode,\\r\\n              glyphId: glyphId\\r\\n            });\\r\\n          }\\r\\n        } else {\\r\\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\\r\\n          return {\\r\\n            platformId: -1,\\r\\n            encodingId: -1,\\r\\n            mappings: [],\\r\\n            hasShortCmap: false\\r\\n          };\\r\\n        }\\r\\n        mappings.sort(function (a, b) {\\r\\n          return a.charCode - b.charCode;\\r\\n        });\\r\\n        for (i = 1; i < mappings.length; i++) {\\r\\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\\r\\n            mappings.splice(i, 1);\\r\\n            i--;\\r\\n          }\\r\\n        }\\r\\n        return {\\r\\n          platformId: potentialTable.platformId,\\r\\n          encodingId: potentialTable.encodingId,\\r\\n          mappings: mappings,\\r\\n          hasShortCmap: hasShortCmap\\r\\n        };\\r\\n      }\\r\\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\\r\\n        if (!header) {\\r\\n          if (metrics) {\\r\\n            metrics.data = null;\\r\\n          }\\r\\n          return;\\r\\n        }\\r\\n        font.pos = (font.start ? font.start : 0) + header.offset;\\r\\n        font.pos += header.length - 2;\\r\\n        var numOfMetrics = font.getUint16();\\r\\n        if (numOfMetrics > numGlyphs) {\\r\\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\\r\\n          numOfMetrics = numGlyphs;\\r\\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\\r\\n          header.data[35] = numOfMetrics & 0x00ff;\\r\\n        }\\r\\n        var numOfSidebearings = numGlyphs - numOfMetrics;\\r\\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\\r\\n        if (numMissing > 0) {\\r\\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\\r\\n          entries.set(metrics.data);\\r\\n          metrics.data = entries;\\r\\n        }\\r\\n      }\\r\\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\\r\\n        var glyphProfile = {\\r\\n          length: 0,\\r\\n          sizeOfInstructions: 0\\r\\n        };\\r\\n        if (sourceEnd - sourceStart <= 12) {\\r\\n          return glyphProfile;\\r\\n        }\\r\\n        var glyf = source.subarray(sourceStart, sourceEnd);\\r\\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\\r\\n        if (contoursCount < 0) {\\r\\n          contoursCount = -1;\\r\\n          writeSignedInt16(glyf, 0, contoursCount);\\r\\n          dest.set(glyf, destStart);\\r\\n          glyphProfile.length = glyf.length;\\r\\n          return glyphProfile;\\r\\n        }\\r\\n        var i,\\r\\n            j = 10,\\r\\n            flagsCount = 0;\\r\\n        for (i = 0; i < contoursCount; i++) {\\r\\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\\r\\n          flagsCount = endPoint + 1;\\r\\n          j += 2;\\r\\n        }\\r\\n        var instructionsStart = j;\\r\\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\\r\\n        glyphProfile.sizeOfInstructions = instructionsLength;\\r\\n        j += 2 + instructionsLength;\\r\\n        var instructionsEnd = j;\\r\\n        var coordinatesLength = 0;\\r\\n        for (i = 0; i < flagsCount; i++) {\\r\\n          var flag = glyf[j++];\\r\\n          if (flag & 0xC0) {\\r\\n            glyf[j - 1] = flag & 0x3F;\\r\\n          }\\r\\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\\r\\n          coordinatesLength += xyLength;\\r\\n          if (flag & 8) {\\r\\n            var repeat = glyf[j++];\\r\\n            i += repeat;\\r\\n            coordinatesLength += repeat * xyLength;\\r\\n          }\\r\\n        }\\r\\n        if (coordinatesLength === 0) {\\r\\n          return glyphProfile;\\r\\n        }\\r\\n        var glyphDataLength = j + coordinatesLength;\\r\\n        if (glyphDataLength > glyf.length) {\\r\\n          return glyphProfile;\\r\\n        }\\r\\n        if (!hintsValid && instructionsLength > 0) {\\r\\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\\r\\n          dest.set([0, 0], destStart + instructionsStart);\\r\\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\\r\\n          glyphDataLength -= instructionsLength;\\r\\n          if (glyf.length - glyphDataLength > 3) {\\r\\n            glyphDataLength = glyphDataLength + 3 & ~3;\\r\\n          }\\r\\n          glyphProfile.length = glyphDataLength;\\r\\n          return glyphProfile;\\r\\n        }\\r\\n        if (glyf.length - glyphDataLength > 3) {\\r\\n          glyphDataLength = glyphDataLength + 3 & ~3;\\r\\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\\r\\n          glyphProfile.length = glyphDataLength;\\r\\n          return glyphProfile;\\r\\n        }\\r\\n        dest.set(glyf, destStart);\\r\\n        glyphProfile.length = glyf.length;\\r\\n        return glyphProfile;\\r\\n      }\\r\\n      function sanitizeHead(head, numGlyphs, locaLength) {\\r\\n        var data = head.data;\\r\\n        var version = int32(data[0], data[1], data[2], data[3]);\\r\\n        if (version >> 16 !== 1) {\\r\\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\\r\\n          data[0] = 0;\\r\\n          data[1] = 1;\\r\\n          data[2] = 0;\\r\\n          data[3] = 0;\\r\\n        }\\r\\n        var indexToLocFormat = int16(data[50], data[51]);\\r\\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\\r\\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\\r\\n          var numGlyphsPlusOne = numGlyphs + 1;\\r\\n          if (locaLength === numGlyphsPlusOne << 1) {\\r\\n            data[50] = 0;\\r\\n            data[51] = 0;\\r\\n          } else if (locaLength === numGlyphsPlusOne << 2) {\\r\\n            data[50] = 0;\\r\\n            data[51] = 1;\\r\\n          } else {\\r\\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\\r\\n        var itemSize, itemDecode, itemEncode;\\r\\n        if (isGlyphLocationsLong) {\\r\\n          itemSize = 4;\\r\\n          itemDecode = function fontItemDecodeLong(data, offset) {\\r\\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\r\\n          };\\r\\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\\r\\n            data[offset] = value >>> 24 & 0xFF;\\r\\n            data[offset + 1] = value >> 16 & 0xFF;\\r\\n            data[offset + 2] = value >> 8 & 0xFF;\\r\\n            data[offset + 3] = value & 0xFF;\\r\\n          };\\r\\n        } else {\\r\\n          \";a.a+=\"itemSize = 2;\\r\\n          itemDecode = function fontItemDecode(data, offset) {\\r\\n            return data[offset] << 9 | data[offset + 1] << 1;\\r\\n          };\\r\\n          itemEncode = function fontItemEncode(data, offset, value) {\\r\\n            data[offset] = value >> 9 & 0xFF;\\r\\n            data[offset + 1] = value >> 1 & 0xFF;\\r\\n          };\\r\\n        }\\r\\n        var locaData = loca.data;\\r\\n        var locaDataSize = itemSize * (1 + numGlyphs);\\r\\n        if (locaData.length !== locaDataSize) {\\r\\n          locaData = new Uint8Array(locaDataSize);\\r\\n          locaData.set(loca.data.subarray(0, locaDataSize));\\r\\n          loca.data = locaData;\\r\\n        }\\r\\n        var oldGlyfData = glyf.data;\\r\\n        var oldGlyfDataLength = oldGlyfData.length;\\r\\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\\r\\n        var startOffset = itemDecode(locaData, 0);\\r\\n        var writeOffset = 0;\\r\\n        var missingGlyphs = Object.create(null);\\r\\n        itemEncode(locaData, 0, writeOffset);\\r\\n        var i, j;\\r\\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\\r\\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\\r\\n          var endOffset = itemDecode(locaData, j);\\r\\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\\r\\n            endOffset = oldGlyfDataLength;\\r\\n          }\\r\\n          if (endOffset > oldGlyfDataLength) {\\r\\n            startOffset = endOffset;\\r\\n          }\\r\\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\\r\\n          var newLength = glyphProfile.length;\\r\\n          if (newLength === 0) {\\r\\n            missingGlyphs[i] = true;\\r\\n          }\\r\\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\\r\\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\\r\\n          }\\r\\n          writeOffset += newLength;\\r\\n          itemEncode(locaData, j, writeOffset);\\r\\n          startOffset = endOffset;\\r\\n        }\\r\\n        if (writeOffset === 0) {\\r\\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\\r\\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\\r\\n            itemEncode(locaData, j, simpleGlyph.length);\\r\\n          }\\r\\n          glyf.data = simpleGlyph;\\r\\n        } else if (dupFirstEntry) {\\r\\n          var firstEntryLength = itemDecode(locaData, itemSize);\\r\\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\\r\\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\\r\\n          } else {\\r\\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\\r\\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\\r\\n          }\\r\\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\\r\\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\\r\\n        } else {\\r\\n          glyf.data = newGlyfData.subarray(0, writeOffset);\\r\\n        }\\r\\n        return {\\r\\n          missingGlyphs: missingGlyphs,\\r\\n          maxSizeOfInstructions: maxSizeOfInstructions\\r\\n        };\\r\\n      }\\r\\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\\r\\n        var start = (font.start ? font.start : 0) + post.offset;\\r\\n        font.pos = start;\\r\\n        var length = post.length,\\r\\n            end = start + length;\\r\\n        var version = font.getInt32();\\r\\n        font.getBytes(28);\\r\\n        var glyphNames;\\r\\n        var valid = true;\\r\\n        var i;\\r\\n        switch (version) {\\r\\n          case 0x00010000:\\r\\n            glyphNames = MacStandardGlyphOrdering;\\r\\n            break;\\r\\n          case 0x00020000:\\r\\n            var numGlyphs = font.getUint16();\\r\\n            if (numGlyphs !== maxpNumGlyphs) {\\r\\n              valid = false;\\r\\n              break;\\r\\n            }\\r\\n            var glyphNameIndexes = [];\\r\\n            for (i = 0; i < numGlyphs; ++i) {\\r\\n              var index = font.getUint16();\\r\\n              if (index >= 32768) {\\r\\n                valid = false;\\r\\n                break;\\r\\n              }\\r\\n              glyphNameIndexes.push(index);\\r\\n            }\\r\\n            if (!valid) {\\r\\n              break;\\r\\n            }\\r\\n            var customNames = [];\\r\\n            var strBuf = [];\\r\\n            while (font.pos < end) {\\r\\n              var stringLength = font.getByte();\\r\\n              strBuf.length = stringLength;\\r\\n              for (i = 0; i < stringLength; ++i) {\\r\\n                strBuf[i] = String.fromCharCode(font.getByte());\\r\\n              }\\r\\n              customNames.push(strBuf.join(''));\\r\\n            }\\r\\n            glyphNames = [];\\r\\n            for (i = 0; i < numGlyphs; ++i) {\\r\\n              var j = glyphNameIndexes[i];\\r\\n              if (j < 258) {\\r\\n                glyphNames.push(MacStandardGlyphOrdering[j]);\\r\\n                continue;\\r\\n              }\\r\\n              glyphNames.push(customNames[j - 258]);\\r\\n            }\\r\\n            break;\\r\\n          case 0x00030000:\\r\\n            break;\\r\\n          default:\\r\\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\\r\\n            valid = false;\\r\\n            if (properties.defaultEncoding) {\\r\\n              glyphNames = properties.defaultEncoding;\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        properties.glyphNames = glyphNames;\\r\\n        return valid;\\r\\n      }\\r\\n      function readNameTable(nameTable) {\\r\\n        var start = (font.start ? font.start : 0) + nameTable.offset;\\r\\n        font.pos = start;\\r\\n        var names = [[], []];\\r\\n        var length = nameTable.length,\\r\\n            end = start + length;\\r\\n        var format = font.getUint16();\\r\\n        var FORMAT_0_HEADER_LENGTH = 6;\\r\\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\\r\\n          return names;\\r\\n        }\\r\\n        var numRecords = font.getUint16();\\r\\n        var stringsStart = font.getUint16();\\r\\n        var records = [];\\r\\n        var NAME_RECORD_LENGTH = 12;\\r\\n        var i, ii;\\r\\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\\r\\n          var r = {\\r\\n            platform: font.getUint16(),\\r\\n            encoding: font.getUint16(),\\r\\n            language: font.getUint16(),\\r\\n            name: font.getUint16(),\\r\\n            length: font.getUint16(),\\r\\n            offset: font.getUint16()\\r\\n          };\\r\\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\\r\\n            records.push(r);\\r\\n          }\\r\\n        }\\r\\n        for (i = 0, ii = records.length; i < ii; i++) {\\r\\n          var record = records[i];\\r\\n          if (record.length <= 0) {\\r\\n            continue;\\r\\n          }\\r\\n          var pos = start + stringsStart + record.offset;\\r\\n          if (pos + record.length > end) {\\r\\n            continue;\\r\\n          }\\r\\n          font.pos = pos;\\r\\n          var nameIndex = record.name;\\r\\n          if (record.encoding) {\\r\\n            var str = '';\\r\\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\\r\\n              str += String.fromCharCode(font.getUint16());\\r\\n            }\\r\\n            names[1][nameIndex] = str;\\r\\n          } else {\\r\\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\\r\\n          }\\r\\n        }\\r\\n        return names;\\r\\n      }\\r\\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\\r\\n      function sanitizeTTProgram(table, ttContext) {\\r\\n        var data = table.data;\\r\\n        var i = 0,\\r\\n            j,\\r\\n            n,\\r\\n            b,\\r\\n            funcId,\\r\\n            pc,\\r\\n            lastEndf = 0,\\r\\n            lastDeff = 0;\\r\\n        var stack = [];\\r\\n        var callstack = [];\\r\\n        var functionsCalled = [];\\r\\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\\r\\n        var inFDEF = false,\\r\\n            ifLevel = 0,\\r\\n            inELSE = 0;\\r\\n        for (var ii = data.length; i < ii;) {\\r\\n          var op = data[i++];\\r\\n          if (op === 0x40) {\\r\\n            n = data[i++];\\r\\n            if (inFDEF || inELSE) {\\r\\n              i += n;\\r\\n            } else {\\r\\n              for (j = 0; j < n; j++) {\\r\\n                stack.push(data[i++]);\\r\\n              }\\r\\n            }\\r\\n          } else if (op === 0x41) {\\r\\n            n = data[i++];\\r\\n            if (inFDEF || inELSE) {\\r\\n              i += n * 2;\\r\\n            } else {\\r\\n              for (j = 0; j < n; j++) {\\r\\n                b = data[i++];\\r\\n                stack.push(b << 8 | data[i++]);\\r\\n              }\\r\\n            }\\r\\n          } else if ((op & 0xF8) === 0xB0) {\\r\\n            n = op - 0xB0 + 1;\\r\\n            if (inFDEF || inELSE) {\\r\\n              i += n;\\r\\n            } else {\\r\\n              for (j = 0; j < n; j++) {\\r\\n                stack.push(data[i++]);\\r\\n              }\\r\\n            }\\r\\n          } else if ((op & 0xF8) === 0xB8) {\\r\\n            n = op - 0xB8 + 1;\\r\\n            if (inFDEF || inELSE) {\\r\\n              i += n * 2;\\r\\n            } else {\\r\\n              for (j = 0; j < n; j++) {\\r\\n                b = data[i++];\\r\\n                stack.push(b << 8 | data[i++]);\\r\\n              }\\r\\n            }\\r\\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\\r\\n            if (!inFDEF && !inELSE) {\\r\\n              funcId = stack[stack.length - 1];\\r\\n              ttContext.functionsUsed[funcId] = true;\\r\\n              if (funcId in ttContext.functionsStackDeltas) {\\r\\n                stack.length += ttContext.functionsStackDeltas[funcId];\\r\\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\\r\\n                callstack.push({\\r\\n                  data: data,\\r\\n                  i: i,\\r\\n                  stackTop: stack.length - 1\\r\\n                });\\r\\n                functionsCalled.push(funcId);\\r\\n                pc = ttContext.functionsDefined[funcId];\\r\\n                if (!pc) {\\r\\n                  (0, _util.warn)('TT: CALL non-existent function');\\r\\n                  ttContext.hintsValid = false;\\r\\n                  return;\\r\\n                }\\r\\n                data = pc.data;\\r\\n                i = pc.i;\\r\\n              }\\r\\n            }\\r\\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\\r\\n            if (inFDEF || inELSE) {\\r\\n              (0, _util.warn)('TT: nested FDEFs not allowed');\\r\\n              tooComplexToFollowFunctions = true;\\r\\n            }\\r\\n            inFDEF = true;\\r\\n            lastDeff = i;\\r\\n            funcId = stack.pop();\\r\\n            ttContext.functionsDefined[funcId] = {\\r\\n              data: data,\\r\\n              i: i\\r\\n            };\\r\\n          } else if (op === 0x2D) {\\r\\n            if (inFDEF) {\\r\\n              inFDEF = false;\\r\\n              lastEndf = i;\\r\\n            } else {\\r\\n              pc = callstack.pop();\\r\\n              if (!pc) {\\r\\n                (0, _util.warn)('TT: ENDF bad stack');\\r\\n                ttContext.hintsValid = false;\\r\\n                return;\\r\\n              }\\r\\n              funcId = functionsCalled.pop();\\r\\n              data = pc.data;\\r\\n              i = pc.i;\\r\\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\\r\\n            }\\r\\n          } else if (op === 0x89) {\\r\\n            if (inFDEF || inELSE) {\\r\\n              (0, _util.warn)('TT: nested IDEFs not allowed');\\r\\n              tooComplexToFollowFunctions = true;\\r\\n            }\\r\\n            inFDEF = true;\\r\\n            lastDeff = i;\\r\\n          } else if (op === 0x58) {\\r\\n            ++ifLevel;\\r\\n          } else if (op === 0x1B) {\\r\\n            inELSE = ifLevel;\\r\\n          } else if (op === 0x59) {\\r\\n            if (inELSE === ifLevel) {\\r\\n              inELSE = 0;\\r\\n            }\\r\\n            --ifLevel;\\r\\n          } else if (op === 0x1C) {\\r\\n            if (!inFDEF && !inELSE) {\\r\\n              var offset = stack[stack.length - 1];\\r\\n              if (offset > 0) {\\r\\n                i += offset - 1;\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n          if (!inFDEF && !inELSE) {\\r\\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\\r\\n            if (op >= 0x71 && op <= 0x75) {\\r\\n              n = stack.pop();\\r\\n              if (!isNaN(n)) {\\r\\n                stackDelta = -n * 2;\\r\\n              }\\r\\n            }\\r\\n            while (stackDelta < 0 && stack.length > 0) {\\r\\n              stack.pop();\\r\\n              stackDelta++;\\r\\n            }\\r\\n            while (stackDelta > 0) {\\r\\n              stack.push(NaN);\\r\\n              stackDelta--;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\\r\\n        var content = [data];\\r\\n        if (i > data.length) {\\r\\n          content.push(new Uint8Array(i - data.length));\\r\\n        }\\r\\n        if (lastDeff > lastEndf) {\\r\\n          (0, _util.warn)('TT: complementing a missing function tail');\\r\\n          content.push(new Uint8Array([0x22, 0x2D]));\\r\\n        }\\r\\n        foldTTTable(table, content);\\r\\n      }\\r\\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\\r\\n        if (ttContext.tooComplexToFollowFunctions) {\\r\\n          return;\\r\\n        }\\r\\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\\r\\n          (0, _util.warn)('TT: more functions defined than expected');\\r\\n          ttContext.hintsValid = false;\\r\\n          return;\\r\\n        }\\r\\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\\r\\n          if (j > maxFunctionDefs) {\\r\\n            (0, _util.warn)('TT: invalid function id: ' + j);\\r\\n            ttContext.hintsValid = false;\\r\\n            return;\\r\\n          }\\r\\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\\r\\n            (0, _util.warn)('TT: undefined function: ' + j);\\r\\n            ttContext.hintsValid = false;\\r\\n            return;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      function foldTTTable(table, content) {\\r\\n        if (content.length > 1) {\\r\\n          var newLength = 0;\\r\\n          var j, jj;\\r\\n          for (j = 0, jj = content.length; j < jj; j++) {\\r\\n            newLength += content[j].length;\\r\\n          }\\r\\n          newLength = newLength + 3 & ~3;\\r\\n          var result = new Uint8Array(newLength);\\r\\n          var pos = 0;\\r\\n          for (j = 0, jj = content.length; j < jj; j++) {\\r\\n            result.set(content[j], pos);\\r\\n            pos += content[j].length;\\r\\n          }\\r\\n          table.data = result;\\r\\n          table.length = newLength;\\r\\n        }\\r\\n      }\\r\\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\\r\\n        var ttContext = {\\r\\n          functionsDefined: [],\\r\\n          functionsUsed: [],\\r\\n          functionsStackDeltas: [],\\r\\n          tooComplexToFollowFunctions: false,\\r\\n          hintsValid: true\\r\\n        };\\r\\n        if (fpgm) {\\r\\n          sanitizeTTProgram(fpgm, ttContext);\\r\\n        }\\r\\n        if (prep) {\\r\\n          sanitizeTTProgram(prep, ttContext);\\r\\n        }\\r\\n        if (fpgm) {\\r\\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\\r\\n        }\\r\\n        if (cvt && cvt.length & 1) {\\r\\n          var cvtData = new Uint8Array(cvt.length + 1);\\r\\n          cvtData.set(cvt.data);\\r\\n          cvt.data = cvtData;\\r\\n        }\\r\\n        return ttContext.hintsValid;\\r\\n      }\\r\\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\\r\\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\\r\\n      var header = readOpenTypeHeader(font);\\r\\n      var numTables = header.numTables;\\r\\n      var cff, cffFile;\\r\\n      var tables = Object.create(null);\\r\\n      tables['OS/2'] = null;\\r\\n      tables['cmap'] = null;\\r\\n      tables['head'] = null;\\r\\n      tables['hhea'] = null;\\r\\n      tables['hmtx'] = null;\\r\\n      tables['maxp'] = null;\\r\\n      tables['name'] = null;\\r\\n      tables['post'] = null;\\r\\n      var table;\\r\\n      for (var i = 0; i < numTables; i++) {\\r\\n        table = readTableEntry(font);\\r\\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\\r\\n          continue;\\r\\n        }\\r\\n        if (tab\";a.a+=\"le.length === 0) {\\r\\n          continue;\\r\\n        }\\r\\n        tables[table.tag] = table;\\r\\n      }\\r\\n      var isTrueType = !tables['CFF '];\\r\\n      if (!isTrueType) {\\r\\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\\r\\n          cffFile = new _stream.Stream(tables['CFF '].data);\\r\\n          cff = new CFFFont(cffFile, properties);\\r\\n          adjustWidths(properties);\\r\\n          return this.convert(name, cff, properties);\\r\\n        }\\r\\n        delete tables['glyf'];\\r\\n        delete tables['loca'];\\r\\n        delete tables['fpgm'];\\r\\n        delete tables['prep'];\\r\\n        delete tables['cvt '];\\r\\n        this.isOpenType = true;\\r\\n      } else {\\r\\n        if (!tables['loca']) {\\r\\n          throw new _util.FormatError('Required \\\"loca\\\" table is not found');\\r\\n        }\\r\\n        if (!tables['glyf']) {\\r\\n          (0, _util.warn)('Required \\\"glyf\\\" table is not found -- trying to recover.');\\r\\n          tables['glyf'] = {\\r\\n            tag: 'glyf',\\r\\n            data: new Uint8Array(0)\\r\\n          };\\r\\n        }\\r\\n        this.isOpenType = false;\\r\\n      }\\r\\n      if (!tables['maxp']) {\\r\\n        throw new _util.FormatError('Required \\\"maxp\\\" table is not found');\\r\\n      }\\r\\n      font.pos = (font.start || 0) + tables['maxp'].offset;\\r\\n      var version = font.getInt32();\\r\\n      var numGlyphs = font.getUint16();\\r\\n      var maxFunctionDefs = 0;\\r\\n      var maxSizeOfInstructions = 0;\\r\\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\r\\n        font.pos += 8;\\r\\n        var maxZones = font.getUint16();\\r\\n        if (maxZones > 2) {\\r\\n          tables['maxp'].data[14] = 0;\\r\\n          tables['maxp'].data[15] = 2;\\r\\n        }\\r\\n        font.pos += 4;\\r\\n        maxFunctionDefs = font.getUint16();\\r\\n        font.pos += 6;\\r\\n        maxSizeOfInstructions = font.getUint16();\\r\\n      }\\r\\n      var dupFirstEntry = false;\\r\\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\\\0') {\\r\\n        dupFirstEntry = true;\\r\\n        numGlyphs++;\\r\\n        tables['maxp'].data[4] = numGlyphs >> 8;\\r\\n        tables['maxp'].data[5] = numGlyphs & 255;\\r\\n      }\\r\\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\\r\\n      if (!hintsValid) {\\r\\n        delete tables['fpgm'];\\r\\n        delete tables['prep'];\\r\\n        delete tables['cvt '];\\r\\n      }\\r\\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\\r\\n      if (!tables['head']) {\\r\\n        throw new _util.FormatError('Required \\\"head\\\" table is not found');\\r\\n      }\\r\\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\\r\\n      var missingGlyphs = Object.create(null);\\r\\n      if (isTrueType) {\\r\\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\\r\\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\\r\\n        missingGlyphs = glyphsInfo.missingGlyphs;\\r\\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\\r\\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\\r\\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\\r\\n        }\\r\\n      }\\r\\n      if (!tables['hhea']) {\\r\\n        throw new _util.FormatError('Required \\\"hhea\\\" table is not found');\\r\\n      }\\r\\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\\r\\n        tables['hhea'].data[10] = 0xFF;\\r\\n        tables['hhea'].data[11] = 0xFF;\\r\\n      }\\r\\n      var metricsOverride = {\\r\\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\\r\\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\\r\\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\\r\\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\\r\\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\\r\\n      };\\r\\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\\r\\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\\r\\n      if (tables['post']) {\\r\\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\\r\\n        if (!valid) {\\r\\n          tables['post'] = null;\\r\\n        }\\r\\n      }\\r\\n      var charCodeToGlyphId = [],\\r\\n          charCode;\\r\\n      function hasGlyph(glyphId) {\\r\\n        return !missingGlyphs[glyphId];\\r\\n      }\\r\\n      if (properties.composite) {\\r\\n        var cidToGidMap = properties.cidToGidMap || [];\\r\\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\\r\\n        properties.cMap.forEach(function (charCode, cid) {\\r\\n          if (cid > 0xffff) {\\r\\n            throw new _util.FormatError('Max size of CID is 65,535');\\r\\n          }\\r\\n          var glyphId = -1;\\r\\n          if (isCidToGidMapEmpty) {\\r\\n            glyphId = cid;\\r\\n          } else if (cidToGidMap[cid] !== undefined) {\\r\\n            glyphId = cidToGidMap[cid];\\r\\n          }\\r\\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\\r\\n            charCodeToGlyphId[charCode] = glyphId;\\r\\n          }\\r\\n        });\\r\\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\\r\\n          charCodeToGlyphId[0] = numGlyphs - 1;\\r\\n        }\\r\\n      } else {\\r\\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\\r\\n        var cmapPlatformId = cmapTable.platformId;\\r\\n        var cmapEncodingId = cmapTable.encodingId;\\r\\n        var cmapMappings = cmapTable.mappings;\\r\\n        var cmapMappingsLength = cmapMappings.length;\\r\\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\\r\\n          var baseEncoding = [];\\r\\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\\r\\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\r\\n          }\\r\\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\r\\n          for (charCode = 0; charCode < 256; charCode++) {\\r\\n            var glyphName, standardGlyphName;\\r\\n            if (this.differences && charCode in this.differences) {\\r\\n              glyphName = this.differences[charCode];\\r\\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\\r\\n              glyphName = baseEncoding[charCode];\\r\\n            } else {\\r\\n              glyphName = _encodings.StandardEncoding[charCode];\\r\\n            }\\r\\n            if (!glyphName) {\\r\\n              continue;\\r\\n            }\\r\\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\r\\n            var unicodeOrCharCode;\\r\\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\\r\\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\\r\\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\\r\\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\\r\\n            }\\r\\n            var found = false;\\r\\n            for (i = 0; i < cmapMappingsLength; ++i) {\\r\\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\\r\\n                continue;\\r\\n              }\\r\\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\\r\\n              found = true;\\r\\n              break;\\r\\n            }\\r\\n            if (!found && properties.glyphNames) {\\r\\n              var glyphId = properties.glyphNames.indexOf(glyphName);\\r\\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\\r\\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\\r\\n              }\\r\\n              if (glyphId > 0 && hasGlyph(glyphId)) {\\r\\n                charCodeToGlyphId[charCode] = glyphId;\\r\\n                found = true;\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\\r\\n          for (i = 0; i < cmapMappingsLength; ++i) {\\r\\n            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\\r\\n          }\\r\\n        } else {\\r\\n          for (i = 0; i < cmapMappingsLength; ++i) {\\r\\n            charCode = cmapMappings[i].charCode;\\r\\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\\r\\n              charCode &= 0xFF;\\r\\n            }\\r\\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      if (charCodeToGlyphId.length === 0) {\\r\\n        charCodeToGlyphId[0] = 0;\\r\\n      }\\r\\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\\r\\n      this.toFontChar = newMapping.toFontChar;\\r\\n      tables['cmap'] = {\\r\\n        tag: 'cmap',\\r\\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\\r\\n      };\\r\\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\\r\\n        tables['OS/2'] = {\\r\\n          tag: 'OS/2',\\r\\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\\r\\n        };\\r\\n      }\\r\\n      if (!tables['post']) {\\r\\n        tables['post'] = {\\r\\n          tag: 'post',\\r\\n          data: createPostTable(properties)\\r\\n        };\\r\\n      }\\r\\n      if (!isTrueType) {\\r\\n        try {\\r\\n          cffFile = new _stream.Stream(tables['CFF '].data);\\r\\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\\r\\n          cff = parser.parse();\\r\\n          var compiler = new _cff_parser.CFFCompiler(cff);\\r\\n          tables['CFF '].data = compiler.compile();\\r\\n        } catch (e) {\\r\\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\r\\n        }\\r\\n      }\\r\\n      if (!tables['name']) {\\r\\n        tables['name'] = {\\r\\n          tag: 'name',\\r\\n          data: createNameTable(this.name)\\r\\n        };\\r\\n      } else {\\r\\n        var namePrototype = readNameTable(tables['name']);\\r\\n        tables['name'].data = createNameTable(name, namePrototype);\\r\\n      }\\r\\n      var builder = new OpenTypeFileBuilder(header.version);\\r\\n      for (var tableTag in tables) {\\r\\n        builder.addTable(tableTag, tables[tableTag].data);\\r\\n      }\\r\\n      return builder.toArray();\\r\\n    },\\r\\n    convert: function Font_convert(fontName, font, properties) {\\r\\n      properties.fixedPitch = false;\\r\\n      if (properties.builtInEncoding) {\\r\\n        adjustToUnicode(properties, properties.builtInEncoding);\\r\\n      }\\r\\n      var mapping = font.getGlyphMapping(properties);\\r\\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\\r\\n      this.toFontChar = newMapping.toFontChar;\\r\\n      var numGlyphs = font.numGlyphs;\\r\\n      function getCharCodes(charCodeToGlyphId, glyphId) {\\r\\n        var charCodes = null;\\r\\n        for (var charCode in charCodeToGlyphId) {\\r\\n          if (glyphId === charCodeToGlyphId[charCode]) {\\r\\n            if (!charCodes) {\\r\\n              charCodes = [];\\r\\n            }\\r\\n            charCodes.push(charCode | 0);\\r\\n          }\\r\\n        }\\r\\n        return charCodes;\\r\\n      }\\r\\n      function createCharCode(charCodeToGlyphId, glyphId) {\\r\\n        for (var charCode in charCodeToGlyphId) {\\r\\n          if (glyphId === charCodeToGlyphId[charCode]) {\\r\\n            return charCode | 0;\\r\\n          }\\r\\n        }\\r\\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\\r\\n        return newMapping.nextAvailableFontCharCode++;\\r\\n      }\\r\\n      var seacs = font.seacs;\\r\\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\\r\\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\\r\\n        var charset = font.getCharset();\\r\\n        var seacMap = Object.create(null);\\r\\n        for (var glyphId in seacs) {\\r\\n          glyphId |= 0;\\r\\n          var seac = seacs[glyphId];\\r\\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\\r\\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\\r\\n          var baseGlyphId = charset.indexOf(baseGlyphName);\\r\\n          var accentGlyphId = charset.indexOf(accentGlyphName);\\r\\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\\r\\n            continue;\\r\\n          }\\r\\n          var accentOffset = {\\r\\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\\r\\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\\r\\n          };\\r\\n          var charCodes = getCharCodes(mapping, glyphId);\\r\\n          if (!charCodes) {\\r\\n            continue;\\r\\n          }\\r\\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\\r\\n            var charCode = charCodes[i];\\r\\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\\r\\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\\r\\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\\r\\n            seacMap[charCode] = {\\r\\n              baseFontCharCode: baseFontCharCode,\\r\\n              accentFontCharCode: accentFontCharCode,\\r\\n              accentOffset: accentOffset\\r\\n            };\\r\\n          }\\r\\n        }\\r\\n        properties.seacMap = seacMap;\\r\\n      }\\r\\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\\r\\n      var builder = new OpenTypeFileBuilder('\\\\x4F\\\\x54\\\\x54\\\\x4F');\\r\\n      builder.addTable('CFF ', font.data);\\r\\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\\r\\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\\r\\n      builder.addTable('head', '\\\\x00\\\\x01\\\\x00\\\\x00' + '\\\\x00\\\\x00\\\\x10\\\\x00' + '\\\\x00\\\\x00\\\\x00\\\\x00' + '\\\\x5F\\\\x0F\\\\x3C\\\\xF5' + '\\\\x00\\\\x00' + safeString16(unitsPerEm) + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00\\\\x00\\\\x00\\\\x9e\\\\x0b\\\\x7e\\\\x27' + '\\\\x00\\\\x00' + safeString16(properties.descent) + '\\\\x0F\\\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\\\x00\\\\x11' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00');\\r\\n      builder.addTable('hhea', '\\\\x00\\\\x01\\\\x00\\\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\\\x00\\\\x00' + '\\\\xFF\\\\xFF' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + '\\\\x00\\\\x00' + string16(numGlyphs));\\r\\n      builder.addTable('hmtx', function fontFieldsHmtx() {\\r\\n        var charstrings = font.charstrings;\\r\\n        var cffWidths = font.cff ? font.cff.widths : null;\\r\\n        var hmtx = '\\\\x00\\\\x00\\\\x00\\\\x00';\\r\\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\\r\\n          var width = 0;\\r\\n          if (charstrings) {\\r\\n            var charstring = charstrings[i - 1];\\r\\n            width = 'width' in charstring ? charstring.width : 0;\\r\\n          } else if (cffWidths) {\\r\\n            width = Math.ceil(cffWidths[i] || 0);\\r\\n          }\\r\\n          hmtx += string16(width) + string16(0);\\r\\n        }\\r\\n        return hmtx;\\r\\n      }());\\r\\n      builder.addTable('maxp', '\\\\x00\\\\x00\\\\x50\\\\x00' + string16(numGlyphs));\\r\\n      builder.addTable('name', createNameTable(fontName));\\r\\n      builder.addTable('post', createPostTable(properties));\\r\\n      return builder.toArray();\\r\\n    },\\r\\n    get spaceWidth() {\\r\\n      if ('_shadowWidth' in this) {\\r\\n        return this._shadowWidth;\\r\\n      }\\r\\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\\r\\n      var width;\\r\\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\\r\\n        var glyphName = possibleSpaceReplacements[i];\\r\\n        if (glyphName in this.widths) {\\r\\n          width = this.widths[glyphName];\\r\\n          break;\\r\\n        }\\r\\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\r\\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\\r\\n        var charcode = 0;\\r\\n        if (this.composite) {\\r\\n          if (this.cMap.contains(glyphUnicode)) {\\r\\n            charcode = this.cMap.lookup(glyphUnicode);\\r\\n          }\\r\\n        }\\r\\n        if (!charcode && this.toUnicode) {\\r\\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\\r\\n        }\\r\\n        if (charcode <= 0) {\\r\\n          charcode = glyphUnicode;\\r\\n        }\\r\\n        width = this.widths[charcode];\\r\\n        if (width) {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      width = width || this.defaultWidth;\\r\\n      this._shadowWidth = width;\\r\\n      return width;\\r\\n    },\\r\\n    charToGlyph:\";a.a+=\" function Font_charToGlyph(charcode, isSpace) {\\r\\n      var fontCharCode, width, operatorListId;\\r\\n      var widthCode = charcode;\\r\\n      if (this.cMap && this.cMap.contains(charcode)) {\\r\\n        widthCode = this.cMap.lookup(charcode);\\r\\n      }\\r\\n      width = this.widths[widthCode];\\r\\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\\r\\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\\r\\n      var unicode = this.toUnicode.get(charcode) || charcode;\\r\\n      if (typeof unicode === 'number') {\\r\\n        unicode = String.fromCharCode(unicode);\\r\\n      }\\r\\n      var isInFont = charcode in this.toFontChar;\\r\\n      fontCharCode = this.toFontChar[charcode] || charcode;\\r\\n      if (this.missingFile) {\\r\\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\\r\\n      }\\r\\n      if (this.isType3Font) {\\r\\n        operatorListId = fontCharCode;\\r\\n      }\\r\\n      var accent = null;\\r\\n      if (this.seacMap && this.seacMap[charcode]) {\\r\\n        isInFont = true;\\r\\n        var seac = this.seacMap[charcode];\\r\\n        fontCharCode = seac.baseFontCharCode;\\r\\n        accent = {\\r\\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\\r\\n          offset: seac.accentOffset\\r\\n        };\\r\\n      }\\r\\n      var fontChar = String.fromCharCode(fontCharCode);\\r\\n      var glyph = this.glyphCache[charcode];\\r\\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\\r\\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\\r\\n        this.glyphCache[charcode] = glyph;\\r\\n      }\\r\\n      return glyph;\\r\\n    },\\r\\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\\r\\n      var charsCache = this.charsCache;\\r\\n      var glyphs, glyph, charcode;\\r\\n      if (charsCache) {\\r\\n        glyphs = charsCache[chars];\\r\\n        if (glyphs) {\\r\\n          return glyphs;\\r\\n        }\\r\\n      }\\r\\n      if (!charsCache) {\\r\\n        charsCache = this.charsCache = Object.create(null);\\r\\n      }\\r\\n      glyphs = [];\\r\\n      var charsCacheKey = chars;\\r\\n      var i = 0,\\r\\n          ii;\\r\\n      if (this.cMap) {\\r\\n        var c = Object.create(null);\\r\\n        while (i < chars.length) {\\r\\n          this.cMap.readCharCode(chars, i, c);\\r\\n          charcode = c.charcode;\\r\\n          var length = c.length;\\r\\n          i += length;\\r\\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\\r\\n          glyph = this.charToGlyph(charcode, isSpace);\\r\\n          glyphs.push(glyph);\\r\\n        }\\r\\n      } else {\\r\\n        for (i = 0, ii = chars.length; i < ii; ++i) {\\r\\n          charcode = chars.charCodeAt(i);\\r\\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\\r\\n          glyphs.push(glyph);\\r\\n        }\\r\\n      }\\r\\n      return charsCache[charsCacheKey] = glyphs;\\r\\n    }\\r\\n  };\\r\\n  return Font;\\r\\n}();\\r\\nvar ErrorFont = function ErrorFontClosure() {\\r\\n  function ErrorFont(error) {\\r\\n    this.error = error;\\r\\n    this.loadedName = 'g_font_error';\\r\\n    this.loading = false;\\r\\n  }\\r\\n  ErrorFont.prototype = {\\r\\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\\r\\n      return [];\\r\\n    },\\r\\n    exportData: function ErrorFont_exportData() {\\r\\n      return { error: this.error };\\r\\n    }\\r\\n  };\\r\\n  return ErrorFont;\\r\\n}();\\r\\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\\r\\n  var charCodeToGlyphId = Object.create(null);\\r\\n  var glyphId, charCode, baseEncoding;\\r\\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\\r\\n  if (properties.baseEncodingName) {\\r\\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\\r\\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\r\\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\r\\n      if (glyphId >= 0) {\\r\\n        charCodeToGlyphId[charCode] = glyphId;\\r\\n      } else {\\r\\n        charCodeToGlyphId[charCode] = 0;\\r\\n      }\\r\\n    }\\r\\n  } else if (isSymbolicFont) {\\r\\n    for (charCode in builtInEncoding) {\\r\\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\\r\\n    }\\r\\n  } else {\\r\\n    baseEncoding = _encodings.StandardEncoding;\\r\\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\\r\\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\\r\\n      if (glyphId >= 0) {\\r\\n        charCodeToGlyphId[charCode] = glyphId;\\r\\n      } else {\\r\\n        charCodeToGlyphId[charCode] = 0;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  var differences = properties.differences,\\r\\n      glyphsUnicodeMap;\\r\\n  if (differences) {\\r\\n    for (charCode in differences) {\\r\\n      var glyphName = differences[charCode];\\r\\n      glyphId = glyphNames.indexOf(glyphName);\\r\\n      if (glyphId === -1) {\\r\\n        if (!glyphsUnicodeMap) {\\r\\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\\r\\n        }\\r\\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\\r\\n        if (standardGlyphName !== glyphName) {\\r\\n          glyphId = glyphNames.indexOf(standardGlyphName);\\r\\n        }\\r\\n      }\\r\\n      if (glyphId >= 0) {\\r\\n        charCodeToGlyphId[charCode] = glyphId;\\r\\n      } else {\\r\\n        charCodeToGlyphId[charCode] = 0;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  return charCodeToGlyphId;\\r\\n}\\r\\nvar Type1Font = function Type1FontClosure() {\\r\\n  function findBlock(streamBytes, signature, startIndex) {\\r\\n    var streamBytesLength = streamBytes.length;\\r\\n    var signatureLength = signature.length;\\r\\n    var scanLength = streamBytesLength - signatureLength;\\r\\n    var i = startIndex,\\r\\n        j,\\r\\n        found = false;\\r\\n    while (i < scanLength) {\\r\\n      j = 0;\\r\\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\\r\\n        j++;\\r\\n      }\\r\\n      if (j >= signatureLength) {\\r\\n        i += j;\\r\\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\\r\\n          i++;\\r\\n        }\\r\\n        found = true;\\r\\n        break;\\r\\n      }\\r\\n      i++;\\r\\n    }\\r\\n    return {\\r\\n      found: found,\\r\\n      length: i\\r\\n    };\\r\\n  }\\r\\n  function getHeaderBlock(stream, suggestedLength) {\\r\\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\\r\\n    var streamStartPos = stream.pos;\\r\\n    var headerBytes, headerBytesLength, block;\\r\\n    try {\\r\\n      headerBytes = stream.getBytes(suggestedLength);\\r\\n      headerBytesLength = headerBytes.length;\\r\\n    } catch (ex) {\\r\\n      if (ex instanceof _util.MissingDataException) {\\r\\n        throw ex;\\r\\n      }\\r\\n    }\\r\\n    if (headerBytesLength === suggestedLength) {\\r\\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\\r\\n      if (block.found && block.length === suggestedLength) {\\r\\n        return {\\r\\n          stream: new _stream.Stream(headerBytes),\\r\\n          length: suggestedLength\\r\\n        };\\r\\n      }\\r\\n    }\\r\\n    (0, _util.warn)('Invalid \\\"Length1\\\" property in Type1 font -- trying to recover.');\\r\\n    stream.pos = streamStartPos;\\r\\n    var SCAN_BLOCK_LENGTH = 2048;\\r\\n    var actualLength;\\r\\n    while (true) {\\r\\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\\r\\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\\r\\n      if (block.length === 0) {\\r\\n        break;\\r\\n      }\\r\\n      stream.pos += block.length;\\r\\n      if (block.found) {\\r\\n        actualLength = stream.pos - streamStartPos;\\r\\n        break;\\r\\n      }\\r\\n    }\\r\\n    stream.pos = streamStartPos;\\r\\n    if (actualLength) {\\r\\n      return {\\r\\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\\r\\n        length: actualLength\\r\\n      };\\r\\n    }\\r\\n    (0, _util.warn)('Unable to recover \\\"Length1\\\" property in Type1 font -- using as is.');\\r\\n    return {\\r\\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\\r\\n      length: suggestedLength\\r\\n    };\\r\\n  }\\r\\n  function getEexecBlock(stream, suggestedLength) {\\r\\n    var eexecBytes = stream.getBytes();\\r\\n    return {\\r\\n      stream: new _stream.Stream(eexecBytes),\\r\\n      length: eexecBytes.length\\r\\n    };\\r\\n  }\\r\\n  function Type1Font(name, file, properties) {\\r\\n    var PFB_HEADER_SIZE = 6;\\r\\n    var headerBlockLength = properties.length1;\\r\\n    var eexecBlockLength = properties.length2;\\r\\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\\r\\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\\r\\n    if (pfbHeaderPresent) {\\r\\n      file.skip(PFB_HEADER_SIZE);\\r\\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\r\\n    }\\r\\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\\r\\n    headerBlockLength = headerBlock.length;\\r\\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\\r\\n    headerBlockParser.extractFontHeader(properties);\\r\\n    if (pfbHeaderPresent) {\\r\\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\\r\\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\\r\\n    }\\r\\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\\r\\n    eexecBlockLength = eexecBlock.length;\\r\\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\\r\\n    var data = eexecBlockParser.extractFontProgram();\\r\\n    for (var info in data.properties) {\\r\\n      properties[info] = data.properties[info];\\r\\n    }\\r\\n    var charstrings = data.charstrings;\\r\\n    var type2Charstrings = this.getType2Charstrings(charstrings);\\r\\n    var subrs = this.getType2Subrs(data.subrs);\\r\\n    this.charstrings = charstrings;\\r\\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\\r\\n    this.seacs = this.getSeacs(data.charstrings);\\r\\n  }\\r\\n  Type1Font.prototype = {\\r\\n    get numGlyphs() {\\r\\n      return this.charstrings.length + 1;\\r\\n    },\\r\\n    getCharset: function Type1Font_getCharset() {\\r\\n      var charset = ['.notdef'];\\r\\n      var charstrings = this.charstrings;\\r\\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\\r\\n        charset.push(charstrings[glyphId].glyphName);\\r\\n      }\\r\\n      return charset;\\r\\n    },\\r\\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\\r\\n      var charstrings = this.charstrings;\\r\\n      var glyphNames = ['.notdef'],\\r\\n          glyphId;\\r\\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\\r\\n        glyphNames.push(charstrings[glyphId].glyphName);\\r\\n      }\\r\\n      var encoding = properties.builtInEncoding;\\r\\n      if (encoding) {\\r\\n        var builtInEncoding = Object.create(null);\\r\\n        for (var charCode in encoding) {\\r\\n          glyphId = glyphNames.indexOf(encoding[charCode]);\\r\\n          if (glyphId >= 0) {\\r\\n            builtInEncoding[charCode] = glyphId;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\\r\\n    },\\r\\n    getSeacs: function Type1Font_getSeacs(charstrings) {\\r\\n      var i, ii;\\r\\n      var seacMap = [];\\r\\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\\r\\n        var charstring = charstrings[i];\\r\\n        if (charstring.seac) {\\r\\n          seacMap[i + 1] = charstring.seac;\\r\\n        }\\r\\n      }\\r\\n      return seacMap;\\r\\n    },\\r\\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\\r\\n      var type2Charstrings = [];\\r\\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\\r\\n        type2Charstrings.push(type1Charstrings[i].charstring);\\r\\n      }\\r\\n      return type2Charstrings;\\r\\n    },\\r\\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\\r\\n      var bias = 0;\\r\\n      var count = type1Subrs.length;\\r\\n      if (count < 1133) {\\r\\n        bias = 107;\\r\\n      } else if (count < 33769) {\\r\\n        bias = 1131;\\r\\n      } else {\\r\\n        bias = 32768;\\r\\n      }\\r\\n      var type2Subrs = [];\\r\\n      var i;\\r\\n      for (i = 0; i < bias; i++) {\\r\\n        type2Subrs.push([0x0B]);\\r\\n      }\\r\\n      for (i = 0; i < count; i++) {\\r\\n        type2Subrs.push(type1Subrs[i]);\\r\\n      }\\r\\n      return type2Subrs;\\r\\n    },\\r\\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\\r\\n      var cff = new _cff_parser.CFF();\\r\\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\\r\\n      cff.names = [name];\\r\\n      var topDict = new _cff_parser.CFFTopDict();\\r\\n      topDict.setByName('version', 391);\\r\\n      topDict.setByName('Notice', 392);\\r\\n      topDict.setByName('FullName', 393);\\r\\n      topDict.setByName('FamilyName', 394);\\r\\n      topDict.setByName('Weight', 395);\\r\\n      topDict.setByName('Encoding', null);\\r\\n      topDict.setByName('FontMatrix', properties.fontMatrix);\\r\\n      topDict.setByName('FontBBox', properties.bbox);\\r\\n      topDict.setByName('charset', null);\\r\\n      topDict.setByName('CharStrings', null);\\r\\n      topDict.setByName('Private', null);\\r\\n      cff.topDict = topDict;\\r\\n      var strings = new _cff_parser.CFFStrings();\\r\\n      strings.add('Version 0.11');\\r\\n      strings.add('See original notice');\\r\\n      strings.add(name);\\r\\n      strings.add(name);\\r\\n      strings.add('Medium');\\r\\n      cff.strings = strings;\\r\\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\\r\\n      var count = glyphs.length;\\r\\n      var charsetArray = [0];\\r\\n      var i, ii;\\r\\n      for (i = 0; i < count; i++) {\\r\\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\\r\\n        if (index === -1) {\\r\\n          index = 0;\\r\\n        }\\r\\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\\r\\n      }\\r\\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\\r\\n      var charStringsIndex = new _cff_parser.CFFIndex();\\r\\n      charStringsIndex.add([0x8B, 0x0E]);\\r\\n      for (i = 0; i < count; i++) {\\r\\n        var glyph = glyphs[i];\\r\\n        if (glyph.length === 0) {\\r\\n          charStringsIndex.add([0x8B, 0x0E]);\\r\\n          continue;\\r\\n        }\\r\\n        charStringsIndex.add(glyph);\\r\\n      }\\r\\n      cff.charStrings = charStringsIndex;\\r\\n      var privateDict = new _cff_parser.CFFPrivateDict();\\r\\n      privateDict.setByName('Subrs', null);\\r\\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\\r\\n      for (i = 0, ii = fields.length; i < ii; i++) {\\r\\n        var field = fields[i];\\r\\n        if (!(field in properties.privateData)) {\\r\\n          continue;\\r\\n        }\\r\\n        var value = properties.privateData[field];\\r\\n        if (Array.isArray(value)) {\\r\\n          for (var j = value.length - 1; j > 0; j--) {\\r\\n            value[j] -= value[j - 1];\\r\\n          }\\r\\n        }\\r\\n        privateDict.setByName(field, value);\\r\\n      }\\r\\n      cff.topDict.privateDict = privateDict;\\r\\n      var subrIndex = new _cff_parser.CFFIndex();\\r\\n      for (i = 0, ii = subrs.length; i < ii; i++) {\\r\\n        subrIndex.add(subrs[i]);\\r\\n      }\\r\\n      privateDict.subrsIndex = subrIndex;\\r\\n      var compiler = new _cff_parser.CFFCompiler(cff);\\r\\n      return compiler.compile();\\r\\n    }\\r\\n  };\\r\\n  return Type1Font;\\r\\n}();\\r\\nvar CFFFont = function CFFFontClosure() {\\r\\n  function CFFFont(file, properties) {\\r\\n    this.properties = properties;\\r\\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\\r\\n    this.cff = parser.parse();\\r\\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\\r\\n    this.seacs = this.cff.seacs;\\r\\n    try {\\r\\n      this.data = compiler.compile();\\r\\n    } catch (e) {\\r\\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\\r\\n      this.data = file;\\r\\n    }\\r\\n  }\\r\\n  CFFFont.prototype = {\\r\\n    get numGlyphs() {\\r\\n      return this.cff.charStrings.count;\\r\\n    },\\r\\n    getCharset: function CFFFont_getCharset() {\\r\\n      return this.cff.charset.charset;\\r\\n    },\\r\\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\\r\\n      var cff = this.cff;\\r\\n      var properties = this.properties;\\r\\n      var charsets = cff.charset.charset;\\r\\n      var charCodeToGlyphId;\\r\\n      var glyphId;\\r\\n      if (properties.composite) {\\r\\n        charCodeToGlyphId = Object.create(null);\\r\\n        if (cff.isCIDFont) {\\r\\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\\r\\n            var cid = charsets[glyphId];\\r\\n            var charCode = properties.cMap.charCodeOf(cid);\\r\\n            charCodeToGlyphId[charCode] = glyphId;\\r\\n          }\\r\\n        } else {\\r\\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\\r\\n            charCodeToGlyphId[glyphId] = glyphId;\\r\\n          }\\r\\n        }\\r\\n        return charCodeToGlyphId;\\r\\n      }\\r\\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\\r\\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\\r\\n      return charCodeToGlyphId;\\r\\n    }\\r\\n  };\\r\\n  return CFFF\";a.a+=\"ont;\\r\\n}();\\r\\n(function checkSeacSupport() {\\r\\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\\r\\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\\r\\n  }\\r\\n})();\\r\\n(function checkChromeWindows() {\\r\\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\\r\\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\\r\\n  }\\r\\n})();\\r\\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\\r\\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\\r\\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\\r\\nexports.ErrorFont = ErrorFont;\\r\\nexports.Font = Font;\\r\\nexports.FontFlags = FontFlags;\\r\\nexports.ToUnicodeMap = ToUnicodeMap;\\r\\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\\r\\nexports.ProblematicCharRanges = ProblematicCharRanges;\\r\\nexports.getFontType = getFontType;\\r\\n\\r\\n/***/ }),\\r\\n/* 150 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\\r\\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\\r\\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\\r\\nexports.ISOAdobeCharset = ISOAdobeCharset;\\r\\nexports.ExpertCharset = ExpertCharset;\\r\\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\\r\\n\\r\\n/***/ }),\\r\\n/* 151 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.FontRendererFactory = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _cff_parser = __w_pdfjs_require__(84);\\r\\n\\r\\nvar _glyphlist = __w_pdfjs_require__(49);\\r\\n\\r\\nvar _encodings = __w_pdfjs_require__(30);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar FontRendererFactory = function FontRendererFactoryClosure() {\\r\\n  function getLong(data, offset) {\\r\\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\r\\n  }\\r\\n  function getUshort(data, offset) {\\r\\n    return data[offset] << 8 | data[offset + 1];\\r\\n  }\\r\\n  function parseCmap(data, start, end) {\\r\\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\\r\\n    var format = getUshort(data, start + offset);\\r\\n    var ranges, p, i;\\r\\n    if (format === 4) {\\r\\n      getUshort(data, start + offset + 2);\\r\\n      var segCount = getUshort(data, start + offset + 6) >> 1;\\r\\n      p = start + offset + 14;\\r\\n      ranges = [];\\r\\n      for (i = 0; i < segCount; i++, p += 2) {\\r\\n        ranges[i] = { end: getUshort(data, p) };\\r\\n      }\\r\\n      p += 2;\\r\\n      for (i = 0; i < segCount; i++, p += 2) {\\r\\n        ranges[i].start = getUshort(data, p);\\r\\n      }\\r\\n      for (i = 0; i < segCount; i++, p += 2) {\\r\\n        ranges[i].idDelta = getUshort(data, p);\\r\\n      }\\r\\n      for (i = 0; i < segCount; i++, p += 2) {\\r\\n        var idOffset = getUshort(data, p);\\r\\n        if (idOffset === 0) {\\r\\n          continue;\\r\\n        }\\r\\n        ranges[i].ids = [];\\r\\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\\r\\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\\r\\n          idOffset += 2;\\r\\n        }\\r\\n      }\\r\\n      return ranges;\\r\\n    } else if (format === 12) {\\r\\n      getLong(data, start + offset + 4);\\r\\n      var groups = getLong(data, start + offset + 12);\\r\\n      p = start + offset + 16;\\r\\n      ranges = [];\\r\\n      for (i = 0; i < groups; i++) {\\r\\n        ranges.push({\\r\\n          start: getLong(data, p),\\r\\n          end: getLong(data, p + 4),\\r\\n          idDelta: getLong(data, p + 8) - getLong(data, p)\\r\\n        });\\r\\n        p += 12;\\r\\n      }\\r\\n      return ranges;\\r\\n    }\\r\\n    throw new _util.FormatError('unsupported cmap: ' + format);\\r\\n  }\\r\\n  function parseCff(data, start, end, seacAnalysisEnabled) {\\r\\n    var properties = {};\\r\\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\\r\\n    var cff = parser.parse();\\r\\n    return {\\r\\n      glyphs: cff.charStrings.objects,\\r\\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\\r\\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\\r\\n    };\\r\\n  }\\r\\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\\r\\n    var itemSize, itemDecode;\\r\\n    if (isGlyphLocationsLong) {\\r\\n      itemSize = 4;\\r\\n      itemDecode = function fontItemDecodeLong(data, offset) {\\r\\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\\r\\n      };\\r\\n    } else {\\r\\n      itemSize = 2;\\r\\n      itemDecode = function fontItemDecode(data, offset) {\\r\\n        return data[offset] << 9 | data[offset + 1] << 1;\\r\\n      };\\r\\n    }\\r\\n    var glyphs = [];\\r\\n    var startOffset = itemDecode(loca, 0);\\r\\n    for (var j = itemSize; j < loca.length; j += itemSize) {\\r\\n      var endOffset = itemDecode(loca, j);\\r\\n      glyphs.push(glyf.subarray(startOffset, endOffset));\\r\\n      startOffset = endOffset;\\r\\n    }\\r\\n    return glyphs;\\r\\n  }\\r\\n  function lookupCmap(ranges, unicode) {\\r\\n    var code = unicode.charCodeAt(0),\\r\\n        gid = 0;\\r\\n    var l = 0,\\r\\n        r = ranges.length - 1;\\r\\n    while (l < r) {\\r\\n      var c = l + r + 1 >> 1;\\r\\n      if (code < ranges[c].start) {\\r\\n        r = c - 1;\\r\\n      } else {\\r\\n        l = c;\\r\\n      }\\r\\n    }\\r\\n    if (ranges[l].start <= code && code <= ranges[l].end) {\\r\\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\\r\\n    }\\r\\n    return {\\r\\n      charCode: code,\\r\\n      glyphId: gid\\r\\n    };\\r\\n  }\\r\\n  function compileGlyf(code, cmds, font) {\\r\\n    function moveTo(x, y) {\\r\\n      cmds.push({\\r\\n        cmd: 'moveTo',\\r\\n        args: [x, y]\\r\\n      });\\r\\n    }\\r\\n    function lineTo(x, y) {\\r\\n      cmds.push({\\r\\n        cmd: 'lineTo',\\r\\n        args: [x, y]\\r\\n      });\\r\\n    }\\r\\n    function quadraticCurveTo(xa, ya, x, y) {\\r\\n      cmds.push({\\r\\n        cmd: 'quadraticCurveTo',\\r\\n        args: [xa, ya, x, y]\\r\\n      });\\r\\n    }\\r\\n    var i = 0;\\r\\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\\r\\n    var flags;\\r\\n    var x = 0,\\r\\n        y = 0;\\r\\n    i += 10;\\r\\n    if (numberOfContours < 0) {\\r\\n      do {\\r\\n        flags = code[i] << 8 | code[i + 1];\\r\\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\\r\\n        i += 4;\\r\\n        var arg1, arg2;\\r\\n        if (flags & 0x01) {\\r\\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\\r\\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\\r\\n          i += 4;\\r\\n        } else {\\r\\n          arg1 = code[i++];\\r\\n          arg2 = code[i++];\\r\\n        }\\r\\n        if (flags & 0x02) {\\r\\n          x = arg1;\\r\\n          y = arg2;\\r\\n        } else {\\r\\n          x = 0;\\r\\n          y = 0;\\r\\n        }\\r\\n        var scaleX = 1,\\r\\n            scaleY = 1,\\r\\n            scale01 = 0,\\r\\n            scale10 = 0;\\r\\n        if (flags & 0x08) {\\r\\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\r\\n          i += 2;\\r\\n        } else if (flags & 0x40) {\\r\\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\r\\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\r\\n          i += 4;\\r\\n        } else if (flags & 0x80) {\\r\\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\\r\\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\\r\\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\\r\\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\\r\\n          i += 8;\\r\\n        }\\r\\n        var subglyph = font.glyphs[glyphIndex];\\r\\n        if (subglyph) {\\r\\n          cmds.push({ cmd: 'save' });\\r\\n          cmds.push({\\r\\n            cmd: 'transform',\\r\\n            args: [scaleX, scale01, scale10, scaleY, x, y]\\r\\n          });\\r\\n          compileGlyf(subglyph, cmds, font);\\r\\n          cmds.push({ cmd: 'restore' });\\r\\n        }\\r\\n      } while (flags & 0x20);\\r\\n    } else {\\r\\n      var endPtsOfContours = [];\\r\\n      var j, jj;\\r\\n      for (j = 0; j < numberOfContours; j++) {\\r\\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\\r\\n        i += 2;\\r\\n      }\\r\\n      var instructionLength = code[i] << 8 | code[i + 1];\\r\\n      i += 2 + instructionLength;\\r\\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\\r\\n      var points = [];\\r\\n      while (points.length < numberOfPoints) {\\r\\n        flags = code[i++];\\r\\n        var repeat = 1;\\r\\n        if (flags & 0x08) {\\r\\n          repeat += code[i++];\\r\\n        }\\r\\n        while (repeat-- > 0) {\\r\\n          points.push({ flags: flags });\\r\\n        }\\r\\n      }\\r\\n      for (j = 0; j < numberOfPoints; j++) {\\r\\n        switch (points[j].flags & 0x12) {\\r\\n          case 0x00:\\r\\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\\r\\n            i += 2;\\r\\n            break;\\r\\n          case 0x02:\\r\\n            x -= code[i++];\\r\\n            break;\\r\\n          case 0x12:\\r\\n            x += code[i++];\\r\\n            break;\\r\\n        }\\r\\n        points[j].x = x;\\r\\n      }\\r\\n      for (j = 0; j < numberOfPoints; j++) {\\r\\n        switch (points[j].flags & 0x24) {\\r\\n          case 0x00:\\r\\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\\r\\n            i += 2;\\r\\n            break;\\r\\n          case 0x04:\\r\\n            y -= code[i++];\\r\\n            break;\\r\\n          case 0x24:\\r\\n            y += code[i++];\\r\\n            break;\\r\\n        }\\r\\n        points[j].y = y;\\r\\n      }\\r\\n      var startPoint = 0;\\r\\n      for (i = 0; i < numberOfContours; i++) {\\r\\n        var endPoint = endPtsOfContours[i];\\r\\n        var contour = points.slice(startPoint, endPoint + 1);\\r\\n        if (contour[0].flags & 1) {\\r\\n          contour.push(contour[0]);\\r\\n        } else if (contour[contour.length - 1].flags & 1) {\\r\\n          contour.unshift(contour[contour.length - 1]);\\r\\n        } else {\\r\\n          var p = {\\r\\n            flags: 1,\\r\\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\\r\\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\\r\\n          };\\r\\n          contour.unshift(p);\\r\\n          contour.push(p);\\r\\n        }\\r\\n        moveTo(contour[0].x, contour[0].y);\\r\\n        for (j = 1, jj = contour.length; j < jj; j++) {\\r\\n          if (contour[j].flags & 1) {\\r\\n            lineTo(contour[j].x, contour[j].y);\\r\\n          } else if (contour[j + 1].flags & 1) {\\r\\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\\r\\n            j++;\\r\\n          } else {\\r\\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\\r\\n          }\\r\\n        }\\r\\n        s\";a.a+=\"tartPoint = endPoint + 1;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function compileCharString(code, cmds, font) {\\r\\n    var stack = [];\\r\\n    var x = 0,\\r\\n        y = 0;\\r\\n    var stems = 0;\\r\\n    function moveTo(x, y) {\\r\\n      cmds.push({\\r\\n        cmd: 'moveTo',\\r\\n        args: [x, y]\\r\\n      });\\r\\n    }\\r\\n    function lineTo(x, y) {\\r\\n      cmds.push({\\r\\n        cmd: 'lineTo',\\r\\n        args: [x, y]\\r\\n      });\\r\\n    }\\r\\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\\r\\n      cmds.push({\\r\\n        cmd: 'bezierCurveTo',\\r\\n        args: [x1, y1, x2, y2, x, y]\\r\\n      });\\r\\n    }\\r\\n    function parse(code) {\\r\\n      var i = 0;\\r\\n      while (i < code.length) {\\r\\n        var stackClean = false;\\r\\n        var v = code[i++];\\r\\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\\r\\n        switch (v) {\\r\\n          case 1:\\r\\n            stems += stack.length >> 1;\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 3:\\r\\n            stems += stack.length >> 1;\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 4:\\r\\n            y += stack.pop();\\r\\n            moveTo(x, y);\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 5:\\r\\n            while (stack.length > 0) {\\r\\n              x += stack.shift();\\r\\n              y += stack.shift();\\r\\n              lineTo(x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 6:\\r\\n            while (stack.length > 0) {\\r\\n              x += stack.shift();\\r\\n              lineTo(x, y);\\r\\n              if (stack.length === 0) {\\r\\n                break;\\r\\n              }\\r\\n              y += stack.shift();\\r\\n              lineTo(x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 7:\\r\\n            while (stack.length > 0) {\\r\\n              y += stack.shift();\\r\\n              lineTo(x, y);\\r\\n              if (stack.length === 0) {\\r\\n                break;\\r\\n              }\\r\\n              x += stack.shift();\\r\\n              lineTo(x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 8:\\r\\n            while (stack.length > 0) {\\r\\n              xa = x + stack.shift();\\r\\n              ya = y + stack.shift();\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              x = xb + stack.shift();\\r\\n              y = yb + stack.shift();\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 10:\\r\\n            n = stack.pop() + font.subrsBias;\\r\\n            subrCode = font.subrs[n];\\r\\n            if (subrCode) {\\r\\n              parse(subrCode);\\r\\n            }\\r\\n            break;\\r\\n          case 11:\\r\\n            return;\\r\\n          case 12:\\r\\n            v = code[i++];\\r\\n            switch (v) {\\r\\n              case 34:\\r\\n                xa = x + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                y1 = y + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                bezierCurveTo(xa, y, xb, y1, x, y1);\\r\\n                xa = x + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                bezierCurveTo(xa, y1, xb, y, x, y);\\r\\n                break;\\r\\n              case 35:\\r\\n                xa = x + stack.shift();\\r\\n                ya = y + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                yb = ya + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                y = yb + stack.shift();\\r\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n                xa = x + stack.shift();\\r\\n                ya = y + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                yb = ya + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                y = yb + stack.shift();\\r\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n                stack.pop();\\r\\n                break;\\r\\n              case 36:\\r\\n                xa = x + stack.shift();\\r\\n                y1 = y + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                y2 = y1 + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\\r\\n                xa = x + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                y3 = y2 + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                bezierCurveTo(xa, y2, xb, y3, x, y);\\r\\n                break;\\r\\n              case 37:\\r\\n                var x0 = x,\\r\\n                    y0 = y;\\r\\n                xa = x + stack.shift();\\r\\n                ya = y + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                yb = ya + stack.shift();\\r\\n                x = xb + stack.shift();\\r\\n                y = yb + stack.shift();\\r\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n                xa = x + stack.shift();\\r\\n                ya = y + stack.shift();\\r\\n                xb = xa + stack.shift();\\r\\n                yb = ya + stack.shift();\\r\\n                x = xb;\\r\\n                y = yb;\\r\\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\\r\\n                  x += stack.shift();\\r\\n                } else {\\r\\n                  y += stack.shift();\\r\\n                }\\r\\n                bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n                break;\\r\\n              default:\\r\\n                throw new _util.FormatError('unknown operator: 12 ' + v);\\r\\n            }\\r\\n            break;\\r\\n          case 14:\\r\\n            if (stack.length >= 4) {\\r\\n              var achar = stack.pop();\\r\\n              var bchar = stack.pop();\\r\\n              y = stack.pop();\\r\\n              x = stack.pop();\\r\\n              cmds.push({ cmd: 'save' });\\r\\n              cmds.push({\\r\\n                cmd: 'translate',\\r\\n                args: [x, y]\\r\\n              });\\r\\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\\r\\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\\r\\n              cmds.push({ cmd: 'restore' });\\r\\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\\r\\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\\r\\n            }\\r\\n            return;\\r\\n          case 18:\\r\\n            stems += stack.length >> 1;\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 19:\\r\\n            stems += stack.length >> 1;\\r\\n            i += stems + 7 >> 3;\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 20:\\r\\n            stems += stack.length >> 1;\\r\\n            i += stems + 7 >> 3;\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 21:\\r\\n            y += stack.pop();\\r\\n            x += stack.pop();\\r\\n            moveTo(x, y);\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 22:\\r\\n            x += stack.pop();\\r\\n            moveTo(x, y);\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 23:\\r\\n            stems += stack.length >> 1;\\r\\n            stackClean = true;\\r\\n            break;\\r\\n          case 24:\\r\\n            while (stack.length > 2) {\\r\\n              xa = x + stack.shift();\\r\\n              ya = y + stack.shift();\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              x = xb + stack.shift();\\r\\n              y = yb + stack.shift();\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            }\\r\\n            x += stack.shift();\\r\\n            y += stack.shift();\\r\\n            lineTo(x, y);\\r\\n            break;\\r\\n          case 25:\\r\\n            while (stack.length > 6) {\\r\\n              x += stack.shift();\\r\\n              y += stack.shift();\\r\\n              lineTo(x, y);\\r\\n            }\\r\\n            xa = x + stack.shift();\\r\\n            ya = y + stack.shift();\\r\\n            xb = xa + stack.shift();\\r\\n            yb = ya + stack.shift();\\r\\n            x = xb + stack.shift();\\r\\n            y = yb + stack.shift();\\r\\n            bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            break;\\r\\n          case 26:\\r\\n            if (stack.length % 2) {\\r\\n              x += stack.shift();\\r\\n            }\\r\\n            while (stack.length > 0) {\\r\\n              xa = x;\\r\\n              ya = y + stack.shift();\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              x = xb;\\r\\n              y = yb + stack.shift();\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 27:\\r\\n            if (stack.length % 2) {\\r\\n              y += stack.shift();\\r\\n            }\\r\\n            while (stack.length > 0) {\\r\\n              xa = x + stack.shift();\\r\\n              ya = y;\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              x = xb + stack.shift();\\r\\n              y = yb;\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 28:\\r\\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\\r\\n            i += 2;\\r\\n            break;\\r\\n          case 29:\\r\\n            n = stack.pop() + font.gsubrsBias;\\r\\n            subrCode = font.gsubrs[n];\\r\\n            if (subrCode) {\\r\\n              parse(subrCode);\\r\\n            }\\r\\n            break;\\r\\n          case 30:\\r\\n            while (stack.length > 0) {\\r\\n              xa = x;\\r\\n              ya = y + stack.shift();\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              x = xb + stack.shift();\\r\\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n              if (stack.length === 0) {\\r\\n                break;\\r\\n              }\\r\\n              xa = x + stack.shift();\\r\\n              ya = y;\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              y = yb + stack.shift();\\r\\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            }\\r\\n            break;\\r\\n          case 31:\\r\\n            while (stack.length > 0) {\\r\\n              xa = x + stack.shift();\\r\\n              ya = y;\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              y = yb + stack.shift();\\r\\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n              if (stack.length === 0) {\\r\\n                break;\\r\\n              }\\r\\n              xa = x;\\r\\n              ya = y + stack.shift();\\r\\n              xb = xa + stack.shift();\\r\\n              yb = ya + stack.shift();\\r\\n              x = xb + stack.shift();\\r\\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\\r\\n              bezierCurveTo(xa, ya, xb, yb, x, y);\\r\\n            }\\r\\n            break;\\r\\n          default:\\r\\n            if (v < 32) {\\r\\n              throw new _util.FormatError('unknown operator: ' + v);\\r\\n            }\\r\\n            if (v < 247) {\\r\\n              stack.push(v - 139);\\r\\n            } else if (v < 251) {\\r\\n              stack.push((v - 247) * 256 + code[i++] + 108);\\r\\n            } else if (v < 255) {\\r\\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\\r\\n            } else {\\r\\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\\r\\n              i += 4;\\r\\n            }\\r\\n            break;\\r\\n        }\\r\\n        if (stackClean) {\\r\\n          stack.length = 0;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    parse(code);\\r\\n  }\\r\\n  var noop = '';\\r\\n  function CompiledFont(fontMatrix) {\\r\\n    this.compiledGlyphs = Object.create(null);\\r\\n    this.compiledCharCodeToGlyphId = Object.create(null);\\r\\n    this.fontMatrix = fontMatrix;\\r\\n  }\\r\\n  CompiledFont.prototype = {\\r\\n    getPathJs: function getPathJs(unicode) {\\r\\n      var cmap = lookupCmap(this.cmap, unicode);\\r\\n      var fn = this.compiledGlyphs[cmap.glyphId];\\r\\n      if (!fn) {\\r\\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\\r\\n        this.compiledGlyphs[cmap.glyphId] = fn;\\r\\n      }\\r\\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\\r\\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\\r\\n      }\\r\\n      return fn;\\r\\n    },\\r\\n    compileGlyph: function compileGlyph(code) {\\r\\n      if (!code || code.length === 0 || code[0] === 14) {\\r\\n        return noop;\\r\\n      }\\r\\n      var cmds = [];\\r\\n      cmds.push({ cmd: 'save' });\\r\\n      cmds.push({\\r\\n        cmd: 'transform',\\r\\n        args: this.fontMatrix.slice()\\r\\n      });\\r\\n      cmds.push({\\r\\n        cmd: 'scale',\\r\\n        args: ['size', '-size']\\r\\n      });\\r\\n      this.compileGlyphImpl(code, cmds);\\r\\n      cmds.push({ cmd: 'restore' });\\r\\n      return cmds;\\r\\n    },\\r\\n    compileGlyphImpl: function compileGlyphImpl() {\\r\\n      throw new Error('Children classes should implement this.');\\r\\n    },\\r\\n    hasBuiltPath: function hasBuiltPath(unicode) {\\r\\n      var cmap = lookupCmap(this.cmap, unicode);\\r\\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\\r\\n    }\\r\\n  };\\r\\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\\r\\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\\r\\n    CompiledFont.call(this, fontMatrix);\\r\\n    this.glyphs = glyphs;\\r\\n    this.cmap = cmap;\\r\\n  }\\r\\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\\r\\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\\r\\n      compileGlyf(code, cmds, this);\\r\\n    }\\r\\n  });\\r\\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\\r\\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\\r\\n    CompiledFont.call(this, fontMatrix);\\r\\n    this.glyphs = cffInfo.glyphs;\\r\\n    this.gsubrs = cffInfo.gsubrs || [];\\r\\n    this.subrs = cffInfo.subrs || [];\\r\\n    this.cmap = cmap;\\r\\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\\r\\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\\r\\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\\r\\n  }\\r\\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\\r\\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\\r\\n      compileCharString(code, cmds, this);\\r\\n    }\\r\\n  });\\r\\n  return {\\r\\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\\r\\n      var data = new Uint8Array(font.data);\\r\\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\\r\\n      var numTables = getUshort(data, 4);\\r\\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\\r\\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\\r\\n        var offset = getLong(data, p + 8);\\r\\n        var length = getLong(data, p + 12);\\r\\n        switch (tag) {\\r\\n          case 'cmap':\\r\\n            cmap = parseCmap(data, offset, offset + length);\\r\\n            break;\\r\\n          case 'glyf':\\r\\n            glyf = data.subarray(offset, offset + length);\\r\\n            break;\\r\\n          case 'loca':\\r\\n            loca = data.subarray(offset, offset + length);\\r\\n            break;\\r\\n          case 'head':\\r\\n            unitsPerEm = getUshort(data, offset + 18);\\r\\n            indexToLocFormat = getUshort(data, offset + 50);\\r\\n            break;\\r\\n          case 'CFF ':\\r\\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\\r\\n            break;\\r\\n        }\\r\\n      }\\r\\n      if (glyf) {\\r\\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\\r\\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\\r\\n      }\\r\\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\\r\\n    }\\r\\n  };\\r\\n}();\\r\\nexports.FontRendererFactory = FontRendererFactory;\\r\\n\\r\\n/***/ }),\\r\\n/* 152 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.Type1Parser = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _encodings = __w_pdfjs_require__(30);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar HINTING_ENABLED = false;\\r\\nvar Type1CharString = function Type1CharStringClosure() {\\r\\n  var COMMAND_MAP = {\\r\\n    'hstem': [1],\\r\\n    'vstem': [3],\\r\\n    'vmoveto': [4],\\r\\n    'rlineto': [5],\\r\\n    'hlineto': [6],\\r\\n    'vlineto': [7],\\r\\n    'rrcurveto': [8],\\r\\n    'callsubr': [10],\\r\\n    'flex': [12, 35],\\r\\n    'drop': [12, 18],\\r\\n    'endchar': [14],\\r\\n    'rmoveto': [21],\\r\\n    'hmoveto': [22],\\r\\n    'vhcurveto': [30],\\r\\n    'hvcurveto': [31]\\r\\n  };\\r\\n  function Type1CharString() {\\r\\n    this.width = 0;\\r\\n    this.lsb = 0;\\r\\n    this.flexing = false;\\r\\n\";a.a+=\"    this.output = [];\\r\\n    this.stack = [];\\r\\n  }\\r\\n  Type1CharString.prototype = {\\r\\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\\r\\n      var count = encoded.length;\\r\\n      var error = false;\\r\\n      var wx, sbx, subrNumber;\\r\\n      for (var i = 0; i < count; i++) {\\r\\n        var value = encoded[i];\\r\\n        if (value < 32) {\\r\\n          if (value === 12) {\\r\\n            value = (value << 8) + encoded[++i];\\r\\n          }\\r\\n          switch (value) {\\r\\n            case 1:\\r\\n              if (!HINTING_ENABLED) {\\r\\n                this.stack = [];\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\\r\\n              break;\\r\\n            case 3:\\r\\n              if (!HINTING_ENABLED) {\\r\\n                this.stack = [];\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\\r\\n              break;\\r\\n            case 4:\\r\\n              if (this.flexing) {\\r\\n                if (this.stack.length < 1) {\\r\\n                  error = true;\\r\\n                  break;\\r\\n                }\\r\\n                var dy = this.stack.pop();\\r\\n                this.stack.push(0, dy);\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\\r\\n              break;\\r\\n            case 5:\\r\\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\\r\\n              break;\\r\\n            case 6:\\r\\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\\r\\n              break;\\r\\n            case 7:\\r\\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\\r\\n              break;\\r\\n            case 8:\\r\\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\\r\\n              break;\\r\\n            case 9:\\r\\n              this.stack = [];\\r\\n              break;\\r\\n            case 10:\\r\\n              if (this.stack.length < 1) {\\r\\n                error = true;\\r\\n                break;\\r\\n              }\\r\\n              subrNumber = this.stack.pop();\\r\\n              if (!subrs[subrNumber]) {\\r\\n                error = true;\\r\\n                break;\\r\\n              }\\r\\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\\r\\n              break;\\r\\n            case 11:\\r\\n              return error;\\r\\n            case 13:\\r\\n              if (this.stack.length < 2) {\\r\\n                error = true;\\r\\n                break;\\r\\n              }\\r\\n              wx = this.stack.pop();\\r\\n              sbx = this.stack.pop();\\r\\n              this.lsb = sbx;\\r\\n              this.width = wx;\\r\\n              this.stack.push(wx, sbx);\\r\\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\\r\\n              break;\\r\\n            case 14:\\r\\n              this.output.push(COMMAND_MAP.endchar[0]);\\r\\n              break;\\r\\n            case 21:\\r\\n              if (this.flexing) {\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\\r\\n              break;\\r\\n            case 22:\\r\\n              if (this.flexing) {\\r\\n                this.stack.push(0);\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\\r\\n              break;\\r\\n            case 30:\\r\\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\\r\\n              break;\\r\\n            case 31:\\r\\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\\r\\n              break;\\r\\n            case (12 << 8) + 0:\\r\\n              this.stack = [];\\r\\n              break;\\r\\n            case (12 << 8) + 1:\\r\\n              if (!HINTING_ENABLED) {\\r\\n                this.stack = [];\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\\r\\n              break;\\r\\n            case (12 << 8) + 2:\\r\\n              if (!HINTING_ENABLED) {\\r\\n                this.stack = [];\\r\\n                break;\\r\\n              }\\r\\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\\r\\n              break;\\r\\n            case (12 << 8) + 6:\\r\\n              if (seacAnalysisEnabled) {\\r\\n                this.seac = this.stack.splice(-4, 4);\\r\\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\\r\\n              } else {\\r\\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\\r\\n              }\\r\\n              break;\\r\\n            case (12 << 8) + 7:\\r\\n              if (this.stack.length < 4) {\\r\\n                error = true;\\r\\n                break;\\r\\n              }\\r\\n              this.stack.pop();\\r\\n              wx = this.stack.pop();\\r\\n              var sby = this.stack.pop();\\r\\n              sbx = this.stack.pop();\\r\\n              this.lsb = sbx;\\r\\n              this.width = wx;\\r\\n              this.stack.push(wx, sbx, sby);\\r\\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\\r\\n              break;\\r\\n            case (12 << 8) + 12:\\r\\n              if (this.stack.length < 2) {\\r\\n                error = true;\\r\\n                break;\\r\\n              }\\r\\n              var num2 = this.stack.pop();\\r\\n              var num1 = this.stack.pop();\\r\\n              this.stack.push(num1 / num2);\\r\\n              break;\\r\\n            case (12 << 8) + 16:\\r\\n              if (this.stack.length < 2) {\\r\\n                error = true;\\r\\n                break;\\r\\n              }\\r\\n              subrNumber = this.stack.pop();\\r\\n              var numArgs = this.stack.pop();\\r\\n              if (subrNumber === 0 && numArgs === 3) {\\r\\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\\r\\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\\r\\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\\r\\n                this.flexing = false;\\r\\n                this.stack.push(flexArgs[15], flexArgs[16]);\\r\\n              } else if (subrNumber === 1 && numArgs === 0) {\\r\\n                this.flexing = true;\\r\\n              }\\r\\n              break;\\r\\n            case (12 << 8) + 17:\\r\\n              break;\\r\\n            case (12 << 8) + 33:\\r\\n              this.stack = [];\\r\\n              break;\\r\\n            default:\\r\\n              (0, _util.warn)('Unknown type 1 charstring command of \\\"' + value + '\\\"');\\r\\n              break;\\r\\n          }\\r\\n          if (error) {\\r\\n            break;\\r\\n          }\\r\\n          continue;\\r\\n        } else if (value <= 246) {\\r\\n          value = value - 139;\\r\\n        } else if (value <= 250) {\\r\\n          value = (value - 247) * 256 + encoded[++i] + 108;\\r\\n        } else if (value <= 254) {\\r\\n          value = -((value - 251) * 256) - encoded[++i] - 108;\\r\\n        } else {\\r\\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\\r\\n        }\\r\\n        this.stack.push(value);\\r\\n      }\\r\\n      return error;\\r\\n    },\\r\\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\\r\\n      var stackLength = this.stack.length;\\r\\n      if (howManyArgs > stackLength) {\\r\\n        return true;\\r\\n      }\\r\\n      var start = stackLength - howManyArgs;\\r\\n      for (var i = start; i < stackLength; i++) {\\r\\n        var value = this.stack[i];\\r\\n        if (Number.isInteger(value)) {\\r\\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\\r\\n        } else {\\r\\n          value = 65536 * value | 0;\\r\\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\\r\\n        }\\r\\n      }\\r\\n      this.output.push.apply(this.output, command);\\r\\n      if (keepStack) {\\r\\n        this.stack.splice(start, howManyArgs);\\r\\n      } else {\\r\\n        this.stack.length = 0;\\r\\n      }\\r\\n      return false;\\r\\n    }\\r\\n  };\\r\\n  return Type1CharString;\\r\\n}();\\r\\nvar Type1Parser = function Type1ParserClosure() {\\r\\n  var EEXEC_ENCRYPT_KEY = 55665;\\r\\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\\r\\n  function isHexDigit(code) {\\r\\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\\r\\n  }\\r\\n  function decrypt(data, key, discardNumber) {\\r\\n    if (discardNumber >= data.length) {\\r\\n      return new Uint8Array(0);\\r\\n    }\\r\\n    var r = key | 0,\\r\\n        c1 = 52845,\\r\\n        c2 = 22719,\\r\\n        i,\\r\\n        j;\\r\\n    for (i = 0; i < discardNumber; i++) {\\r\\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\\r\\n    }\\r\\n    var count = data.length - discardNumber;\\r\\n    var decrypted = new Uint8Array(count);\\r\\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\\r\\n      var value = data[i];\\r\\n      decrypted[j] = value ^ r >> 8;\\r\\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\\r\\n    }\\r\\n    return decrypted;\\r\\n  }\\r\\n  function decryptAscii(data, key, discardNumber) {\\r\\n    var r = key | 0,\\r\\n        c1 = 52845,\\r\\n        c2 = 22719;\\r\\n    var count = data.length,\\r\\n        maybeLength = count >>> 1;\\r\\n    var decrypted = new Uint8Array(maybeLength);\\r\\n    var i, j;\\r\\n    for (i = 0, j = 0; i < count; i++) {\\r\\n      var digit1 = data[i];\\r\\n      if (!isHexDigit(digit1)) {\\r\\n        continue;\\r\\n      }\\r\\n      i++;\\r\\n      var digit2;\\r\\n      while (i < count && !isHexDigit(digit2 = data[i])) {\\r\\n        i++;\\r\\n      }\\r\\n      if (i < count) {\\r\\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\\r\\n        decrypted[j++] = value ^ r >> 8;\\r\\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\\r\\n      }\\r\\n    }\\r\\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\\r\\n  }\\r\\n  function isSpecial(c) {\\r\\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\\r\\n  }\\r\\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\\r\\n    if (encrypted) {\\r\\n      var data = stream.getBytes();\\r\\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\\r\\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\\r\\n    }\\r\\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\\r\\n    this.stream = stream;\\r\\n    this.nextChar();\\r\\n  }\\r\\n  Type1Parser.prototype = {\\r\\n    readNumberArray: function Type1Parser_readNumberArray() {\\r\\n      this.getToken();\\r\\n      var array = [];\\r\\n      while (true) {\\r\\n        var token = this.getToken();\\r\\n        if (token === null || token === ']' || token === '}') {\\r\\n          break;\\r\\n        }\\r\\n        array.push(parseFloat(token || 0));\\r\\n      }\\r\\n      return array;\\r\\n    },\\r\\n    readNumber: function Type1Parser_readNumber() {\\r\\n      var token = this.getToken();\\r\\n      return parseFloat(token || 0);\\r\\n    },\\r\\n    readInt: function Type1Parser_readInt() {\\r\\n      var token = this.getToken();\\r\\n      return parseInt(token || 0, 10) | 0;\\r\\n    },\\r\\n    readBoolean: function Type1Parser_readBoolean() {\\r\\n      var token = this.getToken();\\r\\n      return token === 'true' ? 1 : 0;\\r\\n    },\\r\\n    nextChar: function Type1_nextChar() {\\r\\n      return this.currentChar = this.stream.getByte();\\r\\n    },\\r\\n    getToken: function Type1Parser_getToken() {\\r\\n      var comment = false;\\r\\n      var ch = this.currentChar;\\r\\n      while (true) {\\r\\n        if (ch === -1) {\\r\\n          return null;\\r\\n        }\\r\\n        if (comment) {\\r\\n          if (ch === 0x0A || ch === 0x0D) {\\r\\n            comment = false;\\r\\n          }\\r\\n        } else if (ch === 0x25) {\\r\\n          comment = true;\\r\\n        } else if (!(0, _util.isSpace)(ch)) {\\r\\n          break;\\r\\n        }\\r\\n        ch = this.nextChar();\\r\\n      }\\r\\n      if (isSpecial(ch)) {\\r\\n        this.nextChar();\\r\\n        return String.fromCharCode(ch);\\r\\n      }\\r\\n      var token = '';\\r\\n      do {\\r\\n        token += String.fromCharCode(ch);\\r\\n        ch = this.nextChar();\\r\\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\\r\\n      return token;\\r\\n    },\\r\\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\\r\\n      if (lenIV === -1) {\\r\\n        return bytes;\\r\\n      }\\r\\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\\r\\n    },\\r\\n    extractFontProgram: function Type1Parser_extractFontProgram() {\\r\\n      var stream = this.stream;\\r\\n      var subrs = [],\\r\\n          charstrings = [];\\r\\n      var privateData = Object.create(null);\\r\\n      privateData['lenIV'] = 4;\\r\\n      var program = {\\r\\n        subrs: [],\\r\\n        charstrings: [],\\r\\n        properties: { 'privateData': privateData }\\r\\n      };\\r\\n      var token, length, data, lenIV, encoded;\\r\\n      while ((token = this.getToken()) !== null) {\\r\\n        if (token !== '/') {\\r\\n          continue;\\r\\n        }\\r\\n        token = this.getToken();\\r\\n        switch (token) {\\r\\n          case 'CharStrings':\\r\\n            this.getToken();\\r\\n            this.getToken();\\r\\n            this.getToken();\\r\\n            this.getToken();\\r\\n            while (true) {\\r\\n              token = this.getToken();\\r\\n              if (token === null || token === 'end') {\\r\\n                break;\\r\\n              }\\r\\n              if (token !== '/') {\\r\\n                continue;\\r\\n              }\\r\\n              var glyph = this.getToken();\\r\\n              length = this.readInt();\\r\\n              this.getToken();\\r\\n              data = stream.makeSubStream(stream.pos, length);\\r\\n              lenIV = program.properties.privateData['lenIV'];\\r\\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\\r\\n              stream.skip(length);\\r\\n              this.nextChar();\\r\\n              token = this.getToken();\\r\\n              if (token === 'noaccess') {\\r\\n                this.getToken();\\r\\n              }\\r\\n              charstrings.push({\\r\\n                glyph: glyph,\\r\\n                encoded: encoded\\r\\n              });\\r\\n            }\\r\\n            break;\\r\\n          case 'Subrs':\\r\\n            this.readInt();\\r\\n            this.getToken();\\r\\n            while ((token = this.getToken()) === 'dup') {\\r\\n              var index = this.readInt();\\r\\n              length = this.readInt();\\r\\n              this.getToken();\\r\\n              data = stream.makeSubStream(stream.pos, length);\\r\\n              lenIV = program.properties.privateData['lenIV'];\\r\\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\\r\\n              stream.skip(length);\\r\\n              this.nextChar();\\r\\n              token = this.getToken();\\r\\n              if (token === 'noaccess') {\\r\\n                this.getToken();\\r\\n              }\\r\\n              subrs[index] = encoded;\\r\\n            }\\r\\n            break;\\r\\n          case 'BlueValues':\\r\\n          case 'OtherBlues':\\r\\n          case 'FamilyBlues':\\r\\n          case 'FamilyOtherBlues':\\r\\n            var blueArray = this.readNumberArray();\\r\\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\\r\\n              program.properties.privateData[token] = blueArray;\\r\\n            }\\r\\n            break;\\r\\n          case 'StemSnapH':\\r\\n          case 'StemSnapV':\\r\\n            program.properties.privateData[token] = this.readNumberArray();\\r\\n            break;\\r\\n          case 'StdHW':\\r\\n          case 'StdVW':\\r\\n            program.properties.privateData[token] = this.readNumberArray()[0];\\r\\n            break;\\r\\n          case 'BlueShift':\\r\\n          case 'lenIV':\\r\\n          case 'BlueFuzz':\\r\\n          case 'BlueScale':\\r\\n          case 'LanguageGroup':\\r\\n          case 'ExpansionFactor':\\r\\n            program.properties.privateData[token] = this.readNumber();\\r\\n            break;\\r\\n          case 'ForceBold':\\r\\n            program.properties.privateData[token] = this.readBoolean();\\r\\n            break;\\r\\n        }\\r\\n      }\\r\\n      for (var i = 0; i < charstrings.length; i++) {\\r\\n        glyph = charstrings[i].glyph;\\r\\n        encoded = charstrings[i].encoded;\\r\\n        var charString = new Type1CharString();\\r\\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\\r\\n        var output = charString.output;\\r\\n        if (error) {\\r\\n          output = [14];\\r\\n        }\\r\\n        program.charstrings.push({\\r\\n          glyphName: glyph,\\r\\n          charstring: output,\\r\\n          width: charString.width,\\r\\n          lsb: charString.lsb,\\r\\n          seac: charString.seac\\r\\n        });\\r\\n      }\\r\\n      return program;\\r\\n    },\\r\\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\\r\\n      var token;\\r\\n      while ((token = this.getToken()) !== null) {\\r\\n        if (token !== '/') {\\r\\n          continue;\\r\\n        }\\r\\n        token = this.getToken();\\r\\n        switch (token) {\\r\\n          case 'FontMatrix':\\r\\n            var mat\";a.a+=\"rix = this.readNumberArray();\\r\\n            properties.fontMatrix = matrix;\\r\\n            break;\\r\\n          case 'Encoding':\\r\\n            var encodingArg = this.getToken();\\r\\n            var encoding;\\r\\n            if (!/^\\\\d+$/.test(encodingArg)) {\\r\\n              encoding = (0, _encodings.getEncoding)(encodingArg);\\r\\n            } else {\\r\\n              encoding = [];\\r\\n              var size = parseInt(encodingArg, 10) | 0;\\r\\n              this.getToken();\\r\\n              for (var j = 0; j < size; j++) {\\r\\n                token = this.getToken();\\r\\n                while (token !== 'dup' && token !== 'def') {\\r\\n                  token = this.getToken();\\r\\n                  if (token === null) {\\r\\n                    return;\\r\\n                  }\\r\\n                }\\r\\n                if (token === 'def') {\\r\\n                  break;\\r\\n                }\\r\\n                var index = this.readInt();\\r\\n                this.getToken();\\r\\n                var glyph = this.getToken();\\r\\n                encoding[index] = glyph;\\r\\n                this.getToken();\\r\\n              }\\r\\n            }\\r\\n            properties.builtInEncoding = encoding;\\r\\n            break;\\r\\n          case 'FontBBox':\\r\\n            var fontBBox = this.readNumberArray();\\r\\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\\r\\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\\r\\n            properties.ascentScaled = true;\\r\\n            break;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return Type1Parser;\\r\\n}();\\r\\nexports.Type1Parser = Type1Parser;\\r\\n\\r\\n/***/ }),\\r\\n/* 153 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.getTilingPatternIR = exports.Pattern = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _colorspace = __w_pdfjs_require__(29);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar ShadingType = {\\r\\n  FUNCTION_BASED: 1,\\r\\n  AXIAL: 2,\\r\\n  RADIAL: 3,\\r\\n  FREE_FORM_MESH: 4,\\r\\n  LATTICE_FORM_MESH: 5,\\r\\n  COONS_PATCH_MESH: 6,\\r\\n  TENSOR_PATCH_MESH: 7\\r\\n};\\r\\nvar Pattern = function PatternClosure() {\\r\\n  function Pattern() {\\r\\n    throw new Error('should not call Pattern constructor');\\r\\n  }\\r\\n  Pattern.prototype = {\\r\\n    getPattern: function Pattern_getPattern(ctx) {\\r\\n      throw new Error('Should not call Pattern.getStyle: ' + ctx);\\r\\n    }\\r\\n  };\\r\\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\\r\\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\\r\\n    var type = dict.get('ShadingType');\\r\\n    try {\\r\\n      switch (type) {\\r\\n        case ShadingType.AXIAL:\\r\\n        case ShadingType.RADIAL:\\r\\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\\r\\n        case ShadingType.FREE_FORM_MESH:\\r\\n        case ShadingType.LATTICE_FORM_MESH:\\r\\n        case ShadingType.COONS_PATCH_MESH:\\r\\n        case ShadingType.TENSOR_PATCH_MESH:\\r\\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\\r\\n        default:\\r\\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\\r\\n      }\\r\\n    } catch (ex) {\\r\\n      if (ex instanceof _util.MissingDataException) {\\r\\n        throw ex;\\r\\n      }\\r\\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\\r\\n      (0, _util.warn)(ex);\\r\\n      return new Shadings.Dummy();\\r\\n    }\\r\\n  };\\r\\n  return Pattern;\\r\\n}();\\r\\nvar Shadings = {};\\r\\nShadings.SMALL_NUMBER = 1e-6;\\r\\nShadings.RadialAxial = function RadialAxialClosure() {\\r\\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\\r\\n    this.matrix = matrix;\\r\\n    this.coordsArr = dict.getArray('Coords');\\r\\n    this.shadingType = dict.get('ShadingType');\\r\\n    this.type = 'Pattern';\\r\\n    var cs = dict.get('ColorSpace', 'CS');\\r\\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\r\\n    this.cs = cs;\\r\\n    var t0 = 0.0,\\r\\n        t1 = 1.0;\\r\\n    if (dict.has('Domain')) {\\r\\n      var domainArr = dict.getArray('Domain');\\r\\n      t0 = domainArr[0];\\r\\n      t1 = domainArr[1];\\r\\n    }\\r\\n    var extendStart = false,\\r\\n        extendEnd = false;\\r\\n    if (dict.has('Extend')) {\\r\\n      var extendArr = dict.getArray('Extend');\\r\\n      extendStart = extendArr[0];\\r\\n      extendEnd = extendArr[1];\\r\\n    }\\r\\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\\r\\n      var x1 = this.coordsArr[0];\\r\\n      var y1 = this.coordsArr[1];\\r\\n      var r1 = this.coordsArr[2];\\r\\n      var x2 = this.coordsArr[3];\\r\\n      var y2 = this.coordsArr[4];\\r\\n      var r2 = this.coordsArr[5];\\r\\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\\r\\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\\r\\n        (0, _util.warn)('Unsupported radial gradient.');\\r\\n      }\\r\\n    }\\r\\n    this.extendStart = extendStart;\\r\\n    this.extendEnd = extendEnd;\\r\\n    var fnObj = dict.get('Function');\\r\\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\\r\\n    var diff = t1 - t0;\\r\\n    var step = diff / 10;\\r\\n    var colorStops = this.colorStops = [];\\r\\n    if (t0 >= t1 || step <= 0) {\\r\\n      (0, _util.info)('Bad shading domain.');\\r\\n      return;\\r\\n    }\\r\\n    var color = new Float32Array(cs.numComps),\\r\\n        ratio = new Float32Array(1);\\r\\n    var rgbColor;\\r\\n    for (var i = t0; i <= t1; i += step) {\\r\\n      ratio[0] = i;\\r\\n      fn(ratio, 0, color, 0);\\r\\n      rgbColor = cs.getRgb(color, 0);\\r\\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\r\\n      colorStops.push([(i - t0) / diff, cssColor]);\\r\\n    }\\r\\n    var background = 'transparent';\\r\\n    if (dict.has('Background')) {\\r\\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\\r\\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\\r\\n    }\\r\\n    if (!extendStart) {\\r\\n      colorStops.unshift([0, background]);\\r\\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\\r\\n    }\\r\\n    if (!extendEnd) {\\r\\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\\r\\n      colorStops.push([1, background]);\\r\\n    }\\r\\n    this.colorStops = colorStops;\\r\\n  }\\r\\n  RadialAxial.prototype = {\\r\\n    getIR: function RadialAxial_getIR() {\\r\\n      var coordsArr = this.coordsArr;\\r\\n      var shadingType = this.shadingType;\\r\\n      var type, p0, p1, r0, r1;\\r\\n      if (shadingType === ShadingType.AXIAL) {\\r\\n        p0 = [coordsArr[0], coordsArr[1]];\\r\\n        p1 = [coordsArr[2], coordsArr[3]];\\r\\n        r0 = null;\\r\\n        r1 = null;\\r\\n        type = 'axial';\\r\\n      } else if (shadingType === ShadingType.RADIAL) {\\r\\n        p0 = [coordsArr[0], coordsArr[1]];\\r\\n        p1 = [coordsArr[3], coordsArr[4]];\\r\\n        r0 = coordsArr[2];\\r\\n        r1 = coordsArr[5];\\r\\n        type = 'radial';\\r\\n      } else {\\r\\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\\r\\n      }\\r\\n      var matrix = this.matrix;\\r\\n      if (matrix) {\\r\\n        p0 = _util.Util.applyTransform(p0, matrix);\\r\\n        p1 = _util.Util.applyTransform(p1, matrix);\\r\\n        if (shadingType === ShadingType.RADIAL) {\\r\\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\\r\\n          r0 *= scale[0];\\r\\n          r1 *= scale[1];\\r\\n        }\\r\\n      }\\r\\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\\r\\n    }\\r\\n  };\\r\\n  return RadialAxial;\\r\\n}();\\r\\nShadings.Mesh = function MeshClosure() {\\r\\n  function MeshStreamReader(stream, context) {\\r\\n    this.stream = stream;\\r\\n    this.context = context;\\r\\n    this.buffer = 0;\\r\\n    this.bufferLength = 0;\\r\\n    var numComps = context.numComps;\\r\\n    this.tmpCompsBuf = new Float32Array(numComps);\\r\\n    var csNumComps = context.colorSpace.numComps;\\r\\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\\r\\n  }\\r\\n  MeshStreamReader.prototype = {\\r\\n    get hasData() {\\r\\n      if (this.stream.end) {\\r\\n        return this.stream.pos < this.stream.end;\\r\\n      }\\r\\n      if (this.bufferLength > 0) {\\r\\n        return true;\\r\\n      }\\r\\n      var nextByte = this.stream.getByte();\\r\\n      if (nextByte < 0) {\\r\\n        return false;\\r\\n      }\\r\\n      this.buffer = nextByte;\\r\\n      this.bufferLength = 8;\\r\\n      return true;\\r\\n    },\\r\\n    readBits: function MeshStreamReader_readBits(n) {\\r\\n      var buffer = this.buffer;\\r\\n      var bufferLength = this.bufferLength;\\r\\n      if (n === 32) {\\r\\n        if (bufferLength === 0) {\\r\\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\\r\\n        }\\r\\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\\r\\n        var nextByte = this.stream.getByte();\\r\\n        this.buffer = nextByte & (1 << bufferLength) - 1;\\r\\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\\r\\n      }\\r\\n      if (n === 8 && bufferLength === 0) {\\r\\n        return this.stream.getByte();\\r\\n      }\\r\\n      while (bufferLength < n) {\\r\\n        buffer = buffer << 8 | this.stream.getByte();\\r\\n        bufferLength += 8;\\r\\n      }\\r\\n      bufferLength -= n;\\r\\n      this.bufferLength = bufferLength;\\r\\n      this.buffer = buffer & (1 << bufferLength) - 1;\\r\\n      return buffer >> bufferLength;\\r\\n    },\\r\\n    align: function MeshStreamReader_align() {\\r\\n      this.buffer = 0;\\r\\n      this.bufferLength = 0;\\r\\n    },\\r\\n    readFlag: function MeshStreamReader_readFlag() {\\r\\n      return this.readBits(this.context.bitsPerFlag);\\r\\n    },\\r\\n    readCoordinate: function MeshStreamReader_readCoordinate() {\\r\\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\\r\\n      var xi = this.readBits(bitsPerCoordinate);\\r\\n      var yi = this.readBits(bitsPerCoordinate);\\r\\n      var decode = this.context.decode;\\r\\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\\r\\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\\r\\n    },\\r\\n    readComponents: function MeshStreamReader_readComponents() {\\r\\n      var numComps = this.context.numComps;\\r\\n      var bitsPerComponent = this.context.bitsPerComponent;\\r\\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\\r\\n      var decode = this.context.decode;\\r\\n      var components = this.tmpCompsBuf;\\r\\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\\r\\n        var ci = this.readBits(bitsPerComponent);\\r\\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\\r\\n      }\\r\\n      var color = this.tmpCsCompsBuf;\\r\\n      if (this.context.colorFn) {\\r\\n        this.context.colorFn(components, 0, color, 0);\\r\\n      }\\r\\n      return this.context.colorSpace.getRgb(color, 0);\\r\\n    }\\r\\n  };\\r\\n  function decodeType4Shading(mesh, reader) {\\r\\n    var coords = mesh.coords;\\r\\n    var colors = mesh.colors;\\r\\n    var operators = [];\\r\\n    var ps = [];\\r\\n    var verticesLeft = 0;\\r\\n    while (reader.hasData) {\\r\\n      var f = reader.readFlag();\\r\\n      var coord = reader.readCoordinate();\\r\\n      var color = reader.readComponents();\\r\\n      if (verticesLeft === 0) {\\r\\n        if (!(0 <= f && f <= 2)) {\\r\\n          throw new _util.FormatError('Unknown type4 flag');\\r\\n        }\\r\\n        switch (f) {\\r\\n          case 0:\\r\\n            verticesLeft = 3;\\r\\n            break;\\r\\n          case 1:\\r\\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\\r\\n            verticesLeft = 1;\\r\\n            break;\\r\\n          case 2:\\r\\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\\r\\n            verticesLeft = 1;\\r\\n            break;\\r\\n        }\\r\\n        operators.push(f);\\r\\n      }\\r\\n      ps.push(coords.length);\\r\\n      coords.push(coord);\\r\\n      colors.push(color);\\r\\n      verticesLeft--;\\r\\n      reader.align();\\r\\n    }\\r\\n    mesh.figures.push({\\r\\n      type: 'triangles',\\r\\n      coords: new Int32Array(ps),\\r\\n      colors: new Int32Array(ps)\\r\\n    });\\r\\n  }\\r\\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\\r\\n    var coords = mesh.coords;\\r\\n    var colors = mesh.colors;\\r\\n    var ps = [];\\r\\n    while (reader.hasData) {\\r\\n      var coord = reader.readCoordinate();\\r\\n      var color = reader.readComponents();\\r\\n      ps.push(coords.length);\\r\\n      coords.push(coord);\\r\\n      colors.push(color);\\r\\n    }\\r\\n    mesh.figures.push({\\r\\n      type: 'lattice',\\r\\n      coords: new Int32Array(ps),\\r\\n      colors: new Int32Array(ps),\\r\\n      verticesPerRow: verticesPerRow\\r\\n    });\\r\\n  }\\r\\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\\r\\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\\r\\n  var TRIANGLE_DENSITY = 20;\\r\\n  var getB = function getBClosure() {\\r\\n    function buildB(count) {\\r\\n      var lut = [];\\r\\n      for (var i = 0; i <= count; i++) {\\r\\n        var t = i / count,\\r\\n            t_ = 1 - t;\\r\\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\\r\\n      }\\r\\n      return lut;\\r\\n    }\\r\\n    var cache = [];\\r\\n    return function getB(count) {\\r\\n      if (!cache[count]) {\\r\\n        cache[count] = buildB(count);\\r\\n      }\\r\\n      return cache[count];\\r\\n    };\\r\\n  }();\\r\\n  function buildFigureFromPatch(mesh, index) {\\r\\n    var figure = mesh.figures[index];\\r\\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\\r\\n    var coords = mesh.coords,\\r\\n        colors = mesh.colors;\\r\\n    var pi = figure.coords;\\r\\n    var ci = figure.colors;\\r\\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\r\\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\r\\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\\r\\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\\r\\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\\r\\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\\r\\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\\r\\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\\r\\n    var verticesPerRow = splitXBy + 1;\\r\\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\\r\\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\\r\\n    var k = 0;\\r\\n    var cl = new Uint8Array(3),\\r\\n        cr = new Uint8Array(3);\\r\\n    var c0 = colors[ci[0]],\\r\\n        c1 = colors[ci[1]],\\r\\n        c2 = colors[ci[2]],\\r\\n        c3 = colors[ci[3]];\\r\\n    var bRow = getB(splitYBy),\\r\\n        bCol = getB(splitXBy);\\r\\n    for (var row = 0; row <= splitYBy; row++) {\\r\\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\\r\\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\\r\\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\\r\\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\\r\\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\\r\\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\\r\\n      for (var col = 0; col <= splitXBy; col++, k++) {\\r\\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\\r\\n          continue;\\r\\n        }\\r\\n        var x = 0,\\r\\n            y = 0;\\r\\n        var q = 0;\\r\\n        for (var i = 0; i <= 3; i++) {\\r\\n          for (var j = 0; j <= 3; j++, q++) {\\r\\n            var m = bRow[row][i] * bCol[col][j];\\r\\n            x += coords[pi[q]][0] * m;\\r\\n            y += coords[pi[q]][1] * m;\\r\\n          }\\r\\n        }\\r\\n        figureCoords[k] = coords.length;\\r\\n        coords.push([x, y]);\\r\\n        figureColors[k] = colors.length;\\r\\n        var newColor = new Uint8Array(3);\\r\\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\\r\\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\\r\\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\\r\\n        colors.push(newColor);\\r\\n      }\\r\\n    }\\r\\n    figureCoords[0] = pi[0];\\r\\n    figureColors[0] = ci[0];\\r\\n    figureCoords[splitXBy] = pi[3];\\r\\n    figureColors[splitXBy] = ci[1];\\r\\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\\r\\n    figureColors[verticesPerRow * splitYBy] = ci[2];\\r\\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\\r\\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\\r\\n    mesh.figures[index] = {\\r\\n      type: 'lattice',\\r\\n      coords: figureCoords,\\r\\n      colors: figureColors,\\r\\n  \";a.a+=\"    verticesPerRow: verticesPerRow\\r\\n    };\\r\\n  }\\r\\n  function decodeType6Shading(mesh, reader) {\\r\\n    var coords = mesh.coords;\\r\\n    var colors = mesh.colors;\\r\\n    var ps = new Int32Array(16);\\r\\n    var cs = new Int32Array(4);\\r\\n    while (reader.hasData) {\\r\\n      var f = reader.readFlag();\\r\\n      if (!(0 <= f && f <= 3)) {\\r\\n        throw new _util.FormatError('Unknown type6 flag');\\r\\n      }\\r\\n      var i, ii;\\r\\n      var pi = coords.length;\\r\\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\\r\\n        coords.push(reader.readCoordinate());\\r\\n      }\\r\\n      var ci = colors.length;\\r\\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\r\\n        colors.push(reader.readComponents());\\r\\n      }\\r\\n      var tmp1, tmp2, tmp3, tmp4;\\r\\n      switch (f) {\\r\\n        case 0:\\r\\n          ps[12] = pi + 3;\\r\\n          ps[13] = pi + 4;\\r\\n          ps[14] = pi + 5;\\r\\n          ps[15] = pi + 6;\\r\\n          ps[8] = pi + 2;\\r\\n          ps[11] = pi + 7;\\r\\n          ps[4] = pi + 1;\\r\\n          ps[7] = pi + 8;\\r\\n          ps[0] = pi;\\r\\n          ps[1] = pi + 11;\\r\\n          ps[2] = pi + 10;\\r\\n          ps[3] = pi + 9;\\r\\n          cs[2] = ci + 1;\\r\\n          cs[3] = ci + 2;\\r\\n          cs[0] = ci;\\r\\n          cs[1] = ci + 3;\\r\\n          break;\\r\\n        case 1:\\r\\n          tmp1 = ps[12];\\r\\n          tmp2 = ps[13];\\r\\n          tmp3 = ps[14];\\r\\n          tmp4 = ps[15];\\r\\n          ps[12] = tmp4;\\r\\n          ps[13] = pi + 0;\\r\\n          ps[14] = pi + 1;\\r\\n          ps[15] = pi + 2;\\r\\n          ps[8] = tmp3;\\r\\n          ps[11] = pi + 3;\\r\\n          ps[4] = tmp2;\\r\\n          ps[7] = pi + 4;\\r\\n          ps[0] = tmp1;\\r\\n          ps[1] = pi + 7;\\r\\n          ps[2] = pi + 6;\\r\\n          ps[3] = pi + 5;\\r\\n          tmp1 = cs[2];\\r\\n          tmp2 = cs[3];\\r\\n          cs[2] = tmp2;\\r\\n          cs[3] = ci;\\r\\n          cs[0] = tmp1;\\r\\n          cs[1] = ci + 1;\\r\\n          break;\\r\\n        case 2:\\r\\n          tmp1 = ps[15];\\r\\n          tmp2 = ps[11];\\r\\n          ps[12] = ps[3];\\r\\n          ps[13] = pi + 0;\\r\\n          ps[14] = pi + 1;\\r\\n          ps[15] = pi + 2;\\r\\n          ps[8] = ps[7];\\r\\n          ps[11] = pi + 3;\\r\\n          ps[4] = tmp2;\\r\\n          ps[7] = pi + 4;\\r\\n          ps[0] = tmp1;\\r\\n          ps[1] = pi + 7;\\r\\n          ps[2] = pi + 6;\\r\\n          ps[3] = pi + 5;\\r\\n          tmp1 = cs[3];\\r\\n          cs[2] = cs[1];\\r\\n          cs[3] = ci;\\r\\n          cs[0] = tmp1;\\r\\n          cs[1] = ci + 1;\\r\\n          break;\\r\\n        case 3:\\r\\n          ps[12] = ps[0];\\r\\n          ps[13] = pi + 0;\\r\\n          ps[14] = pi + 1;\\r\\n          ps[15] = pi + 2;\\r\\n          ps[8] = ps[1];\\r\\n          ps[11] = pi + 3;\\r\\n          ps[4] = ps[2];\\r\\n          ps[7] = pi + 4;\\r\\n          ps[0] = ps[3];\\r\\n          ps[1] = pi + 7;\\r\\n          ps[2] = pi + 6;\\r\\n          ps[3] = pi + 5;\\r\\n          cs[2] = cs[0];\\r\\n          cs[3] = ci;\\r\\n          cs[0] = cs[1];\\r\\n          cs[1] = ci + 1;\\r\\n          break;\\r\\n      }\\r\\n      ps[5] = coords.length;\\r\\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\\r\\n      ps[6] = coords.length;\\r\\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\\r\\n      ps[9] = coords.length;\\r\\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\\r\\n      ps[10] = coords.length;\\r\\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\\r\\n      mesh.figures.push({\\r\\n        type: 'patch',\\r\\n        coords: new Int32Array(ps),\\r\\n        colors: new Int32Array(cs)\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  function decodeType7Shading(mesh, reader) {\\r\\n    var coords = mesh.coords;\\r\\n    var colors = mesh.colors;\\r\\n    var ps = new Int32Array(16);\\r\\n    var cs = new Int32Array(4);\\r\\n    while (reader.hasData) {\\r\\n      var f = reader.readFlag();\\r\\n      if (!(0 <= f && f <= 3)) {\\r\\n        throw new _util.FormatError('Unknown type7 flag');\\r\\n      }\\r\\n      var i, ii;\\r\\n      var pi = coords.length;\\r\\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\\r\\n        coords.push(reader.readCoordinate());\\r\\n      }\\r\\n      var ci = colors.length;\\r\\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\\r\\n        colors.push(reader.readComponents());\\r\\n      }\\r\\n      var tmp1, tmp2, tmp3, tmp4;\\r\\n      switch (f) {\\r\\n        case 0:\\r\\n          ps[12] = pi + 3;\\r\\n          ps[13] = pi + 4;\\r\\n          ps[14] = pi + 5;\\r\\n          ps[15] = pi + 6;\\r\\n          ps[8] = pi + 2;\\r\\n          ps[9] = pi + 13;\\r\\n          ps[10] = pi + 14;\\r\\n          ps[11] = pi + 7;\\r\\n          ps[4] = pi + 1;\\r\\n          ps[5] = pi + 12;\\r\\n          ps[6] = pi + 15;\\r\\n          ps[7] = pi + 8;\\r\\n          ps[0] = pi;\\r\\n          ps[1] = pi + 11;\\r\\n          ps[2] = pi + 10;\\r\\n          ps[3] = pi + 9;\\r\\n          cs[2] = ci + 1;\\r\\n          cs[3] = ci + 2;\\r\\n          cs[0] = ci;\\r\\n          cs[1] = ci + 3;\\r\\n          break;\\r\\n        case 1:\\r\\n          tmp1 = ps[12];\\r\\n          tmp2 = ps[13];\\r\\n          tmp3 = ps[14];\\r\\n          tmp4 = ps[15];\\r\\n          ps[12] = tmp4;\\r\\n          ps[13] = pi + 0;\\r\\n          ps[14] = pi + 1;\\r\\n          ps[15] = pi + 2;\\r\\n          ps[8] = tmp3;\\r\\n          ps[9] = pi + 9;\\r\\n          ps[10] = pi + 10;\\r\\n          ps[11] = pi + 3;\\r\\n          ps[4] = tmp2;\\r\\n          ps[5] = pi + 8;\\r\\n          ps[6] = pi + 11;\\r\\n          ps[7] = pi + 4;\\r\\n          ps[0] = tmp1;\\r\\n          ps[1] = pi + 7;\\r\\n          ps[2] = pi + 6;\\r\\n          ps[3] = pi + 5;\\r\\n          tmp1 = cs[2];\\r\\n          tmp2 = cs[3];\\r\\n          cs[2] = tmp2;\\r\\n          cs[3] = ci;\\r\\n          cs[0] = tmp1;\\r\\n          cs[1] = ci + 1;\\r\\n          break;\\r\\n        case 2:\\r\\n          tmp1 = ps[15];\\r\\n          tmp2 = ps[11];\\r\\n          ps[12] = ps[3];\\r\\n          ps[13] = pi + 0;\\r\\n          ps[14] = pi + 1;\\r\\n          ps[15] = pi + 2;\\r\\n          ps[8] = ps[7];\\r\\n          ps[9] = pi + 9;\\r\\n          ps[10] = pi + 10;\\r\\n          ps[11] = pi + 3;\\r\\n          ps[4] = tmp2;\\r\\n          ps[5] = pi + 8;\\r\\n          ps[6] = pi + 11;\\r\\n          ps[7] = pi + 4;\\r\\n          ps[0] = tmp1;\\r\\n          ps[1] = pi + 7;\\r\\n          ps[2] = pi + 6;\\r\\n          ps[3] = pi + 5;\\r\\n          tmp1 = cs[3];\\r\\n          cs[2] = cs[1];\\r\\n          cs[3] = ci;\\r\\n          cs[0] = tmp1;\\r\\n          cs[1] = ci + 1;\\r\\n          break;\\r\\n        case 3:\\r\\n          ps[12] = ps[0];\\r\\n          ps[13] = pi + 0;\\r\\n          ps[14] = pi + 1;\\r\\n          ps[15] = pi + 2;\\r\\n          ps[8] = ps[1];\\r\\n          ps[9] = pi + 9;\\r\\n          ps[10] = pi + 10;\\r\\n          ps[11] = pi + 3;\\r\\n          ps[4] = ps[2];\\r\\n          ps[5] = pi + 8;\\r\\n          ps[6] = pi + 11;\\r\\n          ps[7] = pi + 4;\\r\\n          ps[0] = ps[3];\\r\\n          ps[1] = pi + 7;\\r\\n          ps[2] = pi + 6;\\r\\n          ps[3] = pi + 5;\\r\\n          cs[2] = cs[0];\\r\\n          cs[3] = ci;\\r\\n          cs[0] = cs[1];\\r\\n          cs[1] = ci + 1;\\r\\n          break;\\r\\n      }\\r\\n      mesh.figures.push({\\r\\n        type: 'patch',\\r\\n        coords: new Int32Array(ps),\\r\\n        colors: new Int32Array(cs)\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n  function updateBounds(mesh) {\\r\\n    var minX = mesh.coords[0][0],\\r\\n        minY = mesh.coords[0][1],\\r\\n        maxX = minX,\\r\\n        maxY = minY;\\r\\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\\r\\n      var x = mesh.coords[i][0],\\r\\n          y = mesh.coords[i][1];\\r\\n      minX = minX > x ? x : minX;\\r\\n      minY = minY > y ? y : minY;\\r\\n      maxX = maxX < x ? x : maxX;\\r\\n      maxY = maxY < y ? y : maxY;\\r\\n    }\\r\\n    mesh.bounds = [minX, minY, maxX, maxY];\\r\\n  }\\r\\n  function packData(mesh) {\\r\\n    var i, ii, j, jj;\\r\\n    var coords = mesh.coords;\\r\\n    var coordsPacked = new Float32Array(coords.length * 2);\\r\\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\\r\\n      var xy = coords[i];\\r\\n      coordsPacked[j++] = xy[0];\\r\\n      coordsPacked[j++] = xy[1];\\r\\n    }\\r\\n    mesh.coords = coordsPacked;\\r\\n    var colors = mesh.colors;\\r\\n    var colorsPacked = new Uint8Array(colors.length * 3);\\r\\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\\r\\n      var c = colors[i];\\r\\n      colorsPacked[j++] = c[0];\\r\\n      colorsPacked[j++] = c[1];\\r\\n      colorsPacked[j++] = c[2];\\r\\n    }\\r\\n    mesh.colors = colorsPacked;\\r\\n    var figures = mesh.figures;\\r\\n    for (i = 0, ii = figures.length; i < ii; i++) {\\r\\n      var figure = figures[i],\\r\\n          ps = figure.coords,\\r\\n          cs = figure.colors;\\r\\n      for (j = 0, jj = ps.length; j < jj; j++) {\\r\\n        ps[j] *= 2;\\r\\n        cs[j] *= 3;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\\r\\n    if (!(0, _primitives.isStream)(stream)) {\\r\\n      throw new _util.FormatError('Mesh data is not a stream');\\r\\n    }\\r\\n    var dict = stream.dict;\\r\\n    this.matrix = matrix;\\r\\n    this.shadingType = dict.get('ShadingType');\\r\\n    this.type = 'Pattern';\\r\\n    this.bbox = dict.getArray('BBox');\\r\\n    var cs = dict.get('ColorSpace', 'CS');\\r\\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\\r\\n    this.cs = cs;\\r\\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\\r\\n    var fnObj = dict.get('Function');\\r\\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\\r\\n    this.coords = [];\\r\\n    this.colors = [];\\r\\n    this.figures = [];\\r\\n    var decodeContext = {\\r\\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\\r\\n      bitsPerComponent: dict.get('BitsPerComponent'),\\r\\n      bitsPerFlag: dict.get('BitsPerFlag'),\\r\\n      decode: dict.getArray('Decode'),\\r\\n      colorFn: fn,\\r\\n      colorSpace: cs,\\r\\n      numComps: fn ? 1 : cs.numComps\\r\\n    };\\r\\n    var reader = new MeshStreamReader(stream, decodeContext);\\r\\n    var patchMesh = false;\\r\\n    switch (this.shadingType) {\\r\\n      case ShadingType.FREE_FORM_MESH:\\r\\n        decodeType4Shading(this, reader);\\r\\n        break;\\r\\n      case ShadingType.LATTICE_FORM_MESH:\\r\\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\\r\\n        if (verticesPerRow < 2) {\\r\\n          throw new _util.FormatError('Invalid VerticesPerRow');\\r\\n        }\\r\\n        decodeType5Shading(this, reader, verticesPerRow);\\r\\n        break;\\r\\n      case ShadingType.COONS_PATCH_MESH:\\r\\n        decodeType6Shading(this, reader);\\r\\n        patchMesh = true;\\r\\n        break;\\r\\n      case ShadingType.TENSOR_PATCH_MESH:\\r\\n        decodeType7Shading(this, reader);\\r\\n        patchMesh = true;\\r\\n        break;\\r\\n      default:\\r\\n        (0, _util.unreachable)('Unsupported mesh type.');\\r\\n        break;\\r\\n    }\\r\\n    if (patchMesh) {\\r\\n      updateBounds(this);\\r\\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\\r\\n        buildFigureFromPatch(this, i);\\r\\n      }\\r\\n    }\\r\\n    updateBounds(this);\\r\\n    packData(this);\\r\\n  }\\r\\n  Mesh.prototype = {\\r\\n    getIR: function Mesh_getIR() {\\r\\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\\r\\n    }\\r\\n  };\\r\\n  return Mesh;\\r\\n}();\\r\\nShadings.Dummy = function DummyClosure() {\\r\\n  function Dummy() {\\r\\n    this.type = 'Pattern';\\r\\n  }\\r\\n  Dummy.prototype = {\\r\\n    getIR: function Dummy_getIR() {\\r\\n      return ['Dummy'];\\r\\n    }\\r\\n  };\\r\\n  return Dummy;\\r\\n}();\\r\\nfunction getTilingPatternIR(operatorList, dict, args) {\\r\\n  var matrix = dict.getArray('Matrix');\\r\\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\\r\\n  var xstep = dict.get('XStep');\\r\\n  var ystep = dict.get('YStep');\\r\\n  var paintType = dict.get('PaintType');\\r\\n  var tilingType = dict.get('TilingType');\\r\\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\\r\\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\\r\\n  }\\r\\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\\r\\n}\\r\\nexports.Pattern = Pattern;\\r\\nexports.getTilingPatternIR = getTilingPatternIR;\\r\\n\\r\\n/***/ }),\\r\\n/* 154 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.bidi = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\\r\\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\\r\\nfunction isOdd(i) {\\r\\n  return (i & 1) !== 0;\\r\\n}\\r\\nfunction isEven(i) {\\r\\n  return (i & 1) === 0;\\r\\n}\\r\\nfunction findUnequal(arr, start, value) {\\r\\n  for (var j = start, jj = arr.length; j < jj; ++j) {\\r\\n    if (arr[j] !== value) {\\r\\n      return j;\\r\\n    }\\r\\n  }\\r\\n  return j;\\r\\n}\\r\\nfunction setValues(arr, start, end, value) {\\r\\n  for (var j = start; j < end; ++j) {\\r\\n    arr[j] = value;\";a.a+=\"\\r\\n  }\\r\\n}\\r\\nfunction reverseValues(arr, start, end) {\\r\\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\\r\\n    var temp = arr[i];\\r\\n    arr[i] = arr[j];\\r\\n    arr[j] = temp;\\r\\n  }\\r\\n}\\r\\nfunction createBidiText(str, isLTR, vertical) {\\r\\n  return {\\r\\n    str: str,\\r\\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\\r\\n  };\\r\\n}\\r\\nvar chars = [];\\r\\nvar types = [];\\r\\nfunction bidi(str, startLevel, vertical) {\\r\\n  var isLTR = true;\\r\\n  var strLength = str.length;\\r\\n  if (strLength === 0 || vertical) {\\r\\n    return createBidiText(str, isLTR, vertical);\\r\\n  }\\r\\n  chars.length = strLength;\\r\\n  types.length = strLength;\\r\\n  var numBidi = 0;\\r\\n  var i, ii;\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    chars[i] = str.charAt(i);\\r\\n    var charCode = str.charCodeAt(i);\\r\\n    var charType = 'L';\\r\\n    if (charCode <= 0x00ff) {\\r\\n      charType = baseTypes[charCode];\\r\\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\\r\\n      charType = 'R';\\r\\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\\r\\n      charType = arabicTypes[charCode & 0xff];\\r\\n      if (!charType) {\\r\\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\\r\\n      }\\r\\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\\r\\n      charType = 'AL';\\r\\n    }\\r\\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\\r\\n      numBidi++;\\r\\n    }\\r\\n    types[i] = charType;\\r\\n  }\\r\\n  if (numBidi === 0) {\\r\\n    isLTR = true;\\r\\n    return createBidiText(str, isLTR);\\r\\n  }\\r\\n  if (startLevel === -1) {\\r\\n    if (numBidi / strLength < 0.3) {\\r\\n      isLTR = true;\\r\\n      startLevel = 0;\\r\\n    } else {\\r\\n      isLTR = false;\\r\\n      startLevel = 1;\\r\\n    }\\r\\n  }\\r\\n  var levels = [];\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    levels[i] = startLevel;\\r\\n  }\\r\\n  var e = isOdd(startLevel) ? 'R' : 'L';\\r\\n  var sor = e;\\r\\n  var eor = sor;\\r\\n  var lastType = sor;\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    if (types[i] === 'NSM') {\\r\\n      types[i] = lastType;\\r\\n    } else {\\r\\n      lastType = types[i];\\r\\n    }\\r\\n  }\\r\\n  lastType = sor;\\r\\n  var t;\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    t = types[i];\\r\\n    if (t === 'EN') {\\r\\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\\r\\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\\r\\n      lastType = t;\\r\\n    }\\r\\n  }\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    t = types[i];\\r\\n    if (t === 'AL') {\\r\\n      types[i] = 'R';\\r\\n    }\\r\\n  }\\r\\n  for (i = 1; i < strLength - 1; ++i) {\\r\\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\\r\\n      types[i] = 'EN';\\r\\n    }\\r\\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\\r\\n      types[i] = types[i - 1];\\r\\n    }\\r\\n  }\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    if (types[i] === 'EN') {\\r\\n      var j;\\r\\n      for (j = i - 1; j >= 0; --j) {\\r\\n        if (types[j] !== 'ET') {\\r\\n          break;\\r\\n        }\\r\\n        types[j] = 'EN';\\r\\n      }\\r\\n      for (j = i + 1; j < strLength; ++j) {\\r\\n        if (types[j] !== 'ET') {\\r\\n          break;\\r\\n        }\\r\\n        types[j] = 'EN';\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    t = types[i];\\r\\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\\r\\n      types[i] = 'ON';\\r\\n    }\\r\\n  }\\r\\n  lastType = sor;\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    t = types[i];\\r\\n    if (t === 'EN') {\\r\\n      types[i] = lastType === 'L' ? 'L' : 'EN';\\r\\n    } else if (t === 'R' || t === 'L') {\\r\\n      lastType = t;\\r\\n    }\\r\\n  }\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    if (types[i] === 'ON') {\\r\\n      var end = findUnequal(types, i + 1, 'ON');\\r\\n      var before = sor;\\r\\n      if (i > 0) {\\r\\n        before = types[i - 1];\\r\\n      }\\r\\n      var after = eor;\\r\\n      if (end + 1 < strLength) {\\r\\n        after = types[end + 1];\\r\\n      }\\r\\n      if (before !== 'L') {\\r\\n        before = 'R';\\r\\n      }\\r\\n      if (after !== 'L') {\\r\\n        after = 'R';\\r\\n      }\\r\\n      if (before === after) {\\r\\n        setValues(types, i, end, before);\\r\\n      }\\r\\n      i = end - 1;\\r\\n    }\\r\\n  }\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    if (types[i] === 'ON') {\\r\\n      types[i] = e;\\r\\n    }\\r\\n  }\\r\\n  for (i = 0; i < strLength; ++i) {\\r\\n    t = types[i];\\r\\n    if (isEven(levels[i])) {\\r\\n      if (t === 'R') {\\r\\n        levels[i] += 1;\\r\\n      } else if (t === 'AN' || t === 'EN') {\\r\\n        levels[i] += 2;\\r\\n      }\\r\\n    } else {\\r\\n      if (t === 'L' || t === 'AN' || t === 'EN') {\\r\\n        levels[i] += 1;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  var highestLevel = -1;\\r\\n  var lowestOddLevel = 99;\\r\\n  var level;\\r\\n  for (i = 0, ii = levels.length; i < ii; ++i) {\\r\\n    level = levels[i];\\r\\n    if (highestLevel < level) {\\r\\n      highestLevel = level;\\r\\n    }\\r\\n    if (lowestOddLevel > level && isOdd(level)) {\\r\\n      lowestOddLevel = level;\\r\\n    }\\r\\n  }\\r\\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\\r\\n    var start = -1;\\r\\n    for (i = 0, ii = levels.length; i < ii; ++i) {\\r\\n      if (levels[i] < level) {\\r\\n        if (start >= 0) {\\r\\n          reverseValues(chars, start, i);\\r\\n          start = -1;\\r\\n        }\\r\\n      } else if (start < 0) {\\r\\n        start = i;\\r\\n      }\\r\\n    }\\r\\n    if (start >= 0) {\\r\\n      reverseValues(chars, start, levels.length);\\r\\n    }\\r\\n  }\\r\\n  for (i = 0, ii = chars.length; i < ii; ++i) {\\r\\n    var ch = chars[i];\\r\\n    if (ch === '<' || ch === '>') {\\r\\n      chars[i] = '';\\r\\n    }\\r\\n  }\\r\\n  return createBidiText(chars.join(''), isLTR);\\r\\n}\\r\\nexports.bidi = bidi;\\r\\n\\r\\n/***/ }),\\r\\n/* 155 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.getMetrics = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\\r\\n  t['Courier'] = 600;\\r\\n  t['Courier-Bold'] = 600;\\r\\n  t['Courier-BoldOblique'] = 600;\\r\\n  t['Courier-Oblique'] = 600;\\r\\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 278;\\r\\n    t['exclam'] = 278;\\r\\n    t['quotedbl'] = 355;\\r\\n    t['numbersign'] = 556;\\r\\n    t['dollar'] = 556;\\r\\n    t['percent'] = 889;\\r\\n    t['ampersand'] = 667;\\r\\n    t['quoteright'] = 222;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 389;\\r\\n    t['plus'] = 584;\\r\\n    t['comma'] = 278;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 278;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 556;\\r\\n    t['one'] = 556;\\r\\n    t['two'] = 556;\\r\\n    t['three'] = 556;\\r\\n    t['four'] = 556;\\r\\n    t['five'] = 556;\\r\\n    t['six'] = 556;\\r\\n    t['seven'] = 556;\\r\\n    t['eight'] = 556;\\r\\n    t['nine'] = 556;\\r\\n    t['colon'] = 278;\\r\\n    t['semicolon'] = 278;\\r\\n    t['less'] = 584;\\r\\n    t['equal'] = 584;\\r\\n    t['greater'] = 584;\\r\\n    t['question'] = 556;\\r\\n    t['at'] = 1015;\\r\\n    t['A'] = 667;\\r\\n    t['B'] = 667;\\r\\n    t['C'] = 722;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 667;\\r\\n    t['F'] = 611;\\r\\n    t['G'] = 778;\\r\\n    t['H'] = 722;\\r\\n    t['I'] = 278;\\r\\n    t['J'] = 500;\\r\\n    t['K'] = 667;\\r\\n    t['L'] = 556;\\r\\n    t['M'] = 833;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 778;\\r\\n    t['P'] = 667;\\r\\n    t['Q'] = 778;\\r\\n    t['R'] = 722;\\r\\n    t['S'] = 667;\\r\\n    t['T'] = 611;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 667;\\r\\n    t['W'] = 944;\\r\\n    t['X'] = 667;\\r\\n    t['Y'] = 667;\\r\\n    t['Z'] = 611;\\r\\n    t['bracketleft'] = 278;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 278;\\r\\n    t['asciicircum'] = 469;\\r\\n    t['underscore'] = 556;\\r\\n    t['quoteleft'] = 222;\\r\\n    t['a'] = 556;\\r\\n    t['b'] = 556;\\r\\n    t['c'] = 500;\\r\\n    t['d'] = 556;\\r\\n    t['e'] = 556;\\r\\n    t['f'] = 278;\\r\\n    t['g'] = 556;\\r\\n    t['h'] = 556;\\r\\n    t['i'] = 222;\\r\\n    t['j'] = 222;\\r\\n    t['k'] = 500;\\r\\n    t['l'] = 222;\\r\\n    t['m'] = 833;\\r\\n    t['n'] = 556;\\r\\n    t['o'] = 556;\\r\\n    t['p'] = 556;\\r\\n    t['q'] = 556;\\r\\n    t['r'] = 333;\\r\\n    t['s'] = 500;\\r\\n    t['t'] = 278;\\r\\n    t['u'] = 556;\\r\\n    t['v'] = 500;\\r\\n    t['w'] = 722;\\r\\n    t['x'] = 500;\\r\\n    t['y'] = 500;\\r\\n    t['z'] = 500;\\r\\n    t['braceleft'] = 334;\\r\\n    t['bar'] = 260;\\r\\n    t['braceright'] = 334;\\r\\n    t['asciitilde'] = 584;\\r\\n    t['exclamdown'] = 333;\\r\\n    t['cent'] = 556;\\r\\n    t['sterling'] = 556;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 556;\\r\\n    t['florin'] = 556;\\r\\n    t['section'] = 556;\\r\\n    t['currency'] = 556;\\r\\n    t['quotesingle'] = 191;\\r\\n    t['quotedblleft'] = 333;\\r\\n    t['guillemotleft'] = 556;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 500;\\r\\n    t['fl'] = 500;\\r\\n    t['endash'] = 556;\\r\\n    t['dagger'] = 556;\\r\\n    t['daggerdbl'] = 556;\\r\\n    t['periodcentered'] = 278;\\r\\n    t['paragraph'] = 537;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 222;\\r\\n    t['quotedblbase'] = 333;\\r\\n    t['quotedblright'] = 333;\\r\\n    t['guillemotright'] = 556;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 611;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 1000;\\r\\n    t['ordfeminine'] = 370;\\r\\n    t['Lslash'] = 556;\\r\\n    t['Oslash'] = 778;\\r\\n    t['OE'] = 1000;\\r\\n    t['ordmasculine'] = 365;\\r\\n    t['ae'] = 889;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 222;\\r\\n    t['oslash'] = 611;\\r\\n    t['oe'] = 944;\\r\\n    t['germandbls'] = 611;\\r\\n    t['Idieresis'] = 278;\\r\\n    t['eacute'] = 556;\\r\\n    t['abreve'] = 556;\\r\\n    t['uhungarumlaut'] = 556;\\r\\n    t['ecaron'] = 556;\\r\\n    t['Ydieresis'] = 667;\\r\\n    t['divide'] = 584;\\r\\n    t['Yacute'] = 667;\\r\\n    t['Acircumflex'] = 667;\\r\\n    t['aacute'] = 556;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 500;\\r\\n    t['scommaaccent'] = 500;\\r\\n    t['ecircumflex'] = 556;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 556;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 556;\\r\\n    t['Edieresis'] = 667;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 737;\\r\\n    t['Emacron'] = 667;\\r\\n    t['ccaron'] = 500;\\r\\n    t['aring'] = 556;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 222;\\r\\n    t['agrave'] = 556;\\r\\n    t['Tcommaaccent'] = 611;\\r\\n    t['Cacute'] = 722;\\r\\n    t['atilde'] = 556;\\r\\n    t['Edotaccent'] = 667;\\r\\n    t['scaron'] = 500;\\r\\n    t['scedilla'] = 500;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 471;\\r\\n    t['Rcaron'] = 722;\\r\\n    t['Gcommaaccent'] = 778;\\r\\n    t['ucircumflex'] = 556;\\r\\n    t['acircumflex'] = 556;\\r\\n    t['Amacron'] = 667;\\r\\n    t['rcaron'] = 333;\\r\\n    t['ccedilla'] = 500;\\r\\n    t['Zdotaccent'] = 611;\\r\\n    t['Thorn'] = 667;\\r\\n    t['Omacron'] = 778;\\r\\n    t['Racute'] = 722;\\r\\n    t['Sacute'] = 667;\\r\\n    t['dcaron'] = 643;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 556;\\r\\n    t['threesuperior'] = 333;\\r\\n    t['Ograve'] = 778;\\r\\n    t['Agrave'] = 667;\\r\\n    t['Abreve'] = 667;\\r\\n    t['multiply'] = 584;\\r\\n    t['uacute'] = 556;\\r\\n    t['Tcaron'] = 611;\\r\\n    t['partialdiff'] = 476;\\r\\n    t['ydieresis'] = 500;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 667;\\r\\n    t['adieresis'] = 556;\\r\\n    t['edieresis'] = 556;\\r\\n    t['cacute'] = 500;\\r\\n    t['nacute'] = 556;\\r\\n    t['umacron'] = 556;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 278;\\r\\n    t['plusminus'] = 584;\\r\\n    t['brokenbar'] = 260;\\r\\n    t['registered'] = 737;\\r\\n    t['Gbreve'] = 778;\\r\\n    t['Idotaccent'] = 278;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 667;\\r\\n    t['racute'] = 333;\\r\\n    t['omacron'] = 556;\\r\\n    t['Zacute'] = 611;\\r\\n    t['Zcaron'] = 611;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 722;\\r\\n    t['lcommaaccent'] = 222;\\r\\n    t['tcaron'] = 317;\\r\\n    t['eogonek'] = 556;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 667;\\r\\n    t['Adieresis'] = 667;\\r\\n    t['egrave'] = 556;\\r\\n    t['zacute'] = 500;\\r\\n    t['iogonek'] = 222;\\r\\n    t['Oacute'] = 778;\\r\\n    t['oacute'] = 556;\\r\\n    t['amacron'] = 556;\\r\\n    t['sacute'] = 500;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 778;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 556;\\r\\n    t['twosuperior'] = 333;\\r\\n    t['Odieresis'] = 778;\\r\\n    t['mu'] = 556;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 556;\\r\\n    t['Eogonek'] = 667;\\r\\n    t['dcroat'] = 556;\\r\\n    t['threequarters'] = 834;\\r\\n    t['Scedilla'] = 667;\\r\\n    t['lcaron'] = 299;\\r\\n    t['Kcommaaccent'] = 667;\\r\\n    t['Lacute'] = 556;\\r\\n    t['trademark'] = 1000;\\r\\n    t['edotaccent'] = 556;\\r\\n    t['Igrave'] = 278;\\r\\n    t['Imacron'] = 278;\\r\\n    t['Lcaron'] = 556;\\r\\n    t['onehalf'] = 834;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 556;\\r\\n    t['ntilde'] = 556;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 667;\\r\\n    t['emacron'] = 556;\\r\\n    t['gbreve'] = 556;\\r\\n    t['onequarter'] = 834;\\r\\n    t['Scaron'] = 667;\\r\\n    t['Scommaaccent'] = 667;\\r\\n    t['Ohungarumlaut'] = 778;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 556;\\r\\n    t['Ccaron'] = 722;\\r\\n    t['ugrave'] = 556;\\r\\n    t['radical'] = 453;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 333;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 556;\\r\\n    t['Rcommaaccent'] = 722;\\r\\n    t['Lcommaaccent'] = 556;\\r\\n    t['Atilde'] = 667;\\r\\n    t['Aogonek'] = 667;\\r\\n    t['Aring'] = 667;\\r\\n    t['Otilde'] = 778;\\r\\n    t['zdotaccent'] = 500;\\r\\n    t['Ecaron'] = 667;\\r\\n    t['Iogonek'] = 278;\\r\\n    t['kcommaaccent'] = 500;\\r\\n    t['minus'] = 584;\\r\\n    t['Icircumflex'] = 278;\\r\\n    t['ncaron'] = 556;\\r\\n    t['tcommaaccent'] = 278;\\r\\n    t['logicalnot'] = 584;\\r\\n    t['odieresis'] = 556;\\r\\n    t['udieresis'] = 556;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 556;\\r\\n    t['eth'] = 556;\\r\\n    t['zcaron'] = 500;\\r\\n    t['ncommaaccent'] = 556;\\r\\n    t['onesuperior'] = 333;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 556;\\r\\n  });\\r\\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 278;\\r\\n    t['exclam'] = 333;\\r\\n    t['quotedbl'] = 474;\\r\\n    t['numbersign'] = 556;\\r\\n    t['dollar'] = 556;\\r\\n    t['percent'] = 889;\\r\\n    t['ampersand'] = 722;\\r\\n    t['quoteright'] = 278;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 389;\\r\\n    t['plus'] = 584;\\r\\n    t['comma'] = 278;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 278;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 556;\\r\\n    t['one'] = 556;\\r\\n    t['two'] = 556;\\r\\n    t['three'] = 556;\\r\\n    t['four'] = 556;\\r\\n    t['five'] = 556;\\r\\n    t['six'] = 556;\\r\\n    t['seven'] = 556;\\r\\n    t['eight'] = 556;\\r\\n    t['nine'] = 556;\\r\\n    t['colon'] = 333;\\r\\n    t['semicolon'] = 333;\\r\\n    t['less'] = 584;\\r\\n    t['equal'] = 584;\\r\\n    t['greater'] = 584;\\r\\n    t['question'] = 611;\\r\\n    t['at'] = 975;\\r\\n    t['A'] = 722;\\r\\n    t['B'] = 722;\\r\\n    t['C'] = 722;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 667;\\r\\n    t['F'] = 611;\\r\\n    t['G'] = 778;\\r\\n    t['H'] = 722;\\r\\n    t['I'] = 278;\\r\\n    t['J'] = 556;\\r\\n    t['K'] = 722;\\r\\n    t['L'] = 611;\\r\\n    t['M'] = 833;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 778;\\r\\n    t['P'] = 667;\\r\\n    t['Q'] = 778;\\r\\n    t['R'] = 722;\\r\\n    t['S'] = 667;\\r\\n    t['T'] = 611;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 667;\\r\\n    t['W'] = 944;\\r\\n    t['X'] = 667;\\r\\n    t['Y'] = 667;\\r\\n    t['Z'] = 611;\\r\\n    t['bracketleft'] = 333;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 333;\\r\\n    t['asciicircum'] = 584;\\r\\n    t['underscore'] = 556;\\r\\n    t['quoteleft'] = 278;\\r\\n    t['a'] = 556;\\r\\n    t['b'] = 611;\\r\\n    t['c'] = 556;\\r\\n    t['d'] = 611;\\r\\n    t['e'] = 556;\\r\\n    t['f'] = 333;\\r\\n    t['g'] = 611;\\r\\n    t['h'] = 611;\\r\\n    t['i'] = 278;\\r\\n    t['j'] = 278;\\r\\n    t['k'] = 556;\\r\\n    t['l'] = 278;\\r\\n    t['m'] = 889;\\r\\n    t['n'] = 611;\\r\\n    t['o'] = 611;\\r\\n    t['p'] = 611;\\r\\n    t['q'] = 611;\\r\\n    t['r'] = 389;\\r\\n    t['s'] = 556;\\r\\n    t['t'] = 333;\\r\\n    t['u'] = 611;\\r\\n    t['v'] = 556;\\r\\n    t['w'] = 778;\\r\\n    t['x'] = 556;\\r\\n    t['y'] = 556;\\r\\n    t['z'] = 500;\\r\\n    t['braceleft'] = 389;\\r\\n    t['bar'] = 280;\\r\\n    t['braceright'] = 389;\\r\\n    t['asciitilde'] = 584;\\r\\n    t['exclamdown'] = 333;\\r\\n    t['cent'] = 556;\\r\\n    t['sterling'] = 556;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 556;\\r\\n    t['florin'] = 556;\\r\\n    t['section'] = 556;\\r\\n    t['currency'] = 556;\\r\\n    t['quotesingle'] = 238;\\r\\n    t['quotedblleft'] = 500;\\r\\n    t['guillemotleft'] = 556;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 611;\\r\\n    t['fl'] = 611;\\r\\n    t['endash'] = 556;\\r\\n    t['dagger'] = 556;\\r\\n    t['daggerdbl'] = 556;\\r\\n    t['periodcentered'] = 278;\\r\\n    t['paragraph'] = 556;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 278;\\r\\n    t['quotedblbase'] = 500;\\r\\n    t['quotedblright'] = 500;\\r\\n    t['guillemotright'] = 556;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['per\";a.a+=\"thousand'] = 1000;\\r\\n    t['questiondown'] = 611;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 1000;\\r\\n    t['ordfeminine'] = 370;\\r\\n    t['Lslash'] = 611;\\r\\n    t['Oslash'] = 778;\\r\\n    t['OE'] = 1000;\\r\\n    t['ordmasculine'] = 365;\\r\\n    t['ae'] = 889;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 278;\\r\\n    t['oslash'] = 611;\\r\\n    t['oe'] = 944;\\r\\n    t['germandbls'] = 611;\\r\\n    t['Idieresis'] = 278;\\r\\n    t['eacute'] = 556;\\r\\n    t['abreve'] = 556;\\r\\n    t['uhungarumlaut'] = 611;\\r\\n    t['ecaron'] = 556;\\r\\n    t['Ydieresis'] = 667;\\r\\n    t['divide'] = 584;\\r\\n    t['Yacute'] = 667;\\r\\n    t['Acircumflex'] = 722;\\r\\n    t['aacute'] = 556;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 556;\\r\\n    t['scommaaccent'] = 556;\\r\\n    t['ecircumflex'] = 556;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 556;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 611;\\r\\n    t['Edieresis'] = 667;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 737;\\r\\n    t['Emacron'] = 667;\\r\\n    t['ccaron'] = 556;\\r\\n    t['aring'] = 556;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 278;\\r\\n    t['agrave'] = 556;\\r\\n    t['Tcommaaccent'] = 611;\\r\\n    t['Cacute'] = 722;\\r\\n    t['atilde'] = 556;\\r\\n    t['Edotaccent'] = 667;\\r\\n    t['scaron'] = 556;\\r\\n    t['scedilla'] = 556;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 494;\\r\\n    t['Rcaron'] = 722;\\r\\n    t['Gcommaaccent'] = 778;\\r\\n    t['ucircumflex'] = 611;\\r\\n    t['acircumflex'] = 556;\\r\\n    t['Amacron'] = 722;\\r\\n    t['rcaron'] = 389;\\r\\n    t['ccedilla'] = 556;\\r\\n    t['Zdotaccent'] = 611;\\r\\n    t['Thorn'] = 667;\\r\\n    t['Omacron'] = 778;\\r\\n    t['Racute'] = 722;\\r\\n    t['Sacute'] = 667;\\r\\n    t['dcaron'] = 743;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 611;\\r\\n    t['threesuperior'] = 333;\\r\\n    t['Ograve'] = 778;\\r\\n    t['Agrave'] = 722;\\r\\n    t['Abreve'] = 722;\\r\\n    t['multiply'] = 584;\\r\\n    t['uacute'] = 611;\\r\\n    t['Tcaron'] = 611;\\r\\n    t['partialdiff'] = 494;\\r\\n    t['ydieresis'] = 556;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 667;\\r\\n    t['adieresis'] = 556;\\r\\n    t['edieresis'] = 556;\\r\\n    t['cacute'] = 556;\\r\\n    t['nacute'] = 611;\\r\\n    t['umacron'] = 611;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 278;\\r\\n    t['plusminus'] = 584;\\r\\n    t['brokenbar'] = 280;\\r\\n    t['registered'] = 737;\\r\\n    t['Gbreve'] = 778;\\r\\n    t['Idotaccent'] = 278;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 667;\\r\\n    t['racute'] = 389;\\r\\n    t['omacron'] = 611;\\r\\n    t['Zacute'] = 611;\\r\\n    t['Zcaron'] = 611;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 722;\\r\\n    t['lcommaaccent'] = 278;\\r\\n    t['tcaron'] = 389;\\r\\n    t['eogonek'] = 556;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 722;\\r\\n    t['Adieresis'] = 722;\\r\\n    t['egrave'] = 556;\\r\\n    t['zacute'] = 500;\\r\\n    t['iogonek'] = 278;\\r\\n    t['Oacute'] = 778;\\r\\n    t['oacute'] = 611;\\r\\n    t['amacron'] = 556;\\r\\n    t['sacute'] = 556;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 778;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 611;\\r\\n    t['twosuperior'] = 333;\\r\\n    t['Odieresis'] = 778;\\r\\n    t['mu'] = 611;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 611;\\r\\n    t['Eogonek'] = 667;\\r\\n    t['dcroat'] = 611;\\r\\n    t['threequarters'] = 834;\\r\\n    t['Scedilla'] = 667;\\r\\n    t['lcaron'] = 400;\\r\\n    t['Kcommaaccent'] = 722;\\r\\n    t['Lacute'] = 611;\\r\\n    t['trademark'] = 1000;\\r\\n    t['edotaccent'] = 556;\\r\\n    t['Igrave'] = 278;\\r\\n    t['Imacron'] = 278;\\r\\n    t['Lcaron'] = 611;\\r\\n    t['onehalf'] = 834;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 611;\\r\\n    t['ntilde'] = 611;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 667;\\r\\n    t['emacron'] = 556;\\r\\n    t['gbreve'] = 611;\\r\\n    t['onequarter'] = 834;\\r\\n    t['Scaron'] = 667;\\r\\n    t['Scommaaccent'] = 667;\\r\\n    t['Ohungarumlaut'] = 778;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 611;\\r\\n    t['Ccaron'] = 722;\\r\\n    t['ugrave'] = 611;\\r\\n    t['radical'] = 549;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 389;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 611;\\r\\n    t['Rcommaaccent'] = 722;\\r\\n    t['Lcommaaccent'] = 611;\\r\\n    t['Atilde'] = 722;\\r\\n    t['Aogonek'] = 722;\\r\\n    t['Aring'] = 722;\\r\\n    t['Otilde'] = 778;\\r\\n    t['zdotaccent'] = 500;\\r\\n    t['Ecaron'] = 667;\\r\\n    t['Iogonek'] = 278;\\r\\n    t['kcommaaccent'] = 556;\\r\\n    t['minus'] = 584;\\r\\n    t['Icircumflex'] = 278;\\r\\n    t['ncaron'] = 611;\\r\\n    t['tcommaaccent'] = 333;\\r\\n    t['logicalnot'] = 584;\\r\\n    t['odieresis'] = 611;\\r\\n    t['udieresis'] = 611;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 611;\\r\\n    t['eth'] = 611;\\r\\n    t['zcaron'] = 500;\\r\\n    t['ncommaaccent'] = 611;\\r\\n    t['onesuperior'] = 333;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 556;\\r\\n  });\\r\\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 278;\\r\\n    t['exclam'] = 333;\\r\\n    t['quotedbl'] = 474;\\r\\n    t['numbersign'] = 556;\\r\\n    t['dollar'] = 556;\\r\\n    t['percent'] = 889;\\r\\n    t['ampersand'] = 722;\\r\\n    t['quoteright'] = 278;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 389;\\r\\n    t['plus'] = 584;\\r\\n    t['comma'] = 278;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 278;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 556;\\r\\n    t['one'] = 556;\\r\\n    t['two'] = 556;\\r\\n    t['three'] = 556;\\r\\n    t['four'] = 556;\\r\\n    t['five'] = 556;\\r\\n    t['six'] = 556;\\r\\n    t['seven'] = 556;\\r\\n    t['eight'] = 556;\\r\\n    t['nine'] = 556;\\r\\n    t['colon'] = 333;\\r\\n    t['semicolon'] = 333;\\r\\n    t['less'] = 584;\\r\\n    t['equal'] = 584;\\r\\n    t['greater'] = 584;\\r\\n    t['question'] = 611;\\r\\n    t['at'] = 975;\\r\\n    t['A'] = 722;\\r\\n    t['B'] = 722;\\r\\n    t['C'] = 722;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 667;\\r\\n    t['F'] = 611;\\r\\n    t['G'] = 778;\\r\\n    t['H'] = 722;\\r\\n    t['I'] = 278;\\r\\n    t['J'] = 556;\\r\\n    t['K'] = 722;\\r\\n    t['L'] = 611;\\r\\n    t['M'] = 833;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 778;\\r\\n    t['P'] = 667;\\r\\n    t['Q'] = 778;\\r\\n    t['R'] = 722;\\r\\n    t['S'] = 667;\\r\\n    t['T'] = 611;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 667;\\r\\n    t['W'] = 944;\\r\\n    t['X'] = 667;\\r\\n    t['Y'] = 667;\\r\\n    t['Z'] = 611;\\r\\n    t['bracketleft'] = 333;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 333;\\r\\n    t['asciicircum'] = 584;\\r\\n    t['underscore'] = 556;\\r\\n    t['quoteleft'] = 278;\\r\\n    t['a'] = 556;\\r\\n    t['b'] = 611;\\r\\n    t['c'] = 556;\\r\\n    t['d'] = 611;\\r\\n    t['e'] = 556;\\r\\n    t['f'] = 333;\\r\\n    t['g'] = 611;\\r\\n    t['h'] = 611;\\r\\n    t['i'] = 278;\\r\\n    t['j'] = 278;\\r\\n    t['k'] = 556;\\r\\n    t['l'] = 278;\\r\\n    t['m'] = 889;\\r\\n    t['n'] = 611;\\r\\n    t['o'] = 611;\\r\\n    t['p'] = 611;\\r\\n    t['q'] = 611;\\r\\n    t['r'] = 389;\\r\\n    t['s'] = 556;\\r\\n    t['t'] = 333;\\r\\n    t['u'] = 611;\\r\\n    t['v'] = 556;\\r\\n    t['w'] = 778;\\r\\n    t['x'] = 556;\\r\\n    t['y'] = 556;\\r\\n    t['z'] = 500;\\r\\n    t['braceleft'] = 389;\\r\\n    t['bar'] = 280;\\r\\n    t['braceright'] = 389;\\r\\n    t['asciitilde'] = 584;\\r\\n    t['exclamdown'] = 333;\\r\\n    t['cent'] = 556;\\r\\n    t['sterling'] = 556;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 556;\\r\\n    t['florin'] = 556;\\r\\n    t['section'] = 556;\\r\\n    t['currency'] = 556;\\r\\n    t['quotesingle'] = 238;\\r\\n    t['quotedblleft'] = 500;\\r\\n    t['guillemotleft'] = 556;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 611;\\r\\n    t['fl'] = 611;\\r\\n    t['endash'] = 556;\\r\\n    t['dagger'] = 556;\\r\\n    t['daggerdbl'] = 556;\\r\\n    t['periodcentered'] = 278;\\r\\n    t['paragraph'] = 556;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 278;\\r\\n    t['quotedblbase'] = 500;\\r\\n    t['quotedblright'] = 500;\\r\\n    t['guillemotright'] = 556;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 611;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 1000;\\r\\n    t['ordfeminine'] = 370;\\r\\n    t['Lslash'] = 611;\\r\\n    t['Oslash'] = 778;\\r\\n    t['OE'] = 1000;\\r\\n    t['ordmasculine'] = 365;\\r\\n    t['ae'] = 889;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 278;\\r\\n    t['oslash'] = 611;\\r\\n    t['oe'] = 944;\\r\\n    t['germandbls'] = 611;\\r\\n    t['Idieresis'] = 278;\\r\\n    t['eacute'] = 556;\\r\\n    t['abreve'] = 556;\\r\\n    t['uhungarumlaut'] = 611;\\r\\n    t['ecaron'] = 556;\\r\\n    t['Ydieresis'] = 667;\\r\\n    t['divide'] = 584;\\r\\n    t['Yacute'] = 667;\\r\\n    t['Acircumflex'] = 722;\\r\\n    t['aacute'] = 556;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 556;\\r\\n    t['scommaaccent'] = 556;\\r\\n    t['ecircumflex'] = 556;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 556;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 611;\\r\\n    t['Edieresis'] = 667;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 737;\\r\\n    t['Emacron'] = 667;\\r\\n    t['ccaron'] = 556;\\r\\n    t['aring'] = 556;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 278;\\r\\n    t['agrave'] = 556;\\r\\n    t['Tcommaaccent'] = 611;\\r\\n    t['Cacute'] = 722;\\r\\n    t['atilde'] = 556;\\r\\n    t['Edotaccent'] = 667;\\r\\n    t['scaron'] = 556;\\r\\n    t['scedilla'] = 556;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 494;\\r\\n    t['Rcaron'] = 722;\\r\\n    t['Gcommaaccent'] = 778;\\r\\n    t['ucircumflex'] = 611;\\r\\n    t['acircumflex'] = 556;\\r\\n    t['Amacron'] = 722;\\r\\n    t['rcaron'] = 389;\\r\\n    t['ccedilla'] = 556;\\r\\n    t['Zdotaccent'] = 611;\\r\\n    t['Thorn'] = 667;\\r\\n    t['Omacron'] = 778;\\r\\n    t['Racute'] = 722;\\r\\n    t['Sacute'] = 667;\\r\\n    t['dcaron'] = 743;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 611;\\r\\n    t['threesuperior'] = 333;\\r\\n    t['Ograve'] = 778;\\r\\n    t['Agrave'] = 722;\\r\\n    t['Abreve'] = 722;\\r\\n    t['multiply'] = 584;\\r\\n    t['uacute'] = 611;\\r\\n    t['Tcaron'] = 611;\\r\\n    t['partialdiff'] = 494;\\r\\n    t['ydieresis'] = 556;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 667;\\r\\n    t['adieresis'] = 556;\\r\\n    t['edieresis'] = 556;\\r\\n    t['cacute'] = 556;\\r\\n    t['nacute'] = 611;\\r\\n    t['umacron'] = 611;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 278;\\r\\n    t['plusminus'] = 584;\\r\\n    t['brokenbar'] = 280;\\r\\n    t['registered'] = 737;\\r\\n    t['Gbreve'] = 778;\\r\\n    t['Idotaccent'] = 278;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 667;\\r\\n    t['racute'] = 389;\\r\\n    t['omacron'] = 611;\\r\\n    t['Zacute'] = 611;\\r\\n    t['Zcaron'] = 611;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 722;\\r\\n    t['lcommaaccent'] = 278;\\r\\n    t['tcaron'] = 389;\\r\\n    t['eogonek'] = 556;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 722;\\r\\n    t['Adieresis'] = 722;\\r\\n    t['egrave'] = 556;\\r\\n    t['zacute'] = 500;\\r\\n    t['iogonek'] = 278;\\r\\n    t['Oacute'] = 778;\\r\\n    t['oacute'] = 611;\\r\\n    t['amacron'] = 556;\\r\\n    t['sacute'] = 556;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 778;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 611;\\r\\n    t['twosuperior'] = 333;\\r\\n    t['Odieresis'] = 778;\\r\\n    t['mu'] = 611;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 611;\\r\\n    t['Eogonek'] = 667;\\r\\n    t['dcroat'] = 611;\\r\\n    t['threequarters'] = 834;\\r\\n    t['Scedilla'] = 667;\\r\\n    t['lcaron'] = 400;\\r\\n    t['Kcommaaccent'] = 722;\\r\\n    t['Lacute'] = 611;\\r\\n    t['trademark'] = 1000;\\r\\n    t['edotaccent'] = 556;\\r\\n    t['Igrave'] = 278;\\r\\n    t['Imacron'] = 278;\\r\\n    t['Lcaron'] = 611;\\r\\n    t['onehalf'] = 834;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 611;\\r\\n    t['ntilde'] = 611;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 667;\\r\\n    t['emacron'] = 556;\\r\\n    t['gbreve'] = 611;\\r\\n    t['onequarter'] = 834;\\r\\n    t['Scaron'] = 667;\\r\\n    t['Scommaaccent'] = 667;\\r\\n    t['Ohungarumlaut'] = 778;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 611;\\r\\n    t['Ccaron'] = 722;\\r\\n    t['ugrave'] = 611;\\r\\n    t['radical'] = 549;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 389;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 611;\\r\\n    t['Rcommaaccent'] = 722;\\r\\n    t['Lcommaaccent'] = 611;\\r\\n    t['Atilde'] = 722;\\r\\n    t['Aogonek'] = 722;\\r\\n    t['Aring'] = 722;\\r\\n    t['Otilde'] = 778;\\r\\n    t['zdotaccent'] = 500;\\r\\n    t['Ecaron'] = 667;\\r\\n    t['Iogonek'] = 278;\\r\\n    t['kcommaaccent'] = 556;\\r\\n    t['minus'] = 584;\\r\\n    t['Icircumflex'] = 278;\\r\\n    t['ncaron'] = 611;\\r\\n    t['tcommaaccent'] = 333;\\r\\n    t['logicalnot'] = 584;\\r\\n    t['odieresis'] = 611;\\r\\n    t['udieresis'] = 611;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 611;\\r\\n    t['eth'] = 611;\\r\\n    t['zcaron'] = 500;\\r\\n    t['ncommaaccent'] = 611;\\r\\n    t['onesuperior'] = 333;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 556;\\r\\n  });\\r\\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 278;\\r\\n    t['exclam'] = 278;\\r\\n    t['quotedbl'] = 355;\\r\\n    t['numbersign'] = 556;\\r\\n    t['dollar'] = 556;\\r\\n    t['percent'] = 889;\\r\\n    t['ampersand'] = 667;\\r\\n    t['quoteright'] = 222;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 389;\\r\\n    t['plus'] = 584;\\r\\n    t['comma'] = 278;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 278;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 556;\\r\\n    t['one'] = 556;\\r\\n    t['two'] = 556;\\r\\n    t['three'] = 556;\\r\\n    t['four'] = 556;\\r\\n    t['five'] = 556;\\r\\n    t['six'] = 556;\\r\\n    t['seven'] = 556;\\r\\n    t['eight'] = 556;\\r\\n    t['nine'] = 556;\\r\\n    t['colon'] = 278;\\r\\n    t['semicolon'] = 278;\\r\\n    t['less'] = 584;\\r\\n    t['equal'] = 584;\\r\\n    t['greater'] = 584;\\r\\n    t['question'] = 556;\\r\\n    t['at'] = 1015;\\r\\n    t['A'] = 667;\\r\\n    t['B'] = 667;\\r\\n    t['C'] = 722;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 667;\\r\\n    t['F'] = 611;\\r\\n    t['G'] = 778;\\r\\n    t['H'] = 722;\\r\\n    t['I'] = 278;\\r\\n    t['J'] = 500;\\r\\n    t['K'] = 667;\\r\\n    t['L'] = 556;\\r\\n    t['M'] = 833;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 778;\\r\\n    t['P'] = 667;\\r\\n    t['Q'] = 778;\\r\\n    t['R'] = 722;\\r\\n    t['S'] = 667;\\r\\n    t['T'] = 611;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 667;\\r\\n    t['W'] = 944;\\r\\n    t['X'] = 667;\\r\\n    t['Y'] = 667;\\r\\n    t['Z'] = 611;\\r\\n    t['bracketleft'] = 278;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 278;\\r\\n    t['asciicircum'] = 469;\\r\\n    t['underscore'] = 556;\\r\\n    t['quoteleft'] = 222;\\r\\n    t['a'] = 556;\\r\\n    t['b'] = 556;\\r\\n    t['c'] = 500;\\r\\n    t['d'] = 556;\\r\\n    t['e'] = 556;\\r\\n    t['f'] = 278;\\r\\n    t['g'] = 556;\\r\\n    t['h'] = 556;\\r\\n    t['i'] = 222;\\r\\n    t['j'] = 222;\\r\\n    t['k'] = 500;\\r\\n    t['l'] = 222;\\r\\n    t['m'] = 833;\\r\\n    t['n'] = 556;\\r\\n    t['o'] = 556;\\r\\n    t['p'] = 556;\\r\\n    t['q'] = 556;\\r\\n    t['r'] = 333;\\r\\n    t['s'] = 500;\\r\\n    t['t'] = 278;\\r\\n    t['u'] = 556;\\r\\n    t['v'] = 500;\\r\\n    t['w'] = 722;\\r\\n    t['x'] = 500;\\r\\n    t['y'] = 500;\\r\\n    t['z'] = 500;\\r\\n    t['braceleft'] = 334;\\r\\n    t['bar'] = 260;\\r\\n    t['braceright'] = 334;\\r\\n    t['asciitilde'] = 584;\\r\\n    t['exclamdown'] = 333;\\r\\n    t['cent'] = 556;\\r\\n    t['sterling'] = 556;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 556;\\r\\n    t['florin'] = 556;\\r\\n    t['section'] = 556;\\r\\n    t['currency'] = 556;\\r\\n    t['quotesingle'] = 191;\\r\\n    t['quotedblleft'] = 333;\\r\\n    t['guillemotleft'] = 556;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 500;\\r\\n    t['fl'] = 500;\\r\\n    t['endash'] = 556;\\r\\n    t['dagger'] = 556;\\r\\n    t['daggerdbl'] = 556;\\r\\n    t['periodcentered'] = 278;\\r\\n    t['paragraph'] = 537;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 222;\\r\\n    t['quotedblbase'] = 333;\\r\\n    t['quotedblright'] = 333;\\r\\n    t['guillemotright'] = 556;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 611;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 1000;\\r\\n    t['ordfeminine'] = 370;\\r\\n    t['Lslash'] = 556;\\r\\n    t['Oslash'] = 778;\\r\\n    t['OE'] = 1000;\\r\\n    t['ordmasculine'] = 365;\\r\\n    t['ae'] = 889;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 222;\\r\\n    t['oslash'] = 611;\\r\\n    t['oe'] = 944;\\r\\n    t['germandbls'] = 611;\\r\\n    t['Idieresis'] = 278;\\r\\n    t['eacute'] = 556;\\r\\n    t[\";a.a+=\"'abreve'] = 556;\\r\\n    t['uhungarumlaut'] = 556;\\r\\n    t['ecaron'] = 556;\\r\\n    t['Ydieresis'] = 667;\\r\\n    t['divide'] = 584;\\r\\n    t['Yacute'] = 667;\\r\\n    t['Acircumflex'] = 667;\\r\\n    t['aacute'] = 556;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 500;\\r\\n    t['scommaaccent'] = 500;\\r\\n    t['ecircumflex'] = 556;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 556;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 556;\\r\\n    t['Edieresis'] = 667;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 737;\\r\\n    t['Emacron'] = 667;\\r\\n    t['ccaron'] = 500;\\r\\n    t['aring'] = 556;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 222;\\r\\n    t['agrave'] = 556;\\r\\n    t['Tcommaaccent'] = 611;\\r\\n    t['Cacute'] = 722;\\r\\n    t['atilde'] = 556;\\r\\n    t['Edotaccent'] = 667;\\r\\n    t['scaron'] = 500;\\r\\n    t['scedilla'] = 500;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 471;\\r\\n    t['Rcaron'] = 722;\\r\\n    t['Gcommaaccent'] = 778;\\r\\n    t['ucircumflex'] = 556;\\r\\n    t['acircumflex'] = 556;\\r\\n    t['Amacron'] = 667;\\r\\n    t['rcaron'] = 333;\\r\\n    t['ccedilla'] = 500;\\r\\n    t['Zdotaccent'] = 611;\\r\\n    t['Thorn'] = 667;\\r\\n    t['Omacron'] = 778;\\r\\n    t['Racute'] = 722;\\r\\n    t['Sacute'] = 667;\\r\\n    t['dcaron'] = 643;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 556;\\r\\n    t['threesuperior'] = 333;\\r\\n    t['Ograve'] = 778;\\r\\n    t['Agrave'] = 667;\\r\\n    t['Abreve'] = 667;\\r\\n    t['multiply'] = 584;\\r\\n    t['uacute'] = 556;\\r\\n    t['Tcaron'] = 611;\\r\\n    t['partialdiff'] = 476;\\r\\n    t['ydieresis'] = 500;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 667;\\r\\n    t['adieresis'] = 556;\\r\\n    t['edieresis'] = 556;\\r\\n    t['cacute'] = 500;\\r\\n    t['nacute'] = 556;\\r\\n    t['umacron'] = 556;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 278;\\r\\n    t['plusminus'] = 584;\\r\\n    t['brokenbar'] = 260;\\r\\n    t['registered'] = 737;\\r\\n    t['Gbreve'] = 778;\\r\\n    t['Idotaccent'] = 278;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 667;\\r\\n    t['racute'] = 333;\\r\\n    t['omacron'] = 556;\\r\\n    t['Zacute'] = 611;\\r\\n    t['Zcaron'] = 611;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 722;\\r\\n    t['lcommaaccent'] = 222;\\r\\n    t['tcaron'] = 317;\\r\\n    t['eogonek'] = 556;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 667;\\r\\n    t['Adieresis'] = 667;\\r\\n    t['egrave'] = 556;\\r\\n    t['zacute'] = 500;\\r\\n    t['iogonek'] = 222;\\r\\n    t['Oacute'] = 778;\\r\\n    t['oacute'] = 556;\\r\\n    t['amacron'] = 556;\\r\\n    t['sacute'] = 500;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 778;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 556;\\r\\n    t['twosuperior'] = 333;\\r\\n    t['Odieresis'] = 778;\\r\\n    t['mu'] = 556;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 556;\\r\\n    t['Eogonek'] = 667;\\r\\n    t['dcroat'] = 556;\\r\\n    t['threequarters'] = 834;\\r\\n    t['Scedilla'] = 667;\\r\\n    t['lcaron'] = 299;\\r\\n    t['Kcommaaccent'] = 667;\\r\\n    t['Lacute'] = 556;\\r\\n    t['trademark'] = 1000;\\r\\n    t['edotaccent'] = 556;\\r\\n    t['Igrave'] = 278;\\r\\n    t['Imacron'] = 278;\\r\\n    t['Lcaron'] = 556;\\r\\n    t['onehalf'] = 834;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 556;\\r\\n    t['ntilde'] = 556;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 667;\\r\\n    t['emacron'] = 556;\\r\\n    t['gbreve'] = 556;\\r\\n    t['onequarter'] = 834;\\r\\n    t['Scaron'] = 667;\\r\\n    t['Scommaaccent'] = 667;\\r\\n    t['Ohungarumlaut'] = 778;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 556;\\r\\n    t['Ccaron'] = 722;\\r\\n    t['ugrave'] = 556;\\r\\n    t['radical'] = 453;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 333;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 556;\\r\\n    t['Rcommaaccent'] = 722;\\r\\n    t['Lcommaaccent'] = 556;\\r\\n    t['Atilde'] = 667;\\r\\n    t['Aogonek'] = 667;\\r\\n    t['Aring'] = 667;\\r\\n    t['Otilde'] = 778;\\r\\n    t['zdotaccent'] = 500;\\r\\n    t['Ecaron'] = 667;\\r\\n    t['Iogonek'] = 278;\\r\\n    t['kcommaaccent'] = 500;\\r\\n    t['minus'] = 584;\\r\\n    t['Icircumflex'] = 278;\\r\\n    t['ncaron'] = 556;\\r\\n    t['tcommaaccent'] = 278;\\r\\n    t['logicalnot'] = 584;\\r\\n    t['odieresis'] = 556;\\r\\n    t['udieresis'] = 556;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 556;\\r\\n    t['eth'] = 556;\\r\\n    t['zcaron'] = 500;\\r\\n    t['ncommaaccent'] = 556;\\r\\n    t['onesuperior'] = 333;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 556;\\r\\n  });\\r\\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 250;\\r\\n    t['exclam'] = 333;\\r\\n    t['universal'] = 713;\\r\\n    t['numbersign'] = 500;\\r\\n    t['existential'] = 549;\\r\\n    t['percent'] = 833;\\r\\n    t['ampersand'] = 778;\\r\\n    t['suchthat'] = 439;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asteriskmath'] = 500;\\r\\n    t['plus'] = 549;\\r\\n    t['comma'] = 250;\\r\\n    t['minus'] = 549;\\r\\n    t['period'] = 250;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 500;\\r\\n    t['one'] = 500;\\r\\n    t['two'] = 500;\\r\\n    t['three'] = 500;\\r\\n    t['four'] = 500;\\r\\n    t['five'] = 500;\\r\\n    t['six'] = 500;\\r\\n    t['seven'] = 500;\\r\\n    t['eight'] = 500;\\r\\n    t['nine'] = 500;\\r\\n    t['colon'] = 278;\\r\\n    t['semicolon'] = 278;\\r\\n    t['less'] = 549;\\r\\n    t['equal'] = 549;\\r\\n    t['greater'] = 549;\\r\\n    t['question'] = 444;\\r\\n    t['congruent'] = 549;\\r\\n    t['Alpha'] = 722;\\r\\n    t['Beta'] = 667;\\r\\n    t['Chi'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['Epsilon'] = 611;\\r\\n    t['Phi'] = 763;\\r\\n    t['Gamma'] = 603;\\r\\n    t['Eta'] = 722;\\r\\n    t['Iota'] = 333;\\r\\n    t['theta1'] = 631;\\r\\n    t['Kappa'] = 722;\\r\\n    t['Lambda'] = 686;\\r\\n    t['Mu'] = 889;\\r\\n    t['Nu'] = 722;\\r\\n    t['Omicron'] = 722;\\r\\n    t['Pi'] = 768;\\r\\n    t['Theta'] = 741;\\r\\n    t['Rho'] = 556;\\r\\n    t['Sigma'] = 592;\\r\\n    t['Tau'] = 611;\\r\\n    t['Upsilon'] = 690;\\r\\n    t['sigma1'] = 439;\\r\\n    t['Omega'] = 768;\\r\\n    t['Xi'] = 645;\\r\\n    t['Psi'] = 795;\\r\\n    t['Zeta'] = 611;\\r\\n    t['bracketleft'] = 333;\\r\\n    t['therefore'] = 863;\\r\\n    t['bracketright'] = 333;\\r\\n    t['perpendicular'] = 658;\\r\\n    t['underscore'] = 500;\\r\\n    t['radicalex'] = 500;\\r\\n    t['alpha'] = 631;\\r\\n    t['beta'] = 549;\\r\\n    t['chi'] = 549;\\r\\n    t['delta'] = 494;\\r\\n    t['epsilon'] = 439;\\r\\n    t['phi'] = 521;\\r\\n    t['gamma'] = 411;\\r\\n    t['eta'] = 603;\\r\\n    t['iota'] = 329;\\r\\n    t['phi1'] = 603;\\r\\n    t['kappa'] = 549;\\r\\n    t['lambda'] = 549;\\r\\n    t['mu'] = 576;\\r\\n    t['nu'] = 521;\\r\\n    t['omicron'] = 549;\\r\\n    t['pi'] = 549;\\r\\n    t['theta'] = 521;\\r\\n    t['rho'] = 549;\\r\\n    t['sigma'] = 603;\\r\\n    t['tau'] = 439;\\r\\n    t['upsilon'] = 576;\\r\\n    t['omega1'] = 713;\\r\\n    t['omega'] = 686;\\r\\n    t['xi'] = 493;\\r\\n    t['psi'] = 686;\\r\\n    t['zeta'] = 494;\\r\\n    t['braceleft'] = 480;\\r\\n    t['bar'] = 200;\\r\\n    t['braceright'] = 480;\\r\\n    t['similar'] = 549;\\r\\n    t['Euro'] = 750;\\r\\n    t['Upsilon1'] = 620;\\r\\n    t['minute'] = 247;\\r\\n    t['lessequal'] = 549;\\r\\n    t['fraction'] = 167;\\r\\n    t['infinity'] = 713;\\r\\n    t['florin'] = 500;\\r\\n    t['club'] = 753;\\r\\n    t['diamond'] = 753;\\r\\n    t['heart'] = 753;\\r\\n    t['spade'] = 753;\\r\\n    t['arrowboth'] = 1042;\\r\\n    t['arrowleft'] = 987;\\r\\n    t['arrowup'] = 603;\\r\\n    t['arrowright'] = 987;\\r\\n    t['arrowdown'] = 603;\\r\\n    t['degree'] = 400;\\r\\n    t['plusminus'] = 549;\\r\\n    t['second'] = 411;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['multiply'] = 549;\\r\\n    t['proportional'] = 713;\\r\\n    t['partialdiff'] = 494;\\r\\n    t['bullet'] = 460;\\r\\n    t['divide'] = 549;\\r\\n    t['notequal'] = 549;\\r\\n    t['equivalence'] = 549;\\r\\n    t['approxequal'] = 549;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['arrowvertex'] = 603;\\r\\n    t['arrowhorizex'] = 1000;\\r\\n    t['carriagereturn'] = 658;\\r\\n    t['aleph'] = 823;\\r\\n    t['Ifraktur'] = 686;\\r\\n    t['Rfraktur'] = 795;\\r\\n    t['weierstrass'] = 987;\\r\\n    t['circlemultiply'] = 768;\\r\\n    t['circleplus'] = 768;\\r\\n    t['emptyset'] = 823;\\r\\n    t['intersection'] = 768;\\r\\n    t['union'] = 768;\\r\\n    t['propersuperset'] = 713;\\r\\n    t['reflexsuperset'] = 713;\\r\\n    t['notsubset'] = 713;\\r\\n    t['propersubset'] = 713;\\r\\n    t['reflexsubset'] = 713;\\r\\n    t['element'] = 713;\\r\\n    t['notelement'] = 713;\\r\\n    t['angle'] = 768;\\r\\n    t['gradient'] = 713;\\r\\n    t['registerserif'] = 790;\\r\\n    t['copyrightserif'] = 790;\\r\\n    t['trademarkserif'] = 890;\\r\\n    t['product'] = 823;\\r\\n    t['radical'] = 549;\\r\\n    t['dotmath'] = 250;\\r\\n    t['logicalnot'] = 713;\\r\\n    t['logicaland'] = 603;\\r\\n    t['logicalor'] = 603;\\r\\n    t['arrowdblboth'] = 1042;\\r\\n    t['arrowdblleft'] = 987;\\r\\n    t['arrowdblup'] = 603;\\r\\n    t['arrowdblright'] = 987;\\r\\n    t['arrowdbldown'] = 603;\\r\\n    t['lozenge'] = 494;\\r\\n    t['angleleft'] = 329;\\r\\n    t['registersans'] = 790;\\r\\n    t['copyrightsans'] = 790;\\r\\n    t['trademarksans'] = 786;\\r\\n    t['summation'] = 713;\\r\\n    t['parenlefttp'] = 384;\\r\\n    t['parenleftex'] = 384;\\r\\n    t['parenleftbt'] = 384;\\r\\n    t['bracketlefttp'] = 384;\\r\\n    t['bracketleftex'] = 384;\\r\\n    t['bracketleftbt'] = 384;\\r\\n    t['bracelefttp'] = 494;\\r\\n    t['braceleftmid'] = 494;\\r\\n    t['braceleftbt'] = 494;\\r\\n    t['braceex'] = 494;\\r\\n    t['angleright'] = 329;\\r\\n    t['integral'] = 274;\\r\\n    t['integraltp'] = 686;\\r\\n    t['integralex'] = 686;\\r\\n    t['integralbt'] = 686;\\r\\n    t['parenrighttp'] = 384;\\r\\n    t['parenrightex'] = 384;\\r\\n    t['parenrightbt'] = 384;\\r\\n    t['bracketrighttp'] = 384;\\r\\n    t['bracketrightex'] = 384;\\r\\n    t['bracketrightbt'] = 384;\\r\\n    t['bracerighttp'] = 494;\\r\\n    t['bracerightmid'] = 494;\\r\\n    t['bracerightbt'] = 494;\\r\\n    t['apple'] = 790;\\r\\n  });\\r\\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 250;\\r\\n    t['exclam'] = 333;\\r\\n    t['quotedbl'] = 408;\\r\\n    t['numbersign'] = 500;\\r\\n    t['dollar'] = 500;\\r\\n    t['percent'] = 833;\\r\\n    t['ampersand'] = 778;\\r\\n    t['quoteright'] = 333;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 500;\\r\\n    t['plus'] = 564;\\r\\n    t['comma'] = 250;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 250;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 500;\\r\\n    t['one'] = 500;\\r\\n    t['two'] = 500;\\r\\n    t['three'] = 500;\\r\\n    t['four'] = 500;\\r\\n    t['five'] = 500;\\r\\n    t['six'] = 500;\\r\\n    t['seven'] = 500;\\r\\n    t['eight'] = 500;\\r\\n    t['nine'] = 500;\\r\\n    t['colon'] = 278;\\r\\n    t['semicolon'] = 278;\\r\\n    t['less'] = 564;\\r\\n    t['equal'] = 564;\\r\\n    t['greater'] = 564;\\r\\n    t['question'] = 444;\\r\\n    t['at'] = 921;\\r\\n    t['A'] = 722;\\r\\n    t['B'] = 667;\\r\\n    t['C'] = 667;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 611;\\r\\n    t['F'] = 556;\\r\\n    t['G'] = 722;\\r\\n    t['H'] = 722;\\r\\n    t['I'] = 333;\\r\\n    t['J'] = 389;\\r\\n    t['K'] = 722;\\r\\n    t['L'] = 611;\\r\\n    t['M'] = 889;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 722;\\r\\n    t['P'] = 556;\\r\\n    t['Q'] = 722;\\r\\n    t['R'] = 667;\\r\\n    t['S'] = 556;\\r\\n    t['T'] = 611;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 722;\\r\\n    t['W'] = 944;\\r\\n    t['X'] = 722;\\r\\n    t['Y'] = 722;\\r\\n    t['Z'] = 611;\\r\\n    t['bracketleft'] = 333;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 333;\\r\\n    t['asciicircum'] = 469;\\r\\n    t['underscore'] = 500;\\r\\n    t['quoteleft'] = 333;\\r\\n    t['a'] = 444;\\r\\n    t['b'] = 500;\\r\\n    t['c'] = 444;\\r\\n    t['d'] = 500;\\r\\n    t['e'] = 444;\\r\\n    t['f'] = 333;\\r\\n    t['g'] = 500;\\r\\n    t['h'] = 500;\\r\\n    t['i'] = 278;\\r\\n    t['j'] = 278;\\r\\n    t['k'] = 500;\\r\\n    t['l'] = 278;\\r\\n    t['m'] = 778;\\r\\n    t['n'] = 500;\\r\\n    t['o'] = 500;\\r\\n    t['p'] = 500;\\r\\n    t['q'] = 500;\\r\\n    t['r'] = 333;\\r\\n    t['s'] = 389;\\r\\n    t['t'] = 278;\\r\\n    t['u'] = 500;\\r\\n    t['v'] = 500;\\r\\n    t['w'] = 722;\\r\\n    t['x'] = 500;\\r\\n    t['y'] = 500;\\r\\n    t['z'] = 444;\\r\\n    t['braceleft'] = 480;\\r\\n    t['bar'] = 200;\\r\\n    t['braceright'] = 480;\\r\\n    t['asciitilde'] = 541;\\r\\n    t['exclamdown'] = 333;\\r\\n    t['cent'] = 500;\\r\\n    t['sterling'] = 500;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 500;\\r\\n    t['florin'] = 500;\\r\\n    t['section'] = 500;\\r\\n    t['currency'] = 500;\\r\\n    t['quotesingle'] = 180;\\r\\n    t['quotedblleft'] = 444;\\r\\n    t['guillemotleft'] = 500;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 556;\\r\\n    t['fl'] = 556;\\r\\n    t['endash'] = 500;\\r\\n    t['dagger'] = 500;\\r\\n    t['daggerdbl'] = 500;\\r\\n    t['periodcentered'] = 250;\\r\\n    t['paragraph'] = 453;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 333;\\r\\n    t['quotedblbase'] = 444;\\r\\n    t['quotedblright'] = 444;\\r\\n    t['guillemotright'] = 500;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 444;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 889;\\r\\n    t['ordfeminine'] = 276;\\r\\n    t['Lslash'] = 611;\\r\\n    t['Oslash'] = 722;\\r\\n    t['OE'] = 889;\\r\\n    t['ordmasculine'] = 310;\\r\\n    t['ae'] = 667;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 278;\\r\\n    t['oslash'] = 500;\\r\\n    t['oe'] = 722;\\r\\n    t['germandbls'] = 500;\\r\\n    t['Idieresis'] = 333;\\r\\n    t['eacute'] = 444;\\r\\n    t['abreve'] = 444;\\r\\n    t['uhungarumlaut'] = 500;\\r\\n    t['ecaron'] = 444;\\r\\n    t['Ydieresis'] = 722;\\r\\n    t['divide'] = 564;\\r\\n    t['Yacute'] = 722;\\r\\n    t['Acircumflex'] = 722;\\r\\n    t['aacute'] = 444;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 500;\\r\\n    t['scommaaccent'] = 389;\\r\\n    t['ecircumflex'] = 444;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 444;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 500;\\r\\n    t['Edieresis'] = 611;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 760;\\r\\n    t['Emacron'] = 611;\\r\\n    t['ccaron'] = 444;\\r\\n    t['aring'] = 444;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 278;\\r\\n    t['agrave'] = 444;\\r\\n    t['Tcommaaccent'] = 611;\\r\\n    t['Cacute'] = 667;\\r\\n    t['atilde'] = 444;\\r\\n    t['Edotaccent'] = 611;\\r\\n    t['scaron'] = 389;\\r\\n    t['scedilla'] = 389;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 471;\\r\\n    t['Rcaron'] = 667;\\r\\n    t['Gcommaaccent'] = 722;\\r\\n    t['ucircumflex'] = 500;\\r\\n    t['acircumflex'] = 444;\\r\\n    t['Amacron'] = 722;\\r\\n    t['rcaron'] = 333;\\r\\n    t['ccedilla'] = 444;\\r\\n    t['Zdotaccent'] = 611;\\r\\n    t['Thorn'] = 556;\\r\\n    t['Omacron'] = 722;\\r\\n    t['Racute'] = 667;\\r\\n    t['Sacute'] = 556;\\r\\n    t['dcaron'] = 588;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 500;\\r\\n    t['threesuperior'] = 300;\\r\\n    t['Ograve'] = 722;\\r\\n    t['Agrave'] = 722;\\r\\n    t['Abreve'] = 722;\\r\\n    t['multiply'] = 564;\\r\\n    t['uacute'] = 500;\\r\\n    t['Tcaron'] = 611;\\r\\n    t['partialdiff'] = 476;\\r\\n    t['ydieresis'] = 500;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 611;\\r\\n    t['adieresis'] = 444;\\r\\n    t['edieresis'] = 444;\\r\\n    t['cacute'] = 444;\\r\\n    t['nacute'] = 500;\\r\\n    t['umacron'] = 500;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 333;\\r\\n    t['plusminus'] = 564;\\r\\n    t['brokenbar'] = 200;\\r\\n    t['registered'] = 760;\\r\\n    t['Gbreve'] = 722;\\r\\n    t['Idotaccent'] = 333;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 611;\\r\\n    t['racute'] = 333;\\r\\n    t['omacron'] = 500;\\r\\n    t['Zacute'] = 611;\\r\\n    t['Zcaron'] = 611;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 667;\\r\\n    t['lcommaaccent'] = 278;\\r\\n    t['tcaron'] = 326;\\r\\n    t['eogonek'] = 444;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 722;\\r\\n    t['Adieresis'] = 722;\\r\\n    t['egrave'] = 444;\\r\\n    t['zacute'] = 444;\\r\\n    t['iogonek'] = 278;\\r\\n    t['Oacute'] = 722;\\r\\n    t['oacute'] = 500;\\r\\n    t['amacron'] = 444;\\r\\n    t['sacute'] = 389;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 722;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 500;\\r\\n    t['twosuperior'] = 300;\\r\\n    t['Odieresis'] = 722;\\r\\n    t['mu'] = 500;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 500;\\r\\n    t['Eogonek'] = 611;\\r\\n    t['dcroat'] = 500;\\r\\n    t['threequarters'] = 750;\\r\\n    t['Scedilla'] = 556;\\r\\n    t['lcaron'] = 344;\\r\\n    t['Kcommaaccent'] = 722;\\r\\n    t['Lacute'] = 611;\\r\\n    t['trademark'] = 980;\\r\\n    t['edotaccent'] = 444;\\r\\n    t['Igrave'] = 333;\\r\\n    t['Imacron'] = 333;\\r\\n    t['Lcaron'] = 611;\\r\\n    t['onehalf'] = 750;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 500;\\r\\n    t['ntilde'] = 500;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 611;\\r\\n    t['emacron'] = 444;\\r\\n    t['gbreve'] = 500;\\r\\n    t['onequarter'] = 750;\\r\\n    t['Scaron'] = 556;\\r\\n    t['Scommaaccent'] = 556;\\r\\n    t['Ohungarumlaut'] = 722;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 500;\\r\\n    t['Ccaron'] = 667;\\r\\n    t['ugrave'] = 500;\\r\\n    t['radical'] = 453;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 333;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 500;\\r\\n    t['Rcommaaccent'] = 667;\\r\\n    t['Lcommaaccent'] = \";a.a+=\"611;\\r\\n    t['Atilde'] = 722;\\r\\n    t['Aogonek'] = 722;\\r\\n    t['Aring'] = 722;\\r\\n    t['Otilde'] = 722;\\r\\n    t['zdotaccent'] = 444;\\r\\n    t['Ecaron'] = 611;\\r\\n    t['Iogonek'] = 333;\\r\\n    t['kcommaaccent'] = 500;\\r\\n    t['minus'] = 564;\\r\\n    t['Icircumflex'] = 333;\\r\\n    t['ncaron'] = 500;\\r\\n    t['tcommaaccent'] = 278;\\r\\n    t['logicalnot'] = 564;\\r\\n    t['odieresis'] = 500;\\r\\n    t['udieresis'] = 500;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 500;\\r\\n    t['eth'] = 500;\\r\\n    t['zcaron'] = 444;\\r\\n    t['ncommaaccent'] = 500;\\r\\n    t['onesuperior'] = 300;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 500;\\r\\n  });\\r\\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 250;\\r\\n    t['exclam'] = 333;\\r\\n    t['quotedbl'] = 555;\\r\\n    t['numbersign'] = 500;\\r\\n    t['dollar'] = 500;\\r\\n    t['percent'] = 1000;\\r\\n    t['ampersand'] = 833;\\r\\n    t['quoteright'] = 333;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 500;\\r\\n    t['plus'] = 570;\\r\\n    t['comma'] = 250;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 250;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 500;\\r\\n    t['one'] = 500;\\r\\n    t['two'] = 500;\\r\\n    t['three'] = 500;\\r\\n    t['four'] = 500;\\r\\n    t['five'] = 500;\\r\\n    t['six'] = 500;\\r\\n    t['seven'] = 500;\\r\\n    t['eight'] = 500;\\r\\n    t['nine'] = 500;\\r\\n    t['colon'] = 333;\\r\\n    t['semicolon'] = 333;\\r\\n    t['less'] = 570;\\r\\n    t['equal'] = 570;\\r\\n    t['greater'] = 570;\\r\\n    t['question'] = 500;\\r\\n    t['at'] = 930;\\r\\n    t['A'] = 722;\\r\\n    t['B'] = 667;\\r\\n    t['C'] = 722;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 667;\\r\\n    t['F'] = 611;\\r\\n    t['G'] = 778;\\r\\n    t['H'] = 778;\\r\\n    t['I'] = 389;\\r\\n    t['J'] = 500;\\r\\n    t['K'] = 778;\\r\\n    t['L'] = 667;\\r\\n    t['M'] = 944;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 778;\\r\\n    t['P'] = 611;\\r\\n    t['Q'] = 778;\\r\\n    t['R'] = 722;\\r\\n    t['S'] = 556;\\r\\n    t['T'] = 667;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 722;\\r\\n    t['W'] = 1000;\\r\\n    t['X'] = 722;\\r\\n    t['Y'] = 722;\\r\\n    t['Z'] = 667;\\r\\n    t['bracketleft'] = 333;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 333;\\r\\n    t['asciicircum'] = 581;\\r\\n    t['underscore'] = 500;\\r\\n    t['quoteleft'] = 333;\\r\\n    t['a'] = 500;\\r\\n    t['b'] = 556;\\r\\n    t['c'] = 444;\\r\\n    t['d'] = 556;\\r\\n    t['e'] = 444;\\r\\n    t['f'] = 333;\\r\\n    t['g'] = 500;\\r\\n    t['h'] = 556;\\r\\n    t['i'] = 278;\\r\\n    t['j'] = 333;\\r\\n    t['k'] = 556;\\r\\n    t['l'] = 278;\\r\\n    t['m'] = 833;\\r\\n    t['n'] = 556;\\r\\n    t['o'] = 500;\\r\\n    t['p'] = 556;\\r\\n    t['q'] = 556;\\r\\n    t['r'] = 444;\\r\\n    t['s'] = 389;\\r\\n    t['t'] = 333;\\r\\n    t['u'] = 556;\\r\\n    t['v'] = 500;\\r\\n    t['w'] = 722;\\r\\n    t['x'] = 500;\\r\\n    t['y'] = 500;\\r\\n    t['z'] = 444;\\r\\n    t['braceleft'] = 394;\\r\\n    t['bar'] = 220;\\r\\n    t['braceright'] = 394;\\r\\n    t['asciitilde'] = 520;\\r\\n    t['exclamdown'] = 333;\\r\\n    t['cent'] = 500;\\r\\n    t['sterling'] = 500;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 500;\\r\\n    t['florin'] = 500;\\r\\n    t['section'] = 500;\\r\\n    t['currency'] = 500;\\r\\n    t['quotesingle'] = 278;\\r\\n    t['quotedblleft'] = 500;\\r\\n    t['guillemotleft'] = 500;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 556;\\r\\n    t['fl'] = 556;\\r\\n    t['endash'] = 500;\\r\\n    t['dagger'] = 500;\\r\\n    t['daggerdbl'] = 500;\\r\\n    t['periodcentered'] = 250;\\r\\n    t['paragraph'] = 540;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 333;\\r\\n    t['quotedblbase'] = 500;\\r\\n    t['quotedblright'] = 500;\\r\\n    t['guillemotright'] = 500;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 500;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 1000;\\r\\n    t['ordfeminine'] = 300;\\r\\n    t['Lslash'] = 667;\\r\\n    t['Oslash'] = 778;\\r\\n    t['OE'] = 1000;\\r\\n    t['ordmasculine'] = 330;\\r\\n    t['ae'] = 722;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 278;\\r\\n    t['oslash'] = 500;\\r\\n    t['oe'] = 722;\\r\\n    t['germandbls'] = 556;\\r\\n    t['Idieresis'] = 389;\\r\\n    t['eacute'] = 444;\\r\\n    t['abreve'] = 500;\\r\\n    t['uhungarumlaut'] = 556;\\r\\n    t['ecaron'] = 444;\\r\\n    t['Ydieresis'] = 722;\\r\\n    t['divide'] = 570;\\r\\n    t['Yacute'] = 722;\\r\\n    t['Acircumflex'] = 722;\\r\\n    t['aacute'] = 500;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 500;\\r\\n    t['scommaaccent'] = 389;\\r\\n    t['ecircumflex'] = 444;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 500;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 556;\\r\\n    t['Edieresis'] = 667;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 747;\\r\\n    t['Emacron'] = 667;\\r\\n    t['ccaron'] = 444;\\r\\n    t['aring'] = 500;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 278;\\r\\n    t['agrave'] = 500;\\r\\n    t['Tcommaaccent'] = 667;\\r\\n    t['Cacute'] = 722;\\r\\n    t['atilde'] = 500;\\r\\n    t['Edotaccent'] = 667;\\r\\n    t['scaron'] = 389;\\r\\n    t['scedilla'] = 389;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 494;\\r\\n    t['Rcaron'] = 722;\\r\\n    t['Gcommaaccent'] = 778;\\r\\n    t['ucircumflex'] = 556;\\r\\n    t['acircumflex'] = 500;\\r\\n    t['Amacron'] = 722;\\r\\n    t['rcaron'] = 444;\\r\\n    t['ccedilla'] = 444;\\r\\n    t['Zdotaccent'] = 667;\\r\\n    t['Thorn'] = 611;\\r\\n    t['Omacron'] = 778;\\r\\n    t['Racute'] = 722;\\r\\n    t['Sacute'] = 556;\\r\\n    t['dcaron'] = 672;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 556;\\r\\n    t['threesuperior'] = 300;\\r\\n    t['Ograve'] = 778;\\r\\n    t['Agrave'] = 722;\\r\\n    t['Abreve'] = 722;\\r\\n    t['multiply'] = 570;\\r\\n    t['uacute'] = 556;\\r\\n    t['Tcaron'] = 667;\\r\\n    t['partialdiff'] = 494;\\r\\n    t['ydieresis'] = 500;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 667;\\r\\n    t['adieresis'] = 500;\\r\\n    t['edieresis'] = 444;\\r\\n    t['cacute'] = 444;\\r\\n    t['nacute'] = 556;\\r\\n    t['umacron'] = 556;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 389;\\r\\n    t['plusminus'] = 570;\\r\\n    t['brokenbar'] = 220;\\r\\n    t['registered'] = 747;\\r\\n    t['Gbreve'] = 778;\\r\\n    t['Idotaccent'] = 389;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 667;\\r\\n    t['racute'] = 444;\\r\\n    t['omacron'] = 500;\\r\\n    t['Zacute'] = 667;\\r\\n    t['Zcaron'] = 667;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 722;\\r\\n    t['lcommaaccent'] = 278;\\r\\n    t['tcaron'] = 416;\\r\\n    t['eogonek'] = 444;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 722;\\r\\n    t['Adieresis'] = 722;\\r\\n    t['egrave'] = 444;\\r\\n    t['zacute'] = 444;\\r\\n    t['iogonek'] = 278;\\r\\n    t['Oacute'] = 778;\\r\\n    t['oacute'] = 500;\\r\\n    t['amacron'] = 500;\\r\\n    t['sacute'] = 389;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 778;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 556;\\r\\n    t['twosuperior'] = 300;\\r\\n    t['Odieresis'] = 778;\\r\\n    t['mu'] = 556;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 500;\\r\\n    t['Eogonek'] = 667;\\r\\n    t['dcroat'] = 556;\\r\\n    t['threequarters'] = 750;\\r\\n    t['Scedilla'] = 556;\\r\\n    t['lcaron'] = 394;\\r\\n    t['Kcommaaccent'] = 778;\\r\\n    t['Lacute'] = 667;\\r\\n    t['trademark'] = 1000;\\r\\n    t['edotaccent'] = 444;\\r\\n    t['Igrave'] = 389;\\r\\n    t['Imacron'] = 389;\\r\\n    t['Lcaron'] = 667;\\r\\n    t['onehalf'] = 750;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 500;\\r\\n    t['ntilde'] = 556;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 667;\\r\\n    t['emacron'] = 444;\\r\\n    t['gbreve'] = 500;\\r\\n    t['onequarter'] = 750;\\r\\n    t['Scaron'] = 556;\\r\\n    t['Scommaaccent'] = 556;\\r\\n    t['Ohungarumlaut'] = 778;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 500;\\r\\n    t['Ccaron'] = 722;\\r\\n    t['ugrave'] = 556;\\r\\n    t['radical'] = 549;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 444;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 500;\\r\\n    t['Rcommaaccent'] = 722;\\r\\n    t['Lcommaaccent'] = 667;\\r\\n    t['Atilde'] = 722;\\r\\n    t['Aogonek'] = 722;\\r\\n    t['Aring'] = 722;\\r\\n    t['Otilde'] = 778;\\r\\n    t['zdotaccent'] = 444;\\r\\n    t['Ecaron'] = 667;\\r\\n    t['Iogonek'] = 389;\\r\\n    t['kcommaaccent'] = 556;\\r\\n    t['minus'] = 570;\\r\\n    t['Icircumflex'] = 389;\\r\\n    t['ncaron'] = 556;\\r\\n    t['tcommaaccent'] = 333;\\r\\n    t['logicalnot'] = 570;\\r\\n    t['odieresis'] = 500;\\r\\n    t['udieresis'] = 556;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 500;\\r\\n    t['eth'] = 500;\\r\\n    t['zcaron'] = 444;\\r\\n    t['ncommaaccent'] = 556;\\r\\n    t['onesuperior'] = 300;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 500;\\r\\n  });\\r\\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 250;\\r\\n    t['exclam'] = 389;\\r\\n    t['quotedbl'] = 555;\\r\\n    t['numbersign'] = 500;\\r\\n    t['dollar'] = 500;\\r\\n    t['percent'] = 833;\\r\\n    t['ampersand'] = 778;\\r\\n    t['quoteright'] = 333;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 500;\\r\\n    t['plus'] = 570;\\r\\n    t['comma'] = 250;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 250;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 500;\\r\\n    t['one'] = 500;\\r\\n    t['two'] = 500;\\r\\n    t['three'] = 500;\\r\\n    t['four'] = 500;\\r\\n    t['five'] = 500;\\r\\n    t['six'] = 500;\\r\\n    t['seven'] = 500;\\r\\n    t['eight'] = 500;\\r\\n    t['nine'] = 500;\\r\\n    t['colon'] = 333;\\r\\n    t['semicolon'] = 333;\\r\\n    t['less'] = 570;\\r\\n    t['equal'] = 570;\\r\\n    t['greater'] = 570;\\r\\n    t['question'] = 500;\\r\\n    t['at'] = 832;\\r\\n    t['A'] = 667;\\r\\n    t['B'] = 667;\\r\\n    t['C'] = 667;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 667;\\r\\n    t['F'] = 667;\\r\\n    t['G'] = 722;\\r\\n    t['H'] = 778;\\r\\n    t['I'] = 389;\\r\\n    t['J'] = 500;\\r\\n    t['K'] = 667;\\r\\n    t['L'] = 611;\\r\\n    t['M'] = 889;\\r\\n    t['N'] = 722;\\r\\n    t['O'] = 722;\\r\\n    t['P'] = 611;\\r\\n    t['Q'] = 722;\\r\\n    t['R'] = 667;\\r\\n    t['S'] = 556;\\r\\n    t['T'] = 611;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 667;\\r\\n    t['W'] = 889;\\r\\n    t['X'] = 667;\\r\\n    t['Y'] = 611;\\r\\n    t['Z'] = 611;\\r\\n    t['bracketleft'] = 333;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 333;\\r\\n    t['asciicircum'] = 570;\\r\\n    t['underscore'] = 500;\\r\\n    t['quoteleft'] = 333;\\r\\n    t['a'] = 500;\\r\\n    t['b'] = 500;\\r\\n    t['c'] = 444;\\r\\n    t['d'] = 500;\\r\\n    t['e'] = 444;\\r\\n    t['f'] = 333;\\r\\n    t['g'] = 500;\\r\\n    t['h'] = 556;\\r\\n    t['i'] = 278;\\r\\n    t['j'] = 278;\\r\\n    t['k'] = 500;\\r\\n    t['l'] = 278;\\r\\n    t['m'] = 778;\\r\\n    t['n'] = 556;\\r\\n    t['o'] = 500;\\r\\n    t['p'] = 500;\\r\\n    t['q'] = 500;\\r\\n    t['r'] = 389;\\r\\n    t['s'] = 389;\\r\\n    t['t'] = 278;\\r\\n    t['u'] = 556;\\r\\n    t['v'] = 444;\\r\\n    t['w'] = 667;\\r\\n    t['x'] = 500;\\r\\n    t['y'] = 444;\\r\\n    t['z'] = 389;\\r\\n    t['braceleft'] = 348;\\r\\n    t['bar'] = 220;\\r\\n    t['braceright'] = 348;\\r\\n    t['asciitilde'] = 570;\\r\\n    t['exclamdown'] = 389;\\r\\n    t['cent'] = 500;\\r\\n    t['sterling'] = 500;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 500;\\r\\n    t['florin'] = 500;\\r\\n    t['section'] = 500;\\r\\n    t['currency'] = 500;\\r\\n    t['quotesingle'] = 278;\\r\\n    t['quotedblleft'] = 500;\\r\\n    t['guillemotleft'] = 500;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 556;\\r\\n    t['fl'] = 556;\\r\\n    t['endash'] = 500;\\r\\n    t['dagger'] = 500;\\r\\n    t['daggerdbl'] = 500;\\r\\n    t['periodcentered'] = 250;\\r\\n    t['paragraph'] = 500;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 333;\\r\\n    t['quotedblbase'] = 500;\\r\\n    t['quotedblright'] = 500;\\r\\n    t['guillemotright'] = 500;\\r\\n    t['ellipsis'] = 1000;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 500;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 1000;\\r\\n    t['AE'] = 944;\\r\\n    t['ordfeminine'] = 266;\\r\\n    t['Lslash'] = 611;\\r\\n    t['Oslash'] = 722;\\r\\n    t['OE'] = 944;\\r\\n    t['ordmasculine'] = 300;\\r\\n    t['ae'] = 722;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 278;\\r\\n    t['oslash'] = 500;\\r\\n    t['oe'] = 722;\\r\\n    t['germandbls'] = 500;\\r\\n    t['Idieresis'] = 389;\\r\\n    t['eacute'] = 444;\\r\\n    t['abreve'] = 500;\\r\\n    t['uhungarumlaut'] = 556;\\r\\n    t['ecaron'] = 444;\\r\\n    t['Ydieresis'] = 611;\\r\\n    t['divide'] = 570;\\r\\n    t['Yacute'] = 611;\\r\\n    t['Acircumflex'] = 667;\\r\\n    t['aacute'] = 500;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 444;\\r\\n    t['scommaaccent'] = 389;\\r\\n    t['ecircumflex'] = 444;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 500;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 556;\\r\\n    t['Edieresis'] = 667;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 747;\\r\\n    t['Emacron'] = 667;\\r\\n    t['ccaron'] = 444;\\r\\n    t['aring'] = 500;\\r\\n    t['Ncommaaccent'] = 722;\\r\\n    t['lacute'] = 278;\\r\\n    t['agrave'] = 500;\\r\\n    t['Tcommaaccent'] = 611;\\r\\n    t['Cacute'] = 667;\\r\\n    t['atilde'] = 500;\\r\\n    t['Edotaccent'] = 667;\\r\\n    t['scaron'] = 389;\\r\\n    t['scedilla'] = 389;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 494;\\r\\n    t['Rcaron'] = 667;\\r\\n    t['Gcommaaccent'] = 722;\\r\\n    t['ucircumflex'] = 556;\\r\\n    t['acircumflex'] = 500;\\r\\n    t['Amacron'] = 667;\\r\\n    t['rcaron'] = 389;\\r\\n    t['ccedilla'] = 444;\\r\\n    t['Zdotaccent'] = 611;\\r\\n    t['Thorn'] = 611;\\r\\n    t['Omacron'] = 722;\\r\\n    t['Racute'] = 667;\\r\\n    t['Sacute'] = 556;\\r\\n    t['dcaron'] = 608;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 556;\\r\\n    t['threesuperior'] = 300;\\r\\n    t['Ograve'] = 722;\\r\\n    t['Agrave'] = 667;\\r\\n    t['Abreve'] = 667;\\r\\n    t['multiply'] = 570;\\r\\n    t['uacute'] = 556;\\r\\n    t['Tcaron'] = 611;\\r\\n    t['partialdiff'] = 494;\\r\\n    t['ydieresis'] = 444;\\r\\n    t['Nacute'] = 722;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 667;\\r\\n    t['adieresis'] = 500;\\r\\n    t['edieresis'] = 444;\\r\\n    t['cacute'] = 444;\\r\\n    t['nacute'] = 556;\\r\\n    t['umacron'] = 556;\\r\\n    t['Ncaron'] = 722;\\r\\n    t['Iacute'] = 389;\\r\\n    t['plusminus'] = 570;\\r\\n    t['brokenbar'] = 220;\\r\\n    t['registered'] = 747;\\r\\n    t['Gbreve'] = 722;\\r\\n    t['Idotaccent'] = 389;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 667;\\r\\n    t['racute'] = 389;\\r\\n    t['omacron'] = 500;\\r\\n    t['Zacute'] = 611;\\r\\n    t['Zcaron'] = 611;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 667;\\r\\n    t['lcommaaccent'] = 278;\\r\\n    t['tcaron'] = 366;\\r\\n    t['eogonek'] = 444;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 667;\\r\\n    t['Adieresis'] = 667;\\r\\n    t['egrave'] = 444;\\r\\n    t['zacute'] = 389;\\r\\n    t['iogonek'] = 278;\\r\\n    t['Oacute'] = 722;\\r\\n    t['oacute'] = 500;\\r\\n    t['amacron'] = 500;\\r\\n    t['sacute'] = 389;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 722;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 500;\\r\\n    t['twosuperior'] = 300;\\r\\n    t['Odieresis'] = 722;\\r\\n    t['mu'] = 576;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 500;\\r\\n    t['Eogonek'] = 667;\\r\\n    t['dcroat'] = 500;\\r\\n    t['threequarters'] = 750;\\r\\n    t['Scedilla'] = 556;\\r\\n    t['lcaron'] = 382;\\r\\n    t['Kcommaaccent'] = 667;\\r\\n    t['Lacute'] = 611;\\r\\n    t['trademark'] = 1000;\\r\\n    t['edotaccent'] = 444;\\r\\n    t['Igrave'] = 389;\\r\\n    t['Imacron'] = 389;\\r\\n    t['Lcaron'] = 611;\\r\\n    t['onehalf'] = 750;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 500;\\r\\n    t['ntilde'] = 556;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 667;\\r\\n    t['emacron'] = 444;\\r\\n    t['gbreve'] = 500;\\r\\n    t['onequarter'] = 750;\\r\\n    t['Scaron'] = 556;\\r\\n    t['Scommaaccent'] = 556;\\r\\n    t['Ohungarumlaut'] = 722;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 500;\\r\\n    t['Ccaron'] = 667;\\r\\n    t['ugrave'] = 556;\\r\\n    t['radical'] = 549;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 389;\\r\\n    t['Ntilde'] = 722;\\r\\n    t['otilde'] = 500;\\r\\n    t['Rcommaaccent'] = 667;\\r\\n    t['Lcommaaccent'] = 611;\\r\\n    t['Atilde'] = 667;\\r\\n    t['Aogonek'] = 667;\\r\\n    t['Aring'] = 667;\\r\\n    t['Otilde'] = 722;\\r\\n    t['zdotaccent'] = 389;\\r\\n    t['Ecaron'] = 667;\\r\\n    t['Iogonek'] = 389;\\r\\n    t['kcommaaccent'] = 500;\\r\\n    t['minus'] = 606;\\r\\n    t['Icircumflex'] = 389;\\r\\n    t['ncaron'] = 556;\\r\\n    t['tcommaaccent'] = 278;\\r\\n    t['logicalnot'] = 606;\\r\\n    t['odieresis'] = 500;\\r\\n    t['udieresis'] = 556;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 500;\\r\\n    t['eth'] = 500;\\r\\n    t['zcaron'] = 389;\\r\\n    t['ncommaaccent'] = 556;\\r\\n    t['onesuperior'] = 300;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 500;\\r\\n  });\\r\\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 250;\\r\\n    t['exclam'] = 333;\\r\\n    t['quotedbl'] = 420;\\r\\n  \";a.a+=\"  t['numbersign'] = 500;\\r\\n    t['dollar'] = 500;\\r\\n    t['percent'] = 833;\\r\\n    t['ampersand'] = 778;\\r\\n    t['quoteright'] = 333;\\r\\n    t['parenleft'] = 333;\\r\\n    t['parenright'] = 333;\\r\\n    t['asterisk'] = 500;\\r\\n    t['plus'] = 675;\\r\\n    t['comma'] = 250;\\r\\n    t['hyphen'] = 333;\\r\\n    t['period'] = 250;\\r\\n    t['slash'] = 278;\\r\\n    t['zero'] = 500;\\r\\n    t['one'] = 500;\\r\\n    t['two'] = 500;\\r\\n    t['three'] = 500;\\r\\n    t['four'] = 500;\\r\\n    t['five'] = 500;\\r\\n    t['six'] = 500;\\r\\n    t['seven'] = 500;\\r\\n    t['eight'] = 500;\\r\\n    t['nine'] = 500;\\r\\n    t['colon'] = 333;\\r\\n    t['semicolon'] = 333;\\r\\n    t['less'] = 675;\\r\\n    t['equal'] = 675;\\r\\n    t['greater'] = 675;\\r\\n    t['question'] = 500;\\r\\n    t['at'] = 920;\\r\\n    t['A'] = 611;\\r\\n    t['B'] = 611;\\r\\n    t['C'] = 667;\\r\\n    t['D'] = 722;\\r\\n    t['E'] = 611;\\r\\n    t['F'] = 611;\\r\\n    t['G'] = 722;\\r\\n    t['H'] = 722;\\r\\n    t['I'] = 333;\\r\\n    t['J'] = 444;\\r\\n    t['K'] = 667;\\r\\n    t['L'] = 556;\\r\\n    t['M'] = 833;\\r\\n    t['N'] = 667;\\r\\n    t['O'] = 722;\\r\\n    t['P'] = 611;\\r\\n    t['Q'] = 722;\\r\\n    t['R'] = 611;\\r\\n    t['S'] = 500;\\r\\n    t['T'] = 556;\\r\\n    t['U'] = 722;\\r\\n    t['V'] = 611;\\r\\n    t['W'] = 833;\\r\\n    t['X'] = 611;\\r\\n    t['Y'] = 556;\\r\\n    t['Z'] = 556;\\r\\n    t['bracketleft'] = 389;\\r\\n    t['backslash'] = 278;\\r\\n    t['bracketright'] = 389;\\r\\n    t['asciicircum'] = 422;\\r\\n    t['underscore'] = 500;\\r\\n    t['quoteleft'] = 333;\\r\\n    t['a'] = 500;\\r\\n    t['b'] = 500;\\r\\n    t['c'] = 444;\\r\\n    t['d'] = 500;\\r\\n    t['e'] = 444;\\r\\n    t['f'] = 278;\\r\\n    t['g'] = 500;\\r\\n    t['h'] = 500;\\r\\n    t['i'] = 278;\\r\\n    t['j'] = 278;\\r\\n    t['k'] = 444;\\r\\n    t['l'] = 278;\\r\\n    t['m'] = 722;\\r\\n    t['n'] = 500;\\r\\n    t['o'] = 500;\\r\\n    t['p'] = 500;\\r\\n    t['q'] = 500;\\r\\n    t['r'] = 389;\\r\\n    t['s'] = 389;\\r\\n    t['t'] = 278;\\r\\n    t['u'] = 500;\\r\\n    t['v'] = 444;\\r\\n    t['w'] = 667;\\r\\n    t['x'] = 444;\\r\\n    t['y'] = 444;\\r\\n    t['z'] = 389;\\r\\n    t['braceleft'] = 400;\\r\\n    t['bar'] = 275;\\r\\n    t['braceright'] = 400;\\r\\n    t['asciitilde'] = 541;\\r\\n    t['exclamdown'] = 389;\\r\\n    t['cent'] = 500;\\r\\n    t['sterling'] = 500;\\r\\n    t['fraction'] = 167;\\r\\n    t['yen'] = 500;\\r\\n    t['florin'] = 500;\\r\\n    t['section'] = 500;\\r\\n    t['currency'] = 500;\\r\\n    t['quotesingle'] = 214;\\r\\n    t['quotedblleft'] = 556;\\r\\n    t['guillemotleft'] = 500;\\r\\n    t['guilsinglleft'] = 333;\\r\\n    t['guilsinglright'] = 333;\\r\\n    t['fi'] = 500;\\r\\n    t['fl'] = 500;\\r\\n    t['endash'] = 500;\\r\\n    t['dagger'] = 500;\\r\\n    t['daggerdbl'] = 500;\\r\\n    t['periodcentered'] = 250;\\r\\n    t['paragraph'] = 523;\\r\\n    t['bullet'] = 350;\\r\\n    t['quotesinglbase'] = 333;\\r\\n    t['quotedblbase'] = 556;\\r\\n    t['quotedblright'] = 556;\\r\\n    t['guillemotright'] = 500;\\r\\n    t['ellipsis'] = 889;\\r\\n    t['perthousand'] = 1000;\\r\\n    t['questiondown'] = 500;\\r\\n    t['grave'] = 333;\\r\\n    t['acute'] = 333;\\r\\n    t['circumflex'] = 333;\\r\\n    t['tilde'] = 333;\\r\\n    t['macron'] = 333;\\r\\n    t['breve'] = 333;\\r\\n    t['dotaccent'] = 333;\\r\\n    t['dieresis'] = 333;\\r\\n    t['ring'] = 333;\\r\\n    t['cedilla'] = 333;\\r\\n    t['hungarumlaut'] = 333;\\r\\n    t['ogonek'] = 333;\\r\\n    t['caron'] = 333;\\r\\n    t['emdash'] = 889;\\r\\n    t['AE'] = 889;\\r\\n    t['ordfeminine'] = 276;\\r\\n    t['Lslash'] = 556;\\r\\n    t['Oslash'] = 722;\\r\\n    t['OE'] = 944;\\r\\n    t['ordmasculine'] = 310;\\r\\n    t['ae'] = 667;\\r\\n    t['dotlessi'] = 278;\\r\\n    t['lslash'] = 278;\\r\\n    t['oslash'] = 500;\\r\\n    t['oe'] = 667;\\r\\n    t['germandbls'] = 500;\\r\\n    t['Idieresis'] = 333;\\r\\n    t['eacute'] = 444;\\r\\n    t['abreve'] = 500;\\r\\n    t['uhungarumlaut'] = 500;\\r\\n    t['ecaron'] = 444;\\r\\n    t['Ydieresis'] = 556;\\r\\n    t['divide'] = 675;\\r\\n    t['Yacute'] = 556;\\r\\n    t['Acircumflex'] = 611;\\r\\n    t['aacute'] = 500;\\r\\n    t['Ucircumflex'] = 722;\\r\\n    t['yacute'] = 444;\\r\\n    t['scommaaccent'] = 389;\\r\\n    t['ecircumflex'] = 444;\\r\\n    t['Uring'] = 722;\\r\\n    t['Udieresis'] = 722;\\r\\n    t['aogonek'] = 500;\\r\\n    t['Uacute'] = 722;\\r\\n    t['uogonek'] = 500;\\r\\n    t['Edieresis'] = 611;\\r\\n    t['Dcroat'] = 722;\\r\\n    t['commaaccent'] = 250;\\r\\n    t['copyright'] = 760;\\r\\n    t['Emacron'] = 611;\\r\\n    t['ccaron'] = 444;\\r\\n    t['aring'] = 500;\\r\\n    t['Ncommaaccent'] = 667;\\r\\n    t['lacute'] = 278;\\r\\n    t['agrave'] = 500;\\r\\n    t['Tcommaaccent'] = 556;\\r\\n    t['Cacute'] = 667;\\r\\n    t['atilde'] = 500;\\r\\n    t['Edotaccent'] = 611;\\r\\n    t['scaron'] = 389;\\r\\n    t['scedilla'] = 389;\\r\\n    t['iacute'] = 278;\\r\\n    t['lozenge'] = 471;\\r\\n    t['Rcaron'] = 611;\\r\\n    t['Gcommaaccent'] = 722;\\r\\n    t['ucircumflex'] = 500;\\r\\n    t['acircumflex'] = 500;\\r\\n    t['Amacron'] = 611;\\r\\n    t['rcaron'] = 389;\\r\\n    t['ccedilla'] = 444;\\r\\n    t['Zdotaccent'] = 556;\\r\\n    t['Thorn'] = 611;\\r\\n    t['Omacron'] = 722;\\r\\n    t['Racute'] = 611;\\r\\n    t['Sacute'] = 500;\\r\\n    t['dcaron'] = 544;\\r\\n    t['Umacron'] = 722;\\r\\n    t['uring'] = 500;\\r\\n    t['threesuperior'] = 300;\\r\\n    t['Ograve'] = 722;\\r\\n    t['Agrave'] = 611;\\r\\n    t['Abreve'] = 611;\\r\\n    t['multiply'] = 675;\\r\\n    t['uacute'] = 500;\\r\\n    t['Tcaron'] = 556;\\r\\n    t['partialdiff'] = 476;\\r\\n    t['ydieresis'] = 444;\\r\\n    t['Nacute'] = 667;\\r\\n    t['icircumflex'] = 278;\\r\\n    t['Ecircumflex'] = 611;\\r\\n    t['adieresis'] = 500;\\r\\n    t['edieresis'] = 444;\\r\\n    t['cacute'] = 444;\\r\\n    t['nacute'] = 500;\\r\\n    t['umacron'] = 500;\\r\\n    t['Ncaron'] = 667;\\r\\n    t['Iacute'] = 333;\\r\\n    t['plusminus'] = 675;\\r\\n    t['brokenbar'] = 275;\\r\\n    t['registered'] = 760;\\r\\n    t['Gbreve'] = 722;\\r\\n    t['Idotaccent'] = 333;\\r\\n    t['summation'] = 600;\\r\\n    t['Egrave'] = 611;\\r\\n    t['racute'] = 389;\\r\\n    t['omacron'] = 500;\\r\\n    t['Zacute'] = 556;\\r\\n    t['Zcaron'] = 556;\\r\\n    t['greaterequal'] = 549;\\r\\n    t['Eth'] = 722;\\r\\n    t['Ccedilla'] = 667;\\r\\n    t['lcommaaccent'] = 278;\\r\\n    t['tcaron'] = 300;\\r\\n    t['eogonek'] = 444;\\r\\n    t['Uogonek'] = 722;\\r\\n    t['Aacute'] = 611;\\r\\n    t['Adieresis'] = 611;\\r\\n    t['egrave'] = 444;\\r\\n    t['zacute'] = 389;\\r\\n    t['iogonek'] = 278;\\r\\n    t['Oacute'] = 722;\\r\\n    t['oacute'] = 500;\\r\\n    t['amacron'] = 500;\\r\\n    t['sacute'] = 389;\\r\\n    t['idieresis'] = 278;\\r\\n    t['Ocircumflex'] = 722;\\r\\n    t['Ugrave'] = 722;\\r\\n    t['Delta'] = 612;\\r\\n    t['thorn'] = 500;\\r\\n    t['twosuperior'] = 300;\\r\\n    t['Odieresis'] = 722;\\r\\n    t['mu'] = 500;\\r\\n    t['igrave'] = 278;\\r\\n    t['ohungarumlaut'] = 500;\\r\\n    t['Eogonek'] = 611;\\r\\n    t['dcroat'] = 500;\\r\\n    t['threequarters'] = 750;\\r\\n    t['Scedilla'] = 500;\\r\\n    t['lcaron'] = 300;\\r\\n    t['Kcommaaccent'] = 667;\\r\\n    t['Lacute'] = 556;\\r\\n    t['trademark'] = 980;\\r\\n    t['edotaccent'] = 444;\\r\\n    t['Igrave'] = 333;\\r\\n    t['Imacron'] = 333;\\r\\n    t['Lcaron'] = 611;\\r\\n    t['onehalf'] = 750;\\r\\n    t['lessequal'] = 549;\\r\\n    t['ocircumflex'] = 500;\\r\\n    t['ntilde'] = 500;\\r\\n    t['Uhungarumlaut'] = 722;\\r\\n    t['Eacute'] = 611;\\r\\n    t['emacron'] = 444;\\r\\n    t['gbreve'] = 500;\\r\\n    t['onequarter'] = 750;\\r\\n    t['Scaron'] = 500;\\r\\n    t['Scommaaccent'] = 500;\\r\\n    t['Ohungarumlaut'] = 722;\\r\\n    t['degree'] = 400;\\r\\n    t['ograve'] = 500;\\r\\n    t['Ccaron'] = 667;\\r\\n    t['ugrave'] = 500;\\r\\n    t['radical'] = 453;\\r\\n    t['Dcaron'] = 722;\\r\\n    t['rcommaaccent'] = 389;\\r\\n    t['Ntilde'] = 667;\\r\\n    t['otilde'] = 500;\\r\\n    t['Rcommaaccent'] = 611;\\r\\n    t['Lcommaaccent'] = 556;\\r\\n    t['Atilde'] = 611;\\r\\n    t['Aogonek'] = 611;\\r\\n    t['Aring'] = 611;\\r\\n    t['Otilde'] = 722;\\r\\n    t['zdotaccent'] = 389;\\r\\n    t['Ecaron'] = 611;\\r\\n    t['Iogonek'] = 333;\\r\\n    t['kcommaaccent'] = 444;\\r\\n    t['minus'] = 675;\\r\\n    t['Icircumflex'] = 333;\\r\\n    t['ncaron'] = 500;\\r\\n    t['tcommaaccent'] = 278;\\r\\n    t['logicalnot'] = 675;\\r\\n    t['odieresis'] = 500;\\r\\n    t['udieresis'] = 500;\\r\\n    t['notequal'] = 549;\\r\\n    t['gcommaaccent'] = 500;\\r\\n    t['eth'] = 500;\\r\\n    t['zcaron'] = 389;\\r\\n    t['ncommaaccent'] = 500;\\r\\n    t['onesuperior'] = 300;\\r\\n    t['imacron'] = 278;\\r\\n    t['Euro'] = 500;\\r\\n  });\\r\\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\\r\\n    t['space'] = 278;\\r\\n    t['a1'] = 974;\\r\\n    t['a2'] = 961;\\r\\n    t['a202'] = 974;\\r\\n    t['a3'] = 980;\\r\\n    t['a4'] = 719;\\r\\n    t['a5'] = 789;\\r\\n    t['a119'] = 790;\\r\\n    t['a118'] = 791;\\r\\n    t['a117'] = 690;\\r\\n    t['a11'] = 960;\\r\\n    t['a12'] = 939;\\r\\n    t['a13'] = 549;\\r\\n    t['a14'] = 855;\\r\\n    t['a15'] = 911;\\r\\n    t['a16'] = 933;\\r\\n    t['a105'] = 911;\\r\\n    t['a17'] = 945;\\r\\n    t['a18'] = 974;\\r\\n    t['a19'] = 755;\\r\\n    t['a20'] = 846;\\r\\n    t['a21'] = 762;\\r\\n    t['a22'] = 761;\\r\\n    t['a23'] = 571;\\r\\n    t['a24'] = 677;\\r\\n    t['a25'] = 763;\\r\\n    t['a26'] = 760;\\r\\n    t['a27'] = 759;\\r\\n    t['a28'] = 754;\\r\\n    t['a6'] = 494;\\r\\n    t['a7'] = 552;\\r\\n    t['a8'] = 537;\\r\\n    t['a9'] = 577;\\r\\n    t['a10'] = 692;\\r\\n    t['a29'] = 786;\\r\\n    t['a30'] = 788;\\r\\n    t['a31'] = 788;\\r\\n    t['a32'] = 790;\\r\\n    t['a33'] = 793;\\r\\n    t['a34'] = 794;\\r\\n    t['a35'] = 816;\\r\\n    t['a36'] = 823;\\r\\n    t['a37'] = 789;\\r\\n    t['a38'] = 841;\\r\\n    t['a39'] = 823;\\r\\n    t['a40'] = 833;\\r\\n    t['a41'] = 816;\\r\\n    t['a42'] = 831;\\r\\n    t['a43'] = 923;\\r\\n    t['a44'] = 744;\\r\\n    t['a45'] = 723;\\r\\n    t['a46'] = 749;\\r\\n    t['a47'] = 790;\\r\\n    t['a48'] = 792;\\r\\n    t['a49'] = 695;\\r\\n    t['a50'] = 776;\\r\\n    t['a51'] = 768;\\r\\n    t['a52'] = 792;\\r\\n    t['a53'] = 759;\\r\\n    t['a54'] = 707;\\r\\n    t['a55'] = 708;\\r\\n    t['a56'] = 682;\\r\\n    t['a57'] = 701;\\r\\n    t['a58'] = 826;\\r\\n    t['a59'] = 815;\\r\\n    t['a60'] = 789;\\r\\n    t['a61'] = 789;\\r\\n    t['a62'] = 707;\\r\\n    t['a63'] = 687;\\r\\n    t['a64'] = 696;\\r\\n    t['a65'] = 689;\\r\\n    t['a66'] = 786;\\r\\n    t['a67'] = 787;\\r\\n    t['a68'] = 713;\\r\\n    t['a69'] = 791;\\r\\n    t['a70'] = 785;\\r\\n    t['a71'] = 791;\\r\\n    t['a72'] = 873;\\r\\n    t['a73'] = 761;\\r\\n    t['a74'] = 762;\\r\\n    t['a203'] = 762;\\r\\n    t['a75'] = 759;\\r\\n    t['a204'] = 759;\\r\\n    t['a76'] = 892;\\r\\n    t['a77'] = 892;\\r\\n    t['a78'] = 788;\\r\\n    t['a79'] = 784;\\r\\n    t['a81'] = 438;\\r\\n    t['a82'] = 138;\\r\\n    t['a83'] = 277;\\r\\n    t['a84'] = 415;\\r\\n    t['a97'] = 392;\\r\\n    t['a98'] = 392;\\r\\n    t['a99'] = 668;\\r\\n    t['a100'] = 668;\\r\\n    t['a89'] = 390;\\r\\n    t['a90'] = 390;\\r\\n    t['a93'] = 317;\\r\\n    t['a94'] = 317;\\r\\n    t['a91'] = 276;\\r\\n    t['a92'] = 276;\\r\\n    t['a205'] = 509;\\r\\n    t['a85'] = 509;\\r\\n    t['a206'] = 410;\\r\\n    t['a86'] = 410;\\r\\n    t['a87'] = 234;\\r\\n    t['a88'] = 234;\\r\\n    t['a95'] = 334;\\r\\n    t['a96'] = 334;\\r\\n    t['a101'] = 732;\\r\\n    t['a102'] = 544;\\r\\n    t['a103'] = 544;\\r\\n    t['a104'] = 910;\\r\\n    t['a106'] = 667;\\r\\n    t['a107'] = 760;\\r\\n    t['a108'] = 760;\\r\\n    t['a112'] = 776;\\r\\n    t['a111'] = 595;\\r\\n    t['a110'] = 694;\\r\\n    t['a109'] = 626;\\r\\n    t['a120'] = 788;\\r\\n    t['a121'] = 788;\\r\\n    t['a122'] = 788;\\r\\n    t['a123'] = 788;\\r\\n    t['a124'] = 788;\\r\\n    t['a125'] = 788;\\r\\n    t['a126'] = 788;\\r\\n    t['a127'] = 788;\\r\\n    t['a128'] = 788;\\r\\n    t['a129'] = 788;\\r\\n    t['a130'] = 788;\\r\\n    t['a131'] = 788;\\r\\n    t['a132'] = 788;\\r\\n    t['a133'] = 788;\\r\\n    t['a134'] = 788;\\r\\n    t['a135'] = 788;\\r\\n    t['a136'] = 788;\\r\\n    t['a137'] = 788;\\r\\n    t['a138'] = 788;\\r\\n    t['a139'] = 788;\\r\\n    t['a140'] = 788;\\r\\n    t['a141'] = 788;\\r\\n    t['a142'] = 788;\\r\\n    t['a143'] = 788;\\r\\n    t['a144'] = 788;\\r\\n    t['a145'] = 788;\\r\\n    t['a146'] = 788;\\r\\n    t['a147'] = 788;\\r\\n    t['a148'] = 788;\\r\\n    t['a149'] = 788;\\r\\n    t['a150'] = 788;\\r\\n    t['a151'] = 788;\\r\\n    t['a152'] = 788;\\r\\n    t['a153'] = 788;\\r\\n    t['a154'] = 788;\\r\\n    t['a155'] = 788;\\r\\n    t['a156'] = 788;\\r\\n    t['a157'] = 788;\\r\\n    t['a158'] = 788;\\r\\n    t['a159'] = 788;\\r\\n    t['a160'] = 894;\\r\\n    t['a161'] = 838;\\r\\n    t['a163'] = 1016;\\r\\n    t['a164'] = 458;\\r\\n    t['a196'] = 748;\\r\\n    t['a165'] = 924;\\r\\n    t['a192'] = 748;\\r\\n    t['a166'] = 918;\\r\\n    t['a167'] = 927;\\r\\n    t['a168'] = 928;\\r\\n    t['a169'] = 928;\\r\\n    t['a170'] = 834;\\r\\n    t['a171'] = 873;\\r\\n    t['a172'] = 828;\\r\\n    t['a173'] = 924;\\r\\n    t['a162'] = 924;\\r\\n    t['a174'] = 917;\\r\\n    t['a175'] = 930;\\r\\n    t['a176'] = 931;\\r\\n    t['a177'] = 463;\\r\\n    t['a178'] = 883;\\r\\n    t['a179'] = 836;\\r\\n    t['a193'] = 836;\\r\\n    t['a180'] = 867;\\r\\n    t['a199'] = 867;\\r\\n    t['a181'] = 696;\\r\\n    t['a200'] = 696;\\r\\n    t['a182'] = 874;\\r\\n    t['a201'] = 874;\\r\\n    t['a183'] = 760;\\r\\n    t['a184'] = 946;\\r\\n    t['a197'] = 771;\\r\\n    t['a185'] = 865;\\r\\n    t['a194'] = 771;\\r\\n    t['a198'] = 888;\\r\\n    t['a186'] = 967;\\r\\n    t['a195'] = 888;\\r\\n    t['a187'] = 831;\\r\\n    t['a188'] = 873;\\r\\n    t['a189'] = 927;\\r\\n    t['a190'] = 970;\\r\\n    t['a191'] = 918;\\r\\n  });\\r\\n});\\r\\nexports.getMetrics = getMetrics;\\r\\n\\r\\n/***/ }),\\r\\n/* 156 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar PostScriptParser = function PostScriptParserClosure() {\\r\\n  function PostScriptParser(lexer) {\\r\\n    this.lexer = lexer;\\r\\n    this.operators = [];\\r\\n    this.token = null;\\r\\n    this.prev = null;\\r\\n  }\\r\\n  PostScriptParser.prototype = {\\r\\n    nextToken: function PostScriptParser_nextToken() {\\r\\n      this.prev = this.token;\\r\\n      this.token = this.lexer.getToken();\\r\\n    },\\r\\n    accept: function PostScriptParser_accept(type) {\\r\\n      if (this.token.type === type) {\\r\\n        this.nextToken();\\r\\n        return true;\\r\\n      }\\r\\n      return false;\\r\\n    },\\r\\n    expect: function PostScriptParser_expect(type) {\\r\\n      if (this.accept(type)) {\\r\\n        return true;\\r\\n      }\\r\\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\\r\\n    },\\r\\n    parse: function PostScriptParser_parse() {\\r\\n      this.nextToken();\\r\\n      this.expect(PostScriptTokenTypes.LBRACE);\\r\\n      this.parseBlock();\\r\\n      this.expect(PostScriptTokenTypes.RBRACE);\\r\\n      return this.operators;\\r\\n    },\\r\\n    parseBlock: function PostScriptParser_parseBlock() {\\r\\n      while (true) {\\r\\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\\r\\n          this.operators.push(this.prev.value);\\r\\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\\r\\n          this.operators.push(this.prev.value);\\r\\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\r\\n          this.parseCondition();\\r\\n        } else {\\r\\n          return;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    parseCondition: function PostScriptParser_parseCondition() {\\r\\n      var conditionLocation = this.operators.length;\\r\\n      this.operators.push(null, null);\\r\\n      this.parseBlock();\\r\\n      this.expect(PostScriptTokenTypes.RBRACE);\\r\\n      if (this.accept(PostScriptTokenTypes.IF)) {\\r\\n        this.operators[conditionLocation] = this.operators.length;\\r\\n        this.operators[conditionLocation + 1] = 'jz';\\r\\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\\r\\n        var jumpLocation = this.operators.length;\\r\\n        this.operators.push(null, null);\\r\\n        var endOfTrue = this.operators.length;\\r\\n        this.parseBlock();\\r\\n        this.expect(PostScriptTokenTypes.RBRACE);\\r\\n        this.expect(PostScriptTokenTypes.IFELSE);\\r\\n        this.operators[jumpLocation] = this.operators.length;\\r\\n        this.operators[jumpLocation + 1] = 'j';\\r\\n        this.operators[conditionLocation] = endOfTrue;\\r\\n        this.operators[conditionLocation + 1] = 'jz';\\r\\n      } else {\\r\\n        throw new _util.FormatError('PS Function: error parsing conditional.');\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  return PostScriptParser;\\r\\n}();\\r\\nvar PostScriptTokenTypes = {\\r\\n  LBRACE: 0,\\r\\n  RBRACE: 1,\\r\\n  NUMBER: 2,\\r\\n  OPERATOR: 3,\\r\\n  IF: 4,\\r\\n  IFELSE: 5\\r\\n};\\r\\nvar PostScriptToken = function PostScriptTokenClosure() {\\r\\n  function PostScriptToken(type, value) {\\r\\n    this.type = type;\\r\\n    this.value = value;\\r\\n  }\\r\\n  var opCache = Object.create(null);\\r\\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\\r\\n    var opValue = opCache[op];\\r\\n    if (opValue) {\\r\\n      return opValue;\\r\\n    }\\r\\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\\r\\n  };\\r\\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\\r\\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\\r\\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\\r\\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\\r\\n  return PostScriptToken;\\r\\n}();\\r\\nvar PostScriptLexer = function PostScriptLexerClosure() {\\r\\n  function PostScriptLexer(stream) {\\r\\n    this.stream = stream;\\r\\n    this.nextChar();\\r\\n    this.strBuf = [];\\r\\n  }\\r\\n  PostScriptLexer.prototype = {\\r\\n    nextChar: function PostScriptLexer_nextChar() {\\r\\n      return this.currentChar = this.stream.getByte();\\r\\n    },\\r\\n    getToken: function PostScriptLexer_getToken() {\\r\\n      var comment = false;\\r\\n      var ch = t\";a.a+=\"his.currentChar;\\r\\n      while (true) {\\r\\n        if (ch < 0) {\\r\\n          return _primitives.EOF;\\r\\n        }\\r\\n        if (comment) {\\r\\n          if (ch === 0x0A || ch === 0x0D) {\\r\\n            comment = false;\\r\\n          }\\r\\n        } else if (ch === 0x25) {\\r\\n          comment = true;\\r\\n        } else if (!(0, _util.isSpace)(ch)) {\\r\\n          break;\\r\\n        }\\r\\n        ch = this.nextChar();\\r\\n      }\\r\\n      switch (ch | 0) {\\r\\n        case 0x30:\\r\\n        case 0x31:\\r\\n        case 0x32:\\r\\n        case 0x33:\\r\\n        case 0x34:\\r\\n        case 0x35:\\r\\n        case 0x36:\\r\\n        case 0x37:\\r\\n        case 0x38:\\r\\n        case 0x39:\\r\\n        case 0x2B:\\r\\n        case 0x2D:\\r\\n        case 0x2E:\\r\\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\\r\\n        case 0x7B:\\r\\n          this.nextChar();\\r\\n          return PostScriptToken.LBRACE;\\r\\n        case 0x7D:\\r\\n          this.nextChar();\\r\\n          return PostScriptToken.RBRACE;\\r\\n      }\\r\\n      var strBuf = this.strBuf;\\r\\n      strBuf.length = 0;\\r\\n      strBuf[0] = String.fromCharCode(ch);\\r\\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\\r\\n        strBuf.push(String.fromCharCode(ch));\\r\\n      }\\r\\n      var str = strBuf.join('');\\r\\n      switch (str.toLowerCase()) {\\r\\n        case 'if':\\r\\n          return PostScriptToken.IF;\\r\\n        case 'ifelse':\\r\\n          return PostScriptToken.IFELSE;\\r\\n        default:\\r\\n          return PostScriptToken.getOperator(str);\\r\\n      }\\r\\n    },\\r\\n    getNumber: function PostScriptLexer_getNumber() {\\r\\n      var ch = this.currentChar;\\r\\n      var strBuf = this.strBuf;\\r\\n      strBuf.length = 0;\\r\\n      strBuf[0] = String.fromCharCode(ch);\\r\\n      while ((ch = this.nextChar()) >= 0) {\\r\\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\\r\\n          strBuf.push(String.fromCharCode(ch));\\r\\n        } else {\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n      var value = parseFloat(strBuf.join(''));\\r\\n      if (isNaN(value)) {\\r\\n        throw new _util.FormatError('Invalid floating point number: ' + value);\\r\\n      }\\r\\n      return value;\\r\\n    }\\r\\n  };\\r\\n  return PostScriptLexer;\\r\\n}();\\r\\nexports.PostScriptLexer = PostScriptLexer;\\r\\nexports.PostScriptParser = PostScriptParser;\\r\\n\\r\\n/***/ }),\\r\\n/* 157 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\n\\r\\nvar _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; };\\r\\n\\r\\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\\r\\n  var MASK_HIGH = 0xffff0000;\\r\\n  var MASK_LOW = 0xffff;\\r\\n  function MurmurHash3_64(seed) {\\r\\n    var SEED = 0xc3d2e1f0;\\r\\n    this.h1 = seed ? seed & 0xffffffff : SEED;\\r\\n    this.h2 = seed ? seed & 0xffffffff : SEED;\\r\\n  }\\r\\n  MurmurHash3_64.prototype = {\\r\\n    update: function MurmurHash3_64_update(input) {\\r\\n      var i;\\r\\n      if (typeof input === 'string') {\\r\\n        var data = new Uint8Array(input.length * 2);\\r\\n        var length = 0;\\r\\n        for (i = 0; i < input.length; i++) {\\r\\n          var code = input.charCodeAt(i);\\r\\n          if (code <= 0xff) {\\r\\n            data[length++] = code;\\r\\n          } else {\\r\\n            data[length++] = code >>> 8;\\r\\n            data[length++] = code & 0xff;\\r\\n          }\\r\\n        }\\r\\n      } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'byteLength' in input) {\\r\\n        data = input;\\r\\n        length = data.byteLength;\\r\\n      } else {\\r\\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\\r\\n      }\\r\\n      var blockCounts = length >> 2;\\r\\n      var tailLength = length - blockCounts * 4;\\r\\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\\r\\n      var k1 = 0;\\r\\n      var k2 = 0;\\r\\n      var h1 = this.h1;\\r\\n      var h2 = this.h2;\\r\\n      var C1 = 0xcc9e2d51;\\r\\n      var C2 = 0x1b873593;\\r\\n      var C1_LOW = C1 & MASK_LOW;\\r\\n      var C2_LOW = C2 & MASK_LOW;\\r\\n      for (i = 0; i < blockCounts; i++) {\\r\\n        if (i & 1) {\\r\\n          k1 = dataUint32[i];\\r\\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\r\\n          k1 = k1 << 15 | k1 >>> 17;\\r\\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\r\\n          h1 ^= k1;\\r\\n          h1 = h1 << 13 | h1 >>> 19;\\r\\n          h1 = h1 * 5 + 0xe6546b64;\\r\\n        } else {\\r\\n          k2 = dataUint32[i];\\r\\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\\r\\n          k2 = k2 << 15 | k2 >>> 17;\\r\\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\\r\\n          h2 ^= k2;\\r\\n          h2 = h2 << 13 | h2 >>> 19;\\r\\n          h2 = h2 * 5 + 0xe6546b64;\\r\\n        }\\r\\n      }\\r\\n      k1 = 0;\\r\\n      switch (tailLength) {\\r\\n        case 3:\\r\\n          k1 ^= data[blockCounts * 4 + 2] << 16;\\r\\n        case 2:\\r\\n          k1 ^= data[blockCounts * 4 + 1] << 8;\\r\\n        case 1:\\r\\n          k1 ^= data[blockCounts * 4];\\r\\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\\r\\n          k1 = k1 << 15 | k1 >>> 17;\\r\\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\\r\\n          if (blockCounts & 1) {\\r\\n            h1 ^= k1;\\r\\n          } else {\\r\\n            h2 ^= k1;\\r\\n          }\\r\\n      }\\r\\n      this.h1 = h1;\\r\\n      this.h2 = h2;\\r\\n      return this;\\r\\n    },\\r\\n    hexdigest: function MurmurHash3_64_hexdigest() {\\r\\n      var h1 = this.h1;\\r\\n      var h2 = this.h2;\\r\\n      h1 ^= h2 >>> 1;\\r\\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\\r\\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\\r\\n      h1 ^= h2 >>> 1;\\r\\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\\r\\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\\r\\n      h1 ^= h2 >>> 1;\\r\\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\\r\\n        var hex = (arr[i] >>> 0).toString(16);\\r\\n        while (hex.length < 8) {\\r\\n          hex = '0' + hex;\\r\\n        }\\r\\n        str += hex;\\r\\n      }\\r\\n      return str;\\r\\n    }\\r\\n  };\\r\\n  return MurmurHash3_64;\\r\\n}();\\r\\nexports.MurmurHash3_64 = MurmurHash3_64;\\r\\n\\r\\n/***/ }),\\r\\n/* 158 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PDFImage = undefined;\\r\\n\\r\\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"]) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance\\\"); } }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _colorspace = __w_pdfjs_require__(29);\\r\\n\\r\\nvar _jpx = __w_pdfjs_require__(80);\\r\\n\\r\\nvar PDFImage = function PDFImageClosure() {\\r\\n  function handleImageData(image, nativeDecoder) {\\r\\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\\r\\n      return nativeDecoder.decode(image);\\r\\n    }\\r\\n    return Promise.resolve(image);\\r\\n  }\\r\\n  function decodeAndClamp(value, addend, coefficient, max) {\\r\\n    value = addend + value * coefficient;\\r\\n    return value < 0 ? 0 : value > max ? max : value;\\r\\n  }\\r\\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\\r\\n    var length = w2 * h2;\\r\\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\r\\n    var xRatio = w1 / w2;\\r\\n    var yRatio = h1 / h2;\\r\\n    var i,\\r\\n        j,\\r\\n        py,\\r\\n        newIndex = 0,\\r\\n        oldIndex;\\r\\n    var xScaled = new Uint16Array(w2);\\r\\n    var w1Scanline = w1;\\r\\n    for (i = 0; i < w2; i++) {\\r\\n      xScaled[i] = Math.floor(i * xRatio);\\r\\n    }\\r\\n    for (i = 0; i < h2; i++) {\\r\\n      py = Math.floor(i * yRatio) * w1Scanline;\\r\\n      for (j = 0; j < w2; j++) {\\r\\n        oldIndex = py + xScaled[j];\\r\\n        dest[newIndex++] = src[oldIndex];\\r\\n      }\\r\\n    }\\r\\n    return dest;\\r\\n  }\\r\\n  function PDFImage(_ref) {\\r\\n    var xref = _ref.xref,\\r\\n        res = _ref.res,\\r\\n        image = _ref.image,\\r\\n        _ref$smask = _ref.smask,\\r\\n        smask = _ref$smask === undefined ? null : _ref$smask,\\r\\n        _ref$mask = _ref.mask,\\r\\n        mask = _ref$mask === undefined ? null : _ref$mask,\\r\\n        _ref$isMask = _ref.isMask,\\r\\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\\r\\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\\r\\n\\r\\n    this.image = image;\\r\\n    var dict = image.dict;\\r\\n    if (dict.has('Filter')) {\\r\\n      var filter = dict.get('Filter').name;\\r\\n      if (filter === 'JPXDecode') {\\r\\n        var jpxImage = new _jpx.JpxImage();\\r\\n        jpxImage.parseImageProperties(image.stream);\\r\\n        image.stream.reset();\\r\\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\\r\\n        image.numComps = jpxImage.componentsCount;\\r\\n      } else if (filter === 'JBIG2Decode') {\\r\\n        image.bitsPerComponent = 1;\\r\\n        image.numComps = 1;\\r\\n      }\\r\\n    }\\r\\n    this.width = dict.get('Width', 'W');\\r\\n    this.height = dict.get('Height', 'H');\\r\\n    if (this.width < 1 || this.height < 1) {\\r\\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\\r\\n    }\\r\\n    this.interpolate = dict.get('Interpolate', 'I') || false;\\r\\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\\r\\n    this.matte = dict.get('Matte') || false;\\r\\n    var bitsPerComponent = image.bitsPerComponent;\\r\\n    if (!bitsPerComponent) {\\r\\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\\r\\n      if (!bitsPerComponent) {\\r\\n        if (this.imageMask) {\\r\\n          bitsPerComponent = 1;\\r\\n        } else {\\r\\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    this.bpc = bitsPerComponent;\\r\\n    if (!this.imageMask) {\\r\\n      var colorSpace = dict.get('ColorSpace', 'CS');\\r\\n      if (!colorSpace) {\\r\\n        (0, _util.info)('JPX images (which do not require color spaces)');\\r\\n        switch (image.numComps) {\\r\\n          case 1:\\r\\n            colorSpace = _primitives.Name.get('DeviceGray');\\r\\n            break;\\r\\n          case 3:\\r\\n            colorSpace = _primitives.Name.get('DeviceRGB');\\r\\n            break;\\r\\n          case 4:\\r\\n            colorSpace = _primitives.Name.get('DeviceCMYK');\\r\\n            break;\\r\\n          default:\\r\\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\\r\\n        }\\r\\n      }\\r\\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\\r\\n      this.numComps = this.colorSpace.numComps;\\r\\n    }\\r\\n    this.decode = dict.getArray('Decode', 'D');\\r\\n    this.needsDecode = false;\\r\\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\\r\\n      this.needsDecode = true;\\r\\n      var max = (1 << bitsPerComponent) - 1;\\r\\n      this.decodeCoefficients = [];\\r\\n      this.decodeAddends = [];\\r\\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\\r\\n        var dmin = this.decode[i];\\r\\n        var dmax = this.decode[i + 1];\\r\\n        this.decodeCoefficients[j] = dmax - dmin;\\r\\n        this.decodeAddends[j] = max * dmin;\\r\\n      }\\r\\n    }\\r\\n    if (smask) {\\r\\n      this.smask = new PDFImage({\\r\\n        xref: xref,\\r\\n        res: res,\\r\\n        image: smask,\\r\\n        pdfFunctionFactory: pdfFunctionFactory\\r\\n      });\\r\\n    } else if (mask) {\\r\\n      if ((0, _primitives.isStream)(mask)) {\\r\\n        var maskDict = mask.dict,\\r\\n            imageMask = maskDict.get('ImageMask', 'IM');\\r\\n        if (!imageMask) {\\r\\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\\r\\n        } else {\\r\\n          this.mask = new PDFImage({\\r\\n            xref: xref,\\r\\n            res: res,\\r\\n            image: mask,\\r\\n            isMask: true,\\r\\n            pdfFunctionFactory: pdfFunctionFactory\\r\\n          });\\r\\n        }\\r\\n      } else {\\r\\n        this.mask = mask;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  PDFImage.buildImage = function (_ref2) {\\r\\n    var handler = _ref2.handler,\\r\\n        xref = _ref2.xref,\\r\\n        res = _ref2.res,\\r\\n        image = _ref2.image,\\r\\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\\r\\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\\r\\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\\r\\n\\r\\n    var imagePromise = handleImageData(image, nativeDecoder);\\r\\n    var smaskPromise;\\r\\n    var maskPromise;\\r\\n    var smask = image.dict.get('SMask');\\r\\n    var mask = image.dict.get('Mask');\\r\\n    if (smask) {\\r\\n      smaskPromise = handleImageData(smask, nativeDecoder);\\r\\n      maskPromise = Promise.resolve(null);\\r\\n    } else {\\r\\n      smaskPromise = Promise.resolve(null);\\r\\n      if (mask) {\\r\\n        if ((0, _primitives.isStream)(mask)) {\\r\\n          maskPromise = handleImageData(mask, nativeDecoder);\\r\\n        } else if (Array.isArray(mask)) {\\r\\n          maskPromise = Promise.resolve(mask);\\r\\n        } else {\\r\\n          (0, _util.warn)('Unsupported mask format.');\\r\\n          maskPromise = Promise.resolve(null);\\r\\n        }\\r\\n      } else {\\r\\n        maskPromise = Promise.resolve(null);\\r\\n      }\\r\\n    }\\r\\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\\r\\n      var _ref4 = _slicedToArray(_ref3, 3),\\r\\n          imageData = _ref4[0],\\r\\n          smaskData = _ref4[1],\\r\\n          maskData = _ref4[2];\\r\\n\\r\\n      return new PDFImage({\\r\\n        xref: xref,\\r\\n        res: res,\\r\\n        image: imageData,\\r\\n        smask: smaskData,\\r\\n        mask: maskData,\\r\\n        pdfFunctionFactory: pdfFunctionFactory\\r\\n      });\\r\\n    });\\r\\n  };\\r\\n  PDFImage.createMask = function (_ref5) {\\r\\n    var imgArray = _ref5.imgArray,\\r\\n        width = _ref5.width,\\r\\n        height = _ref5.height,\\r\\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\\r\\n        inverseDecode = _ref5.inverseDecode;\\r\\n\\r\\n    var computedLength = (width + 7 >> 3) * height;\\r\\n    var actualLength = imgArray.byteLength;\\r\\n    var haveFullData = computedLength === actualLength;\\r\\n    var data, i;\\r\\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\\r\\n      data = imgArray;\\r\\n    } else if (!inverseDecode) {\\r\\n      data = new Uint8Array(actualLength);\\r\\n      data.set(imgArray);\\r\\n    } else {\\r\\n      data = new Uint8Array(computedLength);\\r\\n      data.set(imgArray);\\r\\n      for (i = actualLength; i < computedLength; i++) {\\r\\n        data[i] = 0xff;\\r\\n      }\\r\\n    }\\r\\n    if (inverseDecode) {\\r\\n      for (i = 0; i < actualLength; i++) {\\r\\n        data[i] ^= 0xFF;\\r\\n      }\\r\\n    }\\r\\n    return {\\r\\n      data: data,\\r\\n      width: width,\\r\\n      height: height\\r\\n    };\\r\\n  };\\r\\n  PDFImage.prototype = {\\r\\n    get drawWidth() {\\r\\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\\r\\n    },\\r\\n    get drawHeight() {\\r\\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\\r\\n    },\\r\\n    decodeBuffer: function decodeBuffer(buffer) {\\r\\n      var bpc = this.bpc;\\r\\n      var numComps = this.numComps;\\r\\n      var decodeAddends = this.decodeAddends;\\r\\n      var decodeCoefficients = this.decodeCoefficients;\\r\\n      var max = (1 << bpc) - 1;\\r\\n      var i, ii;\\r\\n      if (bpc === 1) {\\r\\n        for (i = 0, ii = buffer.length; i < ii; i++) {\\r\\n          buffer[i] = +!buffer[i];\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n      var index = 0;\\r\\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\\r\\n        for (var j = 0; j < numComps; j++) {\\r\\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\\r\\n          index++;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    getComponents: function getComponents(buffer) {\\r\\n      var bpc = this.bpc;\\r\\n      if (bpc === 8) {\\r\\n        return buffer;\\r\\n      }\\r\\n      var width = this.width;\\r\\n      var height = this.height;\\r\\n      var numComps\";a.a+=\" = this.numComps;\\r\\n      var length = width * height * numComps;\\r\\n      var bufferPos = 0;\\r\\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\\r\\n      var rowComps = width * numComps;\\r\\n      var max = (1 << bpc) - 1;\\r\\n      var i = 0,\\r\\n          ii,\\r\\n          buf;\\r\\n      if (bpc === 1) {\\r\\n        var mask, loop1End, loop2End;\\r\\n        for (var j = 0; j < height; j++) {\\r\\n          loop1End = i + (rowComps & ~7);\\r\\n          loop2End = i + rowComps;\\r\\n          while (i < loop1End) {\\r\\n            buf = buffer[bufferPos++];\\r\\n            output[i] = buf >> 7 & 1;\\r\\n            output[i + 1] = buf >> 6 & 1;\\r\\n            output[i + 2] = buf >> 5 & 1;\\r\\n            output[i + 3] = buf >> 4 & 1;\\r\\n            output[i + 4] = buf >> 3 & 1;\\r\\n            output[i + 5] = buf >> 2 & 1;\\r\\n            output[i + 6] = buf >> 1 & 1;\\r\\n            output[i + 7] = buf & 1;\\r\\n            i += 8;\\r\\n          }\\r\\n          if (i < loop2End) {\\r\\n            buf = buffer[bufferPos++];\\r\\n            mask = 128;\\r\\n            while (i < loop2End) {\\r\\n              output[i++] = +!!(buf & mask);\\r\\n              mask >>= 1;\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        var bits = 0;\\r\\n        buf = 0;\\r\\n        for (i = 0, ii = length; i < ii; ++i) {\\r\\n          if (i % rowComps === 0) {\\r\\n            buf = 0;\\r\\n            bits = 0;\\r\\n          }\\r\\n          while (bits < bpc) {\\r\\n            buf = buf << 8 | buffer[bufferPos++];\\r\\n            bits += 8;\\r\\n          }\\r\\n          var remainingBits = bits - bpc;\\r\\n          var value = buf >> remainingBits;\\r\\n          output[i] = value < 0 ? 0 : value > max ? max : value;\\r\\n          buf = buf & (1 << remainingBits) - 1;\\r\\n          bits = remainingBits;\\r\\n        }\\r\\n      }\\r\\n      return output;\\r\\n    },\\r\\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\\r\\n      var smask = this.smask;\\r\\n      var mask = this.mask;\\r\\n      var alphaBuf, sw, sh, i, ii, j;\\r\\n      if (smask) {\\r\\n        sw = smask.width;\\r\\n        sh = smask.height;\\r\\n        alphaBuf = new Uint8Array(sw * sh);\\r\\n        smask.fillGrayBuffer(alphaBuf);\\r\\n        if (sw !== width || sh !== height) {\\r\\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\\r\\n        }\\r\\n      } else if (mask) {\\r\\n        if (mask instanceof PDFImage) {\\r\\n          sw = mask.width;\\r\\n          sh = mask.height;\\r\\n          alphaBuf = new Uint8Array(sw * sh);\\r\\n          mask.numComps = 1;\\r\\n          mask.fillGrayBuffer(alphaBuf);\\r\\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\\r\\n            alphaBuf[i] = 255 - alphaBuf[i];\\r\\n          }\\r\\n          if (sw !== width || sh !== height) {\\r\\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\\r\\n          }\\r\\n        } else if (Array.isArray(mask)) {\\r\\n          alphaBuf = new Uint8Array(width * height);\\r\\n          var numComps = this.numComps;\\r\\n          for (i = 0, ii = width * height; i < ii; ++i) {\\r\\n            var opacity = 0;\\r\\n            var imageOffset = i * numComps;\\r\\n            for (j = 0; j < numComps; ++j) {\\r\\n              var color = image[imageOffset + j];\\r\\n              var maskOffset = j * 2;\\r\\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\\r\\n                opacity = 255;\\r\\n                break;\\r\\n              }\\r\\n            }\\r\\n            alphaBuf[i] = opacity;\\r\\n          }\\r\\n        } else {\\r\\n          throw new _util.FormatError('Unknown mask format.');\\r\\n        }\\r\\n      }\\r\\n      if (alphaBuf) {\\r\\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\r\\n          rgbaBuf[j] = alphaBuf[i];\\r\\n        }\\r\\n      } else {\\r\\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\\r\\n          rgbaBuf[j] = 255;\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    undoPreblend: function undoPreblend(buffer, width, height) {\\r\\n      var matte = this.smask && this.smask.matte;\\r\\n      if (!matte) {\\r\\n        return;\\r\\n      }\\r\\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\\r\\n      var matteR = matteRgb[0];\\r\\n      var matteG = matteRgb[1];\\r\\n      var matteB = matteRgb[2];\\r\\n      var length = width * height * 4;\\r\\n      var r, g, b;\\r\\n      for (var i = 0; i < length; i += 4) {\\r\\n        var alpha = buffer[i + 3];\\r\\n        if (alpha === 0) {\\r\\n          buffer[i] = 255;\\r\\n          buffer[i + 1] = 255;\\r\\n          buffer[i + 2] = 255;\\r\\n          continue;\\r\\n        }\\r\\n        var k = 255 / alpha;\\r\\n        r = (buffer[i] - matteR) * k + matteR;\\r\\n        g = (buffer[i + 1] - matteG) * k + matteG;\\r\\n        b = (buffer[i + 2] - matteB) * k + matteB;\\r\\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\\r\\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\\r\\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\\r\\n      }\\r\\n    },\\r\\n    createImageData: function createImageData() {\\r\\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\\r\\n\\r\\n      var drawWidth = this.drawWidth;\\r\\n      var drawHeight = this.drawHeight;\\r\\n      var imgData = {\\r\\n        width: drawWidth,\\r\\n        height: drawHeight\\r\\n      };\\r\\n      var numComps = this.numComps;\\r\\n      var originalWidth = this.width;\\r\\n      var originalHeight = this.height;\\r\\n      var bpc = this.bpc;\\r\\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\\r\\n      var imgArray;\\r\\n      if (!forceRGBA) {\\r\\n        var kind;\\r\\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\\r\\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\\r\\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\\r\\n          kind = _util.ImageKind.RGB_24BPP;\\r\\n        }\\r\\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\\r\\n          imgData.kind = kind;\\r\\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\\r\\n          if (this.image instanceof _stream.DecodeStream) {\\r\\n            imgData.data = imgArray;\\r\\n          } else {\\r\\n            var newArray = new Uint8Array(imgArray.length);\\r\\n            newArray.set(imgArray);\\r\\n            imgData.data = newArray;\\r\\n          }\\r\\n          if (this.needsDecode) {\\r\\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\\r\\n            var buffer = imgData.data;\\r\\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\\r\\n              buffer[i] ^= 0xff;\\r\\n            }\\r\\n          }\\r\\n          return imgData;\\r\\n        }\\r\\n        if (this.image instanceof _stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\\r\\n          imgData.kind = _util.ImageKind.RGB_24BPP;\\r\\n          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\\r\\n          return imgData;\\r\\n        }\\r\\n      }\\r\\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\\r\\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\\r\\n      var comps = this.getComponents(imgArray);\\r\\n      var alpha01, maybeUndoPreblend;\\r\\n      if (!forceRGBA && !this.smask && !this.mask) {\\r\\n        imgData.kind = _util.ImageKind.RGB_24BPP;\\r\\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\\r\\n        alpha01 = 0;\\r\\n        maybeUndoPreblend = false;\\r\\n      } else {\\r\\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\\r\\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\\r\\n        alpha01 = 1;\\r\\n        maybeUndoPreblend = true;\\r\\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\\r\\n      }\\r\\n      if (this.needsDecode) {\\r\\n        this.decodeBuffer(comps);\\r\\n      }\\r\\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\\r\\n      if (maybeUndoPreblend) {\\r\\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\\r\\n      }\\r\\n      return imgData;\\r\\n    },\\r\\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\\r\\n      var numComps = this.numComps;\\r\\n      if (numComps !== 1) {\\r\\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\\r\\n      }\\r\\n      var width = this.width;\\r\\n      var height = this.height;\\r\\n      var bpc = this.bpc;\\r\\n      var rowBytes = width * numComps * bpc + 7 >> 3;\\r\\n      var imgArray = this.getImageBytes(height * rowBytes);\\r\\n      var comps = this.getComponents(imgArray);\\r\\n      var i, length;\\r\\n      if (bpc === 1) {\\r\\n        length = width * height;\\r\\n        if (this.needsDecode) {\\r\\n          for (i = 0; i < length; ++i) {\\r\\n            buffer[i] = comps[i] - 1 & 255;\\r\\n          }\\r\\n        } else {\\r\\n          for (i = 0; i < length; ++i) {\\r\\n            buffer[i] = -comps[i] & 255;\\r\\n          }\\r\\n        }\\r\\n        return;\\r\\n      }\\r\\n      if (this.needsDecode) {\\r\\n        this.decodeBuffer(comps);\\r\\n      }\\r\\n      length = width * height;\\r\\n      var scale = 255 / ((1 << bpc) - 1);\\r\\n      for (i = 0; i < length; ++i) {\\r\\n        buffer[i] = scale * comps[i] | 0;\\r\\n      }\\r\\n    },\\r\\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\\r\\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\\r\\n\\r\\n      this.image.reset();\\r\\n      this.image.drawWidth = drawWidth || this.width;\\r\\n      this.image.drawHeight = drawHeight || this.height;\\r\\n      this.image.forceRGB = !!forceRGB;\\r\\n      return this.image.getBytes(length);\\r\\n    }\\r\\n  };\\r\\n  return PDFImage;\\r\\n}();\\r\\nexports.PDFImage = PDFImage;\\r\\n\\r\\n/***/ }),\\r\\n/* 159 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\\r\\n\\r\\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\\\"value\\\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _obj = __w_pdfjs_require__(79);\\r\\n\\r\\nvar _primitives = __w_pdfjs_require__(2);\\r\\n\\r\\nvar _colorspace = __w_pdfjs_require__(29);\\r\\n\\r\\nvar _evaluator = __w_pdfjs_require__(83);\\r\\n\\r\\nvar _stream = __w_pdfjs_require__(5);\\r\\n\\r\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\r\\n\\r\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar AnnotationFactory = function () {\\r\\n  function AnnotationFactory() {\\r\\n    _classCallCheck(this, AnnotationFactory);\\r\\n  }\\r\\n\\r\\n  _createClass(AnnotationFactory, null, [{\\r\\n    key: 'create',\\r\\n    value: function create(xref, ref, pdfManager, idFactory) {\\r\\n      var dict = xref.fetchIfRef(ref);\\r\\n      if (!(0, _primitives.isDict)(dict)) {\\r\\n        return;\\r\\n      }\\r\\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\\r\\n      var subtype = dict.get('Subtype');\\r\\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\\r\\n      var parameters = {\\r\\n        xref: xref,\\r\\n        dict: dict,\\r\\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\\r\\n        subtype: subtype,\\r\\n        id: id,\\r\\n        pdfManager: pdfManager\\r\\n      };\\r\\n      switch (subtype) {\\r\\n        case 'Link':\\r\\n          return new LinkAnnotation(parameters);\\r\\n        case 'Text':\\r\\n          return new TextAnnotation(parameters);\\r\\n        case 'Widget':\\r\\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\\r\\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\r\\n          switch (fieldType) {\\r\\n            case 'Tx':\\r\\n              return new TextWidgetAnnotation(parameters);\\r\\n            case 'Btn':\\r\\n              return new ButtonWidgetAnnotation(parameters);\\r\\n            case 'Ch':\\r\\n              return new ChoiceWidgetAnnotation(parameters);\\r\\n          }\\r\\n          (0, _util.warn)('Unimplemented widget field type \\\"' + fieldType + '\\\", ' + 'falling back to base field type.');\\r\\n          return new WidgetAnnotation(parameters);\\r\\n        case 'Popup':\\r\\n          return new PopupAnnotation(parameters);\\r\\n        case 'Line':\\r\\n          return new LineAnnotation(parameters);\\r\\n        case 'Square':\\r\\n          return new SquareAnnotation(parameters);\\r\\n        case 'Circle':\\r\\n          return new CircleAnnotation(parameters);\\r\\n        case 'PolyLine':\\r\\n          return new PolylineAnnotation(parameters);\\r\\n        case 'Polygon':\\r\\n          return new PolygonAnnotation(parameters);\\r\\n        case 'Highlight':\\r\\n          return new HighlightAnnotation(parameters);\\r\\n        case 'Underline':\\r\\n          return new UnderlineAnnotation(parameters);\\r\\n        case 'Squiggly':\\r\\n          return new SquigglyAnnotation(parameters);\\r\\n        case 'StrikeOut':\\r\\n          return new StrikeOutAnnotation(parameters);\\r\\n        case 'Stamp':\\r\\n          return new StampAnnotation(parameters);\\r\\n        case 'FileAttachment':\\r\\n          return new FileAttachmentAnnotation(parameters);\\r\\n        default:\\r\\n          if (!subtype) {\\r\\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\\r\\n          } else {\\r\\n            (0, _util.warn)('Unimplemented annotation type \\\"' + subtype + '\\\", ' + 'falling back to base annotation.');\\r\\n          }\\r\\n          return new Annotation(parameters);\\r\\n      }\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return AnnotationFactory;\\r\\n}();\\r\\n\\r\\nfunction getTransformMatrix(rect, bbox, matrix) {\\r\\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\\r\\n  var minX = bounds[0];\\r\\n  var minY = bounds[1];\\r\\n  var maxX = bounds[2];\\r\\n  var maxY = bounds[3];\\r\\n  if (minX === maxX || minY === maxY) {\\r\\n    return [1, 0, 0, 1, rect[0], rect[1]];\\r\\n  }\\r\\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\\r\\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\\r\\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\\r\\n}\\r\\n\\r\\nvar Annotation = function () {\\r\\n  function Annotation(params) {\\r\\n    _classCallCheck(this, Annotation);\\r\\n\\r\\n    var dict = params.dict;\\r\\n    this.setFlags(dict.get('F'));\\r\\n    this.setRectangle(dict.getArray('Rect'));\\r\\n    this.setColor(dict.getArray('C'));\\r\\n    this.setBorderStyle(dict);\\r\\n    this.setAppearance(dict);\\r\\n    this.data = {\\r\\n      annotationFlags: this.flags,\\r\\n      borderStyle: this.borderStyle,\\r\\n      color: this.color,\\r\\n      hasAppearance: !!this.appearance,\\r\\n      id: params.id,\\r\\n      rect: this.rectangle,\\r\\n      subtype: params.subtype\\r\\n    };\\r\\n  }\\r\\n\\r\\n  _createClass(Annotation, [{\\r\\n    key: '_hasFlag',\\r\\n    value: function _hasFlag(flags, flag) {\\r\\n      return !!(flags & flag);\\r\\n    }\\r\\n  }, {\\r\\n    key: '_isViewable',\\r\\n    value: function _isViewable(flags) {\\r\\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.Annotatio\";a.a+=\"nFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\\r\\n    }\\r\\n  }, {\\r\\n    key: '_isPrintable',\\r\\n    value: function _isPrintable(flags) {\\r\\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setFlags',\\r\\n    value: function setFlags(flags) {\\r\\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'hasFlag',\\r\\n    value: function hasFlag(flag) {\\r\\n      return this._hasFlag(this.flags, flag);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setRectangle',\\r\\n    value: function setRectangle(rectangle) {\\r\\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\\r\\n        this.rectangle = _util.Util.normalizeRect(rectangle);\\r\\n      } else {\\r\\n        this.rectangle = [0, 0, 0, 0];\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setColor',\\r\\n    value: function setColor(color) {\\r\\n      var rgbColor = new Uint8Array(3);\\r\\n      if (!Array.isArray(color)) {\\r\\n        this.color = rgbColor;\\r\\n        return;\\r\\n      }\\r\\n      switch (color.length) {\\r\\n        case 0:\\r\\n          this.color = null;\\r\\n          break;\\r\\n        case 1:\\r\\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\\r\\n          this.color = rgbColor;\\r\\n          break;\\r\\n        case 3:\\r\\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\\r\\n          this.color = rgbColor;\\r\\n          break;\\r\\n        case 4:\\r\\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\\r\\n          this.color = rgbColor;\\r\\n          break;\\r\\n        default:\\r\\n          this.color = rgbColor;\\r\\n          break;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setBorderStyle',\\r\\n    value: function setBorderStyle(borderStyle) {\\r\\n      this.borderStyle = new AnnotationBorderStyle();\\r\\n      if (!(0, _primitives.isDict)(borderStyle)) {\\r\\n        return;\\r\\n      }\\r\\n      if (borderStyle.has('BS')) {\\r\\n        var dict = borderStyle.get('BS');\\r\\n        var dictType = dict.get('Type');\\r\\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\\r\\n          this.borderStyle.setWidth(dict.get('W'));\\r\\n          this.borderStyle.setStyle(dict.get('S'));\\r\\n          this.borderStyle.setDashArray(dict.getArray('D'));\\r\\n        }\\r\\n      } else if (borderStyle.has('Border')) {\\r\\n        var array = borderStyle.getArray('Border');\\r\\n        if (Array.isArray(array) && array.length >= 3) {\\r\\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\\r\\n          this.borderStyle.setVerticalCornerRadius(array[1]);\\r\\n          this.borderStyle.setWidth(array[2]);\\r\\n          if (array.length === 4) {\\r\\n            this.borderStyle.setDashArray(array[3]);\\r\\n          }\\r\\n        }\\r\\n      } else {\\r\\n        this.borderStyle.setWidth(0);\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setAppearance',\\r\\n    value: function setAppearance(dict) {\\r\\n      this.appearance = null;\\r\\n      var appearanceStates = dict.get('AP');\\r\\n      if (!(0, _primitives.isDict)(appearanceStates)) {\\r\\n        return;\\r\\n      }\\r\\n      var normalAppearanceState = appearanceStates.get('N');\\r\\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\\r\\n        this.appearance = normalAppearanceState;\\r\\n        return;\\r\\n      }\\r\\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\\r\\n        return;\\r\\n      }\\r\\n      var as = dict.get('AS');\\r\\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\\r\\n        return;\\r\\n      }\\r\\n      this.appearance = normalAppearanceState.get(as.name);\\r\\n    }\\r\\n  }, {\\r\\n    key: '_preparePopup',\\r\\n    value: function _preparePopup(dict) {\\r\\n      if (!dict.has('C')) {\\r\\n        this.data.color = null;\\r\\n      }\\r\\n      this.data.hasPopup = dict.has('Popup');\\r\\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\\r\\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\\r\\n    }\\r\\n  }, {\\r\\n    key: 'loadResources',\\r\\n    value: function loadResources(keys) {\\r\\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\\r\\n        if (!resources) {\\r\\n          return;\\r\\n        }\\r\\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\\r\\n        return objectLoader.load().then(function () {\\r\\n          return resources;\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'getOperatorList',\\r\\n    value: function getOperatorList(evaluator, task, renderForms) {\\r\\n      var _this = this;\\r\\n\\r\\n      if (!this.appearance) {\\r\\n        return Promise.resolve(new _evaluator.OperatorList());\\r\\n      }\\r\\n      var data = this.data;\\r\\n      var appearanceDict = this.appearance.dict;\\r\\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\\r\\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\\r\\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\\r\\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\\r\\n      return resourcesPromise.then(function (resources) {\\r\\n        var opList = new _evaluator.OperatorList();\\r\\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\\r\\n        return evaluator.getOperatorList({\\r\\n          stream: _this.appearance,\\r\\n          task: task,\\r\\n          resources: resources,\\r\\n          operatorList: opList\\r\\n        }).then(function () {\\r\\n          opList.addOp(_util.OPS.endAnnotation, []);\\r\\n          _this.appearance.reset();\\r\\n          return opList;\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'viewable',\\r\\n    get: function get() {\\r\\n      if (this.flags === 0) {\\r\\n        return true;\\r\\n      }\\r\\n      return this._isViewable(this.flags);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'printable',\\r\\n    get: function get() {\\r\\n      if (this.flags === 0) {\\r\\n        return false;\\r\\n      }\\r\\n      return this._isPrintable(this.flags);\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return Annotation;\\r\\n}();\\r\\n\\r\\nvar AnnotationBorderStyle = function () {\\r\\n  function AnnotationBorderStyle() {\\r\\n    _classCallCheck(this, AnnotationBorderStyle);\\r\\n\\r\\n    this.width = 1;\\r\\n    this.style = _util.AnnotationBorderStyleType.SOLID;\\r\\n    this.dashArray = [3];\\r\\n    this.horizontalCornerRadius = 0;\\r\\n    this.verticalCornerRadius = 0;\\r\\n  }\\r\\n\\r\\n  _createClass(AnnotationBorderStyle, [{\\r\\n    key: 'setWidth',\\r\\n    value: function setWidth(width) {\\r\\n      if (Number.isInteger(width)) {\\r\\n        this.width = width;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setStyle',\\r\\n    value: function setStyle(style) {\\r\\n      if (!style) {\\r\\n        return;\\r\\n      }\\r\\n      switch (style.name) {\\r\\n        case 'S':\\r\\n          this.style = _util.AnnotationBorderStyleType.SOLID;\\r\\n          break;\\r\\n        case 'D':\\r\\n          this.style = _util.AnnotationBorderStyleType.DASHED;\\r\\n          break;\\r\\n        case 'B':\\r\\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\\r\\n          break;\\r\\n        case 'I':\\r\\n          this.style = _util.AnnotationBorderStyleType.INSET;\\r\\n          break;\\r\\n        case 'U':\\r\\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\\r\\n          break;\\r\\n        default:\\r\\n          break;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setDashArray',\\r\\n    value: function setDashArray(dashArray) {\\r\\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\\r\\n        var isValid = true;\\r\\n        var allZeros = true;\\r\\n        for (var i = 0, len = dashArray.length; i < len; i++) {\\r\\n          var element = dashArray[i];\\r\\n          var validNumber = +element >= 0;\\r\\n          if (!validNumber) {\\r\\n            isValid = false;\\r\\n            break;\\r\\n          } else if (element > 0) {\\r\\n            allZeros = false;\\r\\n          }\\r\\n        }\\r\\n        if (isValid && !allZeros) {\\r\\n          this.dashArray = dashArray;\\r\\n        } else {\\r\\n          this.width = 0;\\r\\n        }\\r\\n      } else if (dashArray) {\\r\\n        this.width = 0;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setHorizontalCornerRadius',\\r\\n    value: function setHorizontalCornerRadius(radius) {\\r\\n      if (Number.isInteger(radius)) {\\r\\n        this.horizontalCornerRadius = radius;\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'setVerticalCornerRadius',\\r\\n    value: function setVerticalCornerRadius(radius) {\\r\\n      if (Number.isInteger(radius)) {\\r\\n        this.verticalCornerRadius = radius;\\r\\n      }\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return AnnotationBorderStyle;\\r\\n}();\\r\\n\\r\\nvar WidgetAnnotation = function (_Annotation) {\\r\\n  _inherits(WidgetAnnotation, _Annotation);\\r\\n\\r\\n  function WidgetAnnotation(params) {\\r\\n    _classCallCheck(this, WidgetAnnotation);\\r\\n\\r\\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\\r\\n\\r\\n    var dict = params.dict;\\r\\n    var data = _this2.data;\\r\\n    data.annotationType = _util.AnnotationType.WIDGET;\\r\\n    data.fieldName = _this2._constructFieldName(dict);\\r\\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\\r\\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\\r\\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\\r\\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\\r\\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\\r\\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\\r\\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\\r\\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\\r\\n      data.fieldFlags = 0;\\r\\n    }\\r\\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\\r\\n    if (data.fieldType === 'Sig') {\\r\\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\\r\\n    }\\r\\n    return _this2;\\r\\n  }\\r\\n\\r\\n  _createClass(WidgetAnnotation, [{\\r\\n    key: '_constructFieldName',\\r\\n    value: function _constructFieldName(dict) {\\r\\n      if (!dict.has('T') && !dict.has('Parent')) {\\r\\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\\r\\n        return '';\\r\\n      }\\r\\n      if (!dict.has('Parent')) {\\r\\n        return (0, _util.stringToPDFString)(dict.get('T'));\\r\\n      }\\r\\n      var fieldName = [];\\r\\n      if (dict.has('T')) {\\r\\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\\r\\n      }\\r\\n      var loopDict = dict;\\r\\n      while (loopDict.has('Parent')) {\\r\\n        loopDict = loopDict.get('Parent');\\r\\n        if (!(0, _primitives.isDict)(loopDict)) {\\r\\n          break;\\r\\n        }\\r\\n        if (loopDict.has('T')) {\\r\\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\\r\\n        }\\r\\n      }\\r\\n      return fieldName.join('.');\\r\\n    }\\r\\n  }, {\\r\\n    key: 'hasFieldFlag',\\r\\n    value: function hasFieldFlag(flag) {\\r\\n      return !!(this.data.fieldFlags & flag);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'getOperatorList',\\r\\n    value: function getOperatorList(evaluator, task, renderForms) {\\r\\n      if (renderForms) {\\r\\n        return Promise.resolve(new _evaluator.OperatorList());\\r\\n      }\\r\\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return WidgetAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\\r\\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\\r\\n\\r\\n  function TextWidgetAnnotation(params) {\\r\\n    _classCallCheck(this, TextWidgetAnnotation);\\r\\n\\r\\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\\r\\n\\r\\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\\r\\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\\r\\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\\r\\n      alignment = null;\\r\\n    }\\r\\n    _this3.data.textAlignment = alignment;\\r\\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\\r\\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\\r\\n      maximumLength = null;\\r\\n    }\\r\\n    _this3.data.maxLen = maximumLength;\\r\\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\\r\\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\\r\\n    return _this3;\\r\\n  }\\r\\n\\r\\n  _createClass(TextWidgetAnnotation, [{\\r\\n    key: 'getOperatorList',\\r\\n    value: function getOperatorList(evaluator, task, renderForms) {\\r\\n      if (renderForms || this.appearance) {\\r\\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\\r\\n      }\\r\\n      var operatorList = new _evaluator.OperatorList();\\r\\n      if (!this.data.defaultAppearance) {\\r\\n        return Promise.resolve(operatorList);\\r\\n      }\\r\\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\\r\\n      return evaluator.getOperatorList({\\r\\n        stream: stream,\\r\\n        task: task,\\r\\n        resources: this.fieldResources,\\r\\n        operatorList: operatorList\\r\\n      }).then(function () {\\r\\n        return operatorList;\\r\\n      });\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return TextWidgetAnnotation;\\r\\n}(WidgetAnnotation);\\r\\n\\r\\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\\r\\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\\r\\n\\r\\n  function ButtonWidgetAnnotation(params) {\\r\\n    _classCallCheck(this, ButtonWidgetAnnotation);\\r\\n\\r\\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\\r\\n\\r\\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\r\\n    if (_this4.data.checkBox) {\\r\\n      if (!(0, _primitives.isName)(_this4.data.fieldValue)) {\\r\\n        return _possibleConstructorReturn(_this4);\\r\\n      }\\r\\n      _this4.data.fieldValue = _this4.data.fieldValue.name;\\r\\n    }\\r\\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\\r\\n    if (_this4.data.radioButton) {\\r\\n      _this4.data.fieldValue = _this4.data.buttonValue = null;\\r\\n      var fieldParent = params.dict.get('Parent');\\r\\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\\r\\n        var fieldParentValue = fieldParent.get('V');\\r\\n        if ((0, _primitives.isName)(fieldParentValue)) {\\r\\n          _this4.data.fieldValue = fieldParentValue.name;\\r\\n        }\\r\\n      }\\r\\n      var appearanceStates = params.dict.get('AP');\\r\\n      if (!(0, _primitives.isDict)(appearanceStates)) {\\r\\n        return _possibleConstructorReturn(_this4);\\r\\n      }\\r\\n      var normalAppearanceState = appearanceStates.get('N');\\r\\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\\r\\n        return _possibleConstructorReturn(_this4);\\r\\n      }\\r\\n      var keys = normalAppearanceState.getKeys();\\r\\n      for (var i = 0, ii = keys.length; i < ii; i++) {\\r\\n        if (keys[i] !== 'Off') {\\r\\n          _this4.data.buttonValue = keys[i];\\r\\n          break;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n    return _this4;\\r\\n  }\\r\\n\\r\\n  return ButtonWidgetAnnotation;\\r\\n}(WidgetAnnotation);\\r\\n\\r\\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\\r\\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\\r\\n\\r\\n  function ChoiceWidgetAnnotation(params) {\\r\\n    _classCallCheck(this, ChoiceWidgetAnnotation);\\r\\n\\r\\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\\r\\n\\r\\n    _this5.data.options = [];\\r\\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\\r\\n    if (Array.isArray(options)) {\\r\\n      var xref = params.xref;\\r\\n      for (var i = 0, ii = options.length; i < ii; i++) {\\r\\n        var option = xref.fetchIfRef(options[i]);\\r\\n        var isOptionArray = Array.isArray(option);\\r\\n        _this5.data.options[i] = {\\r\\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\\r\\n          displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\\r\\n        };\\r\\n      }\\r\\n    }\\r\\n    if (!Array.isArray(_this5.data.fieldValue)) {\\r\\n   \";a.a+=\"   _this5.data.fieldValue = [_this5.data.fieldValue];\\r\\n    }\\r\\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\\r\\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\\r\\n    return _this5;\\r\\n  }\\r\\n\\r\\n  return ChoiceWidgetAnnotation;\\r\\n}(WidgetAnnotation);\\r\\n\\r\\nvar TextAnnotation = function (_Annotation2) {\\r\\n  _inherits(TextAnnotation, _Annotation2);\\r\\n\\r\\n  function TextAnnotation(parameters) {\\r\\n    _classCallCheck(this, TextAnnotation);\\r\\n\\r\\n    var DEFAULT_ICON_SIZE = 22;\\r\\n\\r\\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\\r\\n    if (_this6.data.hasAppearance) {\\r\\n      _this6.data.name = 'NoIcon';\\r\\n    } else {\\r\\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\\r\\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\\r\\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\\r\\n    }\\r\\n    _this6._preparePopup(parameters.dict);\\r\\n    return _this6;\\r\\n  }\\r\\n\\r\\n  return TextAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar LinkAnnotation = function (_Annotation3) {\\r\\n  _inherits(LinkAnnotation, _Annotation3);\\r\\n\\r\\n  function LinkAnnotation(params) {\\r\\n    _classCallCheck(this, LinkAnnotation);\\r\\n\\r\\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\\r\\n\\r\\n    _this7.data.annotationType = _util.AnnotationType.LINK;\\r\\n    _obj.Catalog.parseDestDictionary({\\r\\n      destDict: params.dict,\\r\\n      resultObj: _this7.data,\\r\\n      docBaseUrl: params.pdfManager.docBaseUrl\\r\\n    });\\r\\n    return _this7;\\r\\n  }\\r\\n\\r\\n  return LinkAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar PopupAnnotation = function (_Annotation4) {\\r\\n  _inherits(PopupAnnotation, _Annotation4);\\r\\n\\r\\n  function PopupAnnotation(parameters) {\\r\\n    _classCallCheck(this, PopupAnnotation);\\r\\n\\r\\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\\r\\n    var dict = parameters.dict;\\r\\n    var parentItem = dict.get('Parent');\\r\\n    if (!parentItem) {\\r\\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\\r\\n      return _possibleConstructorReturn(_this8);\\r\\n    }\\r\\n    var parentSubtype = parentItem.get('Subtype');\\r\\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\\r\\n    _this8.data.parentId = dict.getRaw('Parent').toString();\\r\\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\\r\\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\\r\\n    if (!parentItem.has('C')) {\\r\\n      _this8.data.color = null;\\r\\n    } else {\\r\\n      _this8.setColor(parentItem.getArray('C'));\\r\\n      _this8.data.color = _this8.color;\\r\\n    }\\r\\n    if (!_this8.viewable) {\\r\\n      var parentFlags = parentItem.get('F');\\r\\n      if (_this8._isViewable(parentFlags)) {\\r\\n        _this8.setFlags(parentFlags);\\r\\n      }\\r\\n    }\\r\\n    return _this8;\\r\\n  }\\r\\n\\r\\n  return PopupAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar LineAnnotation = function (_Annotation5) {\\r\\n  _inherits(LineAnnotation, _Annotation5);\\r\\n\\r\\n  function LineAnnotation(parameters) {\\r\\n    _classCallCheck(this, LineAnnotation);\\r\\n\\r\\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this9.data.annotationType = _util.AnnotationType.LINE;\\r\\n    var dict = parameters.dict;\\r\\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\\r\\n    _this9._preparePopup(dict);\\r\\n    return _this9;\\r\\n  }\\r\\n\\r\\n  return LineAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar SquareAnnotation = function (_Annotation6) {\\r\\n  _inherits(SquareAnnotation, _Annotation6);\\r\\n\\r\\n  function SquareAnnotation(parameters) {\\r\\n    _classCallCheck(this, SquareAnnotation);\\r\\n\\r\\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\\r\\n    _this10._preparePopup(parameters.dict);\\r\\n    return _this10;\\r\\n  }\\r\\n\\r\\n  return SquareAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar CircleAnnotation = function (_Annotation7) {\\r\\n  _inherits(CircleAnnotation, _Annotation7);\\r\\n\\r\\n  function CircleAnnotation(parameters) {\\r\\n    _classCallCheck(this, CircleAnnotation);\\r\\n\\r\\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\\r\\n    _this11._preparePopup(parameters.dict);\\r\\n    return _this11;\\r\\n  }\\r\\n\\r\\n  return CircleAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar PolylineAnnotation = function (_Annotation8) {\\r\\n  _inherits(PolylineAnnotation, _Annotation8);\\r\\n\\r\\n  function PolylineAnnotation(parameters) {\\r\\n    _classCallCheck(this, PolylineAnnotation);\\r\\n\\r\\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\\r\\n    var dict = parameters.dict;\\r\\n    var rawVertices = dict.getArray('Vertices');\\r\\n    _this12.data.vertices = [];\\r\\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\\r\\n      _this12.data.vertices.push({\\r\\n        x: rawVertices[i],\\r\\n        y: rawVertices[i + 1]\\r\\n      });\\r\\n    }\\r\\n    _this12._preparePopup(dict);\\r\\n    return _this12;\\r\\n  }\\r\\n\\r\\n  return PolylineAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar PolygonAnnotation = function (_PolylineAnnotation) {\\r\\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\\r\\n\\r\\n  function PolygonAnnotation(parameters) {\\r\\n    _classCallCheck(this, PolygonAnnotation);\\r\\n\\r\\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\\r\\n    return _this13;\\r\\n  }\\r\\n\\r\\n  return PolygonAnnotation;\\r\\n}(PolylineAnnotation);\\r\\n\\r\\nvar HighlightAnnotation = function (_Annotation9) {\\r\\n  _inherits(HighlightAnnotation, _Annotation9);\\r\\n\\r\\n  function HighlightAnnotation(parameters) {\\r\\n    _classCallCheck(this, HighlightAnnotation);\\r\\n\\r\\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\\r\\n    _this14._preparePopup(parameters.dict);\\r\\n    return _this14;\\r\\n  }\\r\\n\\r\\n  return HighlightAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar UnderlineAnnotation = function (_Annotation10) {\\r\\n  _inherits(UnderlineAnnotation, _Annotation10);\\r\\n\\r\\n  function UnderlineAnnotation(parameters) {\\r\\n    _classCallCheck(this, UnderlineAnnotation);\\r\\n\\r\\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\\r\\n    _this15._preparePopup(parameters.dict);\\r\\n    return _this15;\\r\\n  }\\r\\n\\r\\n  return UnderlineAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar SquigglyAnnotation = function (_Annotation11) {\\r\\n  _inherits(SquigglyAnnotation, _Annotation11);\\r\\n\\r\\n  function SquigglyAnnotation(parameters) {\\r\\n    _classCallCheck(this, SquigglyAnnotation);\\r\\n\\r\\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\\r\\n    _this16._preparePopup(parameters.dict);\\r\\n    return _this16;\\r\\n  }\\r\\n\\r\\n  return SquigglyAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar StrikeOutAnnotation = function (_Annotation12) {\\r\\n  _inherits(StrikeOutAnnotation, _Annotation12);\\r\\n\\r\\n  function StrikeOutAnnotation(parameters) {\\r\\n    _classCallCheck(this, StrikeOutAnnotation);\\r\\n\\r\\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\\r\\n    _this17._preparePopup(parameters.dict);\\r\\n    return _this17;\\r\\n  }\\r\\n\\r\\n  return StrikeOutAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar StampAnnotation = function (_Annotation13) {\\r\\n  _inherits(StampAnnotation, _Annotation13);\\r\\n\\r\\n  function StampAnnotation(parameters) {\\r\\n    _classCallCheck(this, StampAnnotation);\\r\\n\\r\\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\\r\\n\\r\\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\\r\\n    _this18._preparePopup(parameters.dict);\\r\\n    return _this18;\\r\\n  }\\r\\n\\r\\n  return StampAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nvar FileAttachmentAnnotation = function (_Annotation14) {\\r\\n  _inherits(FileAttachmentAnnotation, _Annotation14);\\r\\n\\r\\n  function FileAttachmentAnnotation(parameters) {\\r\\n    _classCallCheck(this, FileAttachmentAnnotation);\\r\\n\\r\\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\\r\\n\\r\\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\\r\\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\\r\\n    _this19.data.file = file.serializable;\\r\\n    _this19._preparePopup(parameters.dict);\\r\\n    return _this19;\\r\\n  }\\r\\n\\r\\n  return FileAttachmentAnnotation;\\r\\n}(Annotation);\\r\\n\\r\\nexports.Annotation = Annotation;\\r\\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\\r\\nexports.AnnotationFactory = AnnotationFactory;\\r\\n\\r\\n/***/ }),\\r\\n/* 160 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PDFNodeStream = undefined;\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _network_utils = __w_pdfjs_require__(50);\\r\\n\\r\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\r\\n\\r\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nvar fs = require('fs');\\r\\nvar http = require('http');\\r\\nvar https = require('https');\\r\\nvar url = require('url');\\r\\n\\r\\nvar PDFNodeStream = function () {\\r\\n  function PDFNodeStream(options) {\\r\\n    _classCallCheck(this, PDFNodeStream);\\r\\n\\r\\n    this.options = options;\\r\\n    this.source = options.source;\\r\\n    this.url = url.parse(this.source.url);\\r\\n    this.isHttp = this.url.protocol === 'http:' || this.url.protocol === 'https:';\\r\\n    this.isFsUrl = this.url.protocol === 'file:' || !this.url.host;\\r\\n    this.httpHeaders = this.isHttp && this.source.httpHeaders || {};\\r\\n    this._fullRequest = null;\\r\\n    this._rangeRequestReaders = [];\\r\\n  }\\r\\n\\r\\n  _createClass(PDFNodeStream, [{\\r\\n    key: 'getFullReader',\\r\\n    value: function getFullReader() {\\r\\n      (0, _util.assert)(!this._fullRequest);\\r\\n      this._fullRequest = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\\r\\n      return this._fullRequest;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'getRangeReader',\\r\\n    value: function getRangeReader(start, end) {\\r\\n      var rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\\r\\n      this._rangeRequestReaders.push(rangeReader);\\r\\n      return rangeReader;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'cancelAllRequests',\\r\\n    value: function cancelAllRequests(reason) {\\r\\n      if (this._fullRequest) {\\r\\n        this._fullRequest.cancel(reason);\\r\\n      }\\r\\n      var readers = this._rangeRequestReaders.slice(0);\\r\\n      readers.forEach(function (reader) {\\r\\n        reader.cancel(reason);\\r\\n      });\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PDFNodeStream;\\r\\n}();\\r\\n\\r\\nvar BaseFullReader = function () {\\r\\n  function BaseFullReader(stream) {\\r\\n    _classCallCheck(this, BaseFullReader);\\r\\n\\r\\n    this._url = stream.url;\\r\\n    this._done = false;\\r\\n    this._errored = false;\\r\\n    this._reason = null;\\r\\n    this.onProgress = null;\\r\\n    this._contentLength = stream.source.length;\\r\\n    this._loaded = 0;\\r\\n    this._disableRange = stream.options.disableRange || false;\\r\\n    this._rangeChunkSize = stream.source.rangeChunkSize;\\r\\n    if (!this._rangeChunkSize && !this._disableRange) {\\r\\n      this._disableRange = true;\\r\\n    }\\r\\n    this._isStreamingSupported = !stream.source.disableStream;\\r\\n    this._isRangeSupported = !stream.options.disableRange;\\r\\n    this._readableStream = null;\\r\\n    this._readCapability = (0, _util.createPromiseCapability)();\\r\\n    this._headersCapability = (0, _util.createPromiseCapability)();\\r\\n  }\\r\\n\\r\\n  _createClass(BaseFullReader, [{\\r\\n    key: 'read',\\r\\n    value: function read() {\\r\\n      var _this = this;\\r\\n\\r\\n      return this._readCapability.promise.then(function () {\\r\\n        if (_this._done) {\\r\\n          return Promise.resolve({\\r\\n            value: undefined,\\r\\n            done: true\\r\\n          });\\r\\n        }\\r\\n        if (_this._errored) {\\r\\n          return Promise.reject(_this._reason);\\r\\n        }\\r\\n        var chunk = _this._readableStream.read();\\r\\n        if (chunk === null) {\\r\\n          _this._readCapability = (0, _util.createPromiseCapability)();\\r\\n          return _this.read();\\r\\n        }\\r\\n        _this._loaded += chunk.length;\\r\\n        if (_this.onProgress) {\\r\\n          _this.onProgress({\\r\\n            loaded: _this._loaded,\\r\\n            total: _this._contentLength\\r\\n          });\\r\\n        }\\r\\n        var buffer = new Uint8Array(chunk).buffer;\\r\\n        return Promise.resolve({\\r\\n          value: buffer,\\r\\n          done: false\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'cancel',\\r\\n    value: function cancel(reason) {\\r\\n      if (!this._readableStream) {\\r\\n        this._error(reason);\\r\\n        return;\\r\\n      }\\r\\n      this._readableStream.destroy(reason);\\r\\n    }\\r\\n  }, {\\r\\n    key: '_error',\\r\\n    value: function _error(reason) {\\r\\n      this._errored = true;\\r\\n      this._reason = reason;\\r\\n      this._readCapability.resolve();\\r\\n    }\\r\\n  }, {\\r\\n    key: '_setReadableStream',\\r\\n    value: function _setReadableStream(readableStream) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      this._readableStream = readableStream;\\r\\n      readableStream.on('readable', function () {\\r\\n        _this2._readCapability.resolve();\\r\\n      });\\r\\n      readableStream.on('end', function () {\\r\\n        readableStream.destroy();\\r\\n        _this2._done = true;\\r\\n        _this2._readCapability.resolve();\\r\\n      });\\r\\n      readableStream.on('error', function (reason) {\\r\\n        _this2._error(reason);\\r\\n      });\\r\\n      if (!this._isStreamingSupported && this._isRangeSupported) {\\r\\n        this._error(new _util.AbortException('streaming is disabled'));\\r\\n      }\\r\\n      if (this._errored) {\\r\\n        this._readableStream.destroy(this._reason);\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'headersReady',\\r\\n    get: function get() {\\r\\n      return this._headersCapability.promise;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'contentLength',\\r\\n    get: function get() {\\r\\n      return this._contentLength;\\r\\n    }\\r\\n  }, {\\r\\n   \";a.a+=\" key: 'isRangeSupported',\\r\\n    get: function get() {\\r\\n      return this._isRangeSupported;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'isStreamingSupported',\\r\\n    get: function get() {\\r\\n      return this._isStreamingSupported;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return BaseFullReader;\\r\\n}();\\r\\n\\r\\nvar BaseRangeReader = function () {\\r\\n  function BaseRangeReader(stream) {\\r\\n    _classCallCheck(this, BaseRangeReader);\\r\\n\\r\\n    this._url = stream.url;\\r\\n    this._done = false;\\r\\n    this._errored = false;\\r\\n    this._reason = null;\\r\\n    this.onProgress = null;\\r\\n    this._loaded = 0;\\r\\n    this._readableStream = null;\\r\\n    this._readCapability = (0, _util.createPromiseCapability)();\\r\\n    this._isStreamingSupported = !stream.source.disableStream;\\r\\n  }\\r\\n\\r\\n  _createClass(BaseRangeReader, [{\\r\\n    key: 'read',\\r\\n    value: function read() {\\r\\n      var _this3 = this;\\r\\n\\r\\n      return this._readCapability.promise.then(function () {\\r\\n        if (_this3._done) {\\r\\n          return Promise.resolve({\\r\\n            value: undefined,\\r\\n            done: true\\r\\n          });\\r\\n        }\\r\\n        if (_this3._errored) {\\r\\n          return Promise.reject(_this3._reason);\\r\\n        }\\r\\n        var chunk = _this3._readableStream.read();\\r\\n        if (chunk === null) {\\r\\n          _this3._readCapability = (0, _util.createPromiseCapability)();\\r\\n          return _this3.read();\\r\\n        }\\r\\n        _this3._loaded += chunk.length;\\r\\n        if (_this3.onProgress) {\\r\\n          _this3.onProgress({ loaded: _this3._loaded });\\r\\n        }\\r\\n        var buffer = new Uint8Array(chunk).buffer;\\r\\n        return Promise.resolve({\\r\\n          value: buffer,\\r\\n          done: false\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'cancel',\\r\\n    value: function cancel(reason) {\\r\\n      if (!this._readableStream) {\\r\\n        this._error(reason);\\r\\n        return;\\r\\n      }\\r\\n      this._readableStream.destroy(reason);\\r\\n    }\\r\\n  }, {\\r\\n    key: '_error',\\r\\n    value: function _error(reason) {\\r\\n      this._errored = true;\\r\\n      this._reason = reason;\\r\\n      this._readCapability.resolve();\\r\\n    }\\r\\n  }, {\\r\\n    key: '_setReadableStream',\\r\\n    value: function _setReadableStream(readableStream) {\\r\\n      var _this4 = this;\\r\\n\\r\\n      this._readableStream = readableStream;\\r\\n      readableStream.on('readable', function () {\\r\\n        _this4._readCapability.resolve();\\r\\n      });\\r\\n      readableStream.on('end', function () {\\r\\n        readableStream.destroy();\\r\\n        _this4._done = true;\\r\\n        _this4._readCapability.resolve();\\r\\n      });\\r\\n      readableStream.on('error', function (reason) {\\r\\n        _this4._error(reason);\\r\\n      });\\r\\n      if (this._errored) {\\r\\n        this._readableStream.destroy(this._reason);\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'isStreamingSupported',\\r\\n    get: function get() {\\r\\n      return this._isStreamingSupported;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return BaseRangeReader;\\r\\n}();\\r\\n\\r\\nfunction createRequestOptions(url, headers) {\\r\\n  return {\\r\\n    protocol: url.protocol,\\r\\n    auth: url.auth,\\r\\n    host: url.hostname,\\r\\n    port: url.port,\\r\\n    path: url.path,\\r\\n    method: 'GET',\\r\\n    headers: headers\\r\\n  };\\r\\n}\\r\\n\\r\\nvar PDFNodeStreamFullReader = function (_BaseFullReader) {\\r\\n  _inherits(PDFNodeStreamFullReader, _BaseFullReader);\\r\\n\\r\\n  function PDFNodeStreamFullReader(stream) {\\r\\n    _classCallCheck(this, PDFNodeStreamFullReader);\\r\\n\\r\\n    var _this5 = _possibleConstructorReturn(this, (PDFNodeStreamFullReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamFullReader)).call(this, stream));\\r\\n\\r\\n    var handleResponse = function handleResponse(response) {\\r\\n      _this5._headersCapability.resolve();\\r\\n      _this5._setReadableStream(response);\\r\\n\\r\\n      var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({\\r\\n        getResponseHeader: function getResponseHeader(name) {\\r\\n          return _this5._readableStream.headers[name.toLowerCase()];\\r\\n        },\\r\\n        isHttp: stream.isHttp,\\r\\n        rangeChunkSize: _this5._rangeChunkSize,\\r\\n        disableRange: _this5._disableRange\\r\\n      }),\\r\\n          allowRangeRequests = _validateRangeRequest.allowRangeRequests,\\r\\n          suggestedLength = _validateRangeRequest.suggestedLength;\\r\\n\\r\\n      if (allowRangeRequests) {\\r\\n        _this5._isRangeSupported = true;\\r\\n      }\\r\\n      _this5._contentLength = suggestedLength;\\r\\n    };\\r\\n    _this5._request = null;\\r\\n    if (_this5._url.protocol === 'http:') {\\r\\n      _this5._request = http.request(createRequestOptions(_this5._url, stream.httpHeaders), handleResponse);\\r\\n    } else {\\r\\n      _this5._request = https.request(createRequestOptions(_this5._url, stream.httpHeaders), handleResponse);\\r\\n    }\\r\\n    _this5._request.on('error', function (reason) {\\r\\n      _this5._errored = true;\\r\\n      _this5._reason = reason;\\r\\n      _this5._headersCapability.reject(reason);\\r\\n    });\\r\\n    _this5._request.end();\\r\\n    return _this5;\\r\\n  }\\r\\n\\r\\n  return PDFNodeStreamFullReader;\\r\\n}(BaseFullReader);\\r\\n\\r\\nvar PDFNodeStreamRangeReader = function (_BaseRangeReader) {\\r\\n  _inherits(PDFNodeStreamRangeReader, _BaseRangeReader);\\r\\n\\r\\n  function PDFNodeStreamRangeReader(stream, start, end) {\\r\\n    _classCallCheck(this, PDFNodeStreamRangeReader);\\r\\n\\r\\n    var _this6 = _possibleConstructorReturn(this, (PDFNodeStreamRangeReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamRangeReader)).call(this, stream));\\r\\n\\r\\n    _this6._httpHeaders = {};\\r\\n    for (var property in stream.httpHeaders) {\\r\\n      var value = stream.httpHeaders[property];\\r\\n      if (typeof value === 'undefined') {\\r\\n        continue;\\r\\n      }\\r\\n      _this6._httpHeaders[property] = value;\\r\\n    }\\r\\n    _this6._httpHeaders['Range'] = 'bytes=' + start + '-' + (end - 1);\\r\\n    _this6._request = null;\\r\\n    if (_this6._url.protocol === 'http:') {\\r\\n      _this6._request = http.request(createRequestOptions(_this6._url, _this6._httpHeaders), function (response) {\\r\\n        _this6._setReadableStream(response);\\r\\n      });\\r\\n    } else {\\r\\n      _this6._request = https.request(createRequestOptions(_this6._url, _this6._httpHeaders), function (response) {\\r\\n        _this6._setReadableStream(response);\\r\\n      });\\r\\n    }\\r\\n    _this6._request.on('error', function (reason) {\\r\\n      _this6._errored = true;\\r\\n      _this6._reason = reason;\\r\\n    });\\r\\n    _this6._request.end();\\r\\n    return _this6;\\r\\n  }\\r\\n\\r\\n  return PDFNodeStreamRangeReader;\\r\\n}(BaseRangeReader);\\r\\n\\r\\nvar PDFNodeStreamFsFullReader = function (_BaseFullReader2) {\\r\\n  _inherits(PDFNodeStreamFsFullReader, _BaseFullReader2);\\r\\n\\r\\n  function PDFNodeStreamFsFullReader(stream) {\\r\\n    _classCallCheck(this, PDFNodeStreamFsFullReader);\\r\\n\\r\\n    var _this7 = _possibleConstructorReturn(this, (PDFNodeStreamFsFullReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamFsFullReader)).call(this, stream));\\r\\n\\r\\n    var path = decodeURI(_this7._url.path);\\r\\n    fs.lstat(path, function (error, stat) {\\r\\n      if (error) {\\r\\n        _this7._errored = true;\\r\\n        _this7._reason = error;\\r\\n        _this7._headersCapability.reject(error);\\r\\n        return;\\r\\n      }\\r\\n      _this7._contentLength = stat.size;\\r\\n      _this7._setReadableStream(fs.createReadStream(path));\\r\\n      _this7._headersCapability.resolve();\\r\\n    });\\r\\n    return _this7;\\r\\n  }\\r\\n\\r\\n  return PDFNodeStreamFsFullReader;\\r\\n}(BaseFullReader);\\r\\n\\r\\nvar PDFNodeStreamFsRangeReader = function (_BaseRangeReader2) {\\r\\n  _inherits(PDFNodeStreamFsRangeReader, _BaseRangeReader2);\\r\\n\\r\\n  function PDFNodeStreamFsRangeReader(stream, start, end) {\\r\\n    _classCallCheck(this, PDFNodeStreamFsRangeReader);\\r\\n\\r\\n    var _this8 = _possibleConstructorReturn(this, (PDFNodeStreamFsRangeReader.__proto__ || Object.getPrototypeOf(PDFNodeStreamFsRangeReader)).call(this, stream));\\r\\n\\r\\n    _this8._setReadableStream(fs.createReadStream(decodeURI(_this8._url.path), {\\r\\n      start: start,\\r\\n      end: end - 1\\r\\n    }));\\r\\n    return _this8;\\r\\n  }\\r\\n\\r\\n  return PDFNodeStreamFsRangeReader;\\r\\n}(BaseRangeReader);\\r\\n\\r\\nexports.PDFNodeStream = PDFNodeStream;\\r\\n\\r\\n/***/ }),\\r\\n/* 161 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.PDFFetchStream = undefined;\\r\\n\\r\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _network_utils = __w_pdfjs_require__(50);\\r\\n\\r\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\r\\n\\r\\nfunction createFetchOptions(headers, withCredentials) {\\r\\n  return {\\r\\n    method: 'GET',\\r\\n    headers: headers,\\r\\n    mode: 'cors',\\r\\n    credentials: withCredentials ? 'include' : 'same-origin',\\r\\n    redirect: 'follow'\\r\\n  };\\r\\n}\\r\\n\\r\\nvar PDFFetchStream = function () {\\r\\n  function PDFFetchStream(options) {\\r\\n    _classCallCheck(this, PDFFetchStream);\\r\\n\\r\\n    this.options = options;\\r\\n    this.source = options.source;\\r\\n    this.isHttp = /^https?:/i.test(this.source.url);\\r\\n    this.httpHeaders = this.isHttp && this.source.httpHeaders || {};\\r\\n    this._fullRequestReader = null;\\r\\n    this._rangeRequestReaders = [];\\r\\n  }\\r\\n\\r\\n  _createClass(PDFFetchStream, [{\\r\\n    key: 'getFullReader',\\r\\n    value: function getFullReader() {\\r\\n      (0, _util.assert)(!this._fullRequestReader);\\r\\n      this._fullRequestReader = new PDFFetchStreamReader(this);\\r\\n      return this._fullRequestReader;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'getRangeReader',\\r\\n    value: function getRangeReader(begin, end) {\\r\\n      var reader = new PDFFetchStreamRangeReader(this, begin, end);\\r\\n      this._rangeRequestReaders.push(reader);\\r\\n      return reader;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'cancelAllRequests',\\r\\n    value: function cancelAllRequests(reason) {\\r\\n      if (this._fullRequestReader) {\\r\\n        this._fullRequestReader.cancel(reason);\\r\\n      }\\r\\n      var readers = this._rangeRequestReaders.slice(0);\\r\\n      readers.forEach(function (reader) {\\r\\n        reader.cancel(reason);\\r\\n      });\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PDFFetchStream;\\r\\n}();\\r\\n\\r\\nvar PDFFetchStreamReader = function () {\\r\\n  function PDFFetchStreamReader(stream) {\\r\\n    var _this = this;\\r\\n\\r\\n    _classCallCheck(this, PDFFetchStreamReader);\\r\\n\\r\\n    this._stream = stream;\\r\\n    this._reader = null;\\r\\n    this._loaded = 0;\\r\\n    this._withCredentials = stream.source.withCredentials;\\r\\n    this._contentLength = this._stream.source.length;\\r\\n    this._headersCapability = (0, _util.createPromiseCapability)();\\r\\n    this._disableRange = this._stream.options.disableRange;\\r\\n    this._rangeChunkSize = this._stream.source.rangeChunkSize;\\r\\n    if (!this._rangeChunkSize && !this._disableRange) {\\r\\n      this._disableRange = true;\\r\\n    }\\r\\n    this._isRangeSupported = !this._stream.options.disableRange;\\r\\n    this._isStreamingSupported = !this._stream.source.disableStream;\\r\\n    this._headers = new Headers();\\r\\n    for (var property in this._stream.httpHeaders) {\\r\\n      var value = this._stream.httpHeaders[property];\\r\\n      if (typeof value === 'undefined') {\\r\\n        continue;\\r\\n      }\\r\\n      this._headers.append(property, value);\\r\\n    }\\r\\n    var url = this._stream.source.url;\\r\\n    fetch(url, createFetchOptions(this._headers, this._withCredentials)).then(function (response) {\\r\\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\\r\\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\\r\\n      }\\r\\n      _this._reader = response.body.getReader();\\r\\n      _this._headersCapability.resolve();\\r\\n\\r\\n      var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({\\r\\n        getResponseHeader: function getResponseHeader(name) {\\r\\n          return response.headers.get(name);\\r\\n        },\\r\\n        isHttp: _this._stream.isHttp,\\r\\n        rangeChunkSize: _this._rangeChunkSize,\\r\\n        disableRange: _this._disableRange\\r\\n      }),\\r\\n          allowRangeRequests = _validateRangeRequest.allowRangeRequests,\\r\\n          suggestedLength = _validateRangeRequest.suggestedLength;\\r\\n\\r\\n      _this._contentLength = suggestedLength;\\r\\n      _this._isRangeSupported = allowRangeRequests;\\r\\n      if (!_this._isStreamingSupported && _this._isRangeSupported) {\\r\\n        _this.cancel(new _util.AbortException('streaming is disabled'));\\r\\n      }\\r\\n    }).catch(this._headersCapability.reject);\\r\\n    this.onProgress = null;\\r\\n  }\\r\\n\\r\\n  _createClass(PDFFetchStreamReader, [{\\r\\n    key: 'read',\\r\\n    value: function read() {\\r\\n      var _this2 = this;\\r\\n\\r\\n      return this._headersCapability.promise.then(function () {\\r\\n        return _this2._reader.read().then(function (_ref) {\\r\\n          var value = _ref.value,\\r\\n              done = _ref.done;\\r\\n\\r\\n          if (done) {\\r\\n            return Promise.resolve({\\r\\n              value: value,\\r\\n              done: done\\r\\n            });\\r\\n          }\\r\\n          _this2._loaded += value.byteLength;\\r\\n          if (_this2.onProgress) {\\r\\n            _this2.onProgress({\\r\\n              loaded: _this2._loaded,\\r\\n              total: _this2._contentLength\\r\\n            });\\r\\n          }\\r\\n          var buffer = new Uint8Array(value).buffer;\\r\\n          return Promise.resolve({\\r\\n            value: buffer,\\r\\n            done: false\\r\\n          });\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'cancel',\\r\\n    value: function cancel(reason) {\\r\\n      if (this._reader) {\\r\\n        this._reader.cancel(reason);\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'headersReady',\\r\\n    get: function get() {\\r\\n      return this._headersCapability.promise;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'contentLength',\\r\\n    get: function get() {\\r\\n      return this._contentLength;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'isRangeSupported',\\r\\n    get: function get() {\\r\\n      return this._isRangeSupported;\\r\\n    }\\r\\n  }, {\\r\\n    key: 'isStreamingSupported',\\r\\n    get: function get() {\\r\\n      return this._isStreamingSupported;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PDFFetchStreamReader;\\r\\n}();\\r\\n\\r\\nvar PDFFetchStreamRangeReader = function () {\\r\\n  function PDFFetchStreamRangeReader(stream, begin, end) {\\r\\n    var _this3 = this;\\r\\n\\r\\n    _classCallCheck(this, PDFFetchStreamRangeReader);\\r\\n\\r\\n    this._stream = stream;\\r\\n    this._reader = null;\\r\\n    this._loaded = 0;\\r\\n    this._withCredentials = stream.source.withCredentials;\\r\\n    this._readCapability = (0, _util.createPromiseCapability)();\\r\\n    this._isStreamingSupported = !stream.source.disableStream;\\r\\n    this._headers = new Headers();\\r\\n    for (var property in this._stream.httpHeaders) {\\r\\n      var value = this._stream.httpHeaders[property];\\r\\n      if (typeof value === 'undefined') {\\r\\n        continue;\\r\\n      }\\r\\n      this._headers.append(property, value);\\r\\n    }\\r\\n    var rangeStr = begin + '-' + (end - 1);\\r\\n    this._headers.append('Range', 'bytes=' + rangeStr);\\r\\n    var url = this._stream.source.url;\\r\\n    fetch(url, createFetchOptions(this._headers, this._withCredentials)).then(function (response) {\\r\\n      if (!(0, _network_utils.validateResponseStatus)(response.status)) {\\r\\n        throw (0, _network_utils.createResponseStatusError)(response.status, url);\\r\\n      }\\r\\n      _this3._readCapability.resolve();\\r\\n      _this3._reader = response.body.getReader();\\r\\n    });\\r\\n    this.onProgress = null;\\r\\n  }\\r\\n\\r\\n  _createClass(PDFFetchStreamRangeReader, [{\\r\\n    key: 'read',\\r\\n    value: function read() {\\r\\n      var _this4 = this;\\r\\n\\r\\n      return this._readCapability.promise.then(function () {\\r\\n        return _this4._reader.read().then(function (_ref2) {\\r\\n          var value = _ref2.value,\\r\\n              done = _ref2.done;\\r\\n\\r\\n          if (done) {\\r\\n            return Promise.resolve({\\r\\n              value: value,\\r\\n              done: done\\r\\n            });\\r\\n          }\\r\\n          _this4._loaded += value.byteLength;\\r\\n          if (_this4.onProgress) {\\r\\n            _this4.onProgress({ loaded: _this4._loaded });\\r\\n          }\\r\\n          var buffer = new Uint8Array(value).buffer;\\r\\n          return Promise.resolve({\\r\\n            value: buffer,\\r\\n            done: false\\r\\n          });\\r\\n        });\\r\\n      });\\r\\n    }\\r\\n  }, {\\r\\n    key: 'cancel',\\r\\n    value: function cancel(reason) {\\r\\n      if (this._reader) {\\r\\n        this._reader.cancel(reason);\\r\\n      }\\r\\n    }\\r\\n  }, {\\r\\n    key: 'isStreamingSup\";a.a+=\"ported',\\r\\n    get: function get() {\\r\\n      return this._isStreamingSupported;\\r\\n    }\\r\\n  }]);\\r\\n\\r\\n  return PDFFetchStreamRangeReader;\\r\\n}();\\r\\n\\r\\nexports.PDFFetchStream = PDFFetchStream;\\r\\n\\r\\n/***/ }),\\r\\n/* 162 */\\r\\n/***/ (function(module, exports, __w_pdfjs_require__) {\\r\\n\\r\\n\\\"use strict\\\";\\r\\n\\r\\n\\r\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\r\\n  value: true\\r\\n});\\r\\nexports.NetworkManager = exports.PDFNetworkStream = undefined;\\r\\n\\r\\nvar _util = __w_pdfjs_require__(0);\\r\\n\\r\\nvar _network_utils = __w_pdfjs_require__(50);\\r\\n\\r\\nvar _global_scope = __w_pdfjs_require__(22);\\r\\n\\r\\nvar _global_scope2 = _interopRequireDefault(_global_scope);\\r\\n\\r\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\r\\n\\r\\n;\\r\\nvar OK_RESPONSE = 200;\\r\\nvar PARTIAL_CONTENT_RESPONSE = 206;\\r\\nfunction NetworkManager(url, args) {\\r\\n  this.url = url;\\r\\n  args = args || {};\\r\\n  this.isHttp = /^https?:/i.test(url);\\r\\n  this.httpHeaders = this.isHttp && args.httpHeaders || {};\\r\\n  this.withCredentials = args.withCredentials || false;\\r\\n  this.getXhr = args.getXhr || function NetworkManager_getXhr() {\\r\\n    return new XMLHttpRequest();\\r\\n  };\\r\\n  this.currXhrId = 0;\\r\\n  this.pendingRequests = Object.create(null);\\r\\n  this.loadedRequests = Object.create(null);\\r\\n}\\r\\nfunction getArrayBuffer(xhr) {\\r\\n  var data = xhr.response;\\r\\n  if (typeof data !== 'string') {\\r\\n    return data;\\r\\n  }\\r\\n  var array = (0, _util.stringToBytes)(data);\\r\\n  return array.buffer;\\r\\n}\\r\\nvar supportsMozChunked = function supportsMozChunkedClosure() {\\r\\n  try {\\r\\n    var x = new XMLHttpRequest();\\r\\n    x.open('GET', _global_scope2.default.location.href);\\r\\n    x.responseType = 'moz-chunked-arraybuffer';\\r\\n    return x.responseType === 'moz-chunked-arraybuffer';\\r\\n  } catch (e) {\\r\\n    return false;\\r\\n  }\\r\\n}();\\r\\nNetworkManager.prototype = {\\r\\n  requestRange: function NetworkManager_requestRange(begin, end, listeners) {\\r\\n    var args = {\\r\\n      begin: begin,\\r\\n      end: end\\r\\n    };\\r\\n    for (var prop in listeners) {\\r\\n      args[prop] = listeners[prop];\\r\\n    }\\r\\n    return this.request(args);\\r\\n  },\\r\\n  requestFull: function NetworkManager_requestFull(listeners) {\\r\\n    return this.request(listeners);\\r\\n  },\\r\\n  request: function NetworkManager_request(args) {\\r\\n    var xhr = this.getXhr();\\r\\n    var xhrId = this.currXhrId++;\\r\\n    var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\\r\\n    xhr.open('GET', this.url);\\r\\n    xhr.withCredentials = this.withCredentials;\\r\\n    for (var property in this.httpHeaders) {\\r\\n      var value = this.httpHeaders[property];\\r\\n      if (typeof value === 'undefined') {\\r\\n        continue;\\r\\n      }\\r\\n      xhr.setRequestHeader(property, value);\\r\\n    }\\r\\n    if (this.isHttp && 'begin' in args && 'end' in args) {\\r\\n      var rangeStr = args.begin + '-' + (args.end - 1);\\r\\n      xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\\r\\n      pendingRequest.expectedStatus = 206;\\r\\n    } else {\\r\\n      pendingRequest.expectedStatus = 200;\\r\\n    }\\r\\n    var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\\r\\n    if (useMozChunkedLoading) {\\r\\n      xhr.responseType = 'moz-chunked-arraybuffer';\\r\\n      pendingRequest.onProgressiveData = args.onProgressiveData;\\r\\n      pendingRequest.mozChunked = true;\\r\\n    } else {\\r\\n      xhr.responseType = 'arraybuffer';\\r\\n    }\\r\\n    if (args.onError) {\\r\\n      xhr.onerror = function (evt) {\\r\\n        args.onError(xhr.status);\\r\\n      };\\r\\n    }\\r\\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\\r\\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\\r\\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\\r\\n    pendingRequest.onDone = args.onDone;\\r\\n    pendingRequest.onError = args.onError;\\r\\n    pendingRequest.onProgress = args.onProgress;\\r\\n    xhr.send(null);\\r\\n    return xhrId;\\r\\n  },\\r\\n  onProgress: function NetworkManager_onProgress(xhrId, evt) {\\r\\n    var pendingRequest = this.pendingRequests[xhrId];\\r\\n    if (!pendingRequest) {\\r\\n      return;\\r\\n    }\\r\\n    if (pendingRequest.mozChunked) {\\r\\n      var chunk = getArrayBuffer(pendingRequest.xhr);\\r\\n      pendingRequest.onProgressiveData(chunk);\\r\\n    }\\r\\n    var onProgress = pendingRequest.onProgress;\\r\\n    if (onProgress) {\\r\\n      onProgress(evt);\\r\\n    }\\r\\n  },\\r\\n  onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\\r\\n    var pendingRequest = this.pendingRequests[xhrId];\\r\\n    if (!pendingRequest) {\\r\\n      return;\\r\\n    }\\r\\n    var xhr = pendingRequest.xhr;\\r\\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\\r\\n      pendingRequest.onHeadersReceived();\\r\\n      delete pendingRequest.onHeadersReceived;\\r\\n    }\\r\\n    if (xhr.readyState !== 4) {\\r\\n      return;\\r\\n    }\\r\\n    if (!(xhrId in this.pendingRequests)) {\\r\\n      return;\\r\\n    }\\r\\n    delete this.pendingRequests[xhrId];\\r\\n    if (xhr.status === 0 && this.isHttp) {\\r\\n      if (pendingRequest.onError) {\\r\\n        pendingRequest.onError(xhr.status);\\r\\n      }\\r\\n      return;\\r\\n    }\\r\\n    var xhrStatus = xhr.status || OK_RESPONSE;\\r\\n    var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\\r\\n    if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\\r\\n      if (pendingRequest.onError) {\\r\\n        pendingRequest.onError(xhr.status);\\r\\n      }\\r\\n      return;\\r\\n    }\\r\\n    this.loadedRequests[xhrId] = true;\\r\\n    var chunk = getArrayBuffer(xhr);\\r\\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\\r\\n      var rangeHeader = xhr.getResponseHeader('Content-Range');\\r\\n      var matches = /bytes (\\\\d+)-(\\\\d+)\\\\/(\\\\d+)/.exec(rangeHeader);\\r\\n      var begin = parseInt(matches[1], 10);\\r\\n      pendingRequest.onDone({\\r\\n        begin: begin,\\r\\n        chunk: chunk\\r\\n      });\\r\\n    } else if (pendingRequest.onProgressiveData) {\\r\\n      pendingRequest.onDone(null);\\r\\n    } else if (chunk) {\\r\\n      pendingRequest.onDone({\\r\\n        begin: 0,\\r\\n        chunk: chunk\\r\\n      });\\r\\n    } else if (pendingRequest.onError) {\\r\\n      pendingRequest.onError(xhr.status);\\r\\n    }\\r\\n  },\\r\\n  hasPendingRequests: function NetworkManager_hasPendingRequests() {\\r\\n    for (var xhrId in this.pendingRequests) {\\r\\n      return true;\\r\\n    }\\r\\n    return false;\\r\\n  },\\r\\n  getRequestXhr: function NetworkManager_getXhr(xhrId) {\\r\\n    return this.pendingRequests[xhrId].xhr;\\r\\n  },\\r\\n  isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\\r\\n    return !!this.pendingRequests[xhrId].onProgressiveData;\\r\\n  },\\r\\n  isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\\r\\n    return xhrId in this.pendingRequests;\\r\\n  },\\r\\n  isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\\r\\n    return xhrId in this.loadedRequests;\\r\\n  },\\r\\n  abortAllRequests: function NetworkManager_abortAllRequests() {\\r\\n    for (var xhrId in this.pendingRequests) {\\r\\n      this.abortRequest(xhrId | 0);\\r\\n    }\\r\\n  },\\r\\n  abortRequest: function NetworkManager_abortRequest(xhrId) {\\r\\n    var xhr = this.pendingRequests[xhrId].xhr;\\r\\n    delete this.pendingRequests[xhrId];\\r\\n    xhr.abort();\\r\\n  }\\r\\n};\\r\\nfunction PDFNetworkStream(options) {\\r\\n  this._options = options;\\r\\n  var source = options.source;\\r\\n  this._manager = new NetworkManager(source.url, {\\r\\n    httpHeaders: source.httpHeaders,\\r\\n    withCredentials: source.withCredentials\\r\\n  });\\r\\n  this._rangeChunkSize = source.rangeChunkSize;\\r\\n  this._fullRequestReader = null;\\r\\n  this._rangeRequestReaders = [];\\r\\n}\\r\\nPDFNetworkStream.prototype = {\\r\\n  _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\\r\\n    var i = this._rangeRequestReaders.indexOf(reader);\\r\\n    if (i >= 0) {\\r\\n      this._rangeRequestReaders.splice(i, 1);\\r\\n    }\\r\\n  },\\r\\n  getFullReader: function PDFNetworkStream_getFullReader() {\\r\\n    (0, _util.assert)(!this._fullRequestReader);\\r\\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\\r\\n    return this._fullRequestReader;\\r\\n  },\\r\\n  getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\\r\\n    var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\\r\\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\\r\\n    this._rangeRequestReaders.push(reader);\\r\\n    return reader;\\r\\n  },\\r\\n  cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\\r\\n    if (this._fullRequestReader) {\\r\\n      this._fullRequestReader.cancel(reason);\\r\\n    }\\r\\n    var readers = this._rangeRequestReaders.slice(0);\\r\\n    readers.forEach(function (reader) {\\r\\n      reader.cancel(reason);\\r\\n    });\\r\\n  }\\r\\n};\\r\\nfunction PDFNetworkStreamFullRequestReader(manager, options) {\\r\\n  this._manager = manager;\\r\\n  var source = options.source;\\r\\n  var args = {\\r\\n    onHeadersReceived: this._onHeadersReceived.bind(this),\\r\\n    onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\\r\\n    onDone: this._onDone.bind(this),\\r\\n    onError: this._onError.bind(this),\\r\\n    onProgress: this._onProgress.bind(this)\\r\\n  };\\r\\n  this._url = source.url;\\r\\n  this._fullRequestId = manager.requestFull(args);\\r\\n  this._headersReceivedCapability = (0, _util.createPromiseCapability)();\\r\\n  this._disableRange = options.disableRange || false;\\r\\n  this._contentLength = source.length;\\r\\n  this._rangeChunkSize = source.rangeChunkSize;\\r\\n  if (!this._rangeChunkSize && !this._disableRange) {\\r\\n    this._disableRange = true;\\r\\n  }\\r\\n  this._isStreamingSupported = false;\\r\\n  this._isRangeSupported = false;\\r\\n  this._cachedChunks = [];\\r\\n  this._requests = [];\\r\\n  this._done = false;\\r\\n  this._storedError = undefined;\\r\\n  this.onProgress = null;\\r\\n}\\r\\nPDFNetworkStreamFullRequestReader.prototype = {\\r\\n  _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\\r\\n    var fullRequestXhrId = this._fullRequestId;\\r\\n    var fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\\r\\n\\r\\n    var _validateRangeRequest = (0, _network_utils.validateRangeRequestCapabilities)({\\r\\n      getResponseHeader: function getResponseHeader(name) {\\r\\n        return fullRequestXhr.getResponseHeader(name);\\r\\n      },\\r\\n      isHttp: this._manager.isHttp,\\r\\n      rangeChunkSize: this._rangeChunkSize,\\r\\n      disableRange: this._disableRange\\r\\n    }),\\r\\n        allowRangeRequests = _validateRangeRequest.allowRangeRequests,\\r\\n        suggestedLength = _validateRangeRequest.suggestedLength;\\r\\n\\r\\n    this._contentLength = suggestedLength || this._contentLength;\\r\\n    if (allowRangeRequests) {\\r\\n      this._isRangeSupported = true;\\r\\n    }\\r\\n    var networkManager = this._manager;\\r\\n    if (networkManager.isStreamingRequest(fullRequestXhrId)) {\\r\\n      this._isStreamingSupported = true;\\r\\n    } else if (this._isRangeSupported) {\\r\\n      networkManager.abortRequest(fullRequestXhrId);\\r\\n    }\\r\\n    this._headersReceivedCapability.resolve();\\r\\n  },\\r\\n  _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\\r\\n    if (this._requests.length > 0) {\\r\\n      var requestCapability = this._requests.shift();\\r\\n      requestCapability.resolve({\\r\\n        value: chunk,\\r\\n        done: false\\r\\n      });\\r\\n    } else {\\r\\n      this._cachedChunks.push(chunk);\\r\\n    }\\r\\n  },\\r\\n  _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\\r\\n    if (args) {\\r\\n      this._onProgressiveData(args.chunk);\\r\\n    }\\r\\n    this._done = true;\\r\\n    if (this._cachedChunks.length > 0) {\\r\\n      return;\\r\\n    }\\r\\n    this._requests.forEach(function (requestCapability) {\\r\\n      requestCapability.resolve({\\r\\n        value: undefined,\\r\\n        done: true\\r\\n      });\\r\\n    });\\r\\n    this._requests = [];\\r\\n  },\\r\\n  _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\\r\\n    var url = this._url;\\r\\n    var exception = (0, _network_utils.createResponseStatusError)(status, url);\\r\\n    this._storedError = exception;\\r\\n    this._headersReceivedCapability.reject(exception);\\r\\n    this._requests.forEach(function (requestCapability) {\\r\\n      requestCapability.reject(exception);\\r\\n    });\\r\\n    this._requests = [];\\r\\n    this._cachedChunks = [];\\r\\n  },\\r\\n  _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\\r\\n    if (this.onProgress) {\\r\\n      this.onProgress({\\r\\n        loaded: data.loaded,\\r\\n        total: data.lengthComputable ? data.total : this._contentLength\\r\\n      });\\r\\n    }\\r\\n  },\\r\\n  get isRangeSupported() {\\r\\n    return this._isRangeSupported;\\r\\n  },\\r\\n  get isStreamingSupported() {\\r\\n    return this._isStreamingSupported;\\r\\n  },\\r\\n  get contentLength() {\\r\\n    return this._contentLength;\\r\\n  },\\r\\n  get headersReady() {\\r\\n    return this._headersReceivedCapability.promise;\\r\\n  },\\r\\n  read: function PDFNetworkStreamFullRequestReader_read() {\\r\\n    if (this._storedError) {\\r\\n      return Promise.reject(this._storedError);\\r\\n    }\\r\\n    if (this._cachedChunks.length > 0) {\\r\\n      var chunk = this._cachedChunks.shift();\\r\\n      return Promise.resolve({\\r\\n        value: chunk,\\r\\n        done: false\\r\\n      });\\r\\n    }\\r\\n    if (this._done) {\\r\\n      return Promise.resolve({\\r\\n        value: undefined,\\r\\n        done: true\\r\\n      });\\r\\n    }\\r\\n    var requestCapability = (0, _util.createPromiseCapability)();\\r\\n    this._requests.push(requestCapability);\\r\\n    return requestCapability.promise;\\r\\n  },\\r\\n  cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\\r\\n    this._done = true;\\r\\n    this._headersReceivedCapability.reject(reason);\\r\\n    this._requests.forEach(function (requestCapability) {\\r\\n      requestCapability.resolve({\\r\\n        value: undefined,\\r\\n        done: true\\r\\n      });\\r\\n    });\\r\\n    this._requests = [];\\r\\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\\r\\n      this._manager.abortRequest(this._fullRequestId);\\r\\n    }\\r\\n    this._fullRequestReader = null;\\r\\n  }\\r\\n};\\r\\nfunction PDFNetworkStreamRangeRequestReader(manager, begin, end) {\\r\\n  this._manager = manager;\\r\\n  var args = {\\r\\n    onDone: this._onDone.bind(this),\\r\\n    onProgress: this._onProgress.bind(this)\\r\\n  };\\r\\n  this._requestId = manager.requestRange(begin, end, args);\\r\\n  this._requests = [];\\r\\n  this._queuedChunk = null;\\r\\n  this._done = false;\\r\\n  this.onProgress = null;\\r\\n  this.onClosed = null;\\r\\n}\\r\\nPDFNetworkStreamRangeRequestReader.prototype = {\\r\\n  _close: function PDFNetworkStreamRangeRequestReader_close() {\\r\\n    if (this.onClosed) {\\r\\n      this.onClosed(this);\\r\\n    }\\r\\n  },\\r\\n  _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\\r\\n    var chunk = data.chunk;\\r\\n    if (this._requests.length > 0) {\\r\\n      var requestCapability = this._requests.shift();\\r\\n      requestCapability.resolve({\\r\\n        value: chunk,\\r\\n        done: false\\r\\n      });\\r\\n    } else {\\r\\n      this._queuedChunk = chunk;\\r\\n    }\\r\\n    this._done = true;\\r\\n    this._requests.forEach(function (requestCapability) {\\r\\n      requestCapability.resolve({\\r\\n        value: undefined,\\r\\n        done: true\\r\\n      });\\r\\n    });\\r\\n    this._requests = [];\\r\\n    this._close();\\r\\n  },\\r\\n  _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\\r\\n    if (!this.isStreamingSupported && this.onProgress) {\\r\\n      this.onProgress({ loaded: evt.loaded });\\r\\n    }\\r\\n  },\\r\\n  get isStreamingSupported() {\\r\\n    return false;\\r\\n  },\\r\\n  read: function PDFNetworkStreamRangeRequestReader_read() {\\r\\n    if (this._queuedChunk !== null) {\\r\\n      var chunk = this._queuedChunk;\\r\\n      this._queuedChunk = null;\\r\\n      return Promise.resolve({\\r\\n        value: chunk,\\r\\n        done: false\\r\\n      });\\r\\n    }\\r\\n    if (this._done) {\\r\\n      return Promise.resolve({\\r\\n        value: undefined,\\r\\n        done: true\\r\\n      });\\r\\n    }\\r\\n    var requestCapability = (0, _util.createPromiseCapability)();\\r\\n    this._requests.push(requestCapability);\\r\\n    return requestCapability.promise;\\r\\n  },\\r\\n  cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\\r\\n    this._done = true;\\r\\n    this._requests.forEach(function (requestCapability) {\\r\\n      requestCapability.resolve({\\r\\n        value: undefined,\\r\\n        done: true\\r\\n      });\\r\\n    });\\r\\n    this._requests = [];\\r\\n    if (this._manager.isPendingRequest(this._requestId)) {\\r\\n      this._manager.abortRequest(this._requestId);\\r\\n    }\\r\\n    this._close();\\r\\n  }\\r\\n};\\r\\nexports.PDFNetworkStream = PDFNetworkStream;\\r\\nexports.NetworkManager = NetworkManager;\\r\\n\\r\\n/***/ })\\r\\n/******/ ]);\\r\\n});\\r\\n//# sourceMappingURL=pdf.combined.js.map\";return a.a};var Wtc=ZKd(5327);MAc(4951,1,{},Kvl);_.Kjb=function Lvl(e,f,g){var h=$doc.createElement(DAl);var i=$doc.createElement(wCl);var j=this;h.src=e;h.onload=function(a){var b=a.target.height;var c=a.target.width;var d=i.getContext(sBl);i.width=c;i.height=b;d.drawImage(h,0,0);f=f.replace(e,i.toDataURL());j.Ljb(f,g)}};_.Ljb=function Mvl(a,b){if(a.indexOf(izm)>0){var c=a.indexOf(izm);var d=a.indexOf('\"',c+17);var e=a.substr(c+12,d-(c+12));a=a.replace(e,this.Kjb(e,a,b))}else{b(a)}};_.Mjb=function(a){Z_j(this.a,a)};_.Njb=function Nvl(b){var c=$wnd.PDFJS.getDocument(b);var d=this;c.promise.then(function(a){J8i('PDF loaded');d.Qjb(a);d.Pjb(a.numPages);d.Mjb(true)},function(a){N8i(a);d.Mjb(false)})};_.Ojb=function(a){if(!this.a){return}b0j(this.a,a)};_.Pjb=function(a){this.b=a};_.Qjb=function(a){this.d=a};_.Rjb=function(a){f0j(this.a,a)};_.b=0;_.c=1;_.d=null;var Cyc=ZKd(4951);Mzl(Ol)(5);\n//# sourceURL=web3d-5.js\n")
